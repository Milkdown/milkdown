{"version":3,"file":"index.js","sources":["../../../exception/src/code.ts","../../../exception/src/error.ts","../../../exception/src/index.ts","../../../ctx/src/context/container.ts","../../../ctx/src/context/slice.ts","../../../ctx/src/inspector/inspector.ts","../../../ctx/src/plugin/ctx.ts","../../../ctx/src/timer/clock.ts","../../../ctx/src/timer/timer.ts","../../../../node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js","../../../../node_modules/.pnpm/decode-named-character-reference@1.0.2/node_modules/decode-named-character-reference/index.dom.js","../../../../node_modules/.pnpm/micromark-util-chunked@2.0.1/node_modules/micromark-util-chunked/index.js","../../../../node_modules/.pnpm/micromark-util-combine-extensions@2.0.1/node_modules/micromark-util-combine-extensions/index.js","../../../../node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.2/node_modules/micromark-util-decode-numeric-character-reference/index.js","../../../../node_modules/.pnpm/micromark-util-normalize-identifier@2.0.1/node_modules/micromark-util-normalize-identifier/index.js","../../../../node_modules/.pnpm/micromark-util-character@2.1.1/node_modules/micromark-util-character/index.js","../../../../node_modules/.pnpm/micromark-factory-space@2.0.1/node_modules/micromark-factory-space/index.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/initialize/content.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/initialize/document.js","../../../../node_modules/.pnpm/micromark-util-classify-character@2.0.1/node_modules/micromark-util-classify-character/index.js","../../../../node_modules/.pnpm/micromark-util-resolve-all@2.0.1/node_modules/micromark-util-resolve-all/index.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/attention.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/autolink.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/blank-line.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/block-quote.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/character-escape.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/character-reference.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/code-fenced.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/code-indented.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/code-text.js","../../../../node_modules/.pnpm/micromark-util-subtokenize@2.0.3/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../../../../node_modules/.pnpm/micromark-util-subtokenize@2.0.3/node_modules/micromark-util-subtokenize/index.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/content.js","../../../../node_modules/.pnpm/micromark-factory-destination@2.0.1/node_modules/micromark-factory-destination/index.js","../../../../node_modules/.pnpm/micromark-factory-label@2.0.1/node_modules/micromark-factory-label/index.js","../../../../node_modules/.pnpm/micromark-factory-title@2.0.1/node_modules/micromark-factory-title/index.js","../../../../node_modules/.pnpm/micromark-factory-whitespace@2.0.1/node_modules/micromark-factory-whitespace/index.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/definition.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/heading-atx.js","../../../../node_modules/.pnpm/micromark-util-html-tag-name@2.0.1/node_modules/micromark-util-html-tag-name/index.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/html-flow.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/html-text.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/label-end.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/label-start-image.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/label-start-link.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/line-ending.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/thematic-break.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/list.js","../../../../node_modules/.pnpm/micromark-core-commonmark@2.0.2/node_modules/micromark-core-commonmark/lib/setext-underline.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/initialize/flow.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/initialize/text.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/constructs.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/create-tokenizer.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/parse.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/postprocess.js","../../../../node_modules/.pnpm/micromark@4.0.1/node_modules/micromark/lib/preprocess.js","../../../../node_modules/.pnpm/micromark-util-decode-string@2.0.1/node_modules/micromark-util-decode-string/index.js","../../../../node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","../../../../node_modules/.pnpm/mdast-util-from-markdown@2.0.2/node_modules/mdast-util-from-markdown/lib/index.js","../../../../node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","../../../../node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/configure.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../../../node_modules/.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../../../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","../../../../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/color.js","../../../../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","../../../../node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../../../node_modules/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/join.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/unsafe.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/association.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/compile-pattern.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/track.js","../../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/index.js","../../../../node_modules/.pnpm/remark-stringify@11.0.0/node_modules/remark-stringify/lib/index.js","../../../../node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","../../../../node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","../../../../node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/default.js","../../../../node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","../../../../node_modules/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","../../../../node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js","../../../../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js","../../../../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js","../../../../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js","../../../../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js","../../../../node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js","../../../../node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js","../../../../node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/index.js","../../../core/src/__internal__/utils.ts","../../../core/src/__internal__/remark-handlers.ts","../../../core/src/internal-plugin/atoms.ts","../../../../node_modules/.pnpm/orderedmap@2.1.1/node_modules/orderedmap/dist/index.js","../../../../node_modules/.pnpm/prosemirror-model@1.24.1/node_modules/prosemirror-model/dist/index.js","../../../core/src/internal-plugin/config.ts","../../../core/src/internal-plugin/init.ts","../../../core/src/internal-plugin/schema.ts","../../../core/src/internal-plugin/commands.ts","../../../prose/src/toolkit/browser.ts","../../../../node_modules/.pnpm/prosemirror-transform@1.10.2/node_modules/prosemirror-transform/dist/index.js","../../../../node_modules/.pnpm/prosemirror-state@1.4.3/node_modules/prosemirror-state/dist/index.js","../../../prose/src/toolkit/input-rules/custom-input-rules.ts","../../../../node_modules/.pnpm/prosemirror-inputrules@1.4.0/node_modules/prosemirror-inputrules/dist/index.js","../../../prose/src/toolkit/input-rules/mark-rule.ts","../../../prose/src/toolkit/position/index.ts","../../../prose/src/toolkit/prose/helper.ts","../../../prose/src/toolkit/prose/node.ts","../../../prose/src/toolkit/prose/schema.ts","../../../prose/src/toolkit/prose/selection.ts","../../../../node_modules/.pnpm/prosemirror-commands@1.6.2/node_modules/prosemirror-commands/dist/index.js","../../../../node_modules/.pnpm/w3c-keyname@2.2.8/node_modules/w3c-keyname/index.js","../../../../node_modules/.pnpm/prosemirror-keymap@1.2.2/node_modules/prosemirror-keymap/dist/index.js","../../../transformer/src/utility/stack.ts","../../../transformer/src/parser/stack-element.ts","../../../transformer/src/parser/state.ts","../../../transformer/src/serializer/stack-element.ts","../../../transformer/src/serializer/state.ts","../../../core/src/internal-plugin/parser.ts","../../../core/src/internal-plugin/serializer.ts","../../../core/src/internal-plugin/editor-state.ts","../../../../node_modules/.pnpm/prosemirror-view@1.36.0/node_modules/prosemirror-view/dist/index.js","../../../core/src/internal-plugin/editor-view.ts","../../../core/src/editor/editor.ts","../../../utils/src/composable/utils.ts","../../../utils/src/composable/$command.ts","../../../utils/src/composable/$inputRule.ts","../../../utils/src/composable/$mark.ts","../../../utils/src/composable/$node.ts","../../../utils/src/composable/$prose.ts","../../../utils/src/composable/$shortcut.ts","../../../utils/src/composable/$view.ts","../../../utils/src/composable/$ctx.ts","../../../utils/src/composable/composed/$node-schema.ts","../../../utils/src/composable/composed/$mark-schema.ts","../../../utils/src/composable/composed/$user-keymap.ts","../../../utils/src/composable/composed/$attr.ts","../../../utils/src/composable/composed/$remark.ts","../../../utils/src/macro/get-markdown.ts","../../../plugins/preset-commonmark/src/__internal__/serialize-text.ts","../../../plugins/preset-commonmark/src/__internal__/with-meta.ts","../../../plugins/preset-commonmark/src/mark/emphasis.ts","../../../plugins/preset-commonmark/src/mark/strong.ts","../../../plugins/preset-commonmark/src/mark/inline-code.ts","../../../plugins/preset-commonmark/src/mark/link.ts","../../../plugins/preset-commonmark/src/node/doc.ts","../../../../node_modules/.pnpm/escape-string-regexp@5.0.0/node_modules/escape-string-regexp/index.js","../../../../node_modules/.pnpm/@sindresorhus+transliterate@1.6.0/node_modules/@sindresorhus/transliterate/replacements.js","../../../../node_modules/.pnpm/@sindresorhus+transliterate@1.6.0/node_modules/@sindresorhus/transliterate/index.js","../../../../node_modules/.pnpm/@sindresorhus+slugify@2.2.1/node_modules/@sindresorhus/slugify/overridable-replacements.js","../../../../node_modules/.pnpm/@sindresorhus+slugify@2.2.1/node_modules/@sindresorhus/slugify/index.js","../../../plugins/preset-commonmark/src/node/paragraph.ts","../../../plugins/preset-commonmark/src/node/heading.ts","../../../plugins/preset-commonmark/src/node/blockquote.ts","../../../plugins/preset-commonmark/src/node/code-block.ts","../../../plugins/preset-commonmark/src/node/image.ts","../../../plugins/preset-commonmark/src/node/hardbreak.ts","../../../plugins/preset-commonmark/src/node/hr.ts","../../../plugins/preset-commonmark/src/node/bullet-list.ts","../../../plugins/preset-commonmark/src/node/ordered-list.ts","../../../../node_modules/.pnpm/prosemirror-schema-list@1.5.0/node_modules/prosemirror-schema-list/dist/index.js","../../../plugins/preset-commonmark/src/node/list-item.ts","../../../plugins/preset-commonmark/src/node/text.ts","../../../plugins/preset-commonmark/src/node/html.ts","../../../plugins/preset-commonmark/src/composed/schema.ts","../../../plugins/preset-commonmark/src/composed/inputrules.ts","../../../plugins/preset-commonmark/src/composed/commands.ts","../../../plugins/preset-commonmark/src/composed/keymap.ts","../../../plugins/preset-commonmark/src/plugin/remark-add-order-in-list-plugin.ts","../../../plugins/preset-commonmark/src/plugin/remark-line-break.ts","../../../../node_modules/.pnpm/mdast-util-definitions@6.0.0/node_modules/mdast-util-definitions/lib/index.js","../../../../node_modules/.pnpm/remark-inline-links@7.0.0/node_modules/remark-inline-links/lib/index.js","../../../plugins/preset-commonmark/src/plugin/remark-inline-link-plugin.ts","../../../plugins/preset-commonmark/src/plugin/remark-html-transformer.ts","../../../plugins/preset-commonmark/src/plugin/remark-marker-plugin.ts","../../../plugins/preset-commonmark/src/plugin/inline-nodes-cursor-plugin.ts","../../../plugins/preset-commonmark/src/plugin/hardbreak-clear-mark-plugin.ts","../../../plugins/preset-commonmark/src/plugin/hardbreak-filter-plugin.ts","../../../plugins/preset-commonmark/src/plugin/sync-heading-id-plugin.ts","../../../plugins/preset-commonmark/src/plugin/sync-list-order-plugin.ts","../../../plugins/preset-commonmark/src/composed/plugins.ts","../../../plugins/preset-commonmark/src/index.ts","../../../components/src/__internal__/meta.ts","../../../components/src/code-block/config.ts","../../../components/src/__internal__/helper.ts","../../../../node_modules/.pnpm/rope-sequence@1.3.4/node_modules/rope-sequence/dist/index.js","../../../../node_modules/.pnpm/prosemirror-history@1.4.1/node_modules/prosemirror-history/dist/index.js","../../../components/src/code-block/view/node-view.ts","../../../components/src/code-block/view/loader.ts","../../../../node_modules/.pnpm/@floating-ui+utils@0.2.8/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../../node_modules/.pnpm/@floating-ui+core@1.6.8/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../../node_modules/.pnpm/@floating-ui+utils@0.2.8/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../../../node_modules/.pnpm/@floating-ui+dom@1.6.12/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../components/src/code-block/view/component.ts","../../../components/src/code-block/view/index.ts","../../../components/src/code-block/index.ts","../../src/icons/alignCenter.ts","../../src/icons/alignLeft.ts","../../src/icons/alignRight.ts","../../src/icons/bold.ts","../../src/icons/bullet.ts","../../src/icons/bulletList.ts","../../src/icons/caption.ts","../../src/icons/checkBoxChecked.ts","../../src/icons/checkBoxUnchecked.ts","../../src/icons/chevronDown.ts","../../src/icons/clear.ts","../../src/icons/code.ts","../../src/icons/confirm.ts","../../src/icons/copy.ts","../../src/icons/divider.ts","../../src/icons/dragHandle.ts","../../src/icons/edit.ts","../../src/icons/h1.ts","../../src/icons/h2.ts","../../src/icons/h3.ts","../../src/icons/h4.ts","../../src/icons/h5.ts","../../src/icons/h6.ts","../../src/icons/image.ts","../../src/icons/italic.ts","../../src/icons/link.ts","../../src/icons/menu.ts","../../src/icons/orderedList.ts","../../src/icons/plus.ts","../../src/icons/quote.ts","../../src/icons/remove.ts","../../src/icons/search.ts","../../src/icons/strikethrough.ts","../../src/icons/table.ts","../../src/icons/text.ts","../../src/icons/todoList.ts","../../src/feature/code-mirror/index.ts","../../../components/src/list-item-block/component.ts","../../../components/src/list-item-block/config.ts","../../../components/src/list-item-block/view.ts","../../../components/src/list-item-block/index.ts","../../src/feature/list-item/index.ts","../../../components/src/link-tooltip/slices.ts","../../../../node_modules/.pnpm/lodash.debounce@4.0.8/node_modules/lodash.debounce/index.js","../../../plugins/plugin-tooltip/src/tooltip-provider.ts","../../../plugins/plugin-tooltip/src/tooltip-plugin.ts","../../../components/src/link-tooltip/tooltips.ts","../../../components/src/link-tooltip/utils.ts","../../../components/src/link-tooltip/preview/preview-component.ts","../../../components/src/link-tooltip/preview/preview-view.ts","../../../components/src/link-tooltip/preview/preview-configure.ts","../../../components/src/link-tooltip/edit/edit-component.ts","../../../components/src/link-tooltip/edit/edit-view.ts","../../../components/src/link-tooltip/edit/edit-configure.ts","../../../components/src/link-tooltip/configure.ts","../../../components/src/link-tooltip/index.ts","../../src/feature/link-tooltip/index.ts","../../../components/src/image-block/schema.ts","../../../components/src/image-block/remark-plugin.ts","../../../components/src/image-block/config.ts","../../../components/src/image-block/view/event.ts","../../../components/src/image-block/view/component.ts","../../../components/src/image-block/view/index.ts","../../../components/src/image-block/index.ts","../../../components/src/image-inline/config.ts","../../../components/src/image-inline/component.ts","../../../components/src/image-inline/view.ts","../../../components/src/image-inline/index.ts","../../src/feature/image-block/index.ts","../../../../node_modules/.pnpm/prosemirror-dropcursor@1.8.1/node_modules/prosemirror-dropcursor/dist/index.js","../../../../node_modules/.pnpm/prosemirror-gapcursor@1.3.2/node_modules/prosemirror-gapcursor/dist/index.js","../../../plugins/plugin-cursor/src/index.ts","../../src/feature/cursor/index.ts","../../../plugins/plugin-block/src/__internal__/with-meta.ts","../../../plugins/plugin-block/src/block-config.ts","../../../../node_modules/.pnpm/lodash.throttle@4.1.1/node_modules/lodash.throttle/index.js","../../../plugins/plugin-block/src/__internal__/select-node-by-dom.ts","../../../plugins/plugin-block/src/__internal__/serialize-for-clipboard.ts","../../../plugins/plugin-block/src/block-service.ts","../../../plugins/plugin-block/src/block-plugin.ts","../../../plugins/plugin-block/src/block-provider.ts","../../../plugins/plugin-block/src/index.ts","../../../plugins/plugin-slash/src/slash-plugin.ts","../../../plugins/plugin-slash/src/slash-provider.ts","../../src/utils/index.ts","../../../plugins/preset-gfm/src/__internal__/with-meta.ts","../../../plugins/preset-gfm/src/mark/strike-through.ts","../../../../node_modules/.pnpm/prosemirror-tables@1.6.1/node_modules/prosemirror-tables/dist/index.js","../../../plugins/preset-gfm/src/node/table/schema.ts","../../../plugins/preset-gfm/src/node/table/utils.ts","../../../plugins/preset-gfm/src/node/table/command.ts","../../../plugins/preset-gfm/src/node/table/input.ts","../../../plugins/preset-gfm/src/node/footnote/definition.ts","../../../plugins/preset-gfm/src/node/footnote/reference.ts","../../../plugins/preset-gfm/src/node/task-list-item.ts","../../../plugins/preset-gfm/src/composed/keymap.ts","../../../plugins/preset-gfm/src/composed/inputrules.ts","../../../../node_modules/.pnpm/prosemirror-safari-ime-span@1.0.2/node_modules/prosemirror-safari-ime-span/dist/index.js","../../../plugins/preset-gfm/src/plugin/auto-insert-span-plugin.ts","../../../plugins/preset-gfm/src/plugin/column-resizing-plugin.ts","../../../plugins/preset-gfm/src/plugin/table-editing-plugin.ts","../../../../node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","../../../../node_modules/.pnpm/mdast-util-find-and-replace@3.0.1/node_modules/mdast-util-find-and-replace/lib/index.js","../../../../node_modules/.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../../../node_modules/.pnpm/mdast-util-gfm-footnote@2.0.0/node_modules/mdast-util-gfm-footnote/lib/index.js","../../../../node_modules/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../../../node_modules/.pnpm/markdown-table@3.0.4/node_modules/markdown-table/index.js","../../../../node_modules/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","../../../../node_modules/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../../../node_modules/.pnpm/mdast-util-gfm@3.0.0/node_modules/mdast-util-gfm/lib/index.js","../../../../node_modules/.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../../../node_modules/.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../../../node_modules/.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../../../node_modules/.pnpm/micromark-extension-gfm-table@2.1.0/node_modules/micromark-extension-gfm-table/lib/edit-map.js","../../../../node_modules/.pnpm/micromark-extension-gfm-table@2.1.0/node_modules/micromark-extension-gfm-table/lib/infer.js","../../../../node_modules/.pnpm/micromark-extension-gfm-table@2.1.0/node_modules/micromark-extension-gfm-table/lib/syntax.js","../../../../node_modules/.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../../../node_modules/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","../../../../node_modules/.pnpm/remark-gfm@4.0.0/node_modules/remark-gfm/lib/index.js","../../../plugins/preset-gfm/src/plugin/remark-gfm-plugin.ts","../../../plugins/preset-gfm/src/plugin/keep-table-align-plugin.ts","../../../plugins/preset-gfm/src/composed/plugins.ts","../../../plugins/preset-gfm/src/composed/schema.ts","../../../plugins/preset-gfm/src/composed/commands.ts","../../../plugins/preset-gfm/src/index.ts","../../src/feature/block-edit/menu/utils.ts","../../src/feature/block-edit/menu/group-builder.ts","../../src/feature/block-edit/menu/config.ts","../../src/feature/block-edit/menu/component.ts","../../src/feature/block-edit/menu/index.ts","../../src/feature/block-edit/handle/component.ts","../../src/feature/block-edit/handle/index.ts","../../src/feature/block-edit/index.ts","../../src/feature/placeholder/index.ts","../../src/feature/toolbar/component.ts","../../src/feature/toolbar/index.ts","../../../components/src/table-block/config.ts","../../../components/src/table-block/view/utils.ts","../../../components/src/table-block/view/drag.ts","../../../components/src/table-block/view/pointer.ts","../../../components/src/table-block/view/operation.ts","../../../components/src/table-block/view/component.ts","../../../components/src/table-block/view/view.ts","../../../components/src/table-block/index.ts","../../src/feature/table/index.ts","../../src/feature/index.ts","../../../plugins/plugin-history/src/index.ts","../../../plugins/plugin-indent/src/index.ts","../../../plugins/plugin-clipboard/src/index.ts","../../../plugins/plugin-trailing/src/index.ts","../../src/core/slice.ts","../../src/core/crepe.ts"],"sourcesContent":["export enum ErrorCode {\n  docTypeError = 'docTypeError',\n  contextNotFound = 'contextNotFound',\n  timerNotFound = 'timerNotFound',\n  ctxCallOutOfScope = 'ctxCallOutOfScope',\n  createNodeInParserFail = 'createNodeInParserFail',\n  stackOverFlow = 'stackOverFlow',\n  parserMatchError = 'parserMatchError',\n  serializerMatchError = 'serializerMatchError',\n  getAtomFromSchemaFail = 'getAtomFromSchemaFail',\n  expectDomTypeError = 'expectDomTypeError',\n  callCommandBeforeEditorView = 'callCommandBeforeEditorView',\n  missingRootElement = 'missingRootElement',\n  missingNodeInSchema = 'missingNodeInSchema',\n  missingMarkInSchema = 'missingMarkInSchema',\n\n  // collab plugin\n  ctxNotBind = 'ctxNotBind',\n  missingYjsDoc = 'missingYjsDoc',\n}\n","import type { ErrorCode } from './code'\n\nexport class MilkdownError extends Error {\n  public code: string\n  constructor(code: ErrorCode, message: string) {\n    super(message)\n    this.name = 'MilkdownError'\n    this.code = code\n  }\n}\n","import { ErrorCode } from './code'\nimport { MilkdownError } from './error'\n\nconst functionReplacer = (_: string, value: unknown) =>\n  typeof value === 'function' ? '[Function]' : value\n\nconst stringify = (x: unknown): string => JSON.stringify(x, functionReplacer)\n\nexport function docTypeError(type: unknown) {\n  return new MilkdownError(\n    ErrorCode.docTypeError,\n    `Doc type error, unsupported type: ${stringify(type)}`\n  )\n}\n\nexport function contextNotFound(name: string) {\n  return new MilkdownError(\n    ErrorCode.contextNotFound,\n    `Context \"${name}\" not found, do you forget to inject it?`\n  )\n}\n\nexport function timerNotFound(name: string) {\n  return new MilkdownError(\n    ErrorCode.timerNotFound,\n    `Timer \"${name}\" not found, do you forget to record it?`\n  )\n}\n\nexport function ctxCallOutOfScope() {\n  return new MilkdownError(\n    ErrorCode.ctxCallOutOfScope,\n    'Should not call a context out of the plugin.'\n  )\n}\n\nexport function createNodeInParserFail(...args: unknown[]) {\n  const message = args.reduce((msg, arg) => {\n    if (!arg) return msg\n\n    const serialize = (x: unknown): string => {\n      if (Array.isArray(x))\n        return (x as unknown[]).map((y) => serialize(y)).join(', ')\n\n      if ((x as { toJSON: () => Record<string, unknown> }).toJSON)\n        return stringify(\n          (x as { toJSON: () => Record<string, unknown> }).toJSON()\n        )\n\n      if ((x as { spec: string }).spec)\n        return stringify((x as { spec: string }).spec)\n\n      return (x as { toString: () => string }).toString()\n    }\n    return `${msg}, ${serialize(arg)}`\n  }, 'Create prosemirror node from remark failed in parser') as string\n\n  return new MilkdownError(ErrorCode.createNodeInParserFail, message)\n}\n\nexport function stackOverFlow() {\n  return new MilkdownError(\n    ErrorCode.stackOverFlow,\n    'Stack over flow, cannot pop on an empty stack.'\n  )\n}\n\nexport function parserMatchError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.parserMatchError,\n    `Cannot match target parser for node: ${stringify(node)}.`\n  )\n}\n\nexport function serializerMatchError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.serializerMatchError,\n    `Cannot match target serializer for node: ${stringify(node)}.`\n  )\n}\n\nexport function getAtomFromSchemaFail(type: 'mark' | 'node', name: string) {\n  return new MilkdownError(\n    ErrorCode.getAtomFromSchemaFail,\n    `Cannot get ${type}: ${name} from schema.`\n  )\n}\n\nexport function expectDomTypeError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.expectDomTypeError,\n    `Expect to be a dom, but get: ${stringify(node)}.`\n  )\n}\n\nexport function callCommandBeforeEditorView() {\n  return new MilkdownError(\n    ErrorCode.callCommandBeforeEditorView,\n    \"You're trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized\"\n  )\n}\n\nexport function missingRootElement() {\n  return new MilkdownError(\n    ErrorCode.missingRootElement,\n    'Missing root element, milkdown cannot find root element of the editor.'\n  )\n}\n\nexport function missingNodeInSchema(name: string) {\n  return new MilkdownError(\n    ErrorCode.missingNodeInSchema,\n    `Missing node in schema, milkdown cannot find \"${name}\" in schema.`\n  )\n}\n\nexport function missingMarkInSchema(name: string) {\n  return new MilkdownError(\n    ErrorCode.missingMarkInSchema,\n    `Missing mark in schema, milkdown cannot find \"${name}\" in schema.`\n  )\n}\n\nexport function ctxNotBind() {\n  return new MilkdownError(\n    ErrorCode.ctxNotBind,\n    'Context not bind, please make sure the plugin has been initialized.'\n  )\n}\n\nexport function missingYjsDoc() {\n  return new MilkdownError(\n    ErrorCode.missingYjsDoc,\n    'Missing yjs doc, please make sure you have bind one.'\n  )\n}\n","import { contextNotFound } from '@milkdown/exception'\n\nimport type { Slice, SliceType } from './slice'\n\n/// @internal\nexport type SliceMap = Map<symbol, Slice>\n\n/// Container is a map of slices.\nexport class Container {\n  /// @internal\n  sliceMap: SliceMap = new Map()\n\n  /// Get a slice from the container by slice type or slice name.\n  get = <T, N extends string = string>(\n    slice: SliceType<T, N> | N\n  ): Slice<T, N> => {\n    const context =\n      typeof slice === 'string'\n        ? [...this.sliceMap.values()].find((x) => x.type.name === slice)\n        : this.sliceMap.get(slice.id)\n\n    if (!context) {\n      const name = typeof slice === 'string' ? slice : slice.name\n      throw contextNotFound(name)\n    }\n    return context as Slice<T, N>\n  }\n\n  /// Remove a slice from the container by slice type or slice name.\n  remove = <T, N extends string = string>(slice: SliceType<T, N> | N): void => {\n    const context =\n      typeof slice === 'string'\n        ? [...this.sliceMap.values()].find((x) => x.type.name === slice)\n        : this.sliceMap.get(slice.id)\n\n    if (!context) return\n\n    this.sliceMap.delete(context.type.id)\n  }\n\n  /// Check if the container has a slice by slice type or slice name.\n  has = <T, N extends string = string>(slice: SliceType<T, N> | N): boolean => {\n    if (typeof slice === 'string')\n      return [...this.sliceMap.values()].some((x) => x.type.name === slice)\n\n    return this.sliceMap.has(slice.id)\n  }\n}\n","import { ctxCallOutOfScope } from '@milkdown/exception'\nimport type { SliceMap } from './container'\n\n/// Slice is a value of slice type.\nexport class Slice<T = any, N extends string = string> {\n  /// The type of the slice.\n  readonly type: SliceType<T, N>\n\n  /// @internal\n  #watchers: Array<(value: T) => unknown> = []\n\n  /// @internal\n  #value: T\n\n  /// @internal\n  #emit = () => {\n    this.#watchers.forEach((watcher) => watcher(this.#value))\n  }\n\n  /// @internal\n  constructor(container: SliceMap, value: T, type: SliceType<T, N>) {\n    this.type = type\n    this.#value = value\n    container.set(type.id, this)\n  }\n\n  /// Add a watcher for changes in the slice.\n  /// Returns a function to remove the watcher.\n  on(watcher: (value: T) => unknown) {\n    this.#watchers.push(watcher)\n    return () => {\n      this.#watchers = this.#watchers.filter((w) => w !== watcher)\n    }\n  }\n\n  /// Add a one-time watcher for changes in the slice.\n  /// The watcher will be removed after it is called.\n  /// Returns a function to remove the watcher.\n  once(watcher: (value: T) => unknown) {\n    const off = this.on((value) => {\n      watcher(value)\n      off()\n    })\n    return off\n  }\n\n  /// Remove a watcher.\n  off(watcher: (value: T) => unknown) {\n    this.#watchers = this.#watchers.filter((w) => w !== watcher)\n  }\n\n  /// Remove all watchers.\n  offAll() {\n    this.#watchers = []\n  }\n\n  /// Set the value of the slice.\n  set = (value: T) => {\n    this.#value = value\n    this.#emit()\n  }\n\n  /// Get the value of the slice.\n  get = () => this.#value\n\n  /// Update the value of the slice with a callback.\n  update = (updater: (prev: T) => T) => {\n    this.#value = updater(this.#value)\n    this.#emit()\n  }\n}\n\n/// Slice type can be used to create slices in different containers.\nexport class SliceType<T = any, N extends string = string> {\n  /// The unique id of the slice type.\n  readonly id: symbol\n  /// The name of the slice type.\n  readonly name: N\n  /// @internal\n  readonly _typeInfo: () => T\n  /// @internal\n  readonly _defaultValue: T\n\n  /// Create a slice type with a default value and a name.\n  /// The name should be unique in the container.\n  constructor(value: T, name: N) {\n    this.id = Symbol(`Context-${name}`)\n    this.name = name\n    this._defaultValue = value\n    this._typeInfo = (): T => {\n      throw ctxCallOutOfScope()\n    }\n  }\n\n  /// Create a slice with a container.\n  /// You can also pass a value to override the default value.\n  create(container: SliceMap, value: T = this._defaultValue): Slice<T, N> {\n    return new Slice(container, value, this)\n  }\n}\n\n/// Create a slice type with a default value and a name.\n/// This is equivalent to `new SliceType(value, name)`.\nexport const createSlice = <T = any, N extends string = string>(\n  value: T,\n  name: N\n) => new SliceType(value, name)\n","import type { Container, SliceType } from '../context'\nimport type { Clock, TimerStatus, TimerType } from '../timer'\nimport type { Meta } from './meta'\n\nexport interface Telemetry {\n  metadata: Meta\n  injectedSlices: { name: string; value: unknown }[]\n  consumedSlices: { name: string; value: unknown }[]\n  recordedTimers: { name: string; duration: number; status: TimerStatus }[]\n  waitTimers: { name: string; duration: number; status: TimerStatus }[]\n}\n\n/// The inspector object that is used to inspect the runtime environment of a ctx.\nexport class Inspector {\n  /// @internal\n  readonly #meta: Meta\n\n  /// @internal\n  readonly #container: Container\n\n  /// @internal\n  readonly #clock: Clock\n\n  /// @internal\n  readonly #injectedSlices: Set<SliceType | string> = new Set()\n\n  /// @internal\n  readonly #consumedSlices: Set<SliceType | string> = new Set()\n\n  /// @internal\n  readonly #recordedTimers: Map<\n    TimerType,\n    { duration: number; start: number }\n  > = new Map()\n\n  /// @internal\n  readonly #waitTimers: Map<TimerType, { duration: number }> = new Map()\n\n  /// Create an inspector with container, clock and metadata.\n  constructor(container: Container, clock: Clock, meta: Meta) {\n    this.#container = container\n    this.#clock = clock\n    this.#meta = meta\n  }\n\n  /// Read the runtime telemetry as an object of the ctx.\n  read = (): Telemetry => {\n    return {\n      metadata: this.#meta,\n      injectedSlices: [...this.#injectedSlices].map((slice) => ({\n        name: typeof slice === 'string' ? slice : slice.name,\n        value: this.#getSlice(slice),\n      })),\n      consumedSlices: [...this.#consumedSlices].map((slice) => ({\n        name: typeof slice === 'string' ? slice : slice.name,\n        value: this.#getSlice(slice),\n      })),\n      recordedTimers: [...this.#recordedTimers].map(\n        ([timer, { duration }]) => ({\n          name: timer.name,\n          duration,\n          status: this.#getTimer(timer),\n        })\n      ),\n      waitTimers: [...this.#waitTimers].map(([timer, { duration }]) => ({\n        name: timer.name,\n        duration,\n        status: this.#getTimer(timer),\n      })),\n    }\n  }\n\n  /// @internal\n  readonly onRecord = (timerType: TimerType) => {\n    this.#recordedTimers.set(timerType, { start: Date.now(), duration: 0 })\n  }\n\n  /// @internal\n  readonly onClear = (timerType: TimerType) => {\n    this.#recordedTimers.delete(timerType)\n  }\n\n  /// @internal\n  readonly onDone = (timerType: TimerType) => {\n    const timer = this.#recordedTimers.get(timerType)\n    if (!timer) return\n    timer.duration = Date.now() - timer.start\n  }\n\n  /// @internal\n  readonly onWait = (timerType: TimerType, promise: Promise<void>) => {\n    const start = Date.now()\n    promise.finally(() => {\n      this.#waitTimers.set(timerType, { duration: Date.now() - start })\n    })\n  }\n\n  /// @internal\n  readonly onInject = (sliceType: SliceType | string) => {\n    this.#injectedSlices.add(sliceType)\n  }\n\n  /// @internal\n  readonly onRemove = (sliceType: SliceType | string) => {\n    this.#injectedSlices.delete(sliceType)\n  }\n\n  /// @internal\n  readonly onUse = (sliceType: SliceType | string) => {\n    this.#consumedSlices.add(sliceType)\n  }\n\n  /// @internal\n  #getSlice = (sliceType: SliceType | string) => {\n    return this.#container.get(sliceType).get()\n  }\n\n  /// @internal\n  #getTimer = (timerType: TimerType) => {\n    return this.#clock.get(timerType).status\n  }\n}\n","import type { Container, Slice, SliceType } from '../context'\nimport type { Clock, TimerType } from '../timer'\nimport { Inspector } from '../inspector'\nimport type { Meta } from '../inspector'\n\n/// The ctx object that can be accessed in plugin and action.\nexport class Ctx {\n  /// @internal\n  readonly #container: Container\n  /// @internal\n  readonly #clock: Clock\n  /// @internal\n  readonly #meta?: Meta\n  /// @internal\n  readonly #inspector?: Inspector\n\n  /// Create a ctx object with container and clock.\n  constructor(container: Container, clock: Clock, meta?: Meta) {\n    this.#container = container\n    this.#clock = clock\n    this.#meta = meta\n    if (meta) this.#inspector = new Inspector(container, clock, meta)\n  }\n\n  /// Get metadata of the ctx.\n  get meta() {\n    return this.#meta\n  }\n\n  /// Get the inspector of the ctx.\n  get inspector() {\n    return this.#inspector\n  }\n\n  /// Produce a new ctx with metadata.\n  /// The new ctx will link to the same container and clock with the current ctx.\n  /// If the metadata is empty, it will return the current ctx.\n  readonly produce = (meta?: Meta) => {\n    if (meta && Object.keys(meta).length)\n      return new Ctx(this.#container, this.#clock, { ...meta })\n\n    return this\n  }\n\n  /// Add a slice into the ctx.\n  readonly inject = <T>(sliceType: SliceType<T>, value?: T) => {\n    const slice = sliceType.create(this.#container.sliceMap)\n    if (value != null) slice.set(value)\n\n    this.#inspector?.onInject(sliceType)\n\n    return this\n  }\n\n  /// Remove a slice from the ctx.\n  readonly remove = <T, N extends string = string>(\n    sliceType: SliceType<T, N> | N\n  ) => {\n    this.#container.remove(sliceType)\n    this.#inspector?.onRemove(sliceType)\n    return this\n  }\n\n  /// Add a timer into the ctx.\n  readonly record = (timerType: TimerType) => {\n    timerType.create(this.#clock.store)\n    this.#inspector?.onRecord(timerType)\n    return this\n  }\n\n  /// Remove a timer from the ctx.\n  readonly clearTimer = (timerType: TimerType) => {\n    this.#clock.remove(timerType)\n    this.#inspector?.onClear(timerType)\n    return this\n  }\n\n  /// Check if the ctx has a slice.\n  readonly isInjected = <T, N extends string = string>(\n    sliceType: SliceType<T, N> | N\n  ) => this.#container.has(sliceType)\n\n  /// Check if the ctx has a timer.\n  readonly isRecorded = (timerType: TimerType) => this.#clock.has(timerType)\n\n  /// Get a slice from the ctx.\n  readonly use = <T, N extends string = string>(\n    sliceType: SliceType<T, N> | N\n  ): Slice<T, N> => {\n    this.#inspector?.onUse(sliceType)\n    return this.#container.get(sliceType)\n  }\n\n  /// Get a slice value from the ctx.\n  readonly get = <T, N extends string>(sliceType: SliceType<T, N> | N) =>\n    this.use(sliceType).get()\n\n  /// Get a slice value from the ctx.\n  readonly set = <T, N extends string>(\n    sliceType: SliceType<T, N> | N,\n    value: T\n  ) => this.use(sliceType).set(value)\n\n  /// Update a slice value from the ctx by a callback.\n  readonly update = <T, N extends string>(\n    sliceType: SliceType<T, N> | N,\n    updater: (prev: T) => T\n  ) => this.use(sliceType).update(updater)\n\n  /// Get a timer from the ctx.\n  readonly timer = (timer: TimerType) => this.#clock.get(timer)\n\n  /// Resolve a timer from the ctx.\n  readonly done = (timer: TimerType) => {\n    this.timer(timer).done()\n    this.#inspector?.onDone(timer)\n  }\n\n  /// Start a timer from the ctx.\n  readonly wait = (timer: TimerType) => {\n    const promise = this.timer(timer).start()\n    this.#inspector?.onWait(timer, promise)\n    return promise\n  }\n\n  /// Start a list of timers from the ctx, the list is stored in a slice in the ctx.\n  /// This is equivalent to\n  ///\n  /// ```typescript\n  /// Promise.all(ctx.get(slice).map(x => ctx.wait(x))).\n  /// ```\n  readonly waitTimers = async (slice: SliceType<TimerType[]>) => {\n    await Promise.all(this.get(slice).map((x) => this.wait(x)))\n  }\n}\n","import { timerNotFound } from '@milkdown/exception'\n\nimport type { Timer, TimerType } from './timer'\n\n/// @internal\nexport type TimerMap = Map<symbol, Timer>\n\n/// Container is a map of timers.\nexport class Clock {\n  /// @internal\n  readonly store: TimerMap = new Map()\n\n  /// Get a timer from the clock by timer type.\n  get = (timer: TimerType) => {\n    const meta = this.store.get(timer.id)\n    if (!meta) throw timerNotFound(timer.name)\n    return meta\n  }\n\n  /// Remove a timer from the clock by timer type.\n  remove = (timer: TimerType) => {\n    this.store.delete(timer.id)\n  }\n\n  // Check if the clock has a timer by timer type.\n  has = (timer: TimerType) => {\n    return this.store.has(timer.id)\n  }\n}\n","import type { TimerMap } from './clock'\n\nexport type TimerStatus = 'pending' | 'resolved' | 'rejected'\n\n/// Timer is a promise that can be resolved by calling done.\nexport class Timer {\n  /// The type of the timer.\n  readonly type: TimerType\n\n  /// @internal\n  #promise: Promise<void> | null = null\n  /// @internal\n  #listener: EventListener | null = null\n  /// @internal\n  readonly #eventUniqId: symbol\n  /// @internal\n  #status: TimerStatus = 'pending'\n\n  /// @internal\n  constructor(clock: TimerMap, type: TimerType) {\n    this.#eventUniqId = Symbol(type.name)\n    this.type = type\n    clock.set(type.id, this)\n  }\n\n  /// The status of the timer.\n  /// Can be `pending`, `resolved` or `rejected`.\n  get status() {\n    return this.#status\n  }\n\n  /// Start the timer, which will return a promise.\n  /// If the timer is already started, it will return the same promise.\n  /// If the timer is not resolved in the timeout, it will reject the promise.\n  start = () => {\n    this.#promise ??= new Promise((resolve, reject) => {\n      this.#listener = (e: Event) => {\n        if (!(e instanceof CustomEvent)) return\n\n        if (e.detail.id === this.#eventUniqId) {\n          this.#status = 'resolved'\n          this.#removeListener()\n          e.stopImmediatePropagation()\n          resolve()\n        }\n      }\n\n      this.#waitTimeout(() => {\n        if (this.#status === 'pending') this.#status = 'rejected'\n\n        this.#removeListener()\n        reject(new Error(`Timing ${this.type.name} timeout.`))\n      })\n\n      this.#status = 'pending'\n      addEventListener(this.type.name, this.#listener)\n    })\n\n    return this.#promise\n  }\n\n  /// Resolve the timer.\n  done = () => {\n    const event = new CustomEvent(this.type.name, {\n      detail: { id: this.#eventUniqId },\n    })\n    dispatchEvent(event)\n  }\n\n  /// @internal\n  #removeListener = () => {\n    if (this.#listener) removeEventListener(this.type.name, this.#listener)\n  }\n\n  /// @internal\n  #waitTimeout = (ifTimeout: () => void) => {\n    setTimeout(() => {\n      ifTimeout()\n    }, this.type.timeout)\n  }\n}\n\n/// Timer type can be used to create timers in different clocks.\nexport class TimerType {\n  /// The unique id of the timer type.\n  readonly id: symbol\n  /// The name of the timer type.\n  readonly name: string\n  /// The timeout of the timer type.\n  readonly timeout: number\n\n  /// Create a timer type with a name and a timeout.\n  /// The name should be unique in the clock.\n  constructor(name: string, timeout = 3000) {\n    this.id = Symbol(`Timer-${name}`)\n    this.name = name\n    this.timeout = timeout\n  }\n\n  /// Create a timer with a clock.\n  create = (clock: TimerMap): Timer => {\n    return new Timer(clock, this)\n  }\n}\n\n/// Create a timer type with a name and a timeout.\n/// This is equivalent to `new TimerType(name, timeout)`.\nexport const createTimer = (name: string, timeout = 3000) =>\n  new TimerType(name, timeout)\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @import {Options, State} from './types.js'\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'extensions': {\n          // Empty.\n          break\n        }\n\n        /* c8 ignore next 4 */\n        case 'unsafe': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'join': {\n          list(base[key], extension[key])\n          break\n        }\n\n        case 'handlers': {\n          map(base[key], extension[key])\n          break\n        }\n\n        default: {\n          // @ts-expect-error: matches.\n          base.options[key] = extension[key]\n        }\n      }\n    }\n  }\n\n  return base\n}\n\n/**\n * @template T\n * @param {Array<T>} left\n * @param {Array<T> | null | undefined} right\n */\nfunction list(left, right) {\n  if (right) {\n    left.push(...right)\n  }\n}\n\n/**\n * @template T\n * @param {Record<string, T>} left\n * @param {Record<string, T> | null | undefined} right\n */\nfunction map(left, right) {\n  if (right) {\n    Object.assign(left, right)\n  }\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Join} from 'mdast-util-to-markdown'\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, state) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, state)))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, state)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*', after: '(?:[ \\t\\r\\n*])'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+', after: '(?:[ \\t\\r\\n])'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-', after: '(?:[ \\t\\r\\n-])'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @import {AssociationId} from '../types.js'\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @import {CompilePattern} from '../types.js'\n */\n\n/**\n * @type {CompilePattern}\n */\nexport function compilePattern(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @import {Handle, Info, State} from 'mdast-util-to-markdown'\n * @import {PhrasingParents} from '../types.js'\n */\n\nimport {encodeCharacterReference} from './encode-character-reference.js'\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {PhrasingParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n  /** @type {string | undefined} */\n  let encodeAfter\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    let value = state.handle(child, parent, state, {\n      ...tracker.current(),\n      after,\n      before\n    })\n\n    // If we had to encode the first character after the previous node and it’s\n    // still the same character,\n    // encode it.\n    if (encodeAfter && encodeAfter === value.slice(0, 1)) {\n      value =\n        encodeCharacterReference(encodeAfter.charCodeAt(0)) + value.slice(1)\n    }\n\n    const encodingInfo = state.attentionEncodeSurroundingInfo\n    state.attentionEncodeSurroundingInfo = undefined\n    encodeAfter = undefined\n\n    // If we have to encode the first character before the current node and\n    // it’s still the same character,\n    // encode it.\n    if (encodingInfo) {\n      if (\n        results.length > 0 &&\n        encodingInfo.before &&\n        before === results[results.length - 1].slice(-1)\n      ) {\n        results[results.length - 1] =\n          results[results.length - 1].slice(0, -1) +\n          encodeCharacterReference(before.charCodeAt(0))\n      }\n\n      if (encodingInfo.after) encodeAfter = after\n    }\n\n    tracker.move(value)\n    results.push(value)\n    before = value.slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {FlowChildren, FlowParents, TrackFields} from '../types.js'\n */\n\n/**\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {FlowChildren} left\n * @param {FlowChildren} right\n * @param {FlowParents} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @import {IndentLines} from '../types.js'\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @import {SafeConfig, State} from 'mdast-util-to-markdown'\n */\n\nimport {encodeCharacterReference} from './encode-character-reference.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(encodeCharacterReference(value.charCodeAt(position)))\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @import {CreateTracker, TrackCurrent, TrackMove, TrackShift} from '../types.js'\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @import {Info, Join, Options, SafeConfig, State} from 'mdast-util-to-markdown'\n * @import {Nodes} from 'mdast'\n * @import {Enter, FlowParents, PhrasingParents, TrackFields} from './types.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle as handlers} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\nimport {association} from './util/association.js'\nimport {compilePattern} from './util/compile-pattern.js'\nimport {containerPhrasing} from './util/container-phrasing.js'\nimport {containerFlow} from './util/container-flow.js'\nimport {indentLines} from './util/indent-lines.js'\nimport {safe} from './util/safe.js'\nimport {track} from './util/track.js'\n\n/**\n * Turn an mdast syntax tree into markdown.\n *\n * @param {Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized markdown representing `tree`.\n */\nexport function toMarkdown(tree, options) {\n  const settings = options || {}\n  /** @type {State} */\n  const state = {\n    associationId: association,\n    containerPhrasing: containerPhrasingBound,\n    containerFlow: containerFlowBound,\n    createTracker: track,\n    compilePattern,\n    enter,\n    // @ts-expect-error: GFM / frontmatter are typed in `mdast` but not defined\n    // here.\n    handlers: {...handlers},\n    // @ts-expect-error: add `handle` in a second.\n    handle: undefined,\n    indentLines,\n    indexStack: [],\n    join: [...join],\n    options: {},\n    safe: safeBound,\n    stack: [],\n    unsafe: [...unsafe]\n  }\n\n  configure(state, settings)\n\n  if (state.options.tightDefinitions) {\n    state.join.push(joinDefinition)\n  }\n\n  state.handle = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: state.handlers\n  })\n\n  let result = state.handle(tree, undefined, state, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Enter} */\n  function enter(name) {\n    state.stack.push(name)\n    return exit\n\n    /**\n     * @returns {undefined}\n     */\n    function exit() {\n      state.stack.pop()\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction unknown(value) {\n  // Always a node.\n  const node = /** @type {Nodes} */ (value)\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {PhrasingParents} parent\n *   Parent of flow nodes.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nfunction containerPhrasingBound(parent, info) {\n  return containerPhrasing(parent, this, info)\n}\n\n/**\n * Serialize the children of a parent that contains flow children.\n *\n * These children will typically be joined by blank lines.\n * What they are joined by exactly is defined by `Join` functions.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {FlowParents} parent\n *   Parent of flow nodes.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlowBound(parent, info) {\n  return containerFlow(parent, this, info)\n}\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {string | null | undefined} value\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nfunction safeBound(value, config) {\n  return safe(this, value, config)\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n * @typedef {import('unified').Processor<undefined, undefined, undefined, Root, string>} Processor\n */\n\n/**\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/**\n * Add support for serializing to markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkStringify(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree) {\n    return toMarkdown(tree, {\n      ...self.data('settings'),\n      ...options,\n      // Note: this option is not in the readme.\n      // The goal is for it to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('toMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  plugin.meta = {\n    package: '@milkdown/core',\n    group: 'System',\n    ...meta,\n  }\n\n  return plugin\n}\n","import type { Options } from 'remark-stringify'\n\nexport const remarkHandlers: Required<Options>['handlers'] = {\n  strong: (node, _, state, info) => {\n    const marker = node.marker || state.options.strong || '*'\n    const exit = state.enter('strong')\n    const tracker = state.createTracker(info)\n    let value = tracker.move(marker + marker)\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: marker,\n        ...tracker.current(),\n      })\n    )\n    value += tracker.move(marker + marker)\n    exit()\n    return value\n  },\n  emphasis: (node, _, state, info) => {\n    const marker = node.marker || state.options.emphasis || '*'\n    const exit = state.enter('emphasis')\n    const tracker = state.createTracker(info)\n    let value = tracker.move(marker)\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: marker,\n        ...tracker.current(),\n      })\n    )\n    value += tracker.move(marker)\n    exit()\n    return value\n  },\n}\n","import { createSlice } from '@milkdown/ctx'\nimport type { EditorState, Plugin } from '@milkdown/prose/state'\nimport type {\n  EditorView,\n  MarkViewConstructor,\n  NodeViewConstructor,\n} from '@milkdown/prose/view'\nimport type { SliceType, TimerType } from '@milkdown/ctx'\nimport type { InputRule } from '@milkdown/prose/inputrules'\nimport type { RemarkParser, RemarkPlugin } from '@milkdown/transformer'\nimport remarkParse from 'remark-parse'\nimport type { Options } from 'remark-stringify'\nimport remarkStringify from 'remark-stringify'\nimport { unified } from 'unified'\nimport type { Editor } from '../editor'\nimport { remarkHandlers } from '../__internal__'\n\n/// A slice which contains the editor view instance.\nexport const editorViewCtx = createSlice({} as EditorView, 'editorView')\n\n/// A slice which contains the editor state.\nexport const editorStateCtx = createSlice({} as EditorState, 'editorState')\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[ConfigReady]`.\nexport const initTimerCtx = createSlice([] as TimerType[], 'initTimer')\n\n/// A slice which stores the editor instance.\nexport const editorCtx = createSlice({} as Editor, 'editor')\n\n/// A slice which stores the input rules.\nexport const inputRulesCtx = createSlice([] as InputRule[], 'inputRules')\n\n/// A slice which stores the prosemirror plugins.\nexport const prosePluginsCtx = createSlice([] as Plugin[], 'prosePlugins')\n\n/// A slice which stores the remark plugins.\nexport const remarkPluginsCtx = createSlice(\n  [] as RemarkPlugin[],\n  'remarkPlugins'\n)\n\ntype NodeView = [nodeId: string, view: NodeViewConstructor]\n\n/// A slice which stores the prosemirror node views.\nexport const nodeViewCtx = createSlice([] as NodeView[], 'nodeView')\n\ntype MarkView = [nodeId: string, view: MarkViewConstructor]\n\n/// A slice which stores the prosemirror mark views.\nexport const markViewCtx = createSlice([] as MarkView[], 'markView')\n\n/// A slice which stores the remark instance.\nexport const remarkCtx: SliceType<RemarkParser, 'remark'> = createSlice(\n  unified().use(remarkParse).use(remarkStringify),\n  'remark'\n)\n\n/// A slice which stores the remark stringify options.\nexport const remarkStringifyOptionsCtx = createSlice(\n  {\n    handlers: remarkHandlers,\n  } as Options,\n  'remarkStringifyOptions'\n)\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: () → Object\n  // Turn ordered map into a plain object.\n  toObject: function() {\n    var result = {};\n    this.forEach(function(key, value) { result[key] = value; });\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nexport default OrderedMap;\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n    for (let i = 0;; i++) {\n        if (i == a.childCount || i == b.childCount)\n            return a.childCount == b.childCount ? null : pos;\n        let childA = a.child(i), childB = b.child(i);\n        if (childA == childB) {\n            pos += childA.nodeSize;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return pos;\n        if (childA.isText && childA.text != childB.text) {\n            for (let j = 0; childA.text[j] == childB.text[j]; j++)\n                pos++;\n            return pos;\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffStart(childA.content, childB.content, pos + 1);\n            if (inner != null)\n                return inner;\n        }\n        pos += childA.nodeSize;\n    }\n}\nfunction findDiffEnd(a, b, posA, posB) {\n    for (let iA = a.childCount, iB = b.childCount;;) {\n        if (iA == 0 || iB == 0)\n            return iA == iB ? null : { a: posA, b: posB };\n        let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n        if (childA == childB) {\n            posA -= size;\n            posB -= size;\n            continue;\n        }\n        if (!childA.sameMarkup(childB))\n            return { a: posA, b: posB };\n        if (childA.isText && childA.text != childB.text) {\n            let same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n            while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n                same++;\n                posA--;\n                posB--;\n            }\n            return { a: posA, b: posB };\n        }\n        if (childA.content.size || childB.content.size) {\n            let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n            if (inner)\n                return inner;\n        }\n        posA -= size;\n        posB -= size;\n    }\n}\n\n/**\nA fragment represents a node's collection of child nodes.\n\nLike nodes, fragments are persistent data structures, and you\nshould not mutate them or their content. Rather, you create new\ninstances whenever needed. The API tries to make this easy.\n*/\nclass Fragment {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The child nodes in this fragment.\n    */\n    content, size) {\n        this.content = content;\n        this.size = size || 0;\n        if (size == null)\n            for (let i = 0; i < content.length; i++)\n                this.size += content[i].nodeSize;\n    }\n    /**\n    Invoke a callback for all descendant nodes between the given two\n    positions (relative to start of this fragment). Doesn't descend\n    into a node when the callback returns `false`.\n    */\n    nodesBetween(from, to, f, nodeStart = 0, parent) {\n        for (let i = 0, pos = 0; pos < to; i++) {\n            let child = this.content[i], end = pos + child.nodeSize;\n            if (end > from && f(child, nodeStart + pos, parent || null, i) !== false && child.content.size) {\n                let start = pos + 1;\n                child.nodesBetween(Math.max(0, from - start), Math.min(child.content.size, to - start), f, nodeStart + start);\n            }\n            pos = end;\n        }\n    }\n    /**\n    Call the given callback for every descendant node. `pos` will be\n    relative to the start of the fragment. The callback may return\n    `false` to prevent traversal of a given node's children.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.size, f);\n    }\n    /**\n    Extract the text between `from` and `to`. See the same method on\n    [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        let text = \"\", first = true;\n        this.nodesBetween(from, to, (node, pos) => {\n            let nodeText = node.isText ? node.text.slice(Math.max(from, pos) - pos, to - pos)\n                : !node.isLeaf ? \"\"\n                    : leafText ? (typeof leafText === \"function\" ? leafText(node) : leafText)\n                        : node.type.spec.leafText ? node.type.spec.leafText(node)\n                            : \"\";\n            if (node.isBlock && (node.isLeaf && nodeText || node.isTextblock) && blockSeparator) {\n                if (first)\n                    first = false;\n                else\n                    text += blockSeparator;\n            }\n            text += nodeText;\n        }, 0);\n        return text;\n    }\n    /**\n    Create a new fragment containing the combined content of this\n    fragment and the other.\n    */\n    append(other) {\n        if (!other.size)\n            return this;\n        if (!this.size)\n            return other;\n        let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n        if (last.isText && last.sameMarkup(first)) {\n            content[content.length - 1] = last.withText(last.text + first.text);\n            i = 1;\n        }\n        for (; i < other.content.length; i++)\n            content.push(other.content[i]);\n        return new Fragment(content, this.size + other.size);\n    }\n    /**\n    Cut out the sub-fragment between the two given positions.\n    */\n    cut(from, to = this.size) {\n        if (from == 0 && to == this.size)\n            return this;\n        let result = [], size = 0;\n        if (to > from)\n            for (let i = 0, pos = 0; pos < to; i++) {\n                let child = this.content[i], end = pos + child.nodeSize;\n                if (end > from) {\n                    if (pos < from || end > to) {\n                        if (child.isText)\n                            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos));\n                        else\n                            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1));\n                    }\n                    result.push(child);\n                    size += child.nodeSize;\n                }\n                pos = end;\n            }\n        return new Fragment(result, size);\n    }\n    /**\n    @internal\n    */\n    cutByIndex(from, to) {\n        if (from == to)\n            return Fragment.empty;\n        if (from == 0 && to == this.content.length)\n            return this;\n        return new Fragment(this.content.slice(from, to));\n    }\n    /**\n    Create a new fragment in which the node at the given index is\n    replaced by the given node.\n    */\n    replaceChild(index, node) {\n        let current = this.content[index];\n        if (current == node)\n            return this;\n        let copy = this.content.slice();\n        let size = this.size + node.nodeSize - current.nodeSize;\n        copy[index] = node;\n        return new Fragment(copy, size);\n    }\n    /**\n    Create a new fragment by prepending the given node to this\n    fragment.\n    */\n    addToStart(node) {\n        return new Fragment([node].concat(this.content), this.size + node.nodeSize);\n    }\n    /**\n    Create a new fragment by appending the given node to this\n    fragment.\n    */\n    addToEnd(node) {\n        return new Fragment(this.content.concat(node), this.size + node.nodeSize);\n    }\n    /**\n    Compare this fragment to another one.\n    */\n    eq(other) {\n        if (this.content.length != other.content.length)\n            return false;\n        for (let i = 0; i < this.content.length; i++)\n            if (!this.content[i].eq(other.content[i]))\n                return false;\n        return true;\n    }\n    /**\n    The first child of the fragment, or `null` if it is empty.\n    */\n    get firstChild() { return this.content.length ? this.content[0] : null; }\n    /**\n    The last child of the fragment, or `null` if it is empty.\n    */\n    get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null; }\n    /**\n    The number of child nodes in this fragment.\n    */\n    get childCount() { return this.content.length; }\n    /**\n    Get the child node at the given index. Raise an error when the\n    index is out of range.\n    */\n    child(index) {\n        let found = this.content[index];\n        if (!found)\n            throw new RangeError(\"Index \" + index + \" out of range for \" + this);\n        return found;\n    }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) {\n        return this.content[index] || null;\n    }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) {\n        for (let i = 0, p = 0; i < this.content.length; i++) {\n            let child = this.content[i];\n            f(child, p, i);\n            p += child.nodeSize;\n        }\n    }\n    /**\n    Find the first position at which this fragment and another\n    fragment differ, or `null` if they are the same.\n    */\n    findDiffStart(other, pos = 0) {\n        return findDiffStart(this, other, pos);\n    }\n    /**\n    Find the first position, searching from the end, at which this\n    fragment and the given fragment differ, or `null` if they are\n    the same. Since this position will not be the same in both\n    nodes, an object with two separate positions is returned.\n    */\n    findDiffEnd(other, pos = this.size, otherPos = other.size) {\n        return findDiffEnd(this, other, pos, otherPos);\n    }\n    /**\n    Find the index and inner offset corresponding to a given relative\n    position in this fragment. The result object will be reused\n    (overwritten) the next time the function is called. @internal\n    */\n    findIndex(pos, round = -1) {\n        if (pos == 0)\n            return retIndex(0, pos);\n        if (pos == this.size)\n            return retIndex(this.content.length, pos);\n        if (pos > this.size || pos < 0)\n            throw new RangeError(`Position ${pos} outside of fragment (${this})`);\n        for (let i = 0, curPos = 0;; i++) {\n            let cur = this.child(i), end = curPos + cur.nodeSize;\n            if (end >= pos) {\n                if (end == pos || round > 0)\n                    return retIndex(i + 1, end);\n                return retIndex(i, curPos);\n            }\n            curPos = end;\n        }\n    }\n    /**\n    Return a debugging string that describes this fragment.\n    */\n    toString() { return \"<\" + this.toStringInner() + \">\"; }\n    /**\n    @internal\n    */\n    toStringInner() { return this.content.join(\", \"); }\n    /**\n    Create a JSON-serializeable representation of this fragment.\n    */\n    toJSON() {\n        return this.content.length ? this.content.map(n => n.toJSON()) : null;\n    }\n    /**\n    Deserialize a fragment from its JSON representation.\n    */\n    static fromJSON(schema, value) {\n        if (!value)\n            return Fragment.empty;\n        if (!Array.isArray(value))\n            throw new RangeError(\"Invalid input for Fragment.fromJSON\");\n        return new Fragment(value.map(schema.nodeFromJSON));\n    }\n    /**\n    Build a fragment from an array of nodes. Ensures that adjacent\n    text nodes with the same marks are joined together.\n    */\n    static fromArray(array) {\n        if (!array.length)\n            return Fragment.empty;\n        let joined, size = 0;\n        for (let i = 0; i < array.length; i++) {\n            let node = array[i];\n            size += node.nodeSize;\n            if (i && node.isText && array[i - 1].sameMarkup(node)) {\n                if (!joined)\n                    joined = array.slice(0, i);\n                joined[joined.length - 1] = node\n                    .withText(joined[joined.length - 1].text + node.text);\n            }\n            else if (joined) {\n                joined.push(node);\n            }\n        }\n        return new Fragment(joined || array, size);\n    }\n    /**\n    Create a fragment from something that can be interpreted as a\n    set of nodes. For `null`, it returns the empty fragment. For a\n    fragment, the fragment itself. For a node or array of nodes, a\n    fragment containing those nodes.\n    */\n    static from(nodes) {\n        if (!nodes)\n            return Fragment.empty;\n        if (nodes instanceof Fragment)\n            return nodes;\n        if (Array.isArray(nodes))\n            return this.fromArray(nodes);\n        if (nodes.attrs)\n            return new Fragment([nodes], nodes.nodeSize);\n        throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n            (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"));\n    }\n}\n/**\nAn empty fragment. Intended to be reused whenever a node doesn't\ncontain anything (rather than allocating a new empty fragment for\neach leaf node).\n*/\nFragment.empty = new Fragment([], 0);\nconst found = { index: 0, offset: 0 };\nfunction retIndex(index, offset) {\n    found.index = index;\n    found.offset = offset;\n    return found;\n}\n\nfunction compareDeep(a, b) {\n    if (a === b)\n        return true;\n    if (!(a && typeof a == \"object\") ||\n        !(b && typeof b == \"object\"))\n        return false;\n    let array = Array.isArray(a);\n    if (Array.isArray(b) != array)\n        return false;\n    if (array) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!compareDeep(a[i], b[i]))\n                return false;\n    }\n    else {\n        for (let p in a)\n            if (!(p in b) || !compareDeep(a[p], b[p]))\n                return false;\n        for (let p in b)\n            if (!(p in a))\n                return false;\n    }\n    return true;\n}\n\n/**\nA mark is a piece of information that can be attached to a node,\nsuch as it being emphasized, in code font, or a link. It has a\ntype and optionally a set of attributes that provide further\ninformation (such as the target of the link). Marks are created\nthrough a `Schema`, which controls which types exist and which\nattributes they have.\n*/\nclass Mark {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of this mark.\n    */\n    type, \n    /**\n    The attributes associated with this mark.\n    */\n    attrs) {\n        this.type = type;\n        this.attrs = attrs;\n    }\n    /**\n    Given a set of marks, create a new set which contains this one as\n    well, in the right position. If this mark is already in the set,\n    the set itself is returned. If any marks that are set to be\n    [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,\n    those are replaced by this one.\n    */\n    addToSet(set) {\n        let copy, placed = false;\n        for (let i = 0; i < set.length; i++) {\n            let other = set[i];\n            if (this.eq(other))\n                return set;\n            if (this.type.excludes(other.type)) {\n                if (!copy)\n                    copy = set.slice(0, i);\n            }\n            else if (other.type.excludes(this.type)) {\n                return set;\n            }\n            else {\n                if (!placed && other.type.rank > this.type.rank) {\n                    if (!copy)\n                        copy = set.slice(0, i);\n                    copy.push(this);\n                    placed = true;\n                }\n                if (copy)\n                    copy.push(other);\n            }\n        }\n        if (!copy)\n            copy = set.slice();\n        if (!placed)\n            copy.push(this);\n        return copy;\n    }\n    /**\n    Remove this mark from the given set, returning a new set. If this\n    mark is not in the set, the set itself is returned.\n    */\n    removeFromSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return set.slice(0, i).concat(set.slice(i + 1));\n        return set;\n    }\n    /**\n    Test whether this mark is in the given set of marks.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (this.eq(set[i]))\n                return true;\n        return false;\n    }\n    /**\n    Test whether this mark has the same type and attributes as\n    another mark.\n    */\n    eq(other) {\n        return this == other ||\n            (this.type == other.type && compareDeep(this.attrs, other.attrs));\n    }\n    /**\n    Convert this mark to a JSON-serializeable representation.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        return obj;\n    }\n    /**\n    Deserialize a mark from JSON.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Mark.fromJSON\");\n        let type = schema.marks[json.type];\n        if (!type)\n            throw new RangeError(`There is no mark type ${json.type} in this schema`);\n        let mark = type.create(json.attrs);\n        type.checkAttrs(mark.attrs);\n        return mark;\n    }\n    /**\n    Test whether two sets of marks are identical.\n    */\n    static sameSet(a, b) {\n        if (a == b)\n            return true;\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++)\n            if (!a[i].eq(b[i]))\n                return false;\n        return true;\n    }\n    /**\n    Create a properly sorted mark set from null, a single mark, or an\n    unsorted array of marks.\n    */\n    static setFrom(marks) {\n        if (!marks || Array.isArray(marks) && marks.length == 0)\n            return Mark.none;\n        if (marks instanceof Mark)\n            return [marks];\n        let copy = marks.slice();\n        copy.sort((a, b) => a.type.rank - b.type.rank);\n        return copy;\n    }\n}\n/**\nThe empty set of marks.\n*/\nMark.none = [];\n\n/**\nError type raised by [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) when\ngiven an invalid replacement.\n*/\nclass ReplaceError extends Error {\n}\n/*\nReplaceError = function(this: any, message: string) {\n  let err = Error.call(this, message)\n  ;(err as any).__proto__ = ReplaceError.prototype\n  return err\n} as any\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n*/\n/**\nA slice represents a piece cut out of a larger document. It\nstores not only a fragment, but also the depth up to which nodes on\nboth side are ‘open’ (cut through).\n*/\nclass Slice {\n    /**\n    Create a slice. When specifying a non-zero open depth, you must\n    make sure that there are nodes of at least that depth at the\n    appropriate side of the fragment—i.e. if the fragment is an\n    empty paragraph node, `openStart` and `openEnd` can't be greater\n    than 1.\n    \n    It is not necessary for the content of open nodes to conform to\n    the schema's content constraints, though it should be a valid\n    start/end/middle for such a node, depending on which sides are\n    open.\n    */\n    constructor(\n    /**\n    The slice's content.\n    */\n    content, \n    /**\n    The open depth at the start of the fragment.\n    */\n    openStart, \n    /**\n    The open depth at the end.\n    */\n    openEnd) {\n        this.content = content;\n        this.openStart = openStart;\n        this.openEnd = openEnd;\n    }\n    /**\n    The size this slice would add when inserted into a document.\n    */\n    get size() {\n        return this.content.size - this.openStart - this.openEnd;\n    }\n    /**\n    @internal\n    */\n    insertAt(pos, fragment) {\n        let content = insertInto(this.content, pos + this.openStart, fragment);\n        return content && new Slice(content, this.openStart, this.openEnd);\n    }\n    /**\n    @internal\n    */\n    removeBetween(from, to) {\n        return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd);\n    }\n    /**\n    Tests whether this slice is equal to another slice.\n    */\n    eq(other) {\n        return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\";\n    }\n    /**\n    Convert a slice to a JSON-serializable representation.\n    */\n    toJSON() {\n        if (!this.content.size)\n            return null;\n        let json = { content: this.content.toJSON() };\n        if (this.openStart > 0)\n            json.openStart = this.openStart;\n        if (this.openEnd > 0)\n            json.openEnd = this.openEnd;\n        return json;\n    }\n    /**\n    Deserialize a slice from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            return Slice.empty;\n        let openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n        if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n            throw new RangeError(\"Invalid input for Slice.fromJSON\");\n        return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd);\n    }\n    /**\n    Create a slice from a fragment by taking the maximum possible\n    open value on both side of the fragment.\n    */\n    static maxOpen(fragment, openIsolating = true) {\n        let openStart = 0, openEnd = 0;\n        for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild)\n            openStart++;\n        for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild)\n            openEnd++;\n        return new Slice(fragment, openStart, openEnd);\n    }\n}\n/**\nThe empty slice.\n*/\nSlice.empty = new Slice(Fragment.empty, 0, 0);\nfunction removeRange(content, from, to) {\n    let { index, offset } = content.findIndex(from), child = content.maybeChild(index);\n    let { index: indexTo, offset: offsetTo } = content.findIndex(to);\n    if (offset == from || child.isText) {\n        if (offsetTo != to && !content.child(indexTo).isText)\n            throw new RangeError(\"Removing non-flat range\");\n        return content.cut(0, from).append(content.cut(to));\n    }\n    if (index != indexTo)\n        throw new RangeError(\"Removing non-flat range\");\n    return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)));\n}\nfunction insertInto(content, dist, insert, parent) {\n    let { index, offset } = content.findIndex(dist), child = content.maybeChild(index);\n    if (offset == dist || child.isText) {\n        if (parent && !parent.canReplace(index, index, insert))\n            return null;\n        return content.cut(0, dist).append(insert).append(content.cut(dist));\n    }\n    let inner = insertInto(child.content, dist - offset - 1, insert);\n    return inner && content.replaceChild(index, child.copy(inner));\n}\nfunction replace($from, $to, slice) {\n    if (slice.openStart > $from.depth)\n        throw new ReplaceError(\"Inserted content deeper than insertion position\");\n    if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n        throw new ReplaceError(\"Inconsistent open depths\");\n    return replaceOuter($from, $to, slice, 0);\n}\nfunction replaceOuter($from, $to, slice, depth) {\n    let index = $from.index(depth), node = $from.node(depth);\n    if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n        let inner = replaceOuter($from, $to, slice, depth + 1);\n        return node.copy(node.content.replaceChild(index, inner));\n    }\n    else if (!slice.content.size) {\n        return close(node, replaceTwoWay($from, $to, depth));\n    }\n    else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n        let parent = $from.parent, content = parent.content;\n        return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)));\n    }\n    else {\n        let { start, end } = prepareSliceForReplace(slice, $from);\n        return close(node, replaceThreeWay($from, start, end, $to, depth));\n    }\n}\nfunction checkJoin(main, sub) {\n    if (!sub.type.compatibleContent(main.type))\n        throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name);\n}\nfunction joinable($before, $after, depth) {\n    let node = $before.node(depth);\n    checkJoin(node, $after.node(depth));\n    return node;\n}\nfunction addNode(child, target) {\n    let last = target.length - 1;\n    if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n        target[last] = child.withText(target[last].text + child.text);\n    else\n        target.push(child);\n}\nfunction addRange($start, $end, depth, target) {\n    let node = ($end || $start).node(depth);\n    let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n    if ($start) {\n        startIndex = $start.index(depth);\n        if ($start.depth > depth) {\n            startIndex++;\n        }\n        else if ($start.textOffset) {\n            addNode($start.nodeAfter, target);\n            startIndex++;\n        }\n    }\n    for (let i = startIndex; i < endIndex; i++)\n        addNode(node.child(i), target);\n    if ($end && $end.depth == depth && $end.textOffset)\n        addNode($end.nodeBefore, target);\n}\nfunction close(node, content) {\n    node.type.checkContent(content);\n    return node.copy(content);\n}\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n    let openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n    let openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n    let content = [];\n    addRange(null, $from, depth, content);\n    if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n        checkJoin(openStart, openEnd);\n        addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n    }\n    else {\n        if (openStart)\n            addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content);\n        addRange($start, $end, depth, content);\n        if (openEnd)\n            addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction replaceTwoWay($from, $to, depth) {\n    let content = [];\n    addRange(null, $from, depth, content);\n    if ($from.depth > depth) {\n        let type = joinable($from, $to, depth + 1);\n        addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n    }\n    addRange($to, null, depth, content);\n    return new Fragment(content);\n}\nfunction prepareSliceForReplace(slice, $along) {\n    let extra = $along.depth - slice.openStart, parent = $along.node(extra);\n    let node = parent.copy(slice.content);\n    for (let i = extra - 1; i >= 0; i--)\n        node = $along.node(i).copy(Fragment.from(node));\n    return { start: node.resolveNoCache(slice.openStart + extra),\n        end: node.resolveNoCache(node.content.size - slice.openEnd - extra) };\n}\n\n/**\nYou can [_resolve_](https://prosemirror.net/docs/ref/#model.Node.resolve) a position to get more\ninformation about it. Objects of this class represent such a\nresolved position, providing various pieces of context\ninformation, and some helper methods.\n\nThroughout this interface, methods that take an optional `depth`\nparameter will interpret undefined as `this.depth` and negative\nnumbers as `this.depth + value`.\n*/\nclass ResolvedPos {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position that was resolved.\n    */\n    pos, \n    /**\n    @internal\n    */\n    path, \n    /**\n    The offset this position has into its parent node.\n    */\n    parentOffset) {\n        this.pos = pos;\n        this.path = path;\n        this.parentOffset = parentOffset;\n        this.depth = path.length / 3 - 1;\n    }\n    /**\n    @internal\n    */\n    resolveDepth(val) {\n        if (val == null)\n            return this.depth;\n        if (val < 0)\n            return this.depth + val;\n        return val;\n    }\n    /**\n    The parent node that the position points into. Note that even if\n    a position points into a text node, that node is not considered\n    the parent—text nodes are ‘flat’ in this model, and have no content.\n    */\n    get parent() { return this.node(this.depth); }\n    /**\n    The root node in which the position was resolved.\n    */\n    get doc() { return this.node(0); }\n    /**\n    The ancestor node at the given level. `p.node(p.depth)` is the\n    same as `p.parent`.\n    */\n    node(depth) { return this.path[this.resolveDepth(depth) * 3]; }\n    /**\n    The index into the ancestor at the given level. If this points\n    at the 3rd node in the 2nd paragraph on the top level, for\n    example, `p.index(0)` is 1 and `p.index(1)` is 2.\n    */\n    index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1]; }\n    /**\n    The index pointing after this position into the ancestor at the\n    given level.\n    */\n    indexAfter(depth) {\n        depth = this.resolveDepth(depth);\n        return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1);\n    }\n    /**\n    The (absolute) position at the start of the node at the given\n    level.\n    */\n    start(depth) {\n        depth = this.resolveDepth(depth);\n        return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n    }\n    /**\n    The (absolute) position at the end of the node at the given\n    level.\n    */\n    end(depth) {\n        depth = this.resolveDepth(depth);\n        return this.start(depth) + this.node(depth).content.size;\n    }\n    /**\n    The (absolute) position directly before the wrapping node at the\n    given level, or, when `depth` is `this.depth + 1`, the original\n    position.\n    */\n    before(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position before the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1];\n    }\n    /**\n    The (absolute) position directly after the wrapping node at the\n    given level, or the original position when `depth` is `this.depth + 1`.\n    */\n    after(depth) {\n        depth = this.resolveDepth(depth);\n        if (!depth)\n            throw new RangeError(\"There is no position after the top-level node\");\n        return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize;\n    }\n    /**\n    When this position points into a text node, this returns the\n    distance between the position and the start of the text node.\n    Will be zero for positions that point between nodes.\n    */\n    get textOffset() { return this.pos - this.path[this.path.length - 1]; }\n    /**\n    Get the node directly after the position, if any. If the position\n    points into a text node, only the part of that node after the\n    position is returned.\n    */\n    get nodeAfter() {\n        let parent = this.parent, index = this.index(this.depth);\n        if (index == parent.childCount)\n            return null;\n        let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n        return dOff ? parent.child(index).cut(dOff) : child;\n    }\n    /**\n    Get the node directly before the position, if any. If the\n    position points into a text node, only the part of that node\n    before the position is returned.\n    */\n    get nodeBefore() {\n        let index = this.index(this.depth);\n        let dOff = this.pos - this.path[this.path.length - 1];\n        if (dOff)\n            return this.parent.child(index).cut(0, dOff);\n        return index == 0 ? null : this.parent.child(index - 1);\n    }\n    /**\n    Get the position at the given index in the parent node at the\n    given depth (which defaults to `this.depth`).\n    */\n    posAtIndex(index, depth) {\n        depth = this.resolveDepth(depth);\n        let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n        for (let i = 0; i < index; i++)\n            pos += node.child(i).nodeSize;\n        return pos;\n    }\n    /**\n    Get the marks at this position, factoring in the surrounding\n    marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the\n    position is at the start of a non-empty node, the marks of the\n    node after it (if any) are returned.\n    */\n    marks() {\n        let parent = this.parent, index = this.index();\n        // In an empty parent, return the empty array\n        if (parent.content.size == 0)\n            return Mark.none;\n        // When inside a text node, just return the text node's marks\n        if (this.textOffset)\n            return parent.child(index).marks;\n        let main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n        // If the `after` flag is true of there is no node before, make\n        // the node after this position the main reference.\n        if (!main) {\n            let tmp = main;\n            main = other;\n            other = tmp;\n        }\n        // Use all marks in the main node, except those that have\n        // `inclusive` set to false and are not present in the other node.\n        let marks = main.marks;\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    Get the marks after the current position, if any, except those\n    that are non-inclusive and not present at position `$end`. This\n    is mostly useful for getting the set of marks to preserve after a\n    deletion. Will return `null` if this position is at the end of\n    its parent node or its parent node isn't a textblock (in which\n    case no marks should be preserved).\n    */\n    marksAcross($end) {\n        let after = this.parent.maybeChild(this.index());\n        if (!after || !after.isInline)\n            return null;\n        let marks = after.marks, next = $end.parent.maybeChild($end.index());\n        for (var i = 0; i < marks.length; i++)\n            if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n                marks = marks[i--].removeFromSet(marks);\n        return marks;\n    }\n    /**\n    The depth up to which this position and the given (non-resolved)\n    position share the same parent nodes.\n    */\n    sharedDepth(pos) {\n        for (let depth = this.depth; depth > 0; depth--)\n            if (this.start(depth) <= pos && this.end(depth) >= pos)\n                return depth;\n        return 0;\n    }\n    /**\n    Returns a range based on the place where this position and the\n    given position diverge around block content. If both point into\n    the same textblock, for example, a range around that textblock\n    will be returned. If they point into different blocks, the range\n    around those blocks in their shared ancestor is returned. You can\n    pass in an optional predicate that will be called with a parent\n    node to see if a range into that parent is acceptable.\n    */\n    blockRange(other = this, pred) {\n        if (other.pos < this.pos)\n            return other.blockRange(this);\n        for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n            if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n                return new NodeRange(this, other, d);\n        return null;\n    }\n    /**\n    Query whether the given position shares the same parent node.\n    */\n    sameParent(other) {\n        return this.pos - this.parentOffset == other.pos - other.parentOffset;\n    }\n    /**\n    Return the greater of this and the given position.\n    */\n    max(other) {\n        return other.pos > this.pos ? other : this;\n    }\n    /**\n    Return the smaller of this and the given position.\n    */\n    min(other) {\n        return other.pos < this.pos ? other : this;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let str = \"\";\n        for (let i = 1; i <= this.depth; i++)\n            str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1);\n        return str + \":\" + this.parentOffset;\n    }\n    /**\n    @internal\n    */\n    static resolve(doc, pos) {\n        if (!(pos >= 0 && pos <= doc.content.size))\n            throw new RangeError(\"Position \" + pos + \" out of range\");\n        let path = [];\n        let start = 0, parentOffset = pos;\n        for (let node = doc;;) {\n            let { index, offset } = node.content.findIndex(parentOffset);\n            let rem = parentOffset - offset;\n            path.push(node, index, start + offset);\n            if (!rem)\n                break;\n            node = node.child(index);\n            if (node.isText)\n                break;\n            parentOffset = rem - 1;\n            start += offset + 1;\n        }\n        return new ResolvedPos(pos, path, parentOffset);\n    }\n    /**\n    @internal\n    */\n    static resolveCached(doc, pos) {\n        let cache = resolveCache.get(doc);\n        if (cache) {\n            for (let i = 0; i < cache.elts.length; i++) {\n                let elt = cache.elts[i];\n                if (elt.pos == pos)\n                    return elt;\n            }\n        }\n        else {\n            resolveCache.set(doc, cache = new ResolveCache);\n        }\n        let result = cache.elts[cache.i] = ResolvedPos.resolve(doc, pos);\n        cache.i = (cache.i + 1) % resolveCacheSize;\n        return result;\n    }\n}\nclass ResolveCache {\n    constructor() {\n        this.elts = [];\n        this.i = 0;\n    }\n}\nconst resolveCacheSize = 12, resolveCache = new WeakMap();\n/**\nRepresents a flat range of content, i.e. one that starts and\nends in the same node.\n*/\nclass NodeRange {\n    /**\n    Construct a node range. `$from` and `$to` should point into the\n    same node until at least the given `depth`, since a node range\n    denotes an adjacent set of nodes in a single parent node.\n    */\n    constructor(\n    /**\n    A resolved position along the start of the content. May have a\n    `depth` greater than this object's `depth` property, since\n    these are the positions that were used to compute the range,\n    not re-resolved positions directly at its boundaries.\n    */\n    $from, \n    /**\n    A position along the end of the content. See\n    caveat for [`$from`](https://prosemirror.net/docs/ref/#model.NodeRange.$from).\n    */\n    $to, \n    /**\n    The depth of the node that this range points into.\n    */\n    depth) {\n        this.$from = $from;\n        this.$to = $to;\n        this.depth = depth;\n    }\n    /**\n    The position at the start of the range.\n    */\n    get start() { return this.$from.before(this.depth + 1); }\n    /**\n    The position at the end of the range.\n    */\n    get end() { return this.$to.after(this.depth + 1); }\n    /**\n    The parent node that the range points into.\n    */\n    get parent() { return this.$from.node(this.depth); }\n    /**\n    The start index of the range in the parent node.\n    */\n    get startIndex() { return this.$from.index(this.depth); }\n    /**\n    The end index of the range in the parent node.\n    */\n    get endIndex() { return this.$to.indexAfter(this.depth); }\n}\n\nconst emptyAttrs = Object.create(null);\n/**\nThis class represents a node in the tree that makes up a\nProseMirror document. So a document is an instance of `Node`, with\nchildren that are also instances of `Node`.\n\nNodes are persistent data structures. Instead of changing them, you\ncreate new ones with the content you want. Old ones keep pointing\nat the old document shape. This is made cheaper by sharing\nstructure between the old and new data as much as possible, which a\ntree shape like this (without back pointers) makes easy.\n\n**Do not** directly mutate the properties of a `Node` object. See\n[the guide](/docs/guide/#doc) for more information.\n*/\nclass Node {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The type of node that this is.\n    */\n    type, \n    /**\n    An object mapping attribute names to values. The kind of\n    attributes allowed and required are\n    [determined](https://prosemirror.net/docs/ref/#model.NodeSpec.attrs) by the node type.\n    */\n    attrs, \n    // A fragment holding the node's children.\n    content, \n    /**\n    The marks (things like whether it is emphasized or part of a\n    link) applied to this node.\n    */\n    marks = Mark.none) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.content = content || Fragment.empty;\n    }\n    /**\n    The array of this node's child nodes.\n    */\n    get children() { return this.content.content; }\n    /**\n    The size of this node, as defined by the integer-based [indexing\n    scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n    amount of characters. For other leaf nodes, it is one. For\n    non-leaf nodes, it is the size of the content plus two (the\n    start and end token).\n    */\n    get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size; }\n    /**\n    The number of children that the node has.\n    */\n    get childCount() { return this.content.childCount; }\n    /**\n    Get the child node at the given index. Raises an error when the\n    index is out of range.\n    */\n    child(index) { return this.content.child(index); }\n    /**\n    Get the child node at the given index, if it exists.\n    */\n    maybeChild(index) { return this.content.maybeChild(index); }\n    /**\n    Call `f` for every child node, passing the node, its offset\n    into this parent node, and its index.\n    */\n    forEach(f) { this.content.forEach(f); }\n    /**\n    Invoke a callback for all descendant nodes recursively between\n    the given two positions that are relative to start of this\n    node's content. The callback is invoked with the node, its\n    position relative to the original node (method receiver),\n    its parent node, and its child index. When the callback returns\n    false for a given node, that node's children will not be\n    recursed over. The last parameter can be used to specify a\n    starting position to count from.\n    */\n    nodesBetween(from, to, f, startPos = 0) {\n        this.content.nodesBetween(from, to, f, startPos, this);\n    }\n    /**\n    Call the given callback for every descendant node. Doesn't\n    descend into a node when the callback returns `false`.\n    */\n    descendants(f) {\n        this.nodesBetween(0, this.content.size, f);\n    }\n    /**\n    Concatenates all the text nodes found in this fragment and its\n    children.\n    */\n    get textContent() {\n        return (this.isLeaf && this.type.spec.leafText)\n            ? this.type.spec.leafText(this)\n            : this.textBetween(0, this.content.size, \"\");\n    }\n    /**\n    Get all text between positions `from` and `to`. When\n    `blockSeparator` is given, it will be inserted to separate text\n    from different block nodes. If `leafText` is given, it'll be\n    inserted for every non-text leaf node encountered, otherwise\n    [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec^leafText) will be used.\n    */\n    textBetween(from, to, blockSeparator, leafText) {\n        return this.content.textBetween(from, to, blockSeparator, leafText);\n    }\n    /**\n    Returns this node's first child, or `null` if there are no\n    children.\n    */\n    get firstChild() { return this.content.firstChild; }\n    /**\n    Returns this node's last child, or `null` if there are no\n    children.\n    */\n    get lastChild() { return this.content.lastChild; }\n    /**\n    Test whether two nodes represent the same piece of document.\n    */\n    eq(other) {\n        return this == other || (this.sameMarkup(other) && this.content.eq(other.content));\n    }\n    /**\n    Compare the markup (type, attributes, and marks) of this node to\n    those of another. Returns `true` if both have the same markup.\n    */\n    sameMarkup(other) {\n        return this.hasMarkup(other.type, other.attrs, other.marks);\n    }\n    /**\n    Check whether this node's markup correspond to the given type,\n    attributes, and marks.\n    */\n    hasMarkup(type, attrs, marks) {\n        return this.type == type &&\n            compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n            Mark.sameSet(this.marks, marks || Mark.none);\n    }\n    /**\n    Create a new node with the same markup as this node, containing\n    the given content (or empty, if no content is given).\n    */\n    copy(content = null) {\n        if (content == this.content)\n            return this;\n        return new Node(this.type, this.attrs, content, this.marks);\n    }\n    /**\n    Create a copy of this node, with the given set of marks instead\n    of the node's own marks.\n    */\n    mark(marks) {\n        return marks == this.marks ? this : new Node(this.type, this.attrs, this.content, marks);\n    }\n    /**\n    Create a copy of this node with only the content between the\n    given positions. If `to` is not given, it defaults to the end of\n    the node.\n    */\n    cut(from, to = this.content.size) {\n        if (from == 0 && to == this.content.size)\n            return this;\n        return this.copy(this.content.cut(from, to));\n    }\n    /**\n    Cut out the part of the document between the given positions, and\n    return it as a `Slice` object.\n    */\n    slice(from, to = this.content.size, includeParents = false) {\n        if (from == to)\n            return Slice.empty;\n        let $from = this.resolve(from), $to = this.resolve(to);\n        let depth = includeParents ? 0 : $from.sharedDepth(to);\n        let start = $from.start(depth), node = $from.node(depth);\n        let content = node.content.cut($from.pos - start, $to.pos - start);\n        return new Slice(content, $from.depth - depth, $to.depth - depth);\n    }\n    /**\n    Replace the part of the document between the given positions with\n    the given slice. The slice must 'fit', meaning its open sides\n    must be able to connect to the surrounding content, and its\n    content nodes must be valid children for the node they are placed\n    into. If any of this is violated, an error of type\n    [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.\n    */\n    replace(from, to, slice) {\n        return replace(this.resolve(from), this.resolve(to), slice);\n    }\n    /**\n    Find the node directly after the given position.\n    */\n    nodeAt(pos) {\n        for (let node = this;;) {\n            let { index, offset } = node.content.findIndex(pos);\n            node = node.maybeChild(index);\n            if (!node)\n                return null;\n            if (offset == pos || node.isText)\n                return node;\n            pos -= offset + 1;\n        }\n    }\n    /**\n    Find the (direct) child node after the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childAfter(pos) {\n        let { index, offset } = this.content.findIndex(pos);\n        return { node: this.content.maybeChild(index), index, offset };\n    }\n    /**\n    Find the (direct) child node before the given offset, if any,\n    and return it along with its index and offset relative to this\n    node.\n    */\n    childBefore(pos) {\n        if (pos == 0)\n            return { node: null, index: 0, offset: 0 };\n        let { index, offset } = this.content.findIndex(pos);\n        if (offset < pos)\n            return { node: this.content.child(index), index, offset };\n        let node = this.content.child(index - 1);\n        return { node, index: index - 1, offset: offset - node.nodeSize };\n    }\n    /**\n    Resolve the given position in the document, returning an\n    [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.\n    */\n    resolve(pos) { return ResolvedPos.resolveCached(this, pos); }\n    /**\n    @internal\n    */\n    resolveNoCache(pos) { return ResolvedPos.resolve(this, pos); }\n    /**\n    Test whether a given mark or mark type occurs in this document\n    between the two given positions.\n    */\n    rangeHasMark(from, to, type) {\n        let found = false;\n        if (to > from)\n            this.nodesBetween(from, to, node => {\n                if (type.isInSet(node.marks))\n                    found = true;\n                return !found;\n            });\n        return found;\n    }\n    /**\n    True when this is a block (non-inline node)\n    */\n    get isBlock() { return this.type.isBlock; }\n    /**\n    True when this is a textblock node, a block node with inline\n    content.\n    */\n    get isTextblock() { return this.type.isTextblock; }\n    /**\n    True when this node allows inline content.\n    */\n    get inlineContent() { return this.type.inlineContent; }\n    /**\n    True when this is an inline node (a text node or a node that can\n    appear among text).\n    */\n    get isInline() { return this.type.isInline; }\n    /**\n    True when this is a text node.\n    */\n    get isText() { return this.type.isText; }\n    /**\n    True when this is a leaf node.\n    */\n    get isLeaf() { return this.type.isLeaf; }\n    /**\n    True when this is an atom, i.e. when it does not have directly\n    editable content. This is usually the same as `isLeaf`, but can\n    be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)\n    on a node's spec (typically used when the node is displayed as\n    an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).\n    */\n    get isAtom() { return this.type.isAtom; }\n    /**\n    Return a string representation of this node for debugging\n    purposes.\n    */\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        let name = this.type.name;\n        if (this.content.size)\n            name += \"(\" + this.content.toStringInner() + \")\";\n        return wrapMarks(this.marks, name);\n    }\n    /**\n    Get the content match in this node at the given index.\n    */\n    contentMatchAt(index) {\n        let match = this.type.contentMatch.matchFragment(this.content, 0, index);\n        if (!match)\n            throw new Error(\"Called contentMatchAt on a node with invalid content\");\n        return match;\n    }\n    /**\n    Test whether replacing the range between `from` and `to` (by\n    child index) with the given replacement fragment (which defaults\n    to the empty fragment) would leave the node's content valid. You\n    can optionally pass `start` and `end` indices into the\n    replacement fragment.\n    */\n    canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n        let one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n        let two = one && one.matchFragment(this.content, to);\n        if (!two || !two.validEnd)\n            return false;\n        for (let i = start; i < end; i++)\n            if (!this.type.allowsMarks(replacement.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Test whether replacing the range `from` to `to` (by index) with\n    a node of the given type would leave the node's content valid.\n    */\n    canReplaceWith(from, to, type, marks) {\n        if (marks && !this.type.allowsMarks(marks))\n            return false;\n        let start = this.contentMatchAt(from).matchType(type);\n        let end = start && start.matchFragment(this.content, to);\n        return end ? end.validEnd : false;\n    }\n    /**\n    Test whether the given node's content could be appended to this\n    node. If that node is empty, this will only return true if there\n    is at least one node type that can appear in both nodes (to avoid\n    merging completely incompatible nodes).\n    */\n    canAppend(other) {\n        if (other.content.size)\n            return this.canReplace(this.childCount, this.childCount, other.content);\n        else\n            return this.type.compatibleContent(other.type);\n    }\n    /**\n    Check whether this node and its descendants conform to the\n    schema, and raise an exception when they do not.\n    */\n    check() {\n        this.type.checkContent(this.content);\n        this.type.checkAttrs(this.attrs);\n        let copy = Mark.none;\n        for (let i = 0; i < this.marks.length; i++) {\n            let mark = this.marks[i];\n            mark.type.checkAttrs(mark.attrs);\n            copy = mark.addToSet(copy);\n        }\n        if (!Mark.sameSet(copy, this.marks))\n            throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`);\n        this.content.forEach(node => node.check());\n    }\n    /**\n    Return a JSON-serializeable representation of this node.\n    */\n    toJSON() {\n        let obj = { type: this.type.name };\n        for (let _ in this.attrs) {\n            obj.attrs = this.attrs;\n            break;\n        }\n        if (this.content.size)\n            obj.content = this.content.toJSON();\n        if (this.marks.length)\n            obj.marks = this.marks.map(n => n.toJSON());\n        return obj;\n    }\n    /**\n    Deserialize a node from its JSON representation.\n    */\n    static fromJSON(schema, json) {\n        if (!json)\n            throw new RangeError(\"Invalid input for Node.fromJSON\");\n        let marks = undefined;\n        if (json.marks) {\n            if (!Array.isArray(json.marks))\n                throw new RangeError(\"Invalid mark data for Node.fromJSON\");\n            marks = json.marks.map(schema.markFromJSON);\n        }\n        if (json.type == \"text\") {\n            if (typeof json.text != \"string\")\n                throw new RangeError(\"Invalid text node in JSON\");\n            return schema.text(json.text, marks);\n        }\n        let content = Fragment.fromJSON(schema, json.content);\n        let node = schema.nodeType(json.type).create(json.attrs, content, marks);\n        node.type.checkAttrs(node.attrs);\n        return node;\n    }\n}\nNode.prototype.text = undefined;\nclass TextNode extends Node {\n    /**\n    @internal\n    */\n    constructor(type, attrs, content, marks) {\n        super(type, attrs, null, marks);\n        if (!content)\n            throw new RangeError(\"Empty text nodes are not allowed\");\n        this.text = content;\n    }\n    toString() {\n        if (this.type.spec.toDebugString)\n            return this.type.spec.toDebugString(this);\n        return wrapMarks(this.marks, JSON.stringify(this.text));\n    }\n    get textContent() { return this.text; }\n    textBetween(from, to) { return this.text.slice(from, to); }\n    get nodeSize() { return this.text.length; }\n    mark(marks) {\n        return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks);\n    }\n    withText(text) {\n        if (text == this.text)\n            return this;\n        return new TextNode(this.type, this.attrs, text, this.marks);\n    }\n    cut(from = 0, to = this.text.length) {\n        if (from == 0 && to == this.text.length)\n            return this;\n        return this.withText(this.text.slice(from, to));\n    }\n    eq(other) {\n        return this.sameMarkup(other) && this.text == other.text;\n    }\n    toJSON() {\n        let base = super.toJSON();\n        base.text = this.text;\n        return base;\n    }\n}\nfunction wrapMarks(marks, str) {\n    for (let i = marks.length - 1; i >= 0; i--)\n        str = marks[i].type.name + \"(\" + str + \")\";\n    return str;\n}\n\n/**\nInstances of this class represent a match state of a node type's\n[content expression](https://prosemirror.net/docs/ref/#model.NodeSpec.content), and can be used to\nfind out whether further content matches here, and whether a given\nposition is a valid end of the node.\n*/\nclass ContentMatch {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    True when this match state represents a valid end of the node.\n    */\n    validEnd) {\n        this.validEnd = validEnd;\n        /**\n        @internal\n        */\n        this.next = [];\n        /**\n        @internal\n        */\n        this.wrapCache = [];\n    }\n    /**\n    @internal\n    */\n    static parse(string, nodeTypes) {\n        let stream = new TokenStream(string, nodeTypes);\n        if (stream.next == null)\n            return ContentMatch.empty;\n        let expr = parseExpr(stream);\n        if (stream.next)\n            stream.err(\"Unexpected trailing text\");\n        let match = dfa(nfa(expr));\n        checkForDeadEnds(match, stream);\n        return match;\n    }\n    /**\n    Match a node type, returning a match after that node if\n    successful.\n    */\n    matchType(type) {\n        for (let i = 0; i < this.next.length; i++)\n            if (this.next[i].type == type)\n                return this.next[i].next;\n        return null;\n    }\n    /**\n    Try to match a fragment. Returns the resulting match when\n    successful.\n    */\n    matchFragment(frag, start = 0, end = frag.childCount) {\n        let cur = this;\n        for (let i = start; cur && i < end; i++)\n            cur = cur.matchType(frag.child(i).type);\n        return cur;\n    }\n    /**\n    @internal\n    */\n    get inlineContent() {\n        return this.next.length != 0 && this.next[0].type.isInline;\n    }\n    /**\n    Get the first matching node type at this match position that can\n    be generated.\n    */\n    get defaultType() {\n        for (let i = 0; i < this.next.length; i++) {\n            let { type } = this.next[i];\n            if (!(type.isText || type.hasRequiredAttrs()))\n                return type;\n        }\n        return null;\n    }\n    /**\n    @internal\n    */\n    compatible(other) {\n        for (let i = 0; i < this.next.length; i++)\n            for (let j = 0; j < other.next.length; j++)\n                if (this.next[i].type == other.next[j].type)\n                    return true;\n        return false;\n    }\n    /**\n    Try to match the given fragment, and if that fails, see if it can\n    be made to match by inserting nodes in front of it. When\n    successful, return a fragment of inserted nodes (which may be\n    empty if nothing had to be inserted). When `toEnd` is true, only\n    return a fragment if the resulting match goes to the end of the\n    content expression.\n    */\n    fillBefore(after, toEnd = false, startIndex = 0) {\n        let seen = [this];\n        function search(match, types) {\n            let finished = match.matchFragment(after, startIndex);\n            if (finished && (!toEnd || finished.validEnd))\n                return Fragment.from(types.map(tp => tp.createAndFill()));\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n                    seen.push(next);\n                    let found = search(next, types.concat(type));\n                    if (found)\n                        return found;\n                }\n            }\n            return null;\n        }\n        return search(this, []);\n    }\n    /**\n    Find a set of wrapping node types that would allow a node of the\n    given type to appear at this position. The result may be empty\n    (when it fits directly) and will be null when no such wrapping\n    exists.\n    */\n    findWrapping(target) {\n        for (let i = 0; i < this.wrapCache.length; i += 2)\n            if (this.wrapCache[i] == target)\n                return this.wrapCache[i + 1];\n        let computed = this.computeWrapping(target);\n        this.wrapCache.push(target, computed);\n        return computed;\n    }\n    /**\n    @internal\n    */\n    computeWrapping(target) {\n        let seen = Object.create(null), active = [{ match: this, type: null, via: null }];\n        while (active.length) {\n            let current = active.shift(), match = current.match;\n            if (match.matchType(target)) {\n                let result = [];\n                for (let obj = current; obj.type; obj = obj.via)\n                    result.push(obj.type);\n                return result.reverse();\n            }\n            for (let i = 0; i < match.next.length; i++) {\n                let { type, next } = match.next[i];\n                if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || next.validEnd)) {\n                    active.push({ match: type.contentMatch, type, via: current });\n                    seen[type.name] = true;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n    The number of outgoing edges this node has in the finite\n    automaton that describes the content expression.\n    */\n    get edgeCount() {\n        return this.next.length;\n    }\n    /**\n    Get the _n_​th outgoing edge from this node in the finite\n    automaton that describes the content expression.\n    */\n    edge(n) {\n        if (n >= this.next.length)\n            throw new RangeError(`There's no ${n}th edge in this content match`);\n        return this.next[n];\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let seen = [];\n        function scan(m) {\n            seen.push(m);\n            for (let i = 0; i < m.next.length; i++)\n                if (seen.indexOf(m.next[i].next) == -1)\n                    scan(m.next[i].next);\n        }\n        scan(this);\n        return seen.map((m, i) => {\n            let out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n            for (let i = 0; i < m.next.length; i++)\n                out += (i ? \", \" : \"\") + m.next[i].type.name + \"->\" + seen.indexOf(m.next[i].next);\n            return out;\n        }).join(\"\\n\");\n    }\n}\n/**\n@internal\n*/\nContentMatch.empty = new ContentMatch(true);\nclass TokenStream {\n    constructor(string, nodeTypes) {\n        this.string = string;\n        this.nodeTypes = nodeTypes;\n        this.inline = null;\n        this.pos = 0;\n        this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n        if (this.tokens[this.tokens.length - 1] == \"\")\n            this.tokens.pop();\n        if (this.tokens[0] == \"\")\n            this.tokens.shift();\n    }\n    get next() { return this.tokens[this.pos]; }\n    eat(tok) { return this.next == tok && (this.pos++ || true); }\n    err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\"); }\n}\nfunction parseExpr(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSeq(stream));\n    } while (stream.eat(\"|\"));\n    return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n}\nfunction parseExprSeq(stream) {\n    let exprs = [];\n    do {\n        exprs.push(parseExprSubscript(stream));\n    } while (stream.next && stream.next != \")\" && stream.next != \"|\");\n    return exprs.length == 1 ? exprs[0] : { type: \"seq\", exprs };\n}\nfunction parseExprSubscript(stream) {\n    let expr = parseExprAtom(stream);\n    for (;;) {\n        if (stream.eat(\"+\"))\n            expr = { type: \"plus\", expr };\n        else if (stream.eat(\"*\"))\n            expr = { type: \"star\", expr };\n        else if (stream.eat(\"?\"))\n            expr = { type: \"opt\", expr };\n        else if (stream.eat(\"{\"))\n            expr = parseExprRange(stream, expr);\n        else\n            break;\n    }\n    return expr;\n}\nfunction parseNum(stream) {\n    if (/\\D/.test(stream.next))\n        stream.err(\"Expected number, got '\" + stream.next + \"'\");\n    let result = Number(stream.next);\n    stream.pos++;\n    return result;\n}\nfunction parseExprRange(stream, expr) {\n    let min = parseNum(stream), max = min;\n    if (stream.eat(\",\")) {\n        if (stream.next != \"}\")\n            max = parseNum(stream);\n        else\n            max = -1;\n    }\n    if (!stream.eat(\"}\"))\n        stream.err(\"Unclosed braced range\");\n    return { type: \"range\", min, max, expr };\n}\nfunction resolveName(stream, name) {\n    let types = stream.nodeTypes, type = types[name];\n    if (type)\n        return [type];\n    let result = [];\n    for (let typeName in types) {\n        let type = types[typeName];\n        if (type.isInGroup(name))\n            result.push(type);\n    }\n    if (result.length == 0)\n        stream.err(\"No node type or group '\" + name + \"' found\");\n    return result;\n}\nfunction parseExprAtom(stream) {\n    if (stream.eat(\"(\")) {\n        let expr = parseExpr(stream);\n        if (!stream.eat(\")\"))\n            stream.err(\"Missing closing paren\");\n        return expr;\n    }\n    else if (!/\\W/.test(stream.next)) {\n        let exprs = resolveName(stream, stream.next).map(type => {\n            if (stream.inline == null)\n                stream.inline = type.isInline;\n            else if (stream.inline != type.isInline)\n                stream.err(\"Mixing inline and block content\");\n            return { type: \"name\", value: type };\n        });\n        stream.pos++;\n        return exprs.length == 1 ? exprs[0] : { type: \"choice\", exprs };\n    }\n    else {\n        stream.err(\"Unexpected token '\" + stream.next + \"'\");\n    }\n}\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n    let nfa = [[]];\n    connect(compile(expr, 0), node());\n    return nfa;\n    function node() { return nfa.push([]) - 1; }\n    function edge(from, to, term) {\n        let edge = { term, to };\n        nfa[from].push(edge);\n        return edge;\n    }\n    function connect(edges, to) {\n        edges.forEach(edge => edge.to = to);\n    }\n    function compile(expr, from) {\n        if (expr.type == \"choice\") {\n            return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), []);\n        }\n        else if (expr.type == \"seq\") {\n            for (let i = 0;; i++) {\n                let next = compile(expr.exprs[i], from);\n                if (i == expr.exprs.length - 1)\n                    return next;\n                connect(next, from = node());\n            }\n        }\n        else if (expr.type == \"star\") {\n            let loop = node();\n            edge(from, loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"plus\") {\n            let loop = node();\n            connect(compile(expr.expr, from), loop);\n            connect(compile(expr.expr, loop), loop);\n            return [edge(loop)];\n        }\n        else if (expr.type == \"opt\") {\n            return [edge(from)].concat(compile(expr.expr, from));\n        }\n        else if (expr.type == \"range\") {\n            let cur = from;\n            for (let i = 0; i < expr.min; i++) {\n                let next = node();\n                connect(compile(expr.expr, cur), next);\n                cur = next;\n            }\n            if (expr.max == -1) {\n                connect(compile(expr.expr, cur), cur);\n            }\n            else {\n                for (let i = expr.min; i < expr.max; i++) {\n                    let next = node();\n                    edge(cur, next);\n                    connect(compile(expr.expr, cur), next);\n                    cur = next;\n                }\n            }\n            return [edge(cur)];\n        }\n        else if (expr.type == \"name\") {\n            return [edge(from, undefined, expr.value)];\n        }\n        else {\n            throw new Error(\"Unknown expr type\");\n        }\n    }\n}\nfunction cmp(a, b) { return b - a; }\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n    let result = [];\n    scan(node);\n    return result.sort(cmp);\n    function scan(node) {\n        let edges = nfa[node];\n        if (edges.length == 1 && !edges[0].term)\n            return scan(edges[0].to);\n        result.push(node);\n        for (let i = 0; i < edges.length; i++) {\n            let { term, to } = edges[i];\n            if (!term && result.indexOf(to) == -1)\n                scan(to);\n        }\n    }\n}\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n    let labeled = Object.create(null);\n    return explore(nullFrom(nfa, 0));\n    function explore(states) {\n        let out = [];\n        states.forEach(node => {\n            nfa[node].forEach(({ term, to }) => {\n                if (!term)\n                    return;\n                let set;\n                for (let i = 0; i < out.length; i++)\n                    if (out[i][0] == term)\n                        set = out[i][1];\n                nullFrom(nfa, to).forEach(node => {\n                    if (!set)\n                        out.push([term, set = []]);\n                    if (set.indexOf(node) == -1)\n                        set.push(node);\n                });\n            });\n        });\n        let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n        for (let i = 0; i < out.length; i++) {\n            let states = out[i][1].sort(cmp);\n            state.next.push({ type: out[i][0], next: labeled[states.join(\",\")] || explore(states) });\n        }\n        return state;\n    }\n}\nfunction checkForDeadEnds(match, stream) {\n    for (let i = 0, work = [match]; i < work.length; i++) {\n        let state = work[i], dead = !state.validEnd, nodes = [];\n        for (let j = 0; j < state.next.length; j++) {\n            let { type, next } = state.next[j];\n            nodes.push(type.name);\n            if (dead && !(type.isText || type.hasRequiredAttrs()))\n                dead = false;\n            if (work.indexOf(next) == -1)\n                work.push(next);\n        }\n        if (dead)\n            stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\");\n    }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n    let defaults = Object.create(null);\n    for (let attrName in attrs) {\n        let attr = attrs[attrName];\n        if (!attr.hasDefault)\n            return null;\n        defaults[attrName] = attr.default;\n    }\n    return defaults;\n}\nfunction computeAttrs(attrs, value) {\n    let built = Object.create(null);\n    for (let name in attrs) {\n        let given = value && value[name];\n        if (given === undefined) {\n            let attr = attrs[name];\n            if (attr.hasDefault)\n                given = attr.default;\n            else\n                throw new RangeError(\"No value supplied for attribute \" + name);\n        }\n        built[name] = given;\n    }\n    return built;\n}\nfunction checkAttrs(attrs, values, type, name) {\n    for (let name in values)\n        if (!(name in attrs))\n            throw new RangeError(`Unsupported attribute ${name} for ${type} of type ${name}`);\n    for (let name in attrs) {\n        let attr = attrs[name];\n        if (attr.validate)\n            attr.validate(values[name]);\n    }\n}\nfunction initAttrs(typeName, attrs) {\n    let result = Object.create(null);\n    if (attrs)\n        for (let name in attrs)\n            result[name] = new Attribute(typeName, name, attrs[name]);\n    return result;\n}\n/**\nNode types are objects allocated once per `Schema` and used to\n[tag](https://prosemirror.net/docs/ref/#model.Node.type) `Node` instances. They contain information\nabout the node type, such as its name and what kind of node it\nrepresents.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name the node type has in this schema.\n    */\n    name, \n    /**\n    A link back to the `Schema` the node type belongs to.\n    */\n    schema, \n    /**\n    The spec that this type is based on\n    */\n    spec) {\n        this.name = name;\n        this.schema = schema;\n        this.spec = spec;\n        /**\n        The set of marks allowed in this node. `null` means all marks\n        are allowed.\n        */\n        this.markSet = null;\n        this.groups = spec.group ? spec.group.split(\" \") : [];\n        this.attrs = initAttrs(name, spec.attrs);\n        this.defaultAttrs = defaultAttrs(this.attrs);\n        this.contentMatch = null;\n        this.inlineContent = null;\n        this.isBlock = !(spec.inline || name == \"text\");\n        this.isText = name == \"text\";\n    }\n    /**\n    True if this is an inline type.\n    */\n    get isInline() { return !this.isBlock; }\n    /**\n    True if this is a textblock type, a block that contains inline\n    content.\n    */\n    get isTextblock() { return this.isBlock && this.inlineContent; }\n    /**\n    True for node types that allow no content.\n    */\n    get isLeaf() { return this.contentMatch == ContentMatch.empty; }\n    /**\n    True when this node is an atom, i.e. when it does not have\n    directly editable content.\n    */\n    get isAtom() { return this.isLeaf || !!this.spec.atom; }\n    /**\n    Return true when this node type is part of the given\n    [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).\n    */\n    isInGroup(group) {\n        return this.groups.indexOf(group) > -1;\n    }\n    /**\n    The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.\n    */\n    get whitespace() {\n        return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\");\n    }\n    /**\n    Tells you whether this node type has any required attributes.\n    */\n    hasRequiredAttrs() {\n        for (let n in this.attrs)\n            if (this.attrs[n].isRequired)\n                return true;\n        return false;\n    }\n    /**\n    Indicates whether this node allows some of the same content as\n    the given node type.\n    */\n    compatibleContent(other) {\n        return this == other || this.contentMatch.compatible(other.contentMatch);\n    }\n    /**\n    @internal\n    */\n    computeAttrs(attrs) {\n        if (!attrs && this.defaultAttrs)\n            return this.defaultAttrs;\n        else\n            return computeAttrs(this.attrs, attrs);\n    }\n    /**\n    Create a `Node` of this type. The given attributes are\n    checked and defaulted (you can pass `null` to use the type's\n    defaults entirely, if no required attributes exist). `content`\n    may be a `Fragment`, a node, an array of nodes, or\n    `null`. Similarly `marks` may be `null` to default to the empty\n    set of marks.\n    */\n    create(attrs = null, content, marks) {\n        if (this.isText)\n            throw new Error(\"NodeType.create can't construct text nodes\");\n        return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content\n    against the node type's content restrictions, and throw an error\n    if it doesn't match.\n    */\n    createChecked(attrs = null, content, marks) {\n        content = Fragment.from(content);\n        this.checkContent(content);\n        return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks));\n    }\n    /**\n    Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is\n    necessary to add nodes to the start or end of the given fragment\n    to make it fit the node. If no fitting wrapping can be found,\n    return null. Note that, due to the fact that required nodes can\n    always be created, this will always succeed if you pass null or\n    `Fragment.empty` as content.\n    */\n    createAndFill(attrs = null, content, marks) {\n        attrs = this.computeAttrs(attrs);\n        content = Fragment.from(content);\n        if (content.size) {\n            let before = this.contentMatch.fillBefore(content);\n            if (!before)\n                return null;\n            content = before.append(content);\n        }\n        let matched = this.contentMatch.matchFragment(content);\n        let after = matched && matched.fillBefore(Fragment.empty, true);\n        if (!after)\n            return null;\n        return new Node(this, attrs, content.append(after), Mark.setFrom(marks));\n    }\n    /**\n    Returns true if the given fragment is valid content for this node\n    type.\n    */\n    validContent(content) {\n        let result = this.contentMatch.matchFragment(content);\n        if (!result || !result.validEnd)\n            return false;\n        for (let i = 0; i < content.childCount; i++)\n            if (!this.allowsMarks(content.child(i).marks))\n                return false;\n        return true;\n    }\n    /**\n    Throws a RangeError if the given fragment is not valid content for this\n    node type.\n    @internal\n    */\n    checkContent(content) {\n        if (!this.validContent(content))\n            throw new RangeError(`Invalid content for node ${this.name}: ${content.toString().slice(0, 50)}`);\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"node\", this.name);\n    }\n    /**\n    Check whether the given mark type is allowed in this node.\n    */\n    allowsMarkType(markType) {\n        return this.markSet == null || this.markSet.indexOf(markType) > -1;\n    }\n    /**\n    Test whether the given set of marks are allowed in this node.\n    */\n    allowsMarks(marks) {\n        if (this.markSet == null)\n            return true;\n        for (let i = 0; i < marks.length; i++)\n            if (!this.allowsMarkType(marks[i].type))\n                return false;\n        return true;\n    }\n    /**\n    Removes the marks that are not allowed in this node from the given set.\n    */\n    allowedMarks(marks) {\n        if (this.markSet == null)\n            return marks;\n        let copy;\n        for (let i = 0; i < marks.length; i++) {\n            if (!this.allowsMarkType(marks[i].type)) {\n                if (!copy)\n                    copy = marks.slice(0, i);\n            }\n            else if (copy) {\n                copy.push(marks[i]);\n            }\n        }\n        return !copy ? marks : copy.length ? copy : Mark.none;\n    }\n    /**\n    @internal\n    */\n    static compile(nodes, schema) {\n        let result = Object.create(null);\n        nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec));\n        let topType = schema.spec.topNode || \"doc\";\n        if (!result[topType])\n            throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\");\n        if (!result.text)\n            throw new RangeError(\"Every schema needs a 'text' type\");\n        for (let _ in result.text.attrs)\n            throw new RangeError(\"The text node type should not have attributes\");\n        return result;\n    }\n}\nfunction validateType(typeName, attrName, type) {\n    let types = type.split(\"|\");\n    return (value) => {\n        let name = value === null ? \"null\" : typeof value;\n        if (types.indexOf(name) < 0)\n            throw new RangeError(`Expected value of type ${types} for attribute ${attrName} on type ${typeName}, got ${name}`);\n    };\n}\n// Attribute descriptors\nclass Attribute {\n    constructor(typeName, attrName, options) {\n        this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n        this.default = options.default;\n        this.validate = typeof options.validate == \"string\" ? validateType(typeName, attrName, options.validate) : options.validate;\n    }\n    get isRequired() {\n        return !this.hasDefault;\n    }\n}\n// Marks\n/**\nLike nodes, marks (which are associated with nodes to signify\nthings like emphasis or being part of a link) are\n[tagged](https://prosemirror.net/docs/ref/#model.Mark.type) with type objects, which are\ninstantiated once per `Schema`.\n*/\nclass MarkType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the mark type.\n    */\n    name, \n    /**\n    @internal\n    */\n    rank, \n    /**\n    The schema that this mark type instance is part of.\n    */\n    schema, \n    /**\n    The spec on which the type is based.\n    */\n    spec) {\n        this.name = name;\n        this.rank = rank;\n        this.schema = schema;\n        this.spec = spec;\n        this.attrs = initAttrs(name, spec.attrs);\n        this.excluded = null;\n        let defaults = defaultAttrs(this.attrs);\n        this.instance = defaults ? new Mark(this, defaults) : null;\n    }\n    /**\n    Create a mark of this type. `attrs` may be `null` or an object\n    containing only some of the mark's attributes. The others, if\n    they have defaults, will be added.\n    */\n    create(attrs = null) {\n        if (!attrs && this.instance)\n            return this.instance;\n        return new Mark(this, computeAttrs(this.attrs, attrs));\n    }\n    /**\n    @internal\n    */\n    static compile(marks, schema) {\n        let result = Object.create(null), rank = 0;\n        marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec));\n        return result;\n    }\n    /**\n    When there is a mark of this type in the given set, a new set\n    without it is returned. Otherwise, the input set is returned.\n    */\n    removeFromSet(set) {\n        for (var i = 0; i < set.length; i++)\n            if (set[i].type == this) {\n                set = set.slice(0, i).concat(set.slice(i + 1));\n                i--;\n            }\n        return set;\n    }\n    /**\n    Tests whether there is a mark of this type in the given set.\n    */\n    isInSet(set) {\n        for (let i = 0; i < set.length; i++)\n            if (set[i].type == this)\n                return set[i];\n    }\n    /**\n    @internal\n    */\n    checkAttrs(attrs) {\n        checkAttrs(this.attrs, attrs, \"mark\", this.name);\n    }\n    /**\n    Queries whether a given mark type is\n    [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.\n    */\n    excludes(other) {\n        return this.excluded.indexOf(other) > -1;\n    }\n}\n/**\nA document schema. Holds [node](https://prosemirror.net/docs/ref/#model.NodeType) and [mark\ntype](https://prosemirror.net/docs/ref/#model.MarkType) objects for the nodes and marks that may\noccur in conforming documents, and provides functionality for\ncreating and deserializing such documents.\n\nWhen given, the type parameters provide the names of the nodes and\nmarks in this schema.\n*/\nclass Schema {\n    /**\n    Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).\n    */\n    constructor(spec) {\n        /**\n        The [linebreak\n        replacement](https://prosemirror.net/docs/ref/#model.NodeSpec.linebreakReplacement) node defined\n        in this schema, if any.\n        */\n        this.linebreakReplacement = null;\n        /**\n        An object for storing whatever values modules may want to\n        compute and cache per schema. (If you want to store something\n        in it, try to use property names unlikely to clash.)\n        */\n        this.cached = Object.create(null);\n        let instanceSpec = this.spec = {};\n        for (let prop in spec)\n            instanceSpec[prop] = spec[prop];\n        instanceSpec.nodes = OrderedMap.from(spec.nodes),\n            instanceSpec.marks = OrderedMap.from(spec.marks || {}),\n            this.nodes = NodeType.compile(this.spec.nodes, this);\n        this.marks = MarkType.compile(this.spec.marks, this);\n        let contentExprCache = Object.create(null);\n        for (let prop in this.nodes) {\n            if (prop in this.marks)\n                throw new RangeError(prop + \" can not be both a node and a mark\");\n            let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n            type.contentMatch = contentExprCache[contentExpr] ||\n                (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n            type.inlineContent = type.contentMatch.inlineContent;\n            if (type.spec.linebreakReplacement) {\n                if (this.linebreakReplacement)\n                    throw new RangeError(\"Multiple linebreak nodes defined\");\n                if (!type.isInline || !type.isLeaf)\n                    throw new RangeError(\"Linebreak replacement nodes must be inline leaf nodes\");\n                this.linebreakReplacement = type;\n            }\n            type.markSet = markExpr == \"_\" ? null :\n                markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n                    markExpr == \"\" || !type.inlineContent ? [] : null;\n        }\n        for (let prop in this.marks) {\n            let type = this.marks[prop], excl = type.spec.excludes;\n            type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n        }\n        this.nodeFromJSON = this.nodeFromJSON.bind(this);\n        this.markFromJSON = this.markFromJSON.bind(this);\n        this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n        this.cached.wrappings = Object.create(null);\n    }\n    /**\n    Create a node in this schema. The `type` may be a string or a\n    `NodeType` instance. Attributes will be extended with defaults,\n    `content` may be a `Fragment`, `null`, a `Node`, or an array of\n    nodes.\n    */\n    node(type, attrs = null, content, marks) {\n        if (typeof type == \"string\")\n            type = this.nodeType(type);\n        else if (!(type instanceof NodeType))\n            throw new RangeError(\"Invalid node type: \" + type);\n        else if (type.schema != this)\n            throw new RangeError(\"Node type from different schema used (\" + type.name + \")\");\n        return type.createChecked(attrs, content, marks);\n    }\n    /**\n    Create a text node in the schema. Empty text nodes are not\n    allowed.\n    */\n    text(text, marks) {\n        let type = this.nodes.text;\n        return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks));\n    }\n    /**\n    Create a mark with the given type and attributes.\n    */\n    mark(type, attrs) {\n        if (typeof type == \"string\")\n            type = this.marks[type];\n        return type.create(attrs);\n    }\n    /**\n    Deserialize a node from its JSON representation. This method is\n    bound.\n    */\n    nodeFromJSON(json) {\n        return Node.fromJSON(this, json);\n    }\n    /**\n    Deserialize a mark from its JSON representation. This method is\n    bound.\n    */\n    markFromJSON(json) {\n        return Mark.fromJSON(this, json);\n    }\n    /**\n    @internal\n    */\n    nodeType(name) {\n        let found = this.nodes[name];\n        if (!found)\n            throw new RangeError(\"Unknown node type: \" + name);\n        return found;\n    }\n}\nfunction gatherMarks(schema, marks) {\n    let found = [];\n    for (let i = 0; i < marks.length; i++) {\n        let name = marks[i], mark = schema.marks[name], ok = mark;\n        if (mark) {\n            found.push(mark);\n        }\n        else {\n            for (let prop in schema.marks) {\n                let mark = schema.marks[prop];\n                if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n                    found.push(ok = mark);\n            }\n        }\n        if (!ok)\n            throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\");\n    }\n    return found;\n}\n\nfunction isTagRule(rule) { return rule.tag != null; }\nfunction isStyleRule(rule) { return rule.style != null; }\n/**\nA DOM parser represents a strategy for parsing DOM content into a\nProseMirror document conforming to a given schema. Its behavior is\ndefined by an array of [rules](https://prosemirror.net/docs/ref/#model.ParseRule).\n*/\nclass DOMParser {\n    /**\n    Create a parser that targets the given schema, using the given\n    parsing rules.\n    */\n    constructor(\n    /**\n    The schema into which the parser parses.\n    */\n    schema, \n    /**\n    The set of [parse rules](https://prosemirror.net/docs/ref/#model.ParseRule) that the parser\n    uses, in order of precedence.\n    */\n    rules) {\n        this.schema = schema;\n        this.rules = rules;\n        /**\n        @internal\n        */\n        this.tags = [];\n        /**\n        @internal\n        */\n        this.styles = [];\n        let matchedStyles = this.matchedStyles = [];\n        rules.forEach(rule => {\n            if (isTagRule(rule)) {\n                this.tags.push(rule);\n            }\n            else if (isStyleRule(rule)) {\n                let prop = /[^=]*/.exec(rule.style)[0];\n                if (matchedStyles.indexOf(prop) < 0)\n                    matchedStyles.push(prop);\n                this.styles.push(rule);\n            }\n        });\n        // Only normalize list elements when lists in the schema can't directly contain themselves\n        this.normalizeLists = !this.tags.some(r => {\n            if (!/^(ul|ol)\\b/.test(r.tag) || !r.node)\n                return false;\n            let node = schema.nodes[r.node];\n            return node.contentMatch.matchType(node);\n        });\n    }\n    /**\n    Parse a document from the content of a DOM node.\n    */\n    parse(dom, options = {}) {\n        let context = new ParseContext(this, options, false);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return context.finish();\n    }\n    /**\n    Parses the content of the given DOM node, like\n    [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of\n    options. But unlike that method, which produces a whole node,\n    this one returns a slice that is open at the sides, meaning that\n    the schema constraints aren't applied to the start of nodes to\n    the left of the input and the end of nodes at the end.\n    */\n    parseSlice(dom, options = {}) {\n        let context = new ParseContext(this, options, true);\n        context.addAll(dom, Mark.none, options.from, options.to);\n        return Slice.maxOpen(context.finish());\n    }\n    /**\n    @internal\n    */\n    matchTag(dom, context, after) {\n        for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n            let rule = this.tags[i];\n            if (matches(dom, rule.tag) &&\n                (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n                (!rule.context || context.matchesContext(rule.context))) {\n                if (rule.getAttrs) {\n                    let result = rule.getAttrs(dom);\n                    if (result === false)\n                        continue;\n                    rule.attrs = result || undefined;\n                }\n                return rule;\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    matchStyle(prop, value, context, after) {\n        for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n            let rule = this.styles[i], style = rule.style;\n            if (style.indexOf(prop) != 0 ||\n                rule.context && !context.matchesContext(rule.context) ||\n                // Test that the style string either precisely matches the prop,\n                // or has an '=' sign after the prop, followed by the given\n                // value.\n                style.length > prop.length &&\n                    (style.charCodeAt(prop.length) != 61 || style.slice(prop.length + 1) != value))\n                continue;\n            if (rule.getAttrs) {\n                let result = rule.getAttrs(value);\n                if (result === false)\n                    continue;\n                rule.attrs = result || undefined;\n            }\n            return rule;\n        }\n    }\n    /**\n    @internal\n    */\n    static schemaRules(schema) {\n        let result = [];\n        function insert(rule) {\n            let priority = rule.priority == null ? 50 : rule.priority, i = 0;\n            for (; i < result.length; i++) {\n                let next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n                if (nextPriority < priority)\n                    break;\n            }\n            result.splice(i, 0, rule);\n        }\n        for (let name in schema.marks) {\n            let rules = schema.marks[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.mark || rule.ignore || rule.clearMark))\n                        rule.mark = name;\n                });\n        }\n        for (let name in schema.nodes) {\n            let rules = schema.nodes[name].spec.parseDOM;\n            if (rules)\n                rules.forEach(rule => {\n                    insert(rule = copy(rule));\n                    if (!(rule.node || rule.ignore || rule.mark))\n                        rule.node = name;\n                });\n        }\n        return result;\n    }\n    /**\n    Construct a DOM parser using the parsing rules listed in a\n    schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by\n    [priority](https://prosemirror.net/docs/ref/#model.ParseRule.priority).\n    */\n    static fromSchema(schema) {\n        return schema.cached.domParser ||\n            (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)));\n    }\n}\nconst blockTags = {\n    address: true, article: true, aside: true, blockquote: true, canvas: true,\n    dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n    footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n    h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n    output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\nconst ignoreTags = {\n    head: true, noscript: true, object: true, script: true, style: true, title: true\n};\nconst listTags = { ol: true, ul: true };\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n    if (preserveWhitespace != null)\n        return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n            (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0);\n    return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT;\n}\nclass NodeContext {\n    constructor(type, attrs, marks, solid, match, options) {\n        this.type = type;\n        this.attrs = attrs;\n        this.marks = marks;\n        this.solid = solid;\n        this.options = options;\n        this.content = [];\n        // Marks applied to the node's children\n        this.activeMarks = Mark.none;\n        this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n    }\n    findWrapping(node) {\n        if (!this.match) {\n            if (!this.type)\n                return [];\n            let fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n            if (fill) {\n                this.match = this.type.contentMatch.matchFragment(fill);\n            }\n            else {\n                let start = this.type.contentMatch, wrap;\n                if (wrap = start.findWrapping(node.type)) {\n                    this.match = start;\n                    return wrap;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return this.match.findWrapping(node.type);\n    }\n    finish(openEnd) {\n        if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n            let last = this.content[this.content.length - 1], m;\n            if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n                let text = last;\n                if (last.text.length == m[0].length)\n                    this.content.pop();\n                else\n                    this.content[this.content.length - 1] = text.withText(text.text.slice(0, text.text.length - m[0].length));\n            }\n        }\n        let content = Fragment.from(this.content);\n        if (!openEnd && this.match)\n            content = content.append(this.match.fillBefore(Fragment.empty, true));\n        return this.type ? this.type.create(this.attrs, content, this.marks) : content;\n    }\n    inlineContext(node) {\n        if (this.type)\n            return this.type.inlineContent;\n        if (this.content.length)\n            return this.content[0].isInline;\n        return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase());\n    }\n}\nclass ParseContext {\n    constructor(\n    // The parser we are using.\n    parser, \n    // The options passed to this parse.\n    options, isOpen) {\n        this.parser = parser;\n        this.options = options;\n        this.isOpen = isOpen;\n        this.open = 0;\n        this.localPreserveWS = false;\n        let topNode = options.topNode, topContext;\n        let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (isOpen ? OPT_OPEN_LEFT : 0);\n        if (topNode)\n            topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, true, options.topMatch || topNode.type.contentMatch, topOptions);\n        else if (isOpen)\n            topContext = new NodeContext(null, null, Mark.none, true, null, topOptions);\n        else\n            topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, true, null, topOptions);\n        this.nodes = [topContext];\n        this.find = options.findPositions;\n        this.needsBlock = false;\n    }\n    get top() {\n        return this.nodes[this.open];\n    }\n    // Add a DOM node to the content. Text is inserted as text node,\n    // otherwise, the node is passed to `addElement` or, if it has a\n    // `style` attribute, `addElementWithStyles`.\n    addDOM(dom, marks) {\n        if (dom.nodeType == 3)\n            this.addTextNode(dom, marks);\n        else if (dom.nodeType == 1)\n            this.addElement(dom, marks);\n    }\n    addTextNode(dom, marks) {\n        let value = dom.nodeValue;\n        let top = this.top, preserveWS = (top.options & OPT_PRESERVE_WS_FULL) ? \"full\"\n            : this.localPreserveWS || (top.options & OPT_PRESERVE_WS) > 0;\n        if (preserveWS === \"full\" ||\n            top.inlineContext(dom) ||\n            /[^ \\t\\r\\n\\u000c]/.test(value)) {\n            if (!preserveWS) {\n                value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n                // If this starts with whitespace, and there is no node before it, or\n                // a hard break, or a text node that ends with whitespace, strip the\n                // leading space.\n                if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n                    let nodeBefore = top.content[top.content.length - 1];\n                    let domNodeBefore = dom.previousSibling;\n                    if (!nodeBefore ||\n                        (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n                        (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n                        value = value.slice(1);\n                }\n            }\n            else if (preserveWS !== \"full\") {\n                value = value.replace(/\\r?\\n|\\r/g, \" \");\n            }\n            else {\n                value = value.replace(/\\r\\n?/g, \"\\n\");\n            }\n            if (value)\n                this.insertNode(this.parser.schema.text(value), marks);\n            this.findInText(dom);\n        }\n        else {\n            this.findInside(dom);\n        }\n    }\n    // Try to find a handler for the given tag and use that to parse. If\n    // none is found, the element's content nodes are added directly.\n    addElement(dom, marks, matchAfter) {\n        let outerWS = this.localPreserveWS, top = this.top;\n        if (dom.tagName == \"PRE\" || /pre/.test(dom.style && dom.style.whiteSpace))\n            this.localPreserveWS = true;\n        let name = dom.nodeName.toLowerCase(), ruleID;\n        if (listTags.hasOwnProperty(name) && this.parser.normalizeLists)\n            normalizeList(dom);\n        let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n            (ruleID = this.parser.matchTag(dom, this, matchAfter));\n        out: if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n            this.findInside(dom);\n            this.ignoreFallback(dom, marks);\n        }\n        else if (!rule || rule.skip || rule.closeParent) {\n            if (rule && rule.closeParent)\n                this.open = Math.max(0, this.open - 1);\n            else if (rule && rule.skip.nodeType)\n                dom = rule.skip;\n            let sync, oldNeedsBlock = this.needsBlock;\n            if (blockTags.hasOwnProperty(name)) {\n                if (top.content.length && top.content[0].isInline && this.open) {\n                    this.open--;\n                    top = this.top;\n                }\n                sync = true;\n                if (!top.type)\n                    this.needsBlock = true;\n            }\n            else if (!dom.firstChild) {\n                this.leafFallback(dom, marks);\n                break out;\n            }\n            let innerMarks = rule && rule.skip ? marks : this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addAll(dom, innerMarks);\n            if (sync)\n                this.sync(top);\n            this.needsBlock = oldNeedsBlock;\n        }\n        else {\n            let innerMarks = this.readStyles(dom, marks);\n            if (innerMarks)\n                this.addElementByRule(dom, rule, innerMarks, rule.consuming === false ? ruleID : undefined);\n        }\n        this.localPreserveWS = outerWS;\n    }\n    // Called for leaf DOM nodes that would otherwise be ignored\n    leafFallback(dom, marks) {\n        if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n            this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"), marks);\n    }\n    // Called for ignored nodes\n    ignoreFallback(dom, marks) {\n        // Ignored BR nodes should at least create an inline context\n        if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n            this.findPlace(this.parser.schema.text(\"-\"), marks);\n    }\n    // Run any style parser associated with the node's styles. Either\n    // return an updated array of marks, or null to indicate some of the\n    // styles had a rule with `ignore` set.\n    readStyles(dom, marks) {\n        let styles = dom.style;\n        // Because many properties will only show up in 'normalized' form\n        // in `style.item` (i.e. text-decoration becomes\n        // text-decoration-line, text-decoration-color, etc), we directly\n        // query the styles mentioned in our rules instead of iterating\n        // over the items.\n        if (styles && styles.length)\n            for (let i = 0; i < this.parser.matchedStyles.length; i++) {\n                let name = this.parser.matchedStyles[i], value = styles.getPropertyValue(name);\n                if (value)\n                    for (let after = undefined;;) {\n                        let rule = this.parser.matchStyle(name, value, this, after);\n                        if (!rule)\n                            break;\n                        if (rule.ignore)\n                            return null;\n                        if (rule.clearMark)\n                            marks = marks.filter(m => !rule.clearMark(m));\n                        else\n                            marks = marks.concat(this.parser.schema.marks[rule.mark].create(rule.attrs));\n                        if (rule.consuming === false)\n                            after = rule;\n                        else\n                            break;\n                    }\n            }\n        return marks;\n    }\n    // Look up a handler for the given node. If none are found, return\n    // false. Otherwise, apply it, use its return value to drive the way\n    // the node's content is wrapped, and return true.\n    addElementByRule(dom, rule, marks, continueAfter) {\n        let sync, nodeType;\n        if (rule.node) {\n            nodeType = this.parser.schema.nodes[rule.node];\n            if (!nodeType.isLeaf) {\n                let inner = this.enter(nodeType, rule.attrs || null, marks, rule.preserveWhitespace);\n                if (inner) {\n                    sync = true;\n                    marks = inner;\n                }\n            }\n            else if (!this.insertNode(nodeType.create(rule.attrs), marks)) {\n                this.leafFallback(dom, marks);\n            }\n        }\n        else {\n            let markType = this.parser.schema.marks[rule.mark];\n            marks = marks.concat(markType.create(rule.attrs));\n        }\n        let startIn = this.top;\n        if (nodeType && nodeType.isLeaf) {\n            this.findInside(dom);\n        }\n        else if (continueAfter) {\n            this.addElement(dom, marks, continueAfter);\n        }\n        else if (rule.getContent) {\n            this.findInside(dom);\n            rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node, marks));\n        }\n        else {\n            let contentDOM = dom;\n            if (typeof rule.contentElement == \"string\")\n                contentDOM = dom.querySelector(rule.contentElement);\n            else if (typeof rule.contentElement == \"function\")\n                contentDOM = rule.contentElement(dom);\n            else if (rule.contentElement)\n                contentDOM = rule.contentElement;\n            this.findAround(dom, contentDOM, true);\n            this.addAll(contentDOM, marks);\n            this.findAround(dom, contentDOM, false);\n        }\n        if (sync && this.sync(startIn))\n            this.open--;\n    }\n    // Add all child nodes between `startIndex` and `endIndex` (or the\n    // whole node, if not given). If `sync` is passed, use it to\n    // synchronize after every block element.\n    addAll(parent, marks, startIndex, endIndex) {\n        let index = startIndex || 0;\n        for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild, end = endIndex == null ? null : parent.childNodes[endIndex]; dom != end; dom = dom.nextSibling, ++index) {\n            this.findAtPoint(parent, index);\n            this.addDOM(dom, marks);\n        }\n        this.findAtPoint(parent, index);\n    }\n    // Try to find a way to fit the given node type into the current\n    // context. May add intermediate wrappers and/or leave non-solid\n    // nodes that we're in.\n    findPlace(node, marks) {\n        let route, sync;\n        for (let depth = this.open; depth >= 0; depth--) {\n            let cx = this.nodes[depth];\n            let found = cx.findWrapping(node);\n            if (found && (!route || route.length > found.length)) {\n                route = found;\n                sync = cx;\n                if (!found.length)\n                    break;\n            }\n            if (cx.solid)\n                break;\n        }\n        if (!route)\n            return null;\n        this.sync(sync);\n        for (let i = 0; i < route.length; i++)\n            marks = this.enterInner(route[i], null, marks, false);\n        return marks;\n    }\n    // Try to insert the given node, adjusting the context when needed.\n    insertNode(node, marks) {\n        if (node.isInline && this.needsBlock && !this.top.type) {\n            let block = this.textblockFromContext();\n            if (block)\n                marks = this.enterInner(block, null, marks);\n        }\n        let innerMarks = this.findPlace(node, marks);\n        if (innerMarks) {\n            this.closeExtra();\n            let top = this.top;\n            if (top.match)\n                top.match = top.match.matchType(node.type);\n            let nodeMarks = Mark.none;\n            for (let m of innerMarks.concat(node.marks))\n                if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, node.type))\n                    nodeMarks = m.addToSet(nodeMarks);\n            top.content.push(node.mark(nodeMarks));\n            return true;\n        }\n        return false;\n    }\n    // Try to start a node of the given type, adjusting the context when\n    // necessary.\n    enter(type, attrs, marks, preserveWS) {\n        let innerMarks = this.findPlace(type.create(attrs), marks);\n        if (innerMarks)\n            innerMarks = this.enterInner(type, attrs, marks, true, preserveWS);\n        return innerMarks;\n    }\n    // Open a node of the given type\n    enterInner(type, attrs, marks, solid = false, preserveWS) {\n        this.closeExtra();\n        let top = this.top;\n        top.match = top.match && top.match.matchType(type);\n        let options = wsOptionsFor(type, preserveWS, top.options);\n        if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0)\n            options |= OPT_OPEN_LEFT;\n        let applyMarks = Mark.none;\n        marks = marks.filter(m => {\n            if (top.type ? top.type.allowsMarkType(m.type) : markMayApply(m.type, type)) {\n                applyMarks = m.addToSet(applyMarks);\n                return false;\n            }\n            return true;\n        });\n        this.nodes.push(new NodeContext(type, attrs, applyMarks, solid, null, options));\n        this.open++;\n        return marks;\n    }\n    // Make sure all nodes above this.open are finished and added to\n    // their parents\n    closeExtra(openEnd = false) {\n        let i = this.nodes.length - 1;\n        if (i > this.open) {\n            for (; i > this.open; i--)\n                this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd));\n            this.nodes.length = this.open + 1;\n        }\n    }\n    finish() {\n        this.open = 0;\n        this.closeExtra(this.isOpen);\n        return this.nodes[0].finish(!!(this.isOpen || this.options.topOpen));\n    }\n    sync(to) {\n        for (let i = this.open; i >= 0; i--) {\n            if (this.nodes[i] == to) {\n                this.open = i;\n                return true;\n            }\n            else if (this.localPreserveWS) {\n                this.nodes[i].options |= OPT_PRESERVE_WS;\n            }\n        }\n        return false;\n    }\n    get currentPos() {\n        this.closeExtra();\n        let pos = 0;\n        for (let i = this.open; i >= 0; i--) {\n            let content = this.nodes[i].content;\n            for (let j = content.length - 1; j >= 0; j--)\n                pos += content[j].nodeSize;\n            if (i)\n                pos++;\n        }\n        return pos;\n    }\n    findAtPoint(parent, offset) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == parent && this.find[i].offset == offset)\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findInside(parent) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n                    this.find[i].pos = this.currentPos;\n            }\n    }\n    findAround(parent, content, before) {\n        if (parent != content && this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n                    let pos = content.compareDocumentPosition(this.find[i].node);\n                    if (pos & (before ? 2 : 4))\n                        this.find[i].pos = this.currentPos;\n                }\n            }\n    }\n    findInText(textNode) {\n        if (this.find)\n            for (let i = 0; i < this.find.length; i++) {\n                if (this.find[i].node == textNode)\n                    this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset);\n            }\n    }\n    // Determines whether the given context string matches this context.\n    matchesContext(context) {\n        if (context.indexOf(\"|\") > -1)\n            return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this);\n        let parts = context.split(\"/\");\n        let option = this.options.context;\n        let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n        let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n        let match = (i, depth) => {\n            for (; i >= 0; i--) {\n                let part = parts[i];\n                if (part == \"\") {\n                    if (i == parts.length - 1 || i == 0)\n                        continue;\n                    for (; depth >= minDepth; depth--)\n                        if (match(i - 1, depth))\n                            return true;\n                    return false;\n                }\n                else {\n                    let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n                        : option && depth >= minDepth ? option.node(depth - minDepth).type\n                            : null;\n                    if (!next || (next.name != part && !next.isInGroup(part)))\n                        return false;\n                    depth--;\n                }\n            }\n            return true;\n        };\n        return match(parts.length - 1, this.open);\n    }\n    textblockFromContext() {\n        let $context = this.options.context;\n        if ($context)\n            for (let d = $context.depth; d >= 0; d--) {\n                let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n                if (deflt && deflt.isTextblock && deflt.defaultAttrs)\n                    return deflt;\n            }\n        for (let name in this.parser.schema.nodes) {\n            let type = this.parser.schema.nodes[name];\n            if (type.isTextblock && type.defaultAttrs)\n                return type;\n        }\n    }\n}\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n    for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n        let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n        if (name && listTags.hasOwnProperty(name) && prevItem) {\n            prevItem.appendChild(child);\n            child = prevItem;\n        }\n        else if (name == \"li\") {\n            prevItem = child;\n        }\n        else if (name) {\n            prevItem = null;\n        }\n    }\n}\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n    return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector);\n}\nfunction copy(obj) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    return copy;\n}\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n    let nodes = nodeType.schema.nodes;\n    for (let name in nodes) {\n        let parent = nodes[name];\n        if (!parent.allowsMarkType(markType))\n            continue;\n        let seen = [], scan = (match) => {\n            seen.push(match);\n            for (let i = 0; i < match.edgeCount; i++) {\n                let { type, next } = match.edge(i);\n                if (type == nodeType)\n                    return true;\n                if (seen.indexOf(next) < 0 && scan(next))\n                    return true;\n            }\n        };\n        if (scan(parent.contentMatch))\n            return true;\n    }\n}\n\n/**\nA DOM serializer knows how to convert ProseMirror nodes and\nmarks of various types to DOM nodes.\n*/\nclass DOMSerializer {\n    /**\n    Create a serializer. `nodes` should map node names to functions\n    that take a node and return a description of the corresponding\n    DOM. `marks` does the same for mark names, but also gets an\n    argument that tells it whether the mark's content is block or\n    inline content (for typical use, it'll always be inline). A mark\n    serializer may be `null` to indicate that marks of that type\n    should not be serialized.\n    */\n    constructor(\n    /**\n    The node serialization functions.\n    */\n    nodes, \n    /**\n    The mark serialization functions.\n    */\n    marks) {\n        this.nodes = nodes;\n        this.marks = marks;\n    }\n    /**\n    Serialize the content of this fragment to a DOM fragment. When\n    not in the browser, the `document` option, containing a DOM\n    document, should be passed so that the serializer can create\n    nodes.\n    */\n    serializeFragment(fragment, options = {}, target) {\n        if (!target)\n            target = doc(options).createDocumentFragment();\n        let top = target, active = [];\n        fragment.forEach(node => {\n            if (active.length || node.marks.length) {\n                let keep = 0, rendered = 0;\n                while (keep < active.length && rendered < node.marks.length) {\n                    let next = node.marks[rendered];\n                    if (!this.marks[next.type.name]) {\n                        rendered++;\n                        continue;\n                    }\n                    if (!next.eq(active[keep][0]) || next.type.spec.spanning === false)\n                        break;\n                    keep++;\n                    rendered++;\n                }\n                while (keep < active.length)\n                    top = active.pop()[1];\n                while (rendered < node.marks.length) {\n                    let add = node.marks[rendered++];\n                    let markDOM = this.serializeMark(add, node.isInline, options);\n                    if (markDOM) {\n                        active.push([add, top]);\n                        top.appendChild(markDOM.dom);\n                        top = markDOM.contentDOM || markDOM.dom;\n                    }\n                }\n            }\n            top.appendChild(this.serializeNodeInner(node, options));\n        });\n        return target;\n    }\n    /**\n    @internal\n    */\n    serializeNodeInner(node, options) {\n        let { dom, contentDOM } = renderSpec(doc(options), this.nodes[node.type.name](node), null, node.attrs);\n        if (contentDOM) {\n            if (node.isLeaf)\n                throw new RangeError(\"Content hole not allowed in a leaf node spec\");\n            this.serializeFragment(node.content, options, contentDOM);\n        }\n        return dom;\n    }\n    /**\n    Serialize this node to a DOM node. This can be useful when you\n    need to serialize a part of a document, as opposed to the whole\n    document. To serialize a whole document, use\n    [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on\n    its [content](https://prosemirror.net/docs/ref/#model.Node.content).\n    */\n    serializeNode(node, options = {}) {\n        let dom = this.serializeNodeInner(node, options);\n        for (let i = node.marks.length - 1; i >= 0; i--) {\n            let wrap = this.serializeMark(node.marks[i], node.isInline, options);\n            if (wrap) {\n                (wrap.contentDOM || wrap.dom).appendChild(dom);\n                dom = wrap.dom;\n            }\n        }\n        return dom;\n    }\n    /**\n    @internal\n    */\n    serializeMark(mark, inline, options = {}) {\n        let toDOM = this.marks[mark.type.name];\n        return toDOM && renderSpec(doc(options), toDOM(mark, inline), null, mark.attrs);\n    }\n    static renderSpec(doc, structure, xmlNS = null, blockArraysIn) {\n        return renderSpec(doc, structure, xmlNS, blockArraysIn);\n    }\n    /**\n    Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)\n    properties in a schema's node and mark specs.\n    */\n    static fromSchema(schema) {\n        return schema.cached.domSerializer ||\n            (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)));\n    }\n    /**\n    Gather the serializers in a schema's node specs into an object.\n    This can be useful as a base to build a custom serializer from.\n    */\n    static nodesFromSchema(schema) {\n        let result = gatherToDOM(schema.nodes);\n        if (!result.text)\n            result.text = node => node.text;\n        return result;\n    }\n    /**\n    Gather the serializers in a schema's mark specs into an object.\n    */\n    static marksFromSchema(schema) {\n        return gatherToDOM(schema.marks);\n    }\n}\nfunction gatherToDOM(obj) {\n    let result = {};\n    for (let name in obj) {\n        let toDOM = obj[name].spec.toDOM;\n        if (toDOM)\n            result[name] = toDOM;\n    }\n    return result;\n}\nfunction doc(options) {\n    return options.document || window.document;\n}\nconst suspiciousAttributeCache = new WeakMap();\nfunction suspiciousAttributes(attrs) {\n    let value = suspiciousAttributeCache.get(attrs);\n    if (value === undefined)\n        suspiciousAttributeCache.set(attrs, value = suspiciousAttributesInner(attrs));\n    return value;\n}\nfunction suspiciousAttributesInner(attrs) {\n    let result = null;\n    function scan(value) {\n        if (value && typeof value == \"object\") {\n            if (Array.isArray(value)) {\n                if (typeof value[0] == \"string\") {\n                    if (!result)\n                        result = [];\n                    result.push(value);\n                }\n                else {\n                    for (let i = 0; i < value.length; i++)\n                        scan(value[i]);\n                }\n            }\n            else {\n                for (let prop in value)\n                    scan(value[prop]);\n            }\n        }\n    }\n    scan(attrs);\n    return result;\n}\nfunction renderSpec(doc, structure, xmlNS, blockArraysIn) {\n    if (typeof structure == \"string\")\n        return { dom: doc.createTextNode(structure) };\n    if (structure.nodeType != null)\n        return { dom: structure };\n    if (structure.dom && structure.dom.nodeType != null)\n        return structure;\n    let tagName = structure[0], suspicious;\n    if (typeof tagName != \"string\")\n        throw new RangeError(\"Invalid array passed to renderSpec\");\n    if (blockArraysIn && (suspicious = suspiciousAttributes(blockArraysIn)) &&\n        suspicious.indexOf(structure) > -1)\n        throw new RangeError(\"Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.\");\n    let space = tagName.indexOf(\" \");\n    if (space > 0) {\n        xmlNS = tagName.slice(0, space);\n        tagName = tagName.slice(space + 1);\n    }\n    let contentDOM;\n    let dom = (xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName));\n    let attrs = structure[1], start = 1;\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n        start = 2;\n        for (let name in attrs)\n            if (attrs[name] != null) {\n                let space = name.indexOf(\" \");\n                if (space > 0)\n                    dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name]);\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    }\n    for (let i = start; i < structure.length; i++) {\n        let child = structure[i];\n        if (child === 0) {\n            if (i < structure.length - 1 || i > start)\n                throw new RangeError(\"Content hole must be the only child of its parent node\");\n            return { dom, contentDOM: dom };\n        }\n        else {\n            let { dom: inner, contentDOM: innerContent } = renderSpec(doc, child, xmlNS, blockArraysIn);\n            dom.appendChild(inner);\n            if (innerContent) {\n                if (contentDOM)\n                    throw new RangeError(\"Multiple content holes\");\n                contentDOM = innerContent;\n            }\n        }\n    }\n    return { dom, contentDOM };\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport { createTimer } from '@milkdown/ctx'\nimport { withMeta } from '../__internal__'\n\n/// @internal\nexport type Config = (ctx: Ctx) => void | Promise<void>\n\n/// The timer which will be resolved when the config plugin is ready.\nexport const ConfigReady = createTimer('ConfigReady')\n\n/// The config plugin.\n/// This plugin will load all user configs.\nexport function config(configure: Config): MilkdownPlugin {\n  const plugin: MilkdownPlugin = (ctx) => {\n    ctx.record(ConfigReady)\n\n    return async () => {\n      await configure(ctx)\n      ctx.done(ConfigReady)\n\n      return () => {\n        ctx.clearTimer(ConfigReady)\n      }\n    }\n  }\n\n  withMeta(plugin, {\n    displayName: 'Config',\n  })\n\n  return plugin\n}\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { createTimer } from '@milkdown/ctx'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\nimport { unified } from 'unified'\n\nimport type { Editor } from '../editor'\nimport { remarkHandlers, withMeta } from '../__internal__'\nimport { ConfigReady } from './config'\nimport {\n  editorCtx,\n  initTimerCtx,\n  inputRulesCtx,\n  markViewCtx,\n  nodeViewCtx,\n  prosePluginsCtx,\n  remarkCtx,\n  remarkPluginsCtx,\n  remarkStringifyOptionsCtx,\n} from './atoms'\n\n/// The timer which will be resolved when the init plugin is ready.\nexport const InitReady = createTimer('InitReady')\n\n/// The init plugin.\n/// This plugin prepare slices that needed by other plugins. And create a remark instance.\n///\n/// This plugin will wait for the config plugin.\nexport function init(editor: Editor): MilkdownPlugin {\n  const plugin: MilkdownPlugin = (ctx) => {\n    ctx\n      .inject(editorCtx, editor)\n      .inject(prosePluginsCtx, [])\n      .inject(remarkPluginsCtx, [])\n      .inject(inputRulesCtx, [])\n      .inject(nodeViewCtx, [])\n      .inject(markViewCtx, [])\n      .inject(remarkStringifyOptionsCtx, {\n        handlers: remarkHandlers,\n      })\n      .inject(remarkCtx, unified().use(remarkParse).use(remarkStringify))\n      .inject(initTimerCtx, [ConfigReady])\n      .record(InitReady)\n\n    return async () => {\n      await ctx.waitTimers(initTimerCtx)\n      const options = ctx.get(remarkStringifyOptionsCtx)\n      ctx.set(\n        remarkCtx,\n        unified().use(remarkParse).use(remarkStringify, options)\n      )\n\n      ctx.done(InitReady)\n\n      return () => {\n        ctx\n          .remove(editorCtx)\n          .remove(prosePluginsCtx)\n          .remove(remarkPluginsCtx)\n          .remove(inputRulesCtx)\n          .remove(nodeViewCtx)\n          .remove(markViewCtx)\n          .remove(remarkStringifyOptionsCtx)\n          .remove(remarkCtx)\n          .remove(initTimerCtx)\n          .clearTimer(InitReady)\n      }\n    }\n  }\n  withMeta(plugin, {\n    displayName: 'Init',\n  })\n\n  return plugin\n}\n","import type { MilkdownPlugin, TimerType } from '@milkdown/ctx'\nimport { createSlice, createTimer } from '@milkdown/ctx'\nimport { Schema } from '@milkdown/prose/model'\nimport type {\n  MarkSchema,\n  NodeSchema,\n  RemarkParser,\n} from '@milkdown/transformer'\n\nimport { withMeta } from '../__internal__'\nimport { InitReady } from './init'\nimport { remarkCtx, remarkPluginsCtx } from './atoms'\n\n/// The timer which will be resolved when the schema plugin is ready.\nexport const SchemaReady = createTimer('SchemaReady')\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[InitReady]`.\nexport const schemaTimerCtx = createSlice([] as TimerType[], 'schemaTimer')\n\n/// A slice which contains the schema.\nexport const schemaCtx = createSlice({} as Schema, 'schema')\n\n/// A slice which stores the nodes spec.\nexport const nodesCtx = createSlice([] as Array<[string, NodeSchema]>, 'nodes')\n\n/// A slice which stores the marks spec.\nexport const marksCtx = createSlice([] as Array<[string, MarkSchema]>, 'marks')\n\nfunction extendPriority<T extends NodeSchema | MarkSchema>(x: T): T {\n  return {\n    ...x,\n    parseDOM: x.parseDOM?.map((rule) => ({ priority: x.priority, ...rule })),\n  }\n}\n\n/// The schema plugin.\n/// This plugin will load all nodes spec and marks spec and create a schema.\n///\n/// This plugin will wait for the init plugin.\nexport const schema: MilkdownPlugin = (ctx) => {\n  ctx\n    .inject(schemaCtx, {} as Schema)\n    .inject(nodesCtx, [])\n    .inject(marksCtx, [])\n    .inject(schemaTimerCtx, [InitReady])\n    .record(SchemaReady)\n\n  return async () => {\n    await ctx.waitTimers(schemaTimerCtx)\n\n    const remark = ctx.get(remarkCtx)\n    const remarkPlugins = ctx.get(remarkPluginsCtx)\n\n    const processor = remarkPlugins.reduce(\n      (acc: RemarkParser, plug) =>\n        acc.use(plug.plugin, plug.options) as unknown as RemarkParser,\n      remark\n    )\n    ctx.set(remarkCtx, processor)\n\n    const nodes = Object.fromEntries(\n      ctx.get(nodesCtx).map(([key, x]) => [key, extendPriority(x)])\n    )\n    const marks = Object.fromEntries(\n      ctx.get(marksCtx).map(([key, x]) => [key, extendPriority(x)])\n    )\n    const schema = new Schema({ nodes, marks })\n\n    ctx.set(schemaCtx, schema)\n\n    ctx.done(SchemaReady)\n\n    return () => {\n      ctx\n        .remove(schemaCtx)\n        .remove(nodesCtx)\n        .remove(marksCtx)\n        .remove(schemaTimerCtx)\n        .clearTimer(SchemaReady)\n    }\n  }\n}\n\nwithMeta(schema, {\n  displayName: 'Schema',\n})\n","import type { Ctx, MilkdownPlugin, SliceType } from '@milkdown/ctx'\nimport { Container, createSlice, createTimer } from '@milkdown/ctx'\nimport { callCommandBeforeEditorView } from '@milkdown/exception'\nimport type { Command } from '@milkdown/prose/state'\n\nimport { withMeta } from '../__internal__'\nimport { SchemaReady } from './schema'\nimport { editorViewCtx } from './atoms'\n\n/// @internal\nexport type Cmd<T = undefined> = (payload?: T) => Command\n\n/// @internal\nexport type CmdKey<T = undefined> = SliceType<Cmd<T>>\n\ntype InferParams<T> = T extends CmdKey<infer U> ? U : never\n\n/// The command manager.\n/// This manager will manage all commands in editor.\n/// Generally, you don't need to use this manager directly.\n/// You can use the `$command` and `$commandAsync` in `@milkdown/utils` to create and call a command.\nexport class CommandManager {\n  /// @internal\n  #container = new Container()\n\n  /// @internal\n  #ctx: Ctx | null = null\n\n  /// @internal\n  setCtx = (ctx: Ctx) => {\n    this.#ctx = ctx\n  }\n\n  get ctx() {\n    return this.#ctx\n  }\n\n  /// Register a command into the manager.\n  create<T>(meta: CmdKey<T>, value: Cmd<T>) {\n    const slice = meta.create(this.#container.sliceMap)\n    slice.set(value)\n    return slice\n  }\n\n  /// Get a command from the manager.\n  get<T extends CmdKey<any>>(slice: string): Cmd<InferParams<T>>\n  get<T>(slice: CmdKey<T>): Cmd<T>\n  get(slice: string | CmdKey<any>): Cmd<any>\n  get(slice: string | CmdKey<any>): Cmd<any> {\n    return this.#container.get(slice).get()\n  }\n\n  /// Remove a command from the manager.\n  remove<T extends CmdKey<any>>(slice: string): void\n  remove<T>(slice: CmdKey<T>): void\n  remove(slice: string | CmdKey<any>): void\n  remove(slice: string | CmdKey<any>): void {\n    return this.#container.remove(slice)\n  }\n\n  /// Call a registered command.\n  call<T extends CmdKey<any>>(slice: string, payload?: InferParams<T>): boolean\n  call<T>(slice: CmdKey<T>, payload?: T): boolean\n  call(slice: string | CmdKey<any>, payload?: any): boolean\n  call(slice: string | CmdKey<any>, payload?: any): boolean {\n    if (this.#ctx == null) throw callCommandBeforeEditorView()\n\n    const cmd = this.get(slice)\n    const command = cmd(payload)\n    const view = this.#ctx.get(editorViewCtx)\n    return command(view.state, view.dispatch, view)\n  }\n}\n\n/// Create a command key, which is a slice type that contains a command.\nexport function createCmdKey<T = undefined>(key = 'cmdKey'): CmdKey<T> {\n  return createSlice((() => () => false) as Cmd<T>, key)\n}\n\n/// A slice which contains the command manager.\nexport const commandsCtx = createSlice(new CommandManager(), 'commands')\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[SchemaReady]`.\nexport const commandsTimerCtx = createSlice([SchemaReady], 'commandsTimer')\n\n/// The timer which will be resolved when the commands plugin is ready.\nexport const CommandsReady = createTimer('CommandsReady')\n\n/// The commands plugin.\n/// This plugin will create a command manager.\n///\n/// This plugin will wait for the schema plugin.\nexport const commands: MilkdownPlugin = (ctx) => {\n  const cmd = new CommandManager()\n  cmd.setCtx(ctx)\n  ctx\n    .inject(commandsCtx, cmd)\n    .inject(commandsTimerCtx, [SchemaReady])\n    .record(CommandsReady)\n  return async () => {\n    await ctx.waitTimers(commandsTimerCtx)\n\n    ctx.done(CommandsReady)\n\n    return () => {\n      ctx.remove(commandsCtx).remove(commandsTimerCtx).clearTimer(CommandsReady)\n    }\n  }\n}\n\nwithMeta(commands, {\n  displayName: 'Commands',\n})\n","/**\n * Copy paste from:\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/browser.ts\n */\n\nconst nav = typeof navigator != 'undefined' ? navigator : null\nconst doc = typeof document != 'undefined' ? document : null\nconst agent = (nav && nav.userAgent) || ''\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent)\nconst ie_upto10 = /MSIE \\d/.exec(agent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent)\n\nexport const ie = !!(ie_upto10 || ie_11up || ie_edge)\nexport const ie_version = ie_upto10\n  ? (document as typeof document & { documentMode: unknown }).documentMode\n  : ie_11up\n    ? +ie_11up[1]!\n    : ie_edge\n      ? +ie_edge[1]!\n      : 0\nexport const gecko = !ie && /gecko\\/(\\d+)/i.test(agent)\nexport const gecko_version =\n  gecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1]\n\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent)\nexport const chrome = !!_chrome\nexport const chrome_version = _chrome ? +_chrome[1]! : 0\nexport const safari = !ie && !!nav && /Apple Computer/.test(nav.vendor)\n// Is true for both iOS and iPadOS for convenience\nexport const ios =\n  safari && (/Mobile\\/\\w+/.test(agent) || (!!nav && nav.maxTouchPoints > 2))\nexport const mac = ios || (nav ? /Mac/.test(nav.platform) : false)\nexport const android = /Android \\d/.test(agent)\nexport const webkit =\n  !!doc && 'webkitFontSmoothing' in doc.documentElement.style\nexport const webkit_version = webkit\n  ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  : 0\n","import { ReplaceError, Slice, Fragment, MarkType, Mark } from 'prosemirror-model';\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\nconst lower16 = 0xffff;\nconst factor16 = Math.pow(2, 16);\nfunction makeRecover(index, offset) { return index + offset * factor16; }\nfunction recoverIndex(value) { return value & lower16; }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16; }\nconst DEL_BEFORE = 1, DEL_AFTER = 2, DEL_ACROSS = 4, DEL_SIDE = 8;\n/**\nAn object representing a mapped position with extra\ninformation.\n*/\nclass MapResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The mapped version of the position.\n    */\n    pos, \n    /**\n    @internal\n    */\n    delInfo, \n    /**\n    @internal\n    */\n    recover) {\n        this.pos = pos;\n        this.delInfo = delInfo;\n        this.recover = recover;\n    }\n    /**\n    Tells you whether the position was deleted, that is, whether the\n    step removed the token on the side queried (via the `assoc`)\n    argument from the document.\n    */\n    get deleted() { return (this.delInfo & DEL_SIDE) > 0; }\n    /**\n    Tells you whether the token before the mapped position was deleted.\n    */\n    get deletedBefore() { return (this.delInfo & (DEL_BEFORE | DEL_ACROSS)) > 0; }\n    /**\n    True when the token after the mapped position was deleted.\n    */\n    get deletedAfter() { return (this.delInfo & (DEL_AFTER | DEL_ACROSS)) > 0; }\n    /**\n    Tells whether any of the steps mapped through deletes across the\n    position (including both the token before and after the\n    position).\n    */\n    get deletedAcross() { return (this.delInfo & DEL_ACROSS) > 0; }\n}\n/**\nA map describing the deletions and insertions made by a step, which\ncan be used to find the correspondence between positions in the\npre-step version of a document and the same position in the\npost-step version.\n*/\nclass StepMap {\n    /**\n    Create a position map. The modifications to the document are\n    represented as an array of numbers, in which each group of three\n    represents a modified chunk as `[start, oldSize, newSize]`.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    ranges, \n    /**\n    @internal\n    */\n    inverted = false) {\n        this.ranges = ranges;\n        this.inverted = inverted;\n        if (!ranges.length && StepMap.empty)\n            return StepMap.empty;\n    }\n    /**\n    @internal\n    */\n    recover(value) {\n        let diff = 0, index = recoverIndex(value);\n        if (!this.inverted)\n            for (let i = 0; i < index; i++)\n                diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];\n        return this.ranges[index * 3] + diff + recoverOffset(value);\n    }\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    map(pos, assoc = 1) { return this._map(pos, assoc, true); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n            if (pos <= end) {\n                let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n                let result = start + diff + (side < 0 ? 0 : newSize);\n                if (simple)\n                    return result;\n                let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n                let del = pos == start ? DEL_AFTER : pos == end ? DEL_BEFORE : DEL_ACROSS;\n                if (assoc < 0 ? pos != start : pos != end)\n                    del |= DEL_SIDE;\n                return new MapResult(result, del, recover);\n            }\n            diff += newSize - oldSize;\n        }\n        return simple ? pos + diff : new MapResult(pos + diff, 0, null);\n    }\n    /**\n    @internal\n    */\n    touches(pos, recover) {\n        let diff = 0, index = recoverIndex(recover);\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i] - (this.inverted ? diff : 0);\n            if (start > pos)\n                break;\n            let oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n            if (pos <= end && i == index * 3)\n                return true;\n            diff += this.ranges[i + newIndex] - oldSize;\n        }\n        return false;\n    }\n    /**\n    Calls the given function on each of the changed ranges included in\n    this map.\n    */\n    forEach(f) {\n        let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n        for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n            let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n            let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n            f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n            diff += newSize - oldSize;\n        }\n    }\n    /**\n    Create an inverted version of this map. The result can be used to\n    map positions in the post-step document to the pre-step document.\n    */\n    invert() {\n        return new StepMap(this.ranges, !this.inverted);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges);\n    }\n    /**\n    Create a map that moves all positions by offset `n` (which may be\n    negative). This can be useful when applying steps meant for a\n    sub-document to a larger document, or vice-versa.\n    */\n    static offset(n) {\n        return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n]);\n    }\n}\n/**\nA StepMap that contains no changed ranges.\n*/\nStepMap.empty = new StepMap([]);\n/**\nA mapping represents a pipeline of zero or more [step\nmaps](https://prosemirror.net/docs/ref/#transform.StepMap). It has special provisions for losslessly\nhandling mapping positions through a series of steps in which some\nsteps are inverted versions of earlier steps. (This comes up when\n‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\ncollaboration or history management.)\n*/\nclass Mapping {\n    /**\n    Create a new mapping with the given position maps.\n    */\n    constructor(\n    /**\n    The step maps in this mapping.\n    */\n    maps = [], \n    /**\n    @internal\n    */\n    mirror, \n    /**\n    The starting position in the `maps` array, used when `map` or\n    `mapResult` is called.\n    */\n    from = 0, \n    /**\n    The end position in the `maps` array.\n    */\n    to = maps.length) {\n        this.maps = maps;\n        this.mirror = mirror;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n    Create a mapping that maps only through a part of this one.\n    */\n    slice(from = 0, to = this.maps.length) {\n        return new Mapping(this.maps, this.mirror, from, to);\n    }\n    /**\n    @internal\n    */\n    copy() {\n        return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to);\n    }\n    /**\n    Add a step map to the end of this mapping. If `mirrors` is\n    given, it should be the index of the step map that is the mirror\n    image of this one.\n    */\n    appendMap(map, mirrors) {\n        this.to = this.maps.push(map);\n        if (mirrors != null)\n            this.setMirror(this.maps.length - 1, mirrors);\n    }\n    /**\n    Add all the step maps in a given mapping to this one (preserving\n    mirroring information).\n    */\n    appendMapping(mapping) {\n        for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : undefined);\n        }\n    }\n    /**\n    Finds the offset of the step map that mirrors the map at the\n    given offset, in this mapping (as per the second argument to\n    `appendMap`).\n    */\n    getMirror(n) {\n        if (this.mirror)\n            for (let i = 0; i < this.mirror.length; i++)\n                if (this.mirror[i] == n)\n                    return this.mirror[i + (i % 2 ? -1 : 1)];\n    }\n    /**\n    @internal\n    */\n    setMirror(n, m) {\n        if (!this.mirror)\n            this.mirror = [];\n        this.mirror.push(n, m);\n    }\n    /**\n    Append the inverse of the given mapping to this one.\n    */\n    appendMappingInverted(mapping) {\n        for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n            let mirr = mapping.getMirror(i);\n            this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : undefined);\n        }\n    }\n    /**\n    Create an inverted version of this mapping.\n    */\n    invert() {\n        let inverse = new Mapping;\n        inverse.appendMappingInverted(this);\n        return inverse;\n    }\n    /**\n    Map a position through this mapping.\n    */\n    map(pos, assoc = 1) {\n        if (this.mirror)\n            return this._map(pos, assoc, true);\n        for (let i = this.from; i < this.to; i++)\n            pos = this.maps[i].map(pos, assoc);\n        return pos;\n    }\n    /**\n    Map a position through this mapping, returning a mapping\n    result.\n    */\n    mapResult(pos, assoc = 1) { return this._map(pos, assoc, false); }\n    /**\n    @internal\n    */\n    _map(pos, assoc, simple) {\n        let delInfo = 0;\n        for (let i = this.from; i < this.to; i++) {\n            let map = this.maps[i], result = map.mapResult(pos, assoc);\n            if (result.recover != null) {\n                let corr = this.getMirror(i);\n                if (corr != null && corr > i && corr < this.to) {\n                    i = corr;\n                    pos = this.maps[corr].recover(result.recover);\n                    continue;\n                }\n            }\n            delInfo |= result.delInfo;\n            pos = result.pos;\n        }\n        return simple ? pos : new MapResult(pos, delInfo, null);\n    }\n}\n\nconst stepsByID = Object.create(null);\n/**\nA step object represents an atomic change. It generally applies\nonly to the document it was created for, since the positions\nstored in it will only make sense for that document.\n\nNew steps are defined by creating classes that extend `Step`,\noverriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\nmethods, and registering your class with a unique\nJSON-serialization identifier using\n[`Step.jsonID`](https://prosemirror.net/docs/ref/#transform.Step^jsonID).\n*/\nclass Step {\n    /**\n    Get the step map that represents the changes made by this step,\n    and which can be used to transform between positions in the old\n    and the new document.\n    */\n    getMap() { return StepMap.empty; }\n    /**\n    Try to merge this step with another one, to be applied directly\n    after it. Returns the merged step when possible, null if the\n    steps can't be merged.\n    */\n    merge(other) { return null; }\n    /**\n    Deserialize a step from its JSON representation. Will call\n    through to the step class' own implementation of this method.\n    */\n    static fromJSON(schema, json) {\n        if (!json || !json.stepType)\n            throw new RangeError(\"Invalid input for Step.fromJSON\");\n        let type = stepsByID[json.stepType];\n        if (!type)\n            throw new RangeError(`No step type ${json.stepType} defined`);\n        return type.fromJSON(schema, json);\n    }\n    /**\n    To be able to serialize steps to JSON, each step needs a string\n    ID to attach to its JSON representation. Use this method to\n    register an ID for your step classes. Try to pick something\n    that's unlikely to clash with steps from other modules.\n    */\n    static jsonID(id, stepClass) {\n        if (id in stepsByID)\n            throw new RangeError(\"Duplicate use of step JSON ID \" + id);\n        stepsByID[id] = stepClass;\n        stepClass.prototype.jsonID = id;\n        return stepClass;\n    }\n}\n/**\nThe result of [applying](https://prosemirror.net/docs/ref/#transform.Step.apply) a step. Contains either a\nnew document or a failure value.\n*/\nclass StepResult {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The transformed document, if successful.\n    */\n    doc, \n    /**\n    The failure message, if unsuccessful.\n    */\n    failed) {\n        this.doc = doc;\n        this.failed = failed;\n    }\n    /**\n    Create a successful step result.\n    */\n    static ok(doc) { return new StepResult(doc, null); }\n    /**\n    Create a failed step result.\n    */\n    static fail(message) { return new StepResult(null, message); }\n    /**\n    Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given\n    arguments. Create a successful result if it succeeds, and a\n    failed one if it throws a `ReplaceError`.\n    */\n    static fromReplace(doc, from, to, slice) {\n        try {\n            return StepResult.ok(doc.replace(from, to, slice));\n        }\n        catch (e) {\n            if (e instanceof ReplaceError)\n                return StepResult.fail(e.message);\n            throw e;\n        }\n    }\n}\n\nfunction mapFragment(fragment, f, parent) {\n    let mapped = [];\n    for (let i = 0; i < fragment.childCount; i++) {\n        let child = fragment.child(i);\n        if (child.content.size)\n            child = child.copy(mapFragment(child.content, f, child));\n        if (child.isInline)\n            child = f(child, parent, i);\n        mapped.push(child);\n    }\n    return Fragment.fromArray(mapped);\n}\n/**\nAdd a mark to all inline content between two positions.\n*/\nclass AddMarkStep extends Step {\n    /**\n    Create a mark step.\n    */\n    constructor(\n    /**\n    The start of the marked range.\n    */\n    from, \n    /**\n    The end of the marked range.\n    */\n    to, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n        let parent = $from.node($from.sharedDepth(this.to));\n        let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n            if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type))\n                return node;\n            return node.mark(this.mark.addToSet(node.marks));\n        }, parent), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new RemoveMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new AddMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof AddMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new AddMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\");\n        return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addMark\", AddMarkStep);\n/**\nRemove a mark from all inline content between two positions.\n*/\nclass RemoveMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The start of the unmarked range.\n    */\n    from, \n    /**\n    The end of the unmarked range.\n    */\n    to, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let oldSlice = doc.slice(this.from, this.to);\n        let slice = new Slice(mapFragment(oldSlice.content, node => {\n            return node.mark(this.mark.removeFromSet(node.marks));\n        }, doc), oldSlice.openStart, oldSlice.openEnd);\n        return StepResult.fromReplace(doc, this.from, this.to, slice);\n    }\n    invert() {\n        return new AddMarkStep(this.from, this.to, this.mark);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deleted && to.deleted || from.pos >= to.pos)\n            return null;\n        return new RemoveMarkStep(from.pos, to.pos, this.mark);\n    }\n    merge(other) {\n        if (other instanceof RemoveMarkStep &&\n            other.mark.eq(this.mark) &&\n            this.from <= other.to && this.to >= other.from)\n            return new RemoveMarkStep(Math.min(this.from, other.from), Math.max(this.to, other.to), this.mark);\n        return null;\n    }\n    toJSON() {\n        return { stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\");\n        return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n/**\nAdd a mark to a specific node.\n*/\nclass AddNodeMarkStep extends Step {\n    /**\n    Create a node mark step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to add.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.addToSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (node) {\n            let newSet = this.mark.addToSet(node.marks);\n            if (newSet.length == node.marks.length) {\n                for (let i = 0; i < node.marks.length; i++)\n                    if (!node.marks[i].isInSet(newSet))\n                        return new AddNodeMarkStep(this.pos, node.marks[i]);\n                return new AddNodeMarkStep(this.pos, this.mark);\n            }\n        }\n        return new RemoveNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AddNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"addNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for AddNodeMarkStep.fromJSON\");\n        return new AddNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"addNodeMark\", AddNodeMarkStep);\n/**\nRemove a mark from a specific node.\n*/\nclass RemoveNodeMarkStep extends Step {\n    /**\n    Create a mark-removing step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The mark to remove.\n    */\n    mark) {\n        super();\n        this.pos = pos;\n        this.mark = mark;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at mark step's position\");\n        let updated = node.type.create(node.attrs, null, this.mark.removeFromSet(node.marks));\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    invert(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node || !this.mark.isInSet(node.marks))\n            return this;\n        return new AddNodeMarkStep(this.pos, this.mark);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new RemoveNodeMarkStep(pos.pos, this.mark);\n    }\n    toJSON() {\n        return { stepType: \"removeNodeMark\", pos: this.pos, mark: this.mark.toJSON() };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for RemoveNodeMarkStep.fromJSON\");\n        return new RemoveNodeMarkStep(json.pos, schema.markFromJSON(json.mark));\n    }\n}\nStep.jsonID(\"removeNodeMark\", RemoveNodeMarkStep);\n\n/**\nReplace a part of the document with a slice of new content.\n*/\nclass ReplaceStep extends Step {\n    /**\n    The given `slice` should fit the 'gap' between `from` and\n    `to`—the depths must line up, and the surrounding nodes must be\n    able to be joined with the open sides of the slice. When\n    `structure` is true, the step will fail if the content between\n    from and to is not just a sequence of closing and then opening\n    tokens (this is to guard against rebased replace steps\n    overwriting something they weren't supposed to).\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.slice = slice;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && contentBetween(doc, this.from, this.to))\n            return StepResult.fail(\"Structure replace would overwrite content\");\n        return StepResult.fromReplace(doc, this.from, this.to, this.slice);\n    }\n    getMap() {\n        return new StepMap([this.from, this.to - this.from, this.slice.size]);\n    }\n    invert(doc) {\n        return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to));\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        if (from.deletedAcross && to.deletedAcross)\n            return null;\n        return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice);\n    }\n    merge(other) {\n        if (!(other instanceof ReplaceStep) || other.structure || this.structure)\n            return null;\n        if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n            return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure);\n        }\n        else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n            let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n                : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n            return new ReplaceStep(other.from, this.to, slice, this.structure);\n        }\n        else {\n            return null;\n        }\n    }\n    toJSON() {\n        let json = { stepType: \"replace\", from: this.from, to: this.to };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\");\n        return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure);\n    }\n}\nStep.jsonID(\"replace\", ReplaceStep);\n/**\nReplace a part of the document with a slice of content, but\npreserve a range of the replaced content by moving it into the\nslice.\n*/\nclass ReplaceAroundStep extends Step {\n    /**\n    Create a replace-around step with the given range and gap.\n    `insert` should be the point in the slice into which the content\n    of the gap should be moved. `structure` has the same meaning as\n    it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.\n    */\n    constructor(\n    /**\n    The start position of the replaced range.\n    */\n    from, \n    /**\n    The end position of the replaced range.\n    */\n    to, \n    /**\n    The start of preserved range.\n    */\n    gapFrom, \n    /**\n    The end of preserved range.\n    */\n    gapTo, \n    /**\n    The slice to insert.\n    */\n    slice, \n    /**\n    The position in the slice where the preserved range should be\n    inserted.\n    */\n    insert, \n    /**\n    @internal\n    */\n    structure = false) {\n        super();\n        this.from = from;\n        this.to = to;\n        this.gapFrom = gapFrom;\n        this.gapTo = gapTo;\n        this.slice = slice;\n        this.insert = insert;\n        this.structure = structure;\n    }\n    apply(doc) {\n        if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n            contentBetween(doc, this.gapTo, this.to)))\n            return StepResult.fail(\"Structure gap-replace would overwrite content\");\n        let gap = doc.slice(this.gapFrom, this.gapTo);\n        if (gap.openStart || gap.openEnd)\n            return StepResult.fail(\"Gap is not a flat range\");\n        let inserted = this.slice.insertAt(this.insert, gap.content);\n        if (!inserted)\n            return StepResult.fail(\"Content does not fit in gap\");\n        return StepResult.fromReplace(doc, this.from, this.to, inserted);\n    }\n    getMap() {\n        return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n            this.gapTo, this.to - this.gapTo, this.slice.size - this.insert]);\n    }\n    invert(doc) {\n        let gap = this.gapTo - this.gapFrom;\n        return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap, this.from + this.insert, this.from + this.insert + gap, doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);\n    }\n    map(mapping) {\n        let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n        let gapFrom = this.from == this.gapFrom ? from.pos : mapping.map(this.gapFrom, -1);\n        let gapTo = this.to == this.gapTo ? to.pos : mapping.map(this.gapTo, 1);\n        if ((from.deletedAcross && to.deletedAcross) || gapFrom < from.pos || gapTo > to.pos)\n            return null;\n        return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure);\n    }\n    toJSON() {\n        let json = { stepType: \"replaceAround\", from: this.from, to: this.to,\n            gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert };\n        if (this.slice.size)\n            json.slice = this.slice.toJSON();\n        if (this.structure)\n            json.structure = true;\n        return json;\n    }\n    /**\n    @internal\n    */\n    static fromJSON(schema, json) {\n        if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n            typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n            throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\");\n        return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo, Slice.fromJSON(schema, json.slice), json.insert, !!json.structure);\n    }\n}\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\nfunction contentBetween(doc, from, to) {\n    let $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n    while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n        depth--;\n        dist--;\n    }\n    if (dist > 0) {\n        let next = $from.node(depth).maybeChild($from.indexAfter(depth));\n        while (dist > 0) {\n            if (!next || next.isLeaf)\n                return true;\n            next = next.firstChild;\n            dist--;\n        }\n    }\n    return false;\n}\n\nfunction addMark(tr, from, to, mark) {\n    let removed = [], added = [];\n    let removing, adding;\n    tr.doc.nodesBetween(from, to, (node, pos, parent) => {\n        if (!node.isInline)\n            return;\n        let marks = node.marks;\n        if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n            let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n            let newSet = mark.addToSet(marks);\n            for (let i = 0; i < marks.length; i++) {\n                if (!marks[i].isInSet(newSet)) {\n                    if (removing && removing.to == start && removing.mark.eq(marks[i]))\n                        removing.to = end;\n                    else\n                        removed.push(removing = new RemoveMarkStep(start, end, marks[i]));\n                }\n            }\n            if (adding && adding.to == start)\n                adding.to = end;\n            else\n                added.push(adding = new AddMarkStep(start, end, mark));\n        }\n    });\n    removed.forEach(s => tr.step(s));\n    added.forEach(s => tr.step(s));\n}\nfunction removeMark(tr, from, to, mark) {\n    let matched = [], step = 0;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isInline)\n            return;\n        step++;\n        let toRemove = null;\n        if (mark instanceof MarkType) {\n            let set = node.marks, found;\n            while (found = mark.isInSet(set)) {\n                (toRemove || (toRemove = [])).push(found);\n                set = found.removeFromSet(set);\n            }\n        }\n        else if (mark) {\n            if (mark.isInSet(node.marks))\n                toRemove = [mark];\n        }\n        else {\n            toRemove = node.marks;\n        }\n        if (toRemove && toRemove.length) {\n            let end = Math.min(pos + node.nodeSize, to);\n            for (let i = 0; i < toRemove.length; i++) {\n                let style = toRemove[i], found;\n                for (let j = 0; j < matched.length; j++) {\n                    let m = matched[j];\n                    if (m.step == step - 1 && style.eq(matched[j].style))\n                        found = m;\n                }\n                if (found) {\n                    found.to = end;\n                    found.step = step;\n                }\n                else {\n                    matched.push({ style, from: Math.max(pos, from), to: end, step });\n                }\n            }\n        }\n    });\n    matched.forEach(m => tr.step(new RemoveMarkStep(m.from, m.to, m.style)));\n}\nfunction clearIncompatible(tr, pos, parentType, match = parentType.contentMatch, clearNewlines = true) {\n    let node = tr.doc.nodeAt(pos);\n    let replSteps = [], cur = pos + 1;\n    for (let i = 0; i < node.childCount; i++) {\n        let child = node.child(i), end = cur + child.nodeSize;\n        let allowed = match.matchType(child.type);\n        if (!allowed) {\n            replSteps.push(new ReplaceStep(cur, end, Slice.empty));\n        }\n        else {\n            match = allowed;\n            for (let j = 0; j < child.marks.length; j++)\n                if (!parentType.allowsMarkType(child.marks[j].type))\n                    tr.step(new RemoveMarkStep(cur, end, child.marks[j]));\n            if (clearNewlines && child.isText && parentType.whitespace != \"pre\") {\n                let m, newline = /\\r?\\n|\\r/g, slice;\n                while (m = newline.exec(child.text)) {\n                    if (!slice)\n                        slice = new Slice(Fragment.from(parentType.schema.text(\" \", parentType.allowedMarks(child.marks))), 0, 0);\n                    replSteps.push(new ReplaceStep(cur + m.index, cur + m.index + m[0].length, slice));\n                }\n            }\n        }\n        cur = end;\n    }\n    if (!match.validEnd) {\n        let fill = match.fillBefore(Fragment.empty, true);\n        tr.replace(cur, cur, new Slice(fill, 0, 0));\n    }\n    for (let i = replSteps.length - 1; i >= 0; i--)\n        tr.step(replSteps[i]);\n}\n\nfunction canCut(node, start, end) {\n    return (start == 0 || node.canReplace(start, node.childCount)) &&\n        (end == node.childCount || node.canReplace(0, end));\n}\n/**\nTry to find a target depth to which the content in the given range\ncan be lifted. Will not go across\n[isolating](https://prosemirror.net/docs/ref/#model.NodeSpec.isolating) parent nodes.\n*/\nfunction liftTarget(range) {\n    let parent = range.parent;\n    let content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n    for (let depth = range.depth;; --depth) {\n        let node = range.$from.node(depth);\n        let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n        if (depth < range.depth && node.canReplace(index, endIndex, content))\n            return depth;\n        if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex))\n            break;\n    }\n    return null;\n}\nfunction lift(tr, range, target) {\n    let { $from, $to, depth } = range;\n    let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n    let start = gapStart, end = gapEnd;\n    let before = Fragment.empty, openStart = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $from.index(d) > 0) {\n            splitting = true;\n            before = Fragment.from($from.node(d).copy(before));\n            openStart++;\n        }\n        else {\n            start--;\n        }\n    let after = Fragment.empty, openEnd = 0;\n    for (let d = depth, splitting = false; d > target; d--)\n        if (splitting || $to.after(d + 1) < $to.end(d)) {\n            splitting = true;\n            after = Fragment.from($to.node(d).copy(after));\n            openEnd++;\n        }\n        else {\n            end++;\n        }\n    tr.step(new ReplaceAroundStep(start, end, gapStart, gapEnd, new Slice(before.append(after), openStart, openEnd), before.size - openStart, true));\n}\n/**\nTry to find a valid way to wrap the content in the given range in a\nnode of the given type. May introduce extra nodes around and inside\nthe wrapper node, if necessary. Returns null if no valid wrapping\ncould be found. When `innerRange` is given, that range's content is\nused as the content to fit into the wrapping, instead of the\ncontent of `range`.\n*/\nfunction findWrapping(range, nodeType, attrs = null, innerRange = range) {\n    let around = findWrappingOutside(range, nodeType);\n    let inner = around && findWrappingInside(innerRange, nodeType);\n    if (!inner)\n        return null;\n    return around.map(withAttrs)\n        .concat({ type: nodeType, attrs }).concat(inner.map(withAttrs));\n}\nfunction withAttrs(type) { return { type, attrs: null }; }\nfunction findWrappingOutside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let around = parent.contentMatchAt(startIndex).findWrapping(type);\n    if (!around)\n        return null;\n    let outer = around.length ? around[0] : type;\n    return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null;\n}\nfunction findWrappingInside(range, type) {\n    let { parent, startIndex, endIndex } = range;\n    let inner = parent.child(startIndex);\n    let inside = type.contentMatch.findWrapping(inner.type);\n    if (!inside)\n        return null;\n    let lastType = inside.length ? inside[inside.length - 1] : type;\n    let innerMatch = lastType.contentMatch;\n    for (let i = startIndex; innerMatch && i < endIndex; i++)\n        innerMatch = innerMatch.matchType(parent.child(i).type);\n    if (!innerMatch || !innerMatch.validEnd)\n        return null;\n    return inside;\n}\nfunction wrap(tr, range, wrappers) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--) {\n        if (content.size) {\n            let match = wrappers[i].type.contentMatch.matchFragment(content);\n            if (!match || !match.validEnd)\n                throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\");\n        }\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    }\n    let start = range.start, end = range.end;\n    tr.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true));\n}\nfunction setBlockType(tr, from, to, type, attrs) {\n    if (!type.isTextblock)\n        throw new RangeError(\"Type given to setBlockType should be a textblock\");\n    let mapFrom = tr.steps.length;\n    tr.doc.nodesBetween(from, to, (node, pos) => {\n        let attrsHere = typeof attrs == \"function\" ? attrs(node) : attrs;\n        if (node.isTextblock && !node.hasMarkup(type, attrsHere) &&\n            canChangeType(tr.doc, tr.mapping.slice(mapFrom).map(pos), type)) {\n            let convertNewlines = null;\n            if (type.schema.linebreakReplacement) {\n                let pre = type.whitespace == \"pre\", supportLinebreak = !!type.contentMatch.matchType(type.schema.linebreakReplacement);\n                if (pre && !supportLinebreak)\n                    convertNewlines = false;\n                else if (!pre && supportLinebreak)\n                    convertNewlines = true;\n            }\n            // Ensure all markup that isn't allowed in the new node type is cleared\n            if (convertNewlines === false)\n                replaceLinebreaks(tr, node, pos, mapFrom);\n            clearIncompatible(tr, tr.mapping.slice(mapFrom).map(pos, 1), type, undefined, convertNewlines === null);\n            let mapping = tr.mapping.slice(mapFrom);\n            let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n            tr.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1, new Slice(Fragment.from(type.create(attrsHere, null, node.marks)), 0, 0), 1, true));\n            if (convertNewlines === true)\n                replaceNewlines(tr, node, pos, mapFrom);\n            return false;\n        }\n    });\n}\nfunction replaceNewlines(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.isText) {\n            let m, newline = /\\r?\\n|\\r/g;\n            while (m = newline.exec(child.text)) {\n                let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset + m.index);\n                tr.replaceWith(start, start + 1, node.type.schema.linebreakReplacement.create());\n            }\n        }\n    });\n}\nfunction replaceLinebreaks(tr, node, pos, mapFrom) {\n    node.forEach((child, offset) => {\n        if (child.type == child.type.schema.linebreakReplacement) {\n            let start = tr.mapping.slice(mapFrom).map(pos + 1 + offset);\n            tr.replaceWith(start, start + 1, node.type.schema.text(\"\\n\"));\n        }\n    });\n}\nfunction canChangeType(doc, pos, type) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return $pos.parent.canReplaceWith(index, index + 1, type);\n}\n/**\nChange the type, attributes, and/or marks of the node at `pos`.\nWhen `type` isn't given, the existing node type is preserved,\n*/\nfunction setNodeMarkup(tr, pos, type, attrs, marks) {\n    let node = tr.doc.nodeAt(pos);\n    if (!node)\n        throw new RangeError(\"No node at given position\");\n    if (!type)\n        type = node.type;\n    let newNode = type.create(attrs, null, marks || node.marks);\n    if (node.isLeaf)\n        return tr.replaceWith(pos, pos + node.nodeSize, newNode);\n    if (!type.validContent(node.content))\n        throw new RangeError(\"Invalid content for node type \" + type.name);\n    tr.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1, new Slice(Fragment.from(newNode), 0, 0), 1, true));\n}\n/**\nCheck whether splitting at the given position is allowed.\n*/\nfunction canSplit(doc, pos, depth = 1, typesAfter) {\n    let $pos = doc.resolve(pos), base = $pos.depth - depth;\n    let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n    if (base < 0 || $pos.parent.type.spec.isolating ||\n        !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n        !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n        return false;\n    for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n        let node = $pos.node(d), index = $pos.index(d);\n        if (node.type.spec.isolating)\n            return false;\n        let rest = node.content.cutByIndex(index, node.childCount);\n        let overrideChild = typesAfter && typesAfter[i + 1];\n        if (overrideChild)\n            rest = rest.replaceChild(0, overrideChild.type.create(overrideChild.attrs));\n        let after = (typesAfter && typesAfter[i]) || node;\n        if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n            return false;\n    }\n    let index = $pos.indexAfter(base);\n    let baseType = typesAfter && typesAfter[0];\n    return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type);\n}\nfunction split(tr, pos, depth = 1, typesAfter) {\n    let $pos = tr.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n    for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n        before = Fragment.from($pos.node(d).copy(before));\n        let typeAfter = typesAfter && typesAfter[i];\n        after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n    }\n    tr.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true));\n}\n/**\nTest whether the blocks before and after a given position can be\njoined.\n*/\nfunction canJoin(doc, pos) {\n    let $pos = doc.resolve(pos), index = $pos.index();\n    return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n        $pos.parent.canReplace(index, index + 1);\n}\nfunction canAppendWithSubstitutedLinebreaks(a, b) {\n    if (!b.content.size)\n        a.type.compatibleContent(b.type);\n    let match = a.contentMatchAt(a.childCount);\n    let { linebreakReplacement } = a.type.schema;\n    for (let i = 0; i < b.childCount; i++) {\n        let child = b.child(i);\n        let type = child.type == linebreakReplacement ? a.type.schema.nodes.text : child.type;\n        match = match.matchType(type);\n        if (!match)\n            return false;\n        if (!a.type.allowsMarks(child.marks))\n            return false;\n    }\n    return match.validEnd;\n}\nfunction joinable(a, b) {\n    return !!(a && b && !a.isLeaf && canAppendWithSubstitutedLinebreaks(a, b));\n}\n/**\nFind an ancestor of the given position that can be joined to the\nblock before (or after if `dir` is positive). Returns the joinable\npoint, if any.\n*/\nfunction joinPoint(doc, pos, dir = -1) {\n    let $pos = doc.resolve(pos);\n    for (let d = $pos.depth;; d--) {\n        let before, after, index = $pos.index(d);\n        if (d == $pos.depth) {\n            before = $pos.nodeBefore;\n            after = $pos.nodeAfter;\n        }\n        else if (dir > 0) {\n            before = $pos.node(d + 1);\n            index++;\n            after = $pos.node(d).maybeChild(index);\n        }\n        else {\n            before = $pos.node(d).maybeChild(index - 1);\n            after = $pos.node(d + 1);\n        }\n        if (before && !before.isTextblock && joinable(before, after) &&\n            $pos.node(d).canReplace(index, index + 1))\n            return pos;\n        if (d == 0)\n            break;\n        pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n    }\n}\nfunction join(tr, pos, depth) {\n    let convertNewlines = null;\n    let { linebreakReplacement } = tr.doc.type.schema;\n    let $before = tr.doc.resolve(pos - depth), beforeType = $before.node().type;\n    if (linebreakReplacement && beforeType.inlineContent) {\n        let pre = beforeType.whitespace == \"pre\";\n        let supportLinebreak = !!beforeType.contentMatch.matchType(linebreakReplacement);\n        if (pre && !supportLinebreak)\n            convertNewlines = false;\n        else if (!pre && supportLinebreak)\n            convertNewlines = true;\n    }\n    let mapFrom = tr.steps.length;\n    if (convertNewlines === false) {\n        let $after = tr.doc.resolve(pos + depth);\n        replaceLinebreaks(tr, $after.node(), $after.before(), mapFrom);\n    }\n    if (beforeType.inlineContent)\n        clearIncompatible(tr, pos + depth - 1, beforeType, $before.node().contentMatchAt($before.index()), convertNewlines == null);\n    let mapping = tr.mapping.slice(mapFrom), start = mapping.map(pos - depth);\n    tr.step(new ReplaceStep(start, mapping.map(pos + depth, -1), Slice.empty, true));\n    if (convertNewlines === true) {\n        let $full = tr.doc.resolve(start);\n        replaceNewlines(tr, $full.node(), $full.before(), tr.steps.length);\n    }\n    return tr;\n}\n/**\nTry to find a point where a node of the given type can be inserted\nnear `pos`, by searching up the node hierarchy when `pos` itself\nisn't a valid place but is at the start or end of a node. Return\nnull if no position was found.\n*/\nfunction insertPoint(doc, pos, nodeType) {\n    let $pos = doc.resolve(pos);\n    if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType))\n        return pos;\n    if ($pos.parentOffset == 0)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.index(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.before(d + 1);\n            if (index > 0)\n                return null;\n        }\n    if ($pos.parentOffset == $pos.parent.content.size)\n        for (let d = $pos.depth - 1; d >= 0; d--) {\n            let index = $pos.indexAfter(d);\n            if ($pos.node(d).canReplaceWith(index, index, nodeType))\n                return $pos.after(d + 1);\n            if (index < $pos.node(d).childCount)\n                return null;\n        }\n    return null;\n}\n/**\nFinds a position at or around the given position where the given\nslice can be inserted. Will look at parent nodes' nearest boundary\nand try there, even if the original position wasn't directly at the\nstart or end of that node. Returns null when no position was found.\n*/\nfunction dropPoint(doc, pos, slice) {\n    let $pos = doc.resolve(pos);\n    if (!slice.content.size)\n        return pos;\n    let content = slice.content;\n    for (let i = 0; i < slice.openStart; i++)\n        content = content.firstChild.content;\n    for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n        for (let d = $pos.depth; d >= 0; d--) {\n            let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n            let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n            let parent = $pos.node(d), fits = false;\n            if (pass == 1) {\n                fits = parent.canReplace(insertPos, insertPos, content);\n            }\n            else {\n                let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n                fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n            }\n            if (fits)\n                return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1);\n        }\n    }\n    return null;\n}\n\n/**\n‘Fit’ a slice into a given position in the document, producing a\n[step](https://prosemirror.net/docs/ref/#transform.Step) that inserts it. Will return null if\nthere's no meaningful way to insert the slice here, or inserting it\nwould be a no-op (an empty slice over an empty range).\n*/\nfunction replaceStep(doc, from, to = from, slice = Slice.empty) {\n    if (from == to && !slice.size)\n        return null;\n    let $from = doc.resolve(from), $to = doc.resolve(to);\n    // Optimization -- avoid work if it's obvious that it's not needed.\n    if (fitsTrivially($from, $to, slice))\n        return new ReplaceStep(from, to, slice);\n    return new Fitter($from, $to, slice).fit();\n}\nfunction fitsTrivially($from, $to, slice) {\n    return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n        $from.parent.canReplace($from.index(), $to.index(), slice.content);\n}\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n    constructor($from, $to, unplaced) {\n        this.$from = $from;\n        this.$to = $to;\n        this.unplaced = unplaced;\n        this.frontier = [];\n        this.placed = Fragment.empty;\n        for (let i = 0; i <= $from.depth; i++) {\n            let node = $from.node(i);\n            this.frontier.push({\n                type: node.type,\n                match: node.contentMatchAt($from.indexAfter(i))\n            });\n        }\n        for (let i = $from.depth; i > 0; i--)\n            this.placed = Fragment.from($from.node(i).copy(this.placed));\n    }\n    get depth() { return this.frontier.length - 1; }\n    fit() {\n        // As long as there's unplaced content, try to place some of it.\n        // If that fails, either increase the open score of the unplaced\n        // slice, or drop nodes from it, and then try again.\n        while (this.unplaced.size) {\n            let fit = this.findFittable();\n            if (fit)\n                this.placeNodes(fit);\n            else\n                this.openMore() || this.dropNode();\n        }\n        // When there's inline content directly after the frontier _and_\n        // directly after `this.$to`, we must generate a `ReplaceAround`\n        // step that pulls that content into the node after the frontier.\n        // That means the fitting must be done to the end of the textblock\n        // node after `this.$to`, not `this.$to` itself.\n        let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n        let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n        if (!$to)\n            return null;\n        // If closing to `$to` succeeded, create a step\n        let content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n        while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n            content = content.firstChild.content;\n            openStart--;\n            openEnd--;\n        }\n        let slice = new Slice(content, openStart, openEnd);\n        if (moveInline > -1)\n            return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize);\n        if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n            return new ReplaceStep($from.pos, $to.pos, slice);\n        return null;\n    }\n    // Find a position on the start spine of `this.unplaced` that has\n    // content that can be moved somewhere on the frontier. Returns two\n    // depths, one for the slice and one for the frontier.\n    findFittable() {\n        let startDepth = this.unplaced.openStart;\n        for (let cur = this.unplaced.content, d = 0, openEnd = this.unplaced.openEnd; d < startDepth; d++) {\n            let node = cur.firstChild;\n            if (cur.childCount > 1)\n                openEnd = 0;\n            if (node.type.spec.isolating && openEnd <= d) {\n                startDepth = d;\n                break;\n            }\n            cur = node.content;\n        }\n        // Only try wrapping nodes (pass 2) after finding a place without\n        // wrapping failed.\n        for (let pass = 1; pass <= 2; pass++) {\n            for (let sliceDepth = pass == 1 ? startDepth : this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n                let fragment, parent = null;\n                if (sliceDepth) {\n                    parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n                    fragment = parent.content;\n                }\n                else {\n                    fragment = this.unplaced.content;\n                }\n                let first = fragment.firstChild;\n                for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n                    let { type, match } = this.frontier[frontierDepth], wrap, inject = null;\n                    // In pass 1, if the next node matches, or there is no next\n                    // node but the parents look compatible, we've found a\n                    // place.\n                    if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                        : parent && type.compatibleContent(parent.type)))\n                        return { sliceDepth, frontierDepth, parent, inject };\n                    // In pass 2, look for a set of wrapping nodes that make\n                    // `first` fit here.\n                    else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n                        return { sliceDepth, frontierDepth, parent, wrap };\n                    // Don't continue looking further up if the parent node\n                    // would fit here.\n                    if (parent && match.matchType(parent.type))\n                        break;\n                }\n            }\n        }\n    }\n    openMore() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (!inner.childCount || inner.firstChild.isLeaf)\n            return false;\n        this.unplaced = new Slice(content, openStart + 1, Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n        return true;\n    }\n    dropNode() {\n        let { content, openStart, openEnd } = this.unplaced;\n        let inner = contentAt(content, openStart);\n        if (inner.childCount <= 1 && openStart > 0) {\n            let openAtEnd = content.size - openStart <= openStart + inner.size;\n            this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1, openAtEnd ? openStart - 1 : openEnd);\n        }\n        else {\n            this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n        }\n    }\n    // Move content from the unplaced slice at `sliceDepth` to the\n    // frontier node at `frontierDepth`. Close that frontier node when\n    // applicable.\n    placeNodes({ sliceDepth, frontierDepth, parent, inject, wrap }) {\n        while (this.depth > frontierDepth)\n            this.closeFrontierNode();\n        if (wrap)\n            for (let i = 0; i < wrap.length; i++)\n                this.openFrontierNode(wrap[i]);\n        let slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n        let openStart = slice.openStart - sliceDepth;\n        let taken = 0, add = [];\n        let { match, type } = this.frontier[frontierDepth];\n        if (inject) {\n            for (let i = 0; i < inject.childCount; i++)\n                add.push(inject.child(i));\n            match = match.matchFragment(inject);\n        }\n        // Computes the amount of (end) open nodes at the end of the\n        // fragment. When 0, the parent is open, but no more. When\n        // negative, nothing is open.\n        let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n        // Scan over the fragment, fitting as many child nodes as\n        // possible.\n        while (taken < fragment.childCount) {\n            let next = fragment.child(taken), matches = match.matchType(next.type);\n            if (!matches)\n                break;\n            taken++;\n            if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n                match = matches;\n                add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0, taken == fragment.childCount ? openEndCount : -1));\n            }\n        }\n        let toEnd = taken == fragment.childCount;\n        if (!toEnd)\n            openEndCount = -1;\n        this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n        this.frontier[frontierDepth].match = match;\n        // If the parent types match, and the entire node was moved, and\n        // it's not open, close this frontier node right away.\n        if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n            this.closeFrontierNode();\n        // Add new frontier nodes for any open nodes at the end.\n        for (let i = 0, cur = fragment; i < openEndCount; i++) {\n            let node = cur.lastChild;\n            this.frontier.push({ type: node.type, match: node.contentMatchAt(node.childCount) });\n            cur = node.content;\n        }\n        // Update `this.unplaced`. Drop the entire node from which we\n        // placed it we got to its end, otherwise just drop the placed\n        // nodes.\n        this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n            : sliceDepth == 0 ? Slice.empty\n                : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1), sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n    }\n    mustMoveInline() {\n        if (!this.$to.parent.isTextblock)\n            return -1;\n        let top = this.frontier[this.depth], level;\n        if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n            (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth))\n            return -1;\n        let { depth } = this.$to, after = this.$to.after(depth);\n        while (depth > 1 && after == this.$to.end(--depth))\n            ++after;\n        return after;\n    }\n    findCloseLevel($to) {\n        scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n            let { match, type } = this.frontier[i];\n            let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n            let fit = contentAfterFits($to, i, type, match, dropInner);\n            if (!fit)\n                continue;\n            for (let d = i - 1; d >= 0; d--) {\n                let { match, type } = this.frontier[d];\n                let matches = contentAfterFits($to, d, type, match, true);\n                if (!matches || matches.childCount)\n                    continue scan;\n            }\n            return { depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to };\n        }\n    }\n    close($to) {\n        let close = this.findCloseLevel($to);\n        if (!close)\n            return null;\n        while (this.depth > close.depth)\n            this.closeFrontierNode();\n        if (close.fit.childCount)\n            this.placed = addToFragment(this.placed, close.depth, close.fit);\n        $to = close.move;\n        for (let d = close.depth + 1; d <= $to.depth; d++) {\n            let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n            this.openFrontierNode(node.type, node.attrs, add);\n        }\n        return $to;\n    }\n    openFrontierNode(type, attrs = null, content) {\n        let top = this.frontier[this.depth];\n        top.match = top.match.matchType(type);\n        this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n        this.frontier.push({ type, match: type.contentMatch });\n    }\n    closeFrontierNode() {\n        let open = this.frontier.pop();\n        let add = open.match.fillBefore(Fragment.empty, true);\n        if (add.childCount)\n            this.placed = addToFragment(this.placed, this.frontier.length, add);\n    }\n}\nfunction dropFromFragment(fragment, depth, count) {\n    if (depth == 0)\n        return fragment.cutByIndex(count, fragment.childCount);\n    return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)));\n}\nfunction addToFragment(fragment, depth, content) {\n    if (depth == 0)\n        return fragment.append(content);\n    return fragment.replaceChild(fragment.childCount - 1, fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)));\n}\nfunction contentAt(fragment, depth) {\n    for (let i = 0; i < depth; i++)\n        fragment = fragment.firstChild.content;\n    return fragment;\n}\nfunction closeNodeStart(node, openStart, openEnd) {\n    if (openStart <= 0)\n        return node;\n    let frag = node.content;\n    if (openStart > 1)\n        frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0));\n    if (openStart > 0) {\n        frag = node.type.contentMatch.fillBefore(frag).append(frag);\n        if (openEnd <= 0)\n            frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true));\n    }\n    return node.copy(frag);\n}\nfunction contentAfterFits($to, depth, type, match, open) {\n    let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n    if (index == node.childCount && !type.compatibleContent(node.type))\n        return null;\n    let fit = match.fillBefore(node.content, true, index);\n    return fit && !invalidMarks(type, node.content, index) ? fit : null;\n}\nfunction invalidMarks(type, fragment, start) {\n    for (let i = start; i < fragment.childCount; i++)\n        if (!type.allowsMarks(fragment.child(i).marks))\n            return true;\n    return false;\n}\nfunction definesContent(type) {\n    return type.spec.defining || type.spec.definingForContent;\n}\nfunction replaceRange(tr, from, to, slice) {\n    if (!slice.size)\n        return tr.deleteRange(from, to);\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    if (fitsTrivially($from, $to, slice))\n        return tr.step(new ReplaceStep(from, to, slice));\n    let targetDepths = coveredDepths($from, tr.doc.resolve(to));\n    // Can't replace the whole document, so remove 0 if it's present\n    if (targetDepths[targetDepths.length - 1] == 0)\n        targetDepths.pop();\n    // Negative numbers represent not expansion over the whole node at\n    // that depth, but replacing from $from.before(-D) to $to.pos.\n    let preferredTarget = -($from.depth + 1);\n    targetDepths.unshift(preferredTarget);\n    // This loop picks a preferred target depth, if one of the covering\n    // depths is not outside of a defining node, and adds negative\n    // depths for any depth that has $from at its start and does not\n    // cross a defining node.\n    for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n        let spec = $from.node(d).type.spec;\n        if (spec.defining || spec.definingAsContext || spec.isolating)\n            break;\n        if (targetDepths.indexOf(d) > -1)\n            preferredTarget = d;\n        else if ($from.before(d) == pos)\n            targetDepths.splice(1, 0, -d);\n    }\n    // Try to fit each possible depth of the slice into each possible\n    // target depth, starting with the preferred depths.\n    let preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n    let leftNodes = [], preferredDepth = slice.openStart;\n    for (let content = slice.content, i = 0;; i++) {\n        let node = content.firstChild;\n        leftNodes.push(node);\n        if (i == slice.openStart)\n            break;\n        content = node.content;\n    }\n    // Back up preferredDepth to cover defining textblocks directly\n    // above it, possibly skipping a non-defining textblock.\n    for (let d = preferredDepth - 1; d >= 0; d--) {\n        let leftNode = leftNodes[d], def = definesContent(leftNode.type);\n        if (def && !leftNode.sameMarkup($from.node(Math.abs(preferredTarget) - 1)))\n            preferredDepth = d;\n        else if (def || !leftNode.type.isTextblock)\n            break;\n    }\n    for (let j = slice.openStart; j >= 0; j--) {\n        let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n        let insert = leftNodes[openDepth];\n        if (!insert)\n            continue;\n        for (let i = 0; i < targetDepths.length; i++) {\n            // Loop over possible expansion levels, starting with the\n            // preferred one\n            let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true;\n            if (targetDepth < 0) {\n                expand = false;\n                targetDepth = -targetDepth;\n            }\n            let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n            if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n                return tr.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to, new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth), openDepth, slice.openEnd));\n        }\n    }\n    let startSteps = tr.steps.length;\n    for (let i = targetDepths.length - 1; i >= 0; i--) {\n        tr.replace(from, to, slice);\n        if (tr.steps.length > startSteps)\n            break;\n        let depth = targetDepths[i];\n        if (depth < 0)\n            continue;\n        from = $from.before(depth);\n        to = $to.after(depth);\n    }\n}\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n    if (depth < oldOpen) {\n        let first = fragment.firstChild;\n        fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n    }\n    if (depth > newOpen) {\n        let match = parent.contentMatchAt(0);\n        let start = match.fillBefore(fragment).append(fragment);\n        fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n    }\n    return fragment;\n}\nfunction replaceRangeWith(tr, from, to, node) {\n    if (!node.isInline && from == to && tr.doc.resolve(from).parent.content.size) {\n        let point = insertPoint(tr.doc, from, node.type);\n        if (point != null)\n            from = to = point;\n    }\n    tr.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0));\n}\nfunction deleteRange(tr, from, to) {\n    let $from = tr.doc.resolve(from), $to = tr.doc.resolve(to);\n    let covered = coveredDepths($from, $to);\n    for (let i = 0; i < covered.length; i++) {\n        let depth = covered[i], last = i == covered.length - 1;\n        if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n            return tr.delete($from.start(depth), $to.end(depth));\n        if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n            return tr.delete($from.before(depth), $to.after(depth));\n    }\n    for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n        if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d &&\n            $from.start(d - 1) == $to.start(d - 1) && $from.node(d - 1).canReplace($from.index(d - 1), $to.index(d - 1)))\n            return tr.delete($from.before(d), to);\n    }\n    tr.delete(from, to);\n}\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n    let result = [], minDepth = Math.min($from.depth, $to.depth);\n    for (let d = minDepth; d >= 0; d--) {\n        let start = $from.start(d);\n        if (start < $from.pos - ($from.depth - d) ||\n            $to.end(d) > $to.pos + ($to.depth - d) ||\n            $from.node(d).type.spec.isolating ||\n            $to.node(d).type.spec.isolating)\n            break;\n        if (start == $to.start(d) ||\n            (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n                d && $to.start(d - 1) == start - 1))\n            result.push(d);\n    }\n    return result;\n}\n\n/**\nUpdate an attribute in a specific node.\n*/\nclass AttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The position of the target node.\n    */\n    pos, \n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.pos = pos;\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let node = doc.nodeAt(this.pos);\n        if (!node)\n            return StepResult.fail(\"No node at attribute step's position\");\n        let attrs = Object.create(null);\n        for (let name in node.attrs)\n            attrs[name] = node.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = node.type.create(attrs, null, node.marks);\n        return StepResult.fromReplace(doc, this.pos, this.pos + 1, new Slice(Fragment.from(updated), 0, node.isLeaf ? 0 : 1));\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new AttrStep(this.pos, this.attr, doc.nodeAt(this.pos).attrs[this.attr]);\n    }\n    map(mapping) {\n        let pos = mapping.mapResult(this.pos, 1);\n        return pos.deletedAfter ? null : new AttrStep(pos.pos, this.attr, this.value);\n    }\n    toJSON() {\n        return { stepType: \"attr\", pos: this.pos, attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.pos != \"number\" || typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for AttrStep.fromJSON\");\n        return new AttrStep(json.pos, json.attr, json.value);\n    }\n}\nStep.jsonID(\"attr\", AttrStep);\n/**\nUpdate an attribute in the doc node.\n*/\nclass DocAttrStep extends Step {\n    /**\n    Construct an attribute step.\n    */\n    constructor(\n    /**\n    The attribute to set.\n    */\n    attr, \n    // The attribute's new value.\n    value) {\n        super();\n        this.attr = attr;\n        this.value = value;\n    }\n    apply(doc) {\n        let attrs = Object.create(null);\n        for (let name in doc.attrs)\n            attrs[name] = doc.attrs[name];\n        attrs[this.attr] = this.value;\n        let updated = doc.type.create(attrs, doc.content, doc.marks);\n        return StepResult.ok(updated);\n    }\n    getMap() {\n        return StepMap.empty;\n    }\n    invert(doc) {\n        return new DocAttrStep(this.attr, doc.attrs[this.attr]);\n    }\n    map(mapping) {\n        return this;\n    }\n    toJSON() {\n        return { stepType: \"docAttr\", attr: this.attr, value: this.value };\n    }\n    static fromJSON(schema, json) {\n        if (typeof json.attr != \"string\")\n            throw new RangeError(\"Invalid input for DocAttrStep.fromJSON\");\n        return new DocAttrStep(json.attr, json.value);\n    }\n}\nStep.jsonID(\"docAttr\", DocAttrStep);\n\n/**\n@internal\n*/\nlet TransformError = class extends Error {\n};\nTransformError = function TransformError(message) {\n    let err = Error.call(this, message);\n    err.__proto__ = TransformError.prototype;\n    return err;\n};\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n/**\nAbstraction to build up and track an array of\n[steps](https://prosemirror.net/docs/ref/#transform.Step) representing a document transformation.\n\nMost transforming methods return the `Transform` object itself, so\nthat they can be chained.\n*/\nclass Transform {\n    /**\n    Create a transform that starts with the given document.\n    */\n    constructor(\n    /**\n    The current document (the result of applying the steps in the\n    transform).\n    */\n    doc) {\n        this.doc = doc;\n        /**\n        The steps in this transform.\n        */\n        this.steps = [];\n        /**\n        The documents before each of the steps.\n        */\n        this.docs = [];\n        /**\n        A mapping with the maps for each of the steps in this transform.\n        */\n        this.mapping = new Mapping;\n    }\n    /**\n    The starting document.\n    */\n    get before() { return this.docs.length ? this.docs[0] : this.doc; }\n    /**\n    Apply a new step in this transform, saving the result. Throws an\n    error when the step fails.\n    */\n    step(step) {\n        let result = this.maybeStep(step);\n        if (result.failed)\n            throw new TransformError(result.failed);\n        return this;\n    }\n    /**\n    Try to apply a step in this transformation, ignoring it if it\n    fails. Returns the step result.\n    */\n    maybeStep(step) {\n        let result = step.apply(this.doc);\n        if (!result.failed)\n            this.addStep(step, result.doc);\n        return result;\n    }\n    /**\n    True when the document has been changed (when there are any\n    steps).\n    */\n    get docChanged() {\n        return this.steps.length > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        this.docs.push(this.doc);\n        this.steps.push(step);\n        this.mapping.appendMap(step.getMap());\n        this.doc = doc;\n    }\n    /**\n    Replace the part of the document between `from` and `to` with the\n    given `slice`.\n    */\n    replace(from, to = from, slice = Slice.empty) {\n        let step = replaceStep(this.doc, from, to, slice);\n        if (step)\n            this.step(step);\n        return this;\n    }\n    /**\n    Replace the given range with the given content, which may be a\n    fragment, node, or array of nodes.\n    */\n    replaceWith(from, to, content) {\n        return this.replace(from, to, new Slice(Fragment.from(content), 0, 0));\n    }\n    /**\n    Delete the content between the given positions.\n    */\n    delete(from, to) {\n        return this.replace(from, to, Slice.empty);\n    }\n    /**\n    Insert the given content at the given position.\n    */\n    insert(pos, content) {\n        return this.replaceWith(pos, pos, content);\n    }\n    /**\n    Replace a range of the document with a given slice, using\n    `from`, `to`, and the slice's\n    [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather\n    than fixed start and end points. This method may grow the\n    replaced area or close open nodes in the slice in order to get a\n    fit that is more in line with WYSIWYG expectations, by dropping\n    fully covered parent nodes of the replaced region when they are\n    marked [non-defining as\n    context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an\n    open parent node from the slice that _is_ marked as [defining\n    its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).\n    \n    This is the method, for example, to handle paste. The similar\n    [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more\n    primitive tool which will _not_ move the start and end of its given\n    range, and is useful in situations where you need more precise\n    control over what happens.\n    */\n    replaceRange(from, to, slice) {\n        replaceRange(this, from, to, slice);\n        return this;\n    }\n    /**\n    Replace the given range with a node, but use `from` and `to` as\n    hints, rather than precise positions. When from and to are the same\n    and are at the start or end of a parent node in which the given\n    node doesn't fit, this method may _move_ them out towards a parent\n    that does allow the given node to be placed. When the given range\n    completely covers a parent node, this method may completely replace\n    that parent node.\n    */\n    replaceRangeWith(from, to, node) {\n        replaceRangeWith(this, from, to, node);\n        return this;\n    }\n    /**\n    Delete the given range, expanding it to cover fully covered\n    parent nodes until a valid replace is found.\n    */\n    deleteRange(from, to) {\n        deleteRange(this, from, to);\n        return this;\n    }\n    /**\n    Split the content in the given range off from its parent, if there\n    is sibling content before or after it, and move it up the tree to\n    the depth specified by `target`. You'll probably want to use\n    [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make\n    sure the lift is valid.\n    */\n    lift(range, target) {\n        lift(this, range, target);\n        return this;\n    }\n    /**\n    Join the blocks around the given position. If depth is 2, their\n    last and first siblings are also joined, and so on.\n    */\n    join(pos, depth = 1) {\n        join(this, pos, depth);\n        return this;\n    }\n    /**\n    Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.\n    The wrappers are assumed to be valid in this position, and should\n    probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).\n    */\n    wrap(range, wrappers) {\n        wrap(this, range, wrappers);\n        return this;\n    }\n    /**\n    Set the type of all textblocks (partly) between `from` and `to` to\n    the given node type with the given attributes.\n    */\n    setBlockType(from, to = from, type, attrs = null) {\n        setBlockType(this, from, to, type, attrs);\n        return this;\n    }\n    /**\n    Change the type, attributes, and/or marks of the node at `pos`.\n    When `type` isn't given, the existing node type is preserved,\n    */\n    setNodeMarkup(pos, type, attrs = null, marks) {\n        setNodeMarkup(this, pos, type, attrs, marks);\n        return this;\n    }\n    /**\n    Set a single attribute on a given node to a new value.\n    The `pos` addresses the document content. Use `setDocAttribute`\n    to set attributes on the document itself.\n    */\n    setNodeAttribute(pos, attr, value) {\n        this.step(new AttrStep(pos, attr, value));\n        return this;\n    }\n    /**\n    Set a single attribute on the document to a new value.\n    */\n    setDocAttribute(attr, value) {\n        this.step(new DocAttrStep(attr, value));\n        return this;\n    }\n    /**\n    Add a mark to the node at position `pos`.\n    */\n    addNodeMark(pos, mark) {\n        this.step(new AddNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Remove a mark (or a mark of the given type) from the node at\n    position `pos`.\n    */\n    removeNodeMark(pos, mark) {\n        if (!(mark instanceof Mark)) {\n            let node = this.doc.nodeAt(pos);\n            if (!node)\n                throw new RangeError(\"No node at position \" + pos);\n            mark = mark.isInSet(node.marks);\n            if (!mark)\n                return this;\n        }\n        this.step(new RemoveNodeMarkStep(pos, mark));\n        return this;\n    }\n    /**\n    Split the node at the given position, and optionally, if `depth` is\n    greater than one, any number of nodes above that. By default, the\n    parts split off will inherit the node type of the original node.\n    This can be changed by passing an array of types and attributes to\n    use after the split.\n    */\n    split(pos, depth = 1, typesAfter) {\n        split(this, pos, depth, typesAfter);\n        return this;\n    }\n    /**\n    Add the given mark to the inline content between `from` and `to`.\n    */\n    addMark(from, to, mark) {\n        addMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Remove marks from inline nodes between `from` and `to`. When\n    `mark` is a single mark, remove precisely that mark. When it is\n    a mark type, remove all marks of that type. When it is null,\n    remove all marks of any type.\n    */\n    removeMark(from, to, mark) {\n        removeMark(this, from, to, mark);\n        return this;\n    }\n    /**\n    Removes all marks and nodes from the content of the node at\n    `pos` that don't match the given new parent node type. Accepts\n    an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as\n    third argument.\n    */\n    clearIncompatible(pos, parentType, match) {\n        clearIncompatible(this, pos, parentType, match);\n        return this;\n    }\n}\n\nexport { AddMarkStep, AddNodeMarkStep, AttrStep, DocAttrStep, MapResult, Mapping, RemoveMarkStep, RemoveNodeMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nconst classesById = Object.create(null);\n/**\nSuperclass for editor selections. Every selection type should\nextend this. Should not be instantiated directly.\n*/\nclass Selection {\n    /**\n    Initialize a selection with the head and anchor and ranges. If no\n    ranges are given, constructs a single range across `$anchor` and\n    `$head`.\n    */\n    constructor(\n    /**\n    The resolved anchor of the selection (the side that stays in\n    place when the selection is modified).\n    */\n    $anchor, \n    /**\n    The resolved head of the selection (the side that moves when\n    the selection is modified).\n    */\n    $head, ranges) {\n        this.$anchor = $anchor;\n        this.$head = $head;\n        this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n    }\n    /**\n    The selection's anchor, as an unresolved position.\n    */\n    get anchor() { return this.$anchor.pos; }\n    /**\n    The selection's head.\n    */\n    get head() { return this.$head.pos; }\n    /**\n    The lower bound of the selection's main range.\n    */\n    get from() { return this.$from.pos; }\n    /**\n    The upper bound of the selection's main range.\n    */\n    get to() { return this.$to.pos; }\n    /**\n    The resolved lower  bound of the selection's main range.\n    */\n    get $from() {\n        return this.ranges[0].$from;\n    }\n    /**\n    The resolved upper bound of the selection's main range.\n    */\n    get $to() {\n        return this.ranges[0].$to;\n    }\n    /**\n    Indicates whether the selection contains any content.\n    */\n    get empty() {\n        let ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++)\n            if (ranges[i].$from.pos != ranges[i].$to.pos)\n                return false;\n        return true;\n    }\n    /**\n    Get the content of this selection as a slice.\n    */\n    content() {\n        return this.$from.doc.slice(this.from, this.to, true);\n    }\n    /**\n    Replace the selection with a slice or, if no slice is given,\n    delete the selection. Will append to the given transaction.\n    */\n    replace(tr, content = Slice.empty) {\n        // Put the new selection at the position after the inserted\n        // content. When that ended in an inline node, search backwards,\n        // to get the position after that node. If not, search forward.\n        let lastNode = content.content.lastChild, lastParent = null;\n        for (let i = 0; i < content.openEnd; i++) {\n            lastParent = lastNode;\n            lastNode = lastNode.lastChild;\n        }\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content);\n            if (i == 0)\n                selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1);\n        }\n    }\n    /**\n    Replace the selection with the given node, appending the changes\n    to the given transaction.\n    */\n    replaceWith(tr, node) {\n        let mapFrom = tr.steps.length, ranges = this.ranges;\n        for (let i = 0; i < ranges.length; i++) {\n            let { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n            let from = mapping.map($from.pos), to = mapping.map($to.pos);\n            if (i) {\n                tr.deleteRange(from, to);\n            }\n            else {\n                tr.replaceRangeWith(from, to, node);\n                selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n            }\n        }\n    }\n    /**\n    Find a valid cursor or leaf node selection starting at the given\n    position and searching back if `dir` is negative, and forward if\n    positive. When `textOnly` is true, only consider cursor\n    selections. Will return null when no valid selection position is\n    found.\n    */\n    static findFrom($pos, dir, textOnly = false) {\n        let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n            : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n        if (inner)\n            return inner;\n        for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n            let found = dir < 0\n                ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n                : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    /**\n    Find a valid cursor or leaf node selection near the given\n    position. Searches forward first by default, but if `bias` is\n    negative, it will search backwards first.\n    */\n    static near($pos, bias = 1) {\n        return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0));\n    }\n    /**\n    Find the cursor or leaf node selection closest to the start of\n    the given document. Will return an\n    [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position\n    exists.\n    */\n    static atStart(doc) {\n        return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc);\n    }\n    /**\n    Find the cursor or leaf node selection closest to the end of the\n    given document.\n    */\n    static atEnd(doc) {\n        return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc);\n    }\n    /**\n    Deserialize the JSON representation of a selection. Must be\n    implemented for custom classes (as a static class method).\n    */\n    static fromJSON(doc, json) {\n        if (!json || !json.type)\n            throw new RangeError(\"Invalid input for Selection.fromJSON\");\n        let cls = classesById[json.type];\n        if (!cls)\n            throw new RangeError(`No selection type ${json.type} defined`);\n        return cls.fromJSON(doc, json);\n    }\n    /**\n    To be able to deserialize selections from JSON, custom selection\n    classes must register themselves with an ID string, so that they\n    can be disambiguated. Try to pick something that's unlikely to\n    clash with classes from other modules.\n    */\n    static jsonID(id, selectionClass) {\n        if (id in classesById)\n            throw new RangeError(\"Duplicate use of selection JSON ID \" + id);\n        classesById[id] = selectionClass;\n        selectionClass.prototype.jsonID = id;\n        return selectionClass;\n    }\n    /**\n    Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,\n    which is a value that can be mapped without having access to a\n    current document, and later resolved to a real selection for a\n    given document again. (This is used mostly by the history to\n    track and restore old selections.) The default implementation of\n    this method just converts the selection to a text selection and\n    returns the bookmark for that.\n    */\n    getBookmark() {\n        return TextSelection.between(this.$anchor, this.$head).getBookmark();\n    }\n}\nSelection.prototype.visible = true;\n/**\nRepresents a selected range in a document.\n*/\nclass SelectionRange {\n    /**\n    Create a range.\n    */\n    constructor(\n    /**\n    The lower bound of the range.\n    */\n    $from, \n    /**\n    The upper bound of the range.\n    */\n    $to) {\n        this.$from = $from;\n        this.$to = $to;\n    }\n}\nlet warnedAboutTextSelection = false;\nfunction checkTextSelection($pos) {\n    if (!warnedAboutTextSelection && !$pos.parent.inlineContent) {\n        warnedAboutTextSelection = true;\n        console[\"warn\"](\"TextSelection endpoint not pointing into a node with inline content (\" + $pos.parent.type.name + \")\");\n    }\n}\n/**\nA text selection represents a classical editor selection, with a\nhead (the moving side) and anchor (immobile side), both of which\npoint into textblock nodes. It can be empty (a regular cursor\nposition).\n*/\nclass TextSelection extends Selection {\n    /**\n    Construct a text selection between the given points.\n    */\n    constructor($anchor, $head = $anchor) {\n        checkTextSelection($anchor);\n        checkTextSelection($head);\n        super($anchor, $head);\n    }\n    /**\n    Returns a resolved position if this is a cursor selection (an\n    empty text selection), and null otherwise.\n    */\n    get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null; }\n    map(doc, mapping) {\n        let $head = doc.resolve(mapping.map(this.head));\n        if (!$head.parent.inlineContent)\n            return Selection.near($head);\n        let $anchor = doc.resolve(mapping.map(this.anchor));\n        return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head);\n    }\n    replace(tr, content = Slice.empty) {\n        super.replace(tr, content);\n        if (content == Slice.empty) {\n            let marks = this.$from.marksAcross(this.$to);\n            if (marks)\n                tr.ensureMarks(marks);\n        }\n    }\n    eq(other) {\n        return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head;\n    }\n    getBookmark() {\n        return new TextBookmark(this.anchor, this.head);\n    }\n    toJSON() {\n        return { type: \"text\", anchor: this.anchor, head: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid input for TextSelection.fromJSON\");\n        return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n    }\n    /**\n    Create a text selection from non-resolved positions.\n    */\n    static create(doc, anchor, head = anchor) {\n        let $anchor = doc.resolve(anchor);\n        return new this($anchor, head == anchor ? $anchor : doc.resolve(head));\n    }\n    /**\n    Return a text selection that spans the given positions or, if\n    they aren't text positions, find a text selection near them.\n    `bias` determines whether the method searches forward (default)\n    or backwards (negative number) first. Will fall back to calling\n    [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document\n    doesn't contain a valid text position.\n    */\n    static between($anchor, $head, bias) {\n        let dPos = $anchor.pos - $head.pos;\n        if (!bias || dPos)\n            bias = dPos >= 0 ? 1 : -1;\n        if (!$head.parent.inlineContent) {\n            let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n            if (found)\n                $head = found.$head;\n            else\n                return Selection.near($head, bias);\n        }\n        if (!$anchor.parent.inlineContent) {\n            if (dPos == 0) {\n                $anchor = $head;\n            }\n            else {\n                $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n                if (($anchor.pos < $head.pos) != (dPos < 0))\n                    $anchor = $head;\n            }\n        }\n        return new TextSelection($anchor, $head);\n    }\n}\nSelection.jsonID(\"text\", TextSelection);\nclass TextBookmark {\n    constructor(anchor, head) {\n        this.anchor = anchor;\n        this.head = head;\n    }\n    map(mapping) {\n        return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head));\n    }\n    resolve(doc) {\n        return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head));\n    }\n}\n/**\nA node selection is a selection that points at a single node. All\nnodes marked [selectable](https://prosemirror.net/docs/ref/#model.NodeSpec.selectable) can be the\ntarget of a node selection. In such a selection, `from` and `to`\npoint directly before and after the selected node, `anchor` equals\n`from`, and `head` equals `to`..\n*/\nclass NodeSelection extends Selection {\n    /**\n    Create a node selection. Does not verify the validity of its\n    argument.\n    */\n    constructor($pos) {\n        let node = $pos.nodeAfter;\n        let $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n        super($pos, $end);\n        this.node = node;\n    }\n    map(doc, mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        let $pos = doc.resolve(pos);\n        if (deleted)\n            return Selection.near($pos);\n        return new NodeSelection($pos);\n    }\n    content() {\n        return new Slice(Fragment.from(this.node), 0, 0);\n    }\n    eq(other) {\n        return other instanceof NodeSelection && other.anchor == this.anchor;\n    }\n    toJSON() {\n        return { type: \"node\", anchor: this.anchor };\n    }\n    getBookmark() { return new NodeBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.anchor != \"number\")\n            throw new RangeError(\"Invalid input for NodeSelection.fromJSON\");\n        return new NodeSelection(doc.resolve(json.anchor));\n    }\n    /**\n    Create a node selection from non-resolved positions.\n    */\n    static create(doc, from) {\n        return new NodeSelection(doc.resolve(from));\n    }\n    /**\n    Determines whether the given node may be selected as a node\n    selection.\n    */\n    static isSelectable(node) {\n        return !node.isText && node.type.spec.selectable !== false;\n    }\n}\nNodeSelection.prototype.visible = false;\nSelection.jsonID(\"node\", NodeSelection);\nclass NodeBookmark {\n    constructor(anchor) {\n        this.anchor = anchor;\n    }\n    map(mapping) {\n        let { deleted, pos } = mapping.mapResult(this.anchor);\n        return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos);\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n        if (node && NodeSelection.isSelectable(node))\n            return new NodeSelection($pos);\n        return Selection.near($pos);\n    }\n}\n/**\nA selection type that represents selecting the whole document\n(which can not necessarily be expressed with a text selection, when\nthere are for example leaf block nodes at the start or end of the\ndocument).\n*/\nclass AllSelection extends Selection {\n    /**\n    Create an all-selection over the given document.\n    */\n    constructor(doc) {\n        super(doc.resolve(0), doc.resolve(doc.content.size));\n    }\n    replace(tr, content = Slice.empty) {\n        if (content == Slice.empty) {\n            tr.delete(0, tr.doc.content.size);\n            let sel = Selection.atStart(tr.doc);\n            if (!sel.eq(tr.selection))\n                tr.setSelection(sel);\n        }\n        else {\n            super.replace(tr, content);\n        }\n    }\n    toJSON() { return { type: \"all\" }; }\n    /**\n    @internal\n    */\n    static fromJSON(doc) { return new AllSelection(doc); }\n    map(doc) { return new AllSelection(doc); }\n    eq(other) { return other instanceof AllSelection; }\n    getBookmark() { return AllBookmark; }\n}\nSelection.jsonID(\"all\", AllSelection);\nconst AllBookmark = {\n    map() { return this; },\n    resolve(doc) { return new AllSelection(doc); }\n};\n// FIXME we'll need some awareness of text direction when scanning for selections\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text = false) {\n    if (node.inlineContent)\n        return TextSelection.create(doc, pos);\n    for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n        let child = node.child(i);\n        if (!child.isAtom) {\n            let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n            if (inner)\n                return inner;\n        }\n        else if (!text && NodeSelection.isSelectable(child)) {\n            return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0));\n        }\n        pos += child.nodeSize * dir;\n    }\n    return null;\n}\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    let last = tr.steps.length - 1;\n    if (last < startLen)\n        return;\n    let step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep))\n        return;\n    let map = tr.mapping.maps[last], end;\n    map.forEach((_from, _to, _newFrom, newTo) => { if (end == null)\n        end = newTo; });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n/**\nAn editor state transaction, which can be applied to a state to\ncreate an updated state. Use\n[`EditorState.tr`](https://prosemirror.net/docs/ref/#state.EditorState.tr) to create an instance.\n\nTransactions track changes to the document (they are a subclass of\n[`Transform`](https://prosemirror.net/docs/ref/#transform.Transform)), but also other state changes,\nlike selection updates and adjustments of the set of [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks). In addition, you can store\nmetadata properties in a transaction, which are extra pieces of\ninformation that client code or plugins can use to describe what a\ntransaction represents, so that they can update their [own\nstate](https://prosemirror.net/docs/ref/#state.StateField) accordingly.\n\nThe [editor view](https://prosemirror.net/docs/ref/#view.EditorView) uses a few metadata\nproperties: it will attach a property `\"pointer\"` with the value\n`true` to selection transactions directly caused by mouse or touch\ninput, a `\"composition\"` property holding an ID identifying the\ncomposition that caused it to transactions caused by composed DOM\ninput, and a `\"uiEvent\"` property of that may be `\"paste\"`,\n`\"cut\"`, or `\"drop\"`.\n*/\nclass Transaction extends Transform {\n    /**\n    @internal\n    */\n    constructor(state) {\n        super(state.doc);\n        // The step count for which the current selection is valid.\n        this.curSelectionFor = 0;\n        // Bitfield to track which aspects of the state were updated by\n        // this transaction.\n        this.updated = 0;\n        // Object used to store metadata properties for the transaction.\n        this.meta = Object.create(null);\n        this.time = Date.now();\n        this.curSelection = state.selection;\n        this.storedMarks = state.storedMarks;\n    }\n    /**\n    The transaction's current selection. This defaults to the editor\n    selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the\n    transaction, but can be overwritten with\n    [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).\n    */\n    get selection() {\n        if (this.curSelectionFor < this.steps.length) {\n            this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n            this.curSelectionFor = this.steps.length;\n        }\n        return this.curSelection;\n    }\n    /**\n    Update the transaction's current selection. Will determine the\n    selection that the editor gets when the transaction is applied.\n    */\n    setSelection(selection) {\n        if (selection.$from.doc != this.doc)\n            throw new RangeError(\"Selection passed to setSelection must point at the current document\");\n        this.curSelection = selection;\n        this.curSelectionFor = this.steps.length;\n        this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n        this.storedMarks = null;\n        return this;\n    }\n    /**\n    Whether the selection was explicitly updated by this transaction.\n    */\n    get selectionSet() {\n        return (this.updated & UPDATED_SEL) > 0;\n    }\n    /**\n    Set the current stored marks.\n    */\n    setStoredMarks(marks) {\n        this.storedMarks = marks;\n        this.updated |= UPDATED_MARKS;\n        return this;\n    }\n    /**\n    Make sure the current stored marks or, if that is null, the marks\n    at the selection, match the given set of marks. Does nothing if\n    this is already the case.\n    */\n    ensureMarks(marks) {\n        if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n            this.setStoredMarks(marks);\n        return this;\n    }\n    /**\n    Add a mark to the set of stored marks.\n    */\n    addStoredMark(mark) {\n        return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Remove a mark or mark type from the set of stored marks.\n    */\n    removeStoredMark(mark) {\n        return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()));\n    }\n    /**\n    Whether the stored marks were explicitly set for this transaction.\n    */\n    get storedMarksSet() {\n        return (this.updated & UPDATED_MARKS) > 0;\n    }\n    /**\n    @internal\n    */\n    addStep(step, doc) {\n        super.addStep(step, doc);\n        this.updated = this.updated & ~UPDATED_MARKS;\n        this.storedMarks = null;\n    }\n    /**\n    Update the timestamp for the transaction.\n    */\n    setTime(time) {\n        this.time = time;\n        return this;\n    }\n    /**\n    Replace the current selection with the given slice.\n    */\n    replaceSelection(slice) {\n        this.selection.replace(this, slice);\n        return this;\n    }\n    /**\n    Replace the selection with the given node. When `inheritMarks` is\n    true and the content is inline, it inherits the marks from the\n    place where it is inserted.\n    */\n    replaceSelectionWith(node, inheritMarks = true) {\n        let selection = this.selection;\n        if (inheritMarks)\n            node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)));\n        selection.replaceWith(this, node);\n        return this;\n    }\n    /**\n    Delete the selection.\n    */\n    deleteSelection() {\n        this.selection.replace(this);\n        return this;\n    }\n    /**\n    Replace the given range, or the selection if no range is given,\n    with a text node containing the given string.\n    */\n    insertText(text, from, to) {\n        let schema = this.doc.type.schema;\n        if (from == null) {\n            if (!text)\n                return this.deleteSelection();\n            return this.replaceSelectionWith(schema.text(text), true);\n        }\n        else {\n            if (to == null)\n                to = from;\n            to = to == null ? from : to;\n            if (!text)\n                return this.deleteRange(from, to);\n            let marks = this.storedMarks;\n            if (!marks) {\n                let $from = this.doc.resolve(from);\n                marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n            }\n            this.replaceRangeWith(from, to, schema.text(text, marks));\n            if (!this.selection.empty)\n                this.setSelection(Selection.near(this.selection.$to));\n            return this;\n        }\n    }\n    /**\n    Store a metadata property in this transaction, keyed either by\n    name or by plugin.\n    */\n    setMeta(key, value) {\n        this.meta[typeof key == \"string\" ? key : key.key] = value;\n        return this;\n    }\n    /**\n    Retrieve a metadata property for a given name or plugin.\n    */\n    getMeta(key) {\n        return this.meta[typeof key == \"string\" ? key : key.key];\n    }\n    /**\n    Returns true if this transaction doesn't contain any metadata,\n    and can thus safely be extended.\n    */\n    get isGeneric() {\n        for (let _ in this.meta)\n            return false;\n        return true;\n    }\n    /**\n    Indicate that the editor should scroll the selection into view\n    when updated to the state produced by this transaction.\n    */\n    scrollIntoView() {\n        this.updated |= UPDATED_SCROLL;\n        return this;\n    }\n    /**\n    True when this transaction has had `scrollIntoView` called on it.\n    */\n    get scrolledIntoView() {\n        return (this.updated & UPDATED_SCROLL) > 0;\n    }\n}\n\nfunction bind(f, self) {\n    return !self || !f ? f : f.bind(self);\n}\nclass FieldDesc {\n    constructor(name, desc, self) {\n        this.name = name;\n        this.init = bind(desc.init, self);\n        this.apply = bind(desc.apply, self);\n    }\n}\nconst baseFields = [\n    new FieldDesc(\"doc\", {\n        init(config) { return config.doc || config.schema.topNodeType.createAndFill(); },\n        apply(tr) { return tr.doc; }\n    }),\n    new FieldDesc(\"selection\", {\n        init(config, instance) { return config.selection || Selection.atStart(instance.doc); },\n        apply(tr) { return tr.selection; }\n    }),\n    new FieldDesc(\"storedMarks\", {\n        init(config) { return config.storedMarks || null; },\n        apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null; }\n    }),\n    new FieldDesc(\"scrollToSelection\", {\n        init() { return 0; },\n        apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev; }\n    })\n];\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n    constructor(schema, plugins) {\n        this.schema = schema;\n        this.plugins = [];\n        this.pluginsByKey = Object.create(null);\n        this.fields = baseFields.slice();\n        if (plugins)\n            plugins.forEach(plugin => {\n                if (this.pluginsByKey[plugin.key])\n                    throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\");\n                this.plugins.push(plugin);\n                this.pluginsByKey[plugin.key] = plugin;\n                if (plugin.spec.state)\n                    this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin));\n            });\n    }\n}\n/**\nThe state of a ProseMirror editor is represented by an object of\nthis type. A state is a persistent data structure—it isn't\nupdated, but rather a new state value is computed from an old one\nusing the [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) method.\n\nA state holds a number of built-in fields, and plugins can\n[define](https://prosemirror.net/docs/ref/#state.PluginSpec.state) additional fields.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config) {\n        this.config = config;\n    }\n    /**\n    The schema of the state's document.\n    */\n    get schema() {\n        return this.config.schema;\n    }\n    /**\n    The plugins that are active in this state.\n    */\n    get plugins() {\n        return this.config.plugins;\n    }\n    /**\n    Apply the given transaction to produce a new state.\n    */\n    apply(tr) {\n        return this.applyTransaction(tr).state;\n    }\n    /**\n    @internal\n    */\n    filterTransaction(tr, ignore = -1) {\n        for (let i = 0; i < this.config.plugins.length; i++)\n            if (i != ignore) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n                    return false;\n            }\n        return true;\n    }\n    /**\n    Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that\n    returns the precise transactions that were applied (which might\n    be influenced by the [transaction\n    hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of\n    plugins) along with the new state.\n    */\n    applyTransaction(rootTr) {\n        if (!this.filterTransaction(rootTr))\n            return { state: this, transactions: [] };\n        let trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n        // This loop repeatedly gives plugins a chance to respond to\n        // transactions as new transactions are added, making sure to only\n        // pass the transactions the plugin did not see before.\n        for (;;) {\n            let haveNew = false;\n            for (let i = 0; i < this.config.plugins.length; i++) {\n                let plugin = this.config.plugins[i];\n                if (plugin.spec.appendTransaction) {\n                    let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n                    let tr = n < trs.length &&\n                        plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n                    if (tr && newState.filterTransaction(tr, i)) {\n                        tr.setMeta(\"appendedTransaction\", rootTr);\n                        if (!seen) {\n                            seen = [];\n                            for (let j = 0; j < this.config.plugins.length; j++)\n                                seen.push(j < i ? { state: newState, n: trs.length } : { state: this, n: 0 });\n                        }\n                        trs.push(tr);\n                        newState = newState.applyInner(tr);\n                        haveNew = true;\n                    }\n                    if (seen)\n                        seen[i] = { state: newState, n: trs.length };\n                }\n            }\n            if (!haveNew)\n                return { state: newState, transactions: trs };\n        }\n    }\n    /**\n    @internal\n    */\n    applyInner(tr) {\n        if (!tr.before.eq(this.doc))\n            throw new RangeError(\"Applying a mismatched transaction\");\n        let newInstance = new EditorState(this.config), fields = this.config.fields;\n        for (let i = 0; i < fields.length; i++) {\n            let field = fields[i];\n            newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n        }\n        return newInstance;\n    }\n    /**\n    Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.\n    */\n    get tr() { return new Transaction(this); }\n    /**\n    Create a new state.\n    */\n    static create(config) {\n        let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n        let instance = new EditorState($config);\n        for (let i = 0; i < $config.fields.length; i++)\n            instance[$config.fields[i].name] = $config.fields[i].init(config, instance);\n        return instance;\n    }\n    /**\n    Create a new state based on this one, but with an adjusted set\n    of active plugins. State fields that exist in both sets of\n    plugins are kept unchanged. Those that no longer exist are\n    dropped, and those that are new are initialized using their\n    [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new\n    configuration object..\n    */\n    reconfigure(config) {\n        let $config = new Configuration(this.schema, config.plugins);\n        let fields = $config.fields, instance = new EditorState($config);\n        for (let i = 0; i < fields.length; i++) {\n            let name = fields[i].name;\n            instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n        }\n        return instance;\n    }\n    /**\n    Serialize this state to JSON. If you want to serialize the state\n    of plugins, pass an object mapping property names to use in the\n    resulting JSON object to plugin objects. The argument may also be\n    a string or number, in which case it is ignored, to support the\n    way `JSON.stringify` calls `toString` methods.\n    */\n    toJSON(pluginFields) {\n        let result = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };\n        if (this.storedMarks)\n            result.storedMarks = this.storedMarks.map(m => m.toJSON());\n        if (pluginFields && typeof pluginFields == 'object')\n            for (let prop in pluginFields) {\n                if (prop == \"doc\" || prop == \"selection\")\n                    throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\");\n                let plugin = pluginFields[prop], state = plugin.spec.state;\n                if (state && state.toJSON)\n                    result[prop] = state.toJSON.call(plugin, this[plugin.key]);\n            }\n        return result;\n    }\n    /**\n    Deserialize a JSON representation of a state. `config` should\n    have at least a `schema` field, and should contain array of\n    plugins to initialize the state with. `pluginFields` can be used\n    to deserialize the state of plugins, by associating plugin\n    instances with the property names they use in the JSON object.\n    */\n    static fromJSON(config, json, pluginFields) {\n        if (!json)\n            throw new RangeError(\"Invalid input for EditorState.fromJSON\");\n        if (!config.schema)\n            throw new RangeError(\"Required config field 'schema' missing\");\n        let $config = new Configuration(config.schema, config.plugins);\n        let instance = new EditorState($config);\n        $config.fields.forEach(field => {\n            if (field.name == \"doc\") {\n                instance.doc = Node.fromJSON(config.schema, json.doc);\n            }\n            else if (field.name == \"selection\") {\n                instance.selection = Selection.fromJSON(instance.doc, json.selection);\n            }\n            else if (field.name == \"storedMarks\") {\n                if (json.storedMarks)\n                    instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON);\n            }\n            else {\n                if (pluginFields)\n                    for (let prop in pluginFields) {\n                        let plugin = pluginFields[prop], state = plugin.spec.state;\n                        if (plugin.key == field.name && state && state.fromJSON &&\n                            Object.prototype.hasOwnProperty.call(json, prop)) {\n                            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n                            return;\n                        }\n                    }\n                instance[field.name] = field.init(config, instance);\n            }\n        });\n        return instance;\n    }\n}\n\nfunction bindProps(obj, self, target) {\n    for (let prop in obj) {\n        let val = obj[prop];\n        if (val instanceof Function)\n            val = val.bind(self);\n        else if (prop == \"handleDOMEvents\")\n            val = bindProps(val, self, {});\n        target[prop] = val;\n    }\n    return target;\n}\n/**\nPlugins bundle functionality that can be added to an editor.\nThey are part of the [editor state](https://prosemirror.net/docs/ref/#state.EditorState) and\nmay influence that state and the view that contains it.\n*/\nclass Plugin {\n    /**\n    Create a plugin.\n    */\n    constructor(\n    /**\n    The plugin's [spec object](https://prosemirror.net/docs/ref/#state.PluginSpec).\n    */\n    spec) {\n        this.spec = spec;\n        /**\n        The [props](https://prosemirror.net/docs/ref/#view.EditorProps) exported by this plugin.\n        */\n        this.props = {};\n        if (spec.props)\n            bindProps(spec.props, this, this.props);\n        this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n    }\n    /**\n    Extract the plugin's state field from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\nconst keys = Object.create(null);\nfunction createKey(name) {\n    if (name in keys)\n        return name + \"$\" + ++keys[name];\n    keys[name] = 0;\n    return name + \"$\";\n}\n/**\nA key is used to [tag](https://prosemirror.net/docs/ref/#state.PluginSpec.key) plugins in a way\nthat makes it possible to find them, given an editor state.\nAssigning a key does mean only one plugin of that type can be\nactive in a state.\n*/\nclass PluginKey {\n    /**\n    Create a plugin key.\n    */\n    constructor(name = \"key\") { this.key = createKey(name); }\n    /**\n    Get the active plugin with this key, if any, from an editor\n    state.\n    */\n    get(state) { return state.config.pluginsByKey[this.key]; }\n    /**\n    Get the plugin's state from an editor state.\n    */\n    getState(state) { return state[this.key]; }\n}\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import type { InputRule } from '../../inputrules'\n// import type { EditorState, TextSelection, Transaction } from '../../state'\nimport type { TextSelection } from '../../state'\nimport { Plugin, PluginKey } from '../../state'\nimport type { EditorView } from '../../view'\n\nfunction run(\n  view: EditorView,\n  from: number,\n  to: number,\n  text: string,\n  rules: InputRule[],\n  plugin: Plugin\n) {\n  if (view.composing) return false\n  const state = view.state\n  const $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code) return false\n  const textBefore =\n    $from.parent.textBetween(\n      Math.max(0, $from.parentOffset - 500),\n      $from.parentOffset,\n      undefined,\n      '\\uFFFC'\n    ) + text\n  for (let i = 0; i < rules.length; i++) {\n    // NOTE: This is a workaround for the lack of type safety in the inputrules module.\n    // const match = (rules[i] as { match: RegExp }).match.exec(textBefore)\n    const match = (rules[i] as any).match.exec(textBefore)\n    const tr =\n      match &&\n      match[0] &&\n      // NOTE: This is a workaround for the lack of type safety in the inputrules module.\n      // rules[i] as { handler: (state: EditorState, match: string[], from: number, to: number) => Transaction }\n      (rules[i] as any).handler(\n        state,\n        match,\n        from - (match[0].length - text.length),\n        to\n      )\n    if (!tr) continue\n    // @ts-expect-error Internal property that should be in the class; only relevant if explicitly false.\n    if (rules[i]?.undoable !== false)\n      tr.setMeta(plugin, { transform: tr, from, to, text })\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nexport const customInputRulesKey = new PluginKey('MILKDOWN_CUSTOM_INPUTRULES')\nexport function customInputRules({ rules }: { rules: InputRule[] }): Plugin {\n  const plugin: Plugin = new Plugin({\n    key: customInputRulesKey,\n    isInputRules: true,\n\n    state: {\n      init() {\n        return null\n      },\n      apply(this: typeof plugin, tr, prev) {\n        const stored = tr.getMeta(this)\n        if (stored) return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, '', rules, plugin)\n          })\n          return false\n        },\n      },\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter') return false\n        const { $cursor } = view.state.selection as TextSelection\n        if ($cursor)\n          return run(view, $cursor.pos, $cursor.pos, '\\n', rules, plugin)\n        return false\n      },\n    },\n  })\n  return plugin\n}\n","import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n/**\nInput rules are regular expressions describing a piece of text\nthat, when typed, causes something to happen. This might be\nchanging two dashes into an emdash, wrapping a paragraph starting\nwith `\"> \"` into a blockquote, or something entirely different.\n*/\nclass InputRule {\n    // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n    /**\n    Create an input rule. The rule applies when the user typed\n    something and the text directly in front of the cursor matches\n    `match`, which should end with `$`.\n    \n    The `handler` can be a string, in which case the matched text, or\n    the first matched group in the regexp, is replaced by that\n    string.\n    \n    Or a it can be a function, which will be called with the match\n    array produced by\n    [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n    as well as the start and end of the matched range, and which can\n    return a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) that describes the\n    rule's effect, or null to indicate the input was not handled.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    match, handler, options = {}) {\n        this.match = match;\n        this.match = match;\n        this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n        this.undoable = options.undoable !== false;\n        this.inCode = options.inCode || false;\n    }\n}\nfunction stringHandler(string) {\n    return function (state, match, start, end) {\n        let insert = string;\n        if (match[1]) {\n            let offset = match[0].lastIndexOf(match[1]);\n            insert += match[0].slice(offset + match[1].length);\n            start += offset;\n            let cutOff = start - end;\n            if (cutOff > 0) {\n                insert = match[0].slice(offset - cutOff, offset) + insert;\n                start = end;\n            }\n        }\n        return state.tr.insertText(insert, start, end);\n    };\n}\nconst MAX_MATCH = 500;\n/**\nCreate an input rules plugin. When enabled, it will cause text\ninput that matches any of the given rules to trigger the rule's\naction.\n*/\nfunction inputRules({ rules }) {\n    let plugin = new Plugin({\n        state: {\n            init() { return null; },\n            apply(tr, prev) {\n                let stored = tr.getMeta(this);\n                if (stored)\n                    return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            }\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        let { $cursor } = view.state.selection;\n                        if ($cursor)\n                            run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin);\n                    });\n                }\n            }\n        },\n        isInputRules: true\n    });\n    return plugin;\n}\nfunction run(view, from, to, text, rules, plugin) {\n    if (view.composing)\n        return false;\n    let state = view.state, $from = state.doc.resolve(from);\n    let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset, null, \"\\ufffc\") + text;\n    for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i];\n        if ($from.parent.type.spec.code) {\n            if (!rule.inCode)\n                continue;\n        }\n        else if (rule.inCode === \"only\") {\n            continue;\n        }\n        let match = rule.match.exec(textBefore);\n        let tr = match && rule.handler(state, match, from - (match[0].length - text.length), to);\n        if (!tr)\n            continue;\n        if (rule.undoable)\n            tr.setMeta(plugin, { transform: tr, from, to, text });\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\n/**\nThis is a command that will undo an input rule, if applying such a\nrule was the last thing that the user did.\n*/\nconst undoInputRule = (state, dispatch) => {\n    let plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i++) {\n        let plugin = plugins[i], undoable;\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                let tr = state.tr, toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j--)\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                if (undoable.text) {\n                    let marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n                dispatch(tr);\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\nConverts double dashes to an emdash.\n*/\nconst emDash = new InputRule(/--$/, \"—\");\n/**\nConverts three dots to an ellipsis character.\n*/\nconst ellipsis = new InputRule(/\\.\\.\\.$/, \"…\");\n/**\n“Smart” opening double quotes.\n*/\nconst openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\");\n/**\n“Smart” closing double quotes.\n*/\nconst closeDoubleQuote = new InputRule(/\"$/, \"”\");\n/**\n“Smart” opening single quotes.\n*/\nconst openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\");\n/**\n“Smart” closing single quotes.\n*/\nconst closeSingleQuote = new InputRule(/'$/, \"’\");\n/**\nSmart-quote related input rules.\n*/\nconst smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n/**\nBuild an input rule for automatically wrapping a textblock when a\ngiven string is typed. The `regexp` argument is\ndirectly passed through to the `InputRule` constructor. You'll\nprobably want the regexp to start with `^`, so that the pattern can\nonly occur at the start of a textblock.\n\n`nodeType` is the type of node to wrap in. If it needs attributes,\nyou can either pass them directly, or pass a function that will\ncompute them from the regular expression match.\n\nBy default, if there's a node with the same type above the newly\nwrapped node, the rule will try to [join](https://prosemirror.net/docs/ref/#transform.Transform.join) those\ntwo nodes. You can pass a join predicate, which takes a regular\nexpression match and the node before the wrapped node, and can\nreturn a boolean to indicate whether a join should happen.\n*/\nfunction wrappingInputRule(regexp, nodeType, getAttrs = null, joinPredicate) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        let tr = state.tr.delete(start, end);\n        let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return null;\n        tr.wrap(range, wrapping);\n        let before = tr.doc.resolve(start - 1).nodeBefore;\n        if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n            (!joinPredicate || joinPredicate(match, before)))\n            tr.join(start - 1);\n        return tr;\n    });\n}\n/**\nBuild an input rule that changes the type of a textblock when the\nmatched text is typed into it. You'll usually want to start your\nregexp with `^` to that it is only matched at the start of a\ntextblock. The optional `getAttrs` parameter can be used to compute\nthe new node's attributes, and works the same as in the\n`wrappingInputRule` function.\n*/\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs = null) {\n    return new InputRule(regexp, (state, match, start, end) => {\n        let $start = state.doc.resolve(start);\n        let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n        if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType))\n            return null;\n        return state.tr\n            .delete(start, end)\n            .setBlockType(start, start, nodeType, attrs);\n    });\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n","import { InputRule } from '../../inputrules'\nimport type { Mark, MarkType } from '../../model'\nimport type { Captured, Options } from './common'\n\n/// Create an input rule for a mark.\nexport function markRule(\n  regexp: RegExp,\n  markType: MarkType,\n  options: Options = {}\n): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const { tr } = state\n    const matchLength = match.length\n\n    let group = match[matchLength - 1]\n    let fullMatch = match[0]\n    let initialStoredMarks: readonly Mark[] = []\n\n    let markEnd = end\n\n    const captured: Captured = {\n      group,\n      fullMatch,\n      start,\n      end,\n    }\n\n    const result = options.updateCaptured?.(captured)\n    Object.assign(captured, result)\n    ;({ group, fullMatch, start, end } = captured)\n\n    if (fullMatch === null) return null\n\n    if (group?.trim() === '') return null\n\n    if (group) {\n      const startSpaces = fullMatch.search(/\\S/)\n      const textStart = start + fullMatch.indexOf(group)\n      const textEnd = textStart + group.length\n\n      initialStoredMarks = tr.storedMarks ?? []\n\n      if (textEnd < end) tr.delete(textEnd, end)\n\n      if (textStart > start) tr.delete(start + startSpaces, textStart)\n\n      markEnd = start + startSpaces + group.length\n\n      const attrs = options.getAttr?.(match)\n\n      tr.addMark(start, markEnd, markType.create(attrs))\n      tr.setStoredMarks(initialStoredMarks)\n\n      options.beforeDispatch?.({ match, start, end, tr })\n    }\n\n    return tr\n  })\n}\n","import { expectDomTypeError, missingRootElement } from '@milkdown/exception'\n\nimport type { EditorView } from '../../view'\n\ntype Point = [top: number, left: number]\n\nexport function calculateNodePosition(\n  view: EditorView,\n  target: HTMLElement,\n  handler: (\n    selectedRect: DOMRect,\n    targetRect: DOMRect,\n    parentRect: DOMRect\n  ) => Point\n) {\n  const state = view.state\n  const { from } = state.selection\n\n  const { node } = view.domAtPos(from)\n  const element = node instanceof Text ? node.parentElement : node\n  if (!(element instanceof HTMLElement)) throw expectDomTypeError(element)\n\n  const selectedNodeRect = element.getBoundingClientRect()\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent) throw expectDomTypeError(parent)\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\ninterface Rect {\n  left: number\n  right: number\n  top: number\n  bottom: number\n}\n\nexport function calculateTextPosition(\n  view: EditorView,\n  target: HTMLElement,\n  handler: (\n    start: Rect,\n    end: Rect,\n    targetRect: DOMRect,\n    parentRect: DOMRect\n  ) => Point\n) {\n  const state = view.state\n  const { from, to } = state.selection\n  const start = view.coordsAtPos(from)\n  const end = view.coordsAtPos(to)\n\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent) throw missingRootElement()\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(start, end, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\nfunction minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n\nexport function posToDOMRect(\n  view: EditorView,\n  from: number,\n  to: number\n): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n","import type { NodeType, Node as ProseNode } from '../../model'\nimport type { Transaction } from '../../state'\n\nexport function cloneTr(tr: Transaction): Transaction {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now())\n}\n\nexport function equalNodeType(\n  nodeType: NodeType | NodeType[],\n  node: ProseNode\n) {\n  return (\n    (Array.isArray(nodeType) && nodeType.includes(node.type)) ||\n    node.type === nodeType\n  )\n}\n","import type { MarkType, Node, NodeType, ResolvedPos } from '../../model'\nimport type { Predicate } from './types'\n\nexport interface NodeWithPos {\n  pos: number\n  node: Node\n}\nexport interface NodeWithFromTo {\n  from: number\n  to: number\n  node: Node\n}\n\nexport function flatten(node: Node, descend = true): NodeWithPos[] {\n  const result: NodeWithPos[] = []\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos })\n    if (!descend) return false\n\n    return undefined\n  })\n  return result\n}\n\nexport function findChildren(predicate: Predicate) {\n  return (node: Node, descend?: boolean): NodeWithPos[] =>\n    flatten(node, descend).filter((child) => predicate(child.node))\n}\n\nexport function findChildrenByMark(\n  node: Node,\n  markType: MarkType,\n  descend?: boolean\n): NodeWithPos[] {\n  return findChildren((child) => Boolean(markType.isInSet(child.marks)))(\n    node,\n    descend\n  )\n}\n\nexport function findParent(predicate: Predicate) {\n  return ($pos: ResolvedPos): NodeWithFromTo | undefined => {\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n      const node = $pos.node(depth)\n\n      if (predicate(node)) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n        return {\n          from,\n          to,\n          node,\n        }\n      }\n    }\n\n    return undefined\n  }\n}\n\nexport function findParentNodeType($pos: ResolvedPos, nodeType: NodeType) {\n  return findParent((node) => node.type === nodeType)($pos)\n}\n","import { getAtomFromSchemaFail } from '@milkdown/exception'\n\nimport type { MarkType, NodeType, Schema } from '../../model'\n\nexport function getNodeFromSchema(type: string, schema: Schema): NodeType {\n  const target = schema.nodes[type]\n\n  if (!target) throw getAtomFromSchemaFail('node', type)\n\n  return target\n}\n\nexport function getMarkFromSchema(type: string, schema: Schema): MarkType {\n  const target = schema.marks[type]\n\n  if (!target) throw getAtomFromSchemaFail('mark', type)\n\n  return target\n}\n","import type { NodeType, Node as ProseNode, ResolvedPos } from '../../model'\nimport type { Selection } from '../../state'\nimport { NodeSelection } from '../../state'\nimport { equalNodeType } from './helper'\nimport type { Predicate } from './types'\n\nexport interface ContentNodeWithPos {\n  pos: number\n  start: number\n  depth: number\n  node: ProseNode\n}\n\nexport function findParentNodeClosestToPos(predicate: Predicate) {\n  return ($pos: ResolvedPos): ContentNodeWithPos | undefined => {\n    for (let i = $pos.depth; i > 0; i--) {\n      const node = $pos.node(i)\n      if (predicate(node)) {\n        return {\n          pos: i > 0 ? $pos.before(i) : 0,\n          start: $pos.start(i),\n          depth: i,\n          node,\n        }\n      }\n    }\n\n    return undefined\n  }\n}\n\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection): ContentNodeWithPos | undefined => {\n    return findParentNodeClosestToPos(predicate)(selection.$from)\n  }\n}\n\nexport function findSelectedNodeOfType(\n  selection: Selection,\n  nodeType: NodeType\n): ContentNodeWithPos | undefined {\n  if (!(selection instanceof NodeSelection)) return\n\n  const { node, $from } = selection\n  if (equalNodeType(nodeType, node))\n    return {\n      node,\n      pos: $from.pos,\n      start: $from.start($from.depth),\n      depth: $from.depth,\n    }\n\n  return undefined\n}\n","import { liftTarget, replaceStep, ReplaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, TextSelection, AllSelection, SelectionRange } from 'prosemirror-state';\n\n/**\nDelete the selection, if there is one.\n*/\nconst deleteSelection = (state, dispatch) => {\n    if (state.selection.empty)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.deleteSelection().scrollIntoView());\n    return true;\n};\nfunction atBlockStart(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n        : $cursor.parentOffset > 0))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and at the start of a textblock, try to\nreduce the distance between that block and the one before it—if\nthere's a block directly before it that can be joined, join them.\nIf not, try to move the selected block closer to the next one in\nthe document structure by lifting it out of its parent or moving it\ninto a parent of the previous block. Will use the view for accurate\n(bidi-aware) start-of-textblock detection if given.\n*/\nconst joinBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    // If there is no node before this, try to lift\n    if (!$cut) {\n        let range = $cursor.blockRange(), target = range && liftTarget(range);\n        if (target == null)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    let before = $cut.nodeBefore;\n    // Apply the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, -1))\n        return true;\n    // If the node below has no content and the node above is\n    // selectable, delete the node below and select the one above.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n        for (let depth = $cursor.depth;; depth--) {\n            let delStep = replaceStep(state.doc, $cursor.before(depth), $cursor.after(depth), Slice.empty);\n            if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n                if (dispatch) {\n                    let tr = state.tr.step(delStep);\n                    tr.setSelection(textblockAt(before, \"end\")\n                        ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n                    dispatch(tr.scrollIntoView());\n                }\n                return true;\n            }\n            if (depth == 1 || $cursor.node(depth - 1).childCount > 1)\n                break;\n        }\n    }\n    // If the node before is an atom, delete it\n    if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nA more limited form of [`joinBackward`]($commands.joinBackward)\nthat only tries to join the current textblock to the one before\nit, if the cursor is at the start of a textblock.\n*/\nconst joinTextblockBackward = (state, dispatch, view) => {\n    let $cursor = atBlockStart(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutBefore($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\n/**\nA more limited form of [`joinForward`]($commands.joinForward)\nthat only tries to join the current textblock to the one after\nit, if the cursor is at the end of a textblock.\n*/\nconst joinTextblockForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    return $cut ? joinTextblocksAround(state, $cut, dispatch) : false;\n};\nfunction joinTextblocksAround(state, $cut, dispatch) {\n    let before = $cut.nodeBefore, beforeText = before, beforePos = $cut.pos - 1;\n    for (; !beforeText.isTextblock; beforePos--) {\n        if (beforeText.type.spec.isolating)\n            return false;\n        let child = beforeText.lastChild;\n        if (!child)\n            return false;\n        beforeText = child;\n    }\n    let after = $cut.nodeAfter, afterText = after, afterPos = $cut.pos + 1;\n    for (; !afterText.isTextblock; afterPos++) {\n        if (afterText.type.spec.isolating)\n            return false;\n        let child = afterText.firstChild;\n        if (!child)\n            return false;\n        afterText = child;\n    }\n    let step = replaceStep(state.doc, beforePos, afterPos, Slice.empty);\n    if (!step || step.from != beforePos ||\n        step instanceof ReplaceStep && step.slice.size >= afterPos - beforePos)\n        return false;\n    if (dispatch) {\n        let tr = state.tr.step(step);\n        tr.setSelection(TextSelection.create(tr.doc, beforePos));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n}\nfunction textblockAt(node, side, only = false) {\n    for (let scan = node; scan; scan = (side == \"start\" ? scan.firstChild : scan.lastChild)) {\n        if (scan.isTextblock)\n            return true;\n        if (only && scan.childCount != 1)\n            return false;\n    }\n    return false;\n}\n/**\nWhen the selection is empty and at the start of a textblock, select\nthe node before that textblock, if possible. This is intended to be\nbound to keys like backspace, after\n[`joinBackward`](https://prosemirror.net/docs/ref/#commands.joinBackward) or other deleting\ncommands, as a fall-back behavior when the schema doesn't allow\ndeletion at the selected point.\n*/\nconst selectNodeBackward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0)\n            return false;\n        $cut = findCutBefore($head);\n    }\n    let node = $cut && $cut.nodeBefore;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView());\n    return true;\n};\nfunction findCutBefore($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            if ($pos.index(i) > 0)\n                return $pos.doc.resolve($pos.before(i + 1));\n            if ($pos.node(i).type.spec.isolating)\n                break;\n        }\n    return null;\n}\nfunction atBlockEnd(state, view) {\n    let { $cursor } = state.selection;\n    if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n        : $cursor.parentOffset < $cursor.parent.content.size))\n        return null;\n    return $cursor;\n}\n/**\nIf the selection is empty and the cursor is at the end of a\ntextblock, try to reduce or remove the boundary between that block\nand the one after it, either by joining them or by moving the other\nblock closer to this one in the tree structure. Will use the view\nfor accurate start-of-textblock detection if given.\n*/\nconst joinForward = (state, dispatch, view) => {\n    let $cursor = atBlockEnd(state, view);\n    if (!$cursor)\n        return false;\n    let $cut = findCutAfter($cursor);\n    // If there is no node after this, there's nothing to do\n    if (!$cut)\n        return false;\n    let after = $cut.nodeAfter;\n    // Try the joining algorithm\n    if (deleteBarrier(state, $cut, dispatch, 1))\n        return true;\n    // If the node above has no content and the node below is\n    // selectable, delete the node above and select the one below.\n    if ($cursor.parent.content.size == 0 &&\n        (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n        let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n        if (delStep && delStep.slice.size < delStep.to - delStep.from) {\n            if (dispatch) {\n                let tr = state.tr.step(delStep);\n                tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                    : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    // If the next node is an atom, delete it\n    if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n        if (dispatch)\n            dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView());\n        return true;\n    }\n    return false;\n};\n/**\nWhen the selection is empty and at the end of a textblock, select\nthe node coming after that textblock, if possible. This is intended\nto be bound to keys like delete, after\n[`joinForward`](https://prosemirror.net/docs/ref/#commands.joinForward) and similar deleting\ncommands, to provide a fall-back behavior when the schema doesn't\nallow deletion at the selected point.\n*/\nconst selectNodeForward = (state, dispatch, view) => {\n    let { $head, empty } = state.selection, $cut = $head;\n    if (!empty)\n        return false;\n    if ($head.parent.isTextblock) {\n        if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n            return false;\n        $cut = findCutAfter($head);\n    }\n    let node = $cut && $cut.nodeAfter;\n    if (!node || !NodeSelection.isSelectable(node))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView());\n    return true;\n};\nfunction findCutAfter($pos) {\n    if (!$pos.parent.type.spec.isolating)\n        for (let i = $pos.depth - 1; i >= 0; i--) {\n            let parent = $pos.node(i);\n            if ($pos.index(i) + 1 < parent.childCount)\n                return $pos.doc.resolve($pos.after(i + 1));\n            if (parent.type.spec.isolating)\n                break;\n        }\n    return null;\n}\n/**\nJoin the selected block or, if there is a text selection, the\nclosest ancestor block of the selection that can be joined, with\nthe sibling above it.\n*/\nconst joinUp = (state, dispatch) => {\n    let sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n    if (nodeSel) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.from))\n            return false;\n        point = sel.from;\n    }\n    else {\n        point = joinPoint(state.doc, sel.from, -1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch) {\n        let tr = state.tr.join(point);\n        if (nodeSel)\n            tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nJoin the selected block, or the closest ancestor of the selection\nthat can be joined, with the sibling after it.\n*/\nconst joinDown = (state, dispatch) => {\n    let sel = state.selection, point;\n    if (sel instanceof NodeSelection) {\n        if (sel.node.isTextblock || !canJoin(state.doc, sel.to))\n            return false;\n        point = sel.to;\n    }\n    else {\n        point = joinPoint(state.doc, sel.to, 1);\n        if (point == null)\n            return false;\n    }\n    if (dispatch)\n        dispatch(state.tr.join(point).scrollIntoView());\n    return true;\n};\n/**\nLift the selected block, or the closest ancestor block of the\nselection that can be lifted, out of its parent node.\n*/\nconst lift = (state, dispatch) => {\n    let { $from, $to } = state.selection;\n    let range = $from.blockRange($to), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nIf the selection is in a node whose type has a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, replace the\nselection with a newline character.\n*/\nconst newlineInCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.insertText(\"\\n\").scrollIntoView());\n    return true;\n};\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i++) {\n        let { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs())\n            return type;\n    }\n    return null;\n}\n/**\nWhen the selection is in a node with a truthy\n[`code`](https://prosemirror.net/docs/ref/#model.NodeSpec.code) property in its spec, create a\ndefault block after the code block, and move the cursor there.\n*/\nconst exitCode = (state, dispatch) => {\n    let { $head, $anchor } = state.selection;\n    if (!$head.parent.type.spec.code || !$head.sameParent($anchor))\n        return false;\n    let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n    if (!type || !above.canReplaceWith(after, after, type))\n        return false;\n    if (dispatch) {\n        let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n        tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf a block node is selected, create an empty paragraph before (if\nit is its parent's first child) or after it.\n*/\nconst createParagraphNear = (state, dispatch) => {\n    let sel = state.selection, { $from, $to } = sel;\n    if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent)\n        return false;\n    let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n    if (!type || !type.isTextblock)\n        return false;\n    if (dispatch) {\n        let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n        let tr = state.tr.insert(side, type.createAndFill());\n        tr.setSelection(TextSelection.create(tr.doc, side + 1));\n        dispatch(tr.scrollIntoView());\n    }\n    return true;\n};\n/**\nIf the cursor is in an empty textblock that can be lifted, lift the\nblock.\n*/\nconst liftEmptyBlock = (state, dispatch) => {\n    let { $cursor } = state.selection;\n    if (!$cursor || $cursor.parent.content.size)\n        return false;\n    if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n        let before = $cursor.before();\n        if (canSplit(state.doc, before)) {\n            if (dispatch)\n                dispatch(state.tr.split(before).scrollIntoView());\n            return true;\n        }\n    }\n    let range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null)\n        return false;\n    if (dispatch)\n        dispatch(state.tr.lift(range, target).scrollIntoView());\n    return true;\n};\n/**\nCreate a variant of [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock) that uses\na custom function to determine the type of the newly split off block.\n*/\nfunction splitBlockAs(splitNode) {\n    return (state, dispatch) => {\n        let { $from, $to } = state.selection;\n        if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n            if (!$from.parentOffset || !canSplit(state.doc, $from.pos))\n                return false;\n            if (dispatch)\n                dispatch(state.tr.split($from.pos).scrollIntoView());\n            return true;\n        }\n        if (!$from.depth)\n            return false;\n        let types = [];\n        let splitDepth, deflt, atEnd = false, atStart = false;\n        for (let d = $from.depth;; d--) {\n            let node = $from.node(d);\n            if (node.isBlock) {\n                atEnd = $from.end(d) == $from.pos + ($from.depth - d);\n                atStart = $from.start(d) == $from.pos - ($from.depth - d);\n                deflt = defaultBlockAt($from.node(d - 1).contentMatchAt($from.indexAfter(d - 1)));\n                let splitType = splitNode && splitNode($to.parent, atEnd, $from);\n                types.unshift(splitType || (atEnd && deflt ? { type: deflt } : null));\n                splitDepth = d;\n                break;\n            }\n            else {\n                if (d == 1)\n                    return false;\n                types.unshift(null);\n            }\n        }\n        let tr = state.tr;\n        if (state.selection instanceof TextSelection || state.selection instanceof AllSelection)\n            tr.deleteSelection();\n        let splitPos = tr.mapping.map($from.pos);\n        let can = canSplit(tr.doc, splitPos, types.length, types);\n        if (!can) {\n            types[0] = deflt ? { type: deflt } : null;\n            can = canSplit(tr.doc, splitPos, types.length, types);\n        }\n        tr.split(splitPos, types.length, types);\n        if (!atEnd && atStart && $from.node(splitDepth).type != deflt) {\n            let first = tr.mapping.map($from.before(splitDepth)), $first = tr.doc.resolve(first);\n            if (deflt && $from.node(splitDepth - 1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n                tr.setNodeMarkup(tr.mapping.map($from.before(splitDepth)), deflt);\n        }\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nSplit the parent block of the selection. If the selection is a text\nselection, also delete its content.\n*/\nconst splitBlock = splitBlockAs();\n/**\nActs like [`splitBlock`](https://prosemirror.net/docs/ref/#commands.splitBlock), but without\nresetting the set of active marks at the cursor.\n*/\nconst splitBlockKeepMarks = (state, dispatch) => {\n    return splitBlock(state, dispatch && (tr => {\n        let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n        if (marks)\n            tr.ensureMarks(marks);\n        dispatch(tr);\n    }));\n};\n/**\nMove the selection to the node wrapping the current selection, if\nany. (Will not select the document node.)\n*/\nconst selectParentNode = (state, dispatch) => {\n    let { $from, to } = state.selection, pos;\n    let same = $from.sharedDepth(to);\n    if (same == 0)\n        return false;\n    pos = $from.before(same);\n    if (dispatch)\n        dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)));\n    return true;\n};\n/**\nSelect the whole document.\n*/\nconst selectAll = (state, dispatch) => {\n    if (dispatch)\n        dispatch(state.tr.setSelection(new AllSelection(state.doc)));\n    return true;\n};\nfunction joinMaybeClear(state, $pos, dispatch) {\n    let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n    if (!before || !after || !before.type.compatibleContent(after.type))\n        return false;\n    if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n        if (dispatch)\n            dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView());\n        return true;\n    }\n    if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n        return false;\n    if (dispatch)\n        dispatch(state.tr.join($pos.pos).scrollIntoView());\n    return true;\n}\nfunction deleteBarrier(state, $cut, dispatch, dir) {\n    let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n    let isolated = before.type.spec.isolating || after.type.spec.isolating;\n    if (!isolated && joinMaybeClear(state, $cut, dispatch))\n        return true;\n    let canDelAfter = !isolated && $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n    if (canDelAfter &&\n        (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n        match.matchType(conn[0] || after.type).validEnd) {\n        if (dispatch) {\n            let end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n            for (let i = conn.length - 1; i >= 0; i--)\n                wrap = Fragment.from(conn[i].create(null, wrap));\n            wrap = Fragment.from(before.copy(wrap));\n            let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n            let $joinAt = tr.doc.resolve(end + 2 * conn.length);\n            if ($joinAt.nodeAfter && $joinAt.nodeAfter.type == before.type &&\n                canJoin(tr.doc, $joinAt.pos))\n                tr.join($joinAt.pos);\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    }\n    let selAfter = after.type.spec.isolating || (dir > 0 && isolated) ? null : Selection.findFrom($cut, 1);\n    let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n    if (target != null && target >= $cut.depth) {\n        if (dispatch)\n            dispatch(state.tr.lift(range, target).scrollIntoView());\n        return true;\n    }\n    if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n        let at = before, wrap = [];\n        for (;;) {\n            wrap.push(at);\n            if (at.isTextblock)\n                break;\n            at = at.lastChild;\n        }\n        let afterText = after, afterDepth = 1;\n        for (; !afterText.isTextblock; afterText = afterText.firstChild)\n            afterDepth++;\n        if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n            if (dispatch) {\n                let end = Fragment.empty;\n                for (let i = wrap.length - 1; i >= 0; i--)\n                    end = Fragment.from(wrap[i].copy(end));\n                let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize, $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth, new Slice(end, wrap.length, 0), 0, true));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction selectTextblockSide(side) {\n    return function (state, dispatch) {\n        let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n        let depth = $pos.depth;\n        while ($pos.node(depth).isInline) {\n            if (!depth)\n                return false;\n            depth--;\n        }\n        if (!$pos.node(depth).isTextblock)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(TextSelection.create(state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))));\n        return true;\n    };\n}\n/**\nMoves the cursor to the start of current text block.\n*/\nconst selectTextblockStart = selectTextblockSide(-1);\n/**\nMoves the cursor to the end of current text block.\n*/\nconst selectTextblockEnd = selectTextblockSide(1);\n// Parameterized commands\n/**\nWrap the selection in a node of the given type with the given\nattributes.\n*/\nfunction wrapIn(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n        if (!wrapping)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.wrap(range, wrapping).scrollIntoView());\n        return true;\n    };\n}\n/**\nReturns a command that tries to set the selected textblocks to the\ngiven node type with the given attributes.\n*/\nfunction setBlockType(nodeType, attrs = null) {\n    return function (state, dispatch) {\n        let applicable = false;\n        for (let i = 0; i < state.selection.ranges.length && !applicable; i++) {\n            let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n            state.doc.nodesBetween(from, to, (node, pos) => {\n                if (applicable)\n                    return false;\n                if (!node.isTextblock || node.hasMarkup(nodeType, attrs))\n                    return;\n                if (node.type == nodeType) {\n                    applicable = true;\n                }\n                else {\n                    let $pos = state.doc.resolve(pos), index = $pos.index();\n                    applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n                }\n            });\n        }\n        if (!applicable)\n            return false;\n        if (dispatch) {\n            let tr = state.tr;\n            for (let i = 0; i < state.selection.ranges.length; i++) {\n                let { $from: { pos: from }, $to: { pos: to } } = state.selection.ranges[i];\n                tr.setBlockType(from, to, nodeType, attrs);\n            }\n            dispatch(tr.scrollIntoView());\n        }\n        return true;\n    };\n}\nfunction markApplies(doc, ranges, type, enterAtoms) {\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        let can = $from.depth == 0 ? doc.inlineContent && doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (can || !enterAtoms && node.isAtom && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos)\n                return false;\n            can = node.inlineContent && node.type.allowsMarkType(type);\n        });\n        if (can)\n            return true;\n    }\n    return false;\n}\nfunction removeInlineAtoms(ranges) {\n    let result = [];\n    for (let i = 0; i < ranges.length; i++) {\n        let { $from, $to } = ranges[i];\n        $from.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.isAtom && node.content.size && node.isInline && pos >= $from.pos && pos + node.nodeSize <= $to.pos) {\n                if (pos + 1 > $from.pos)\n                    result.push(new SelectionRange($from, $from.doc.resolve(pos + 1)));\n                $from = $from.doc.resolve(pos + 1 + node.content.size);\n                return false;\n            }\n        });\n        if ($from.pos < $to.pos)\n            result.push(new SelectionRange($from, $to));\n    }\n    return result;\n}\n/**\nCreate a command function that toggles the given mark with the\ngiven attributes. Will return `false` when the current selection\ndoesn't support that mark. This will remove the mark if any marks\nof that type exist in the selection, or add it otherwise. If the\nselection is empty, this applies to the [stored\nmarks](https://prosemirror.net/docs/ref/#state.EditorState.storedMarks) instead of a range of the\ndocument.\n*/\nfunction toggleMark(markType, attrs = null, options) {\n    let removeWhenPresent = (options && options.removeWhenPresent) !== false;\n    let enterAtoms = (options && options.enterInlineAtoms) !== false;\n    return function (state, dispatch) {\n        let { empty, $cursor, ranges } = state.selection;\n        if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType, enterAtoms))\n            return false;\n        if (dispatch) {\n            if ($cursor) {\n                if (markType.isInSet(state.storedMarks || $cursor.marks()))\n                    dispatch(state.tr.removeStoredMark(markType));\n                else\n                    dispatch(state.tr.addStoredMark(markType.create(attrs)));\n            }\n            else {\n                let add, tr = state.tr;\n                if (!enterAtoms)\n                    ranges = removeInlineAtoms(ranges);\n                if (removeWhenPresent) {\n                    add = !ranges.some(r => state.doc.rangeHasMark(r.$from.pos, r.$to.pos, markType));\n                }\n                else {\n                    add = !ranges.every(r => {\n                        let missing = false;\n                        tr.doc.nodesBetween(r.$from.pos, r.$to.pos, (node, pos, parent) => {\n                            if (missing)\n                                return false;\n                            missing = !markType.isInSet(node.marks) && !!parent && parent.type.allowsMarkType(markType) &&\n                                !(node.isText && /^\\s*$/.test(node.textBetween(Math.max(0, r.$from.pos - pos), Math.min(node.nodeSize, r.$to.pos - pos))));\n                        });\n                        return !missing;\n                    });\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    let { $from, $to } = ranges[i];\n                    if (!add) {\n                        tr.removeMark($from.pos, $to.pos, markType);\n                    }\n                    else {\n                        let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore;\n                        let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n                        let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n                        if (from + spaceStart < to) {\n                            from += spaceStart;\n                            to -= spaceEnd;\n                        }\n                        tr.addMark(from, to, markType.create(attrs));\n                    }\n                }\n                dispatch(tr.scrollIntoView());\n            }\n        }\n        return true;\n    };\n}\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n    return (tr) => {\n        if (!tr.isGeneric)\n            return dispatch(tr);\n        let ranges = [];\n        for (let i = 0; i < tr.mapping.maps.length; i++) {\n            let map = tr.mapping.maps[i];\n            for (let j = 0; j < ranges.length; j++)\n                ranges[j] = map.map(ranges[j]);\n            map.forEach((_s, _e, from, to) => ranges.push(from, to));\n        }\n        // Figure out which joinable points exist inside those ranges,\n        // by checking all node boundaries in their parent nodes.\n        let joinable = [];\n        for (let i = 0; i < ranges.length; i += 2) {\n            let from = ranges[i], to = ranges[i + 1];\n            let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n            for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n                let after = parent.maybeChild(index);\n                if (!after)\n                    break;\n                if (index && joinable.indexOf(pos) == -1) {\n                    let before = parent.child(index - 1);\n                    if (before.type == after.type && isJoinable(before, after))\n                        joinable.push(pos);\n                }\n                pos += after.nodeSize;\n            }\n        }\n        // Join the joinable points\n        joinable.sort((a, b) => a - b);\n        for (let i = joinable.length - 1; i >= 0; i--) {\n            if (canJoin(tr.doc, joinable[i]))\n                tr.join(joinable[i]);\n        }\n        dispatch(tr);\n    };\n}\n/**\nWrap a command so that, when it produces a transform that causes\ntwo joinable nodes to end up next to each other, those are joined.\nNodes are considered joinable when they are of the same type and\nwhen the `isJoinable` predicate returns true for them or, if an\narray of strings was passed, if their node type name is in that\narray.\n*/\nfunction autoJoin(command, isJoinable) {\n    let canJoin = Array.isArray(isJoinable) ? (node) => isJoinable.indexOf(node.type.name) > -1\n        : isJoinable;\n    return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, canJoin), view);\n}\n/**\nCombine a number of command functions into a single function (which\ncalls them one by one until one returns true).\n*/\nfunction chainCommands(...commands) {\n    return function (state, dispatch, view) {\n        for (let i = 0; i < commands.length; i++)\n            if (commands[i](state, dispatch, view))\n                return true;\n        return false;\n    };\n}\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n/**\nA basic keymap containing bindings not specific to any schema.\nBinds the following keys (when multiple commands are listed, they\nare chained with [`chainCommands`](https://prosemirror.net/docs/ref/#commands.chainCommands)):\n\n* **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n* **Mod-Enter** to `exitCode`\n* **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n* **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n* **Mod-a** to `selectAll`\n*/\nconst pcBaseKeymap = {\n    \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n    \"Mod-Enter\": exitCode,\n    \"Backspace\": backspace,\n    \"Mod-Backspace\": backspace,\n    \"Shift-Backspace\": backspace,\n    \"Delete\": del,\n    \"Mod-Delete\": del,\n    \"Mod-a\": selectAll\n};\n/**\nA copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n**Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n**Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\nCtrl-Delete.\n*/\nconst macBaseKeymap = {\n    \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n    \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n    \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n    \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n    \"Ctrl-a\": selectTextblockStart,\n    \"Ctrl-e\": selectTextblockEnd\n};\nfor (let key in pcBaseKeymap)\n    macBaseKeymap[key] = pcBaseKeymap[key];\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n    // @ts-ignore\n    : typeof os != \"undefined\" && os.platform ? os.platform() == \"darwin\" : false;\n/**\nDepending on the detected platform, this will hold\n[`pcBasekeymap`](https://prosemirror.net/docs/ref/#commands.pcBaseKeymap) or\n[`macBaseKeymap`](https://prosemirror.net/docs/ref/#commands.macBaseKeymap).\n*/\nconst baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinTextblockBackward, joinTextblockForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockAs, splitBlockKeepMarks, toggleMark, wrapIn };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\nfunction normalizeKeyName(name) {\n    let parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; i++) {\n        let mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (mac)\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction normalize(map) {\n    let copy = Object.create(null);\n    for (let prop in map)\n        copy[normalizeKeyName(prop)] = map[prop];\n    return copy;\n}\nfunction modifiers(name, event, shift = true) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\n/**\nCreate a keymap plugin for the given set of bindings.\n\nBindings should map key names to [command](https://prosemirror.net/docs/ref/#commands)-style\nfunctions, which will be called with `(EditorState, dispatch,\nEditorView)` arguments, and should return true when they've handled\nthe key. Note that the view argument isn't part of the command\nprotocol, but can be used as an escape hatch if a binding needs to\ndirectly interact with the UI.\n\nKey names may be strings like `\"Shift-Ctrl-Enter\"`—a key\nidentifier prefixed with zero or more modifiers. Key identifiers\nare based on the strings that can appear in\n[`KeyEvent.key`](https:developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\nUse lowercase letters to refer to letter keys (or uppercase letters\nif you want shift to be held). You may use `\"Space\"` as an alias\nfor the `\" \"` name.\n\nModifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n`a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n`Meta-`) are recognized. For characters that are created by holding\nshift, the `Shift-` prefix is implied, and should not be added\nexplicitly.\n\nYou can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\nother platforms.\n\nYou can add multiple keymap plugins to an editor. The order in\nwhich they appear determines their precedence (the ones early in\nthe array get to dispatch first).\n*/\nfunction keymap(bindings) {\n    return new Plugin({ props: { handleKeyDown: keydownHandler(bindings) } });\n}\n/**\nGiven a set of bindings (using the same format as\n[`keymap`](https://prosemirror.net/docs/ref/#keymap.keymap)), return a [keydown\nhandler](https://prosemirror.net/docs/ref/#view.EditorProps.handleKeyDown) that handles them.\n*/\nfunction keydownHandler(bindings) {\n    let map = normalize(bindings);\n    return function (view, event) {\n        let name = keyName(event), baseName, direct = map[modifiers(name, event)];\n        if (direct && direct(view.state, view.dispatch, view))\n            return true;\n        // A character key\n        if (name.length == 1 && name != \" \") {\n            if (event.shiftKey) {\n                // In case the name was already modified by shift, try looking\n                // it up without its shift modifier\n                let noShift = map[modifiers(name, event, false)];\n                if (noShift && noShift(view.state, view.dispatch, view))\n                    return true;\n            }\n            if ((event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n                (baseName = base[event.keyCode]) && baseName != name) {\n                // Try falling back to the keyCode when there's a modifier\n                // active or the character produced isn't ASCII, and our table\n                // produces a different name from the the keyCode. See #668,\n                // #1060\n                let fromCode = map[modifiers(baseName, event)];\n                if (fromCode && fromCode(view.state, view.dispatch, view))\n                    return true;\n            }\n        }\n        return false;\n    };\n}\n\nexport { keydownHandler, keymap };\n","import { stackOverFlow } from '@milkdown/exception'\n\n/// The element of the stack, which holds an array of nodes.\nexport abstract class StackElement<Node> {\n  /// A method that can `push` a node into the element.\n  abstract push(node: Node, ...rest: Node[]): void\n}\n\n/// The stack that is used to store the elements.\n///\n/// > Generally, you don't need to use this class directly.\n///\n/// When using the stack, users can call `stack.open` to push a new element into the stack.\n/// And use `stack.push` to push a node into the top element.\n/// Then use `stack.close` to close the top element and pop it.\n///\n/// For example: `stack.open(A).push(B).push(C).close()` will generate a structure like `A(B, C)`.\nexport class Stack<Node, Element extends StackElement<Node>> {\n  protected elements: Element[] = []\n\n  /// Get the size of the stack.\n  size = (): number => {\n    return this.elements.length\n  }\n\n  /// Get the top element of the stack.\n  top = (): Element | undefined => {\n    return this.elements.at(-1)\n  }\n\n  /// Push a node into the top element.\n  push = (node: Node): void => {\n    this.top()?.push(node)\n  }\n\n  /// Push a new element.\n  open = (node: Element): void => {\n    this.elements.push(node)\n  }\n\n  /// Close the top element and pop it.\n  close = (): Element => {\n    const el = this.elements.pop()\n    if (!el) throw stackOverFlow()\n\n    return el\n  }\n}\n","import type { Attrs, Node, NodeType } from '@milkdown/prose/model'\nimport { StackElement } from '../utility'\n\nexport class ParserStackElement extends StackElement<Node> {\n  constructor(\n    public type: NodeType,\n    public content: Node[],\n    public attrs?: Attrs\n  ) {\n    super()\n  }\n\n  push(node: Node, ...rest: Node[]) {\n    this.content.push(node, ...rest)\n  }\n\n  pop(): Node | undefined {\n    return this.content.pop()\n  }\n\n  static create(type: NodeType, content: Node[], attrs?: Attrs) {\n    return new ParserStackElement(type, content, attrs)\n  }\n}\n","import type {\n  Attrs,\n  MarkType,\n  Node,\n  NodeType,\n  Schema,\n} from '@milkdown/prose/model'\nimport {\n  createNodeInParserFail,\n  parserMatchError,\n  stackOverFlow,\n} from '@milkdown/exception'\nimport { Mark } from '@milkdown/prose/model'\nimport type {\n  MarkSchema,\n  MarkdownNode,\n  NodeSchema,\n  RemarkParser,\n} from '../utility'\nimport { Stack } from '../utility'\n\nimport { ParserStackElement } from './stack-element'\nimport type { Parser } from './types'\n\n/// A state machine for parser. Transform remark AST into prosemirror state.\nexport class ParserState extends Stack<Node, ParserStackElement> {\n  /// The schema in current editor.\n  readonly schema: Schema\n\n  /// @internal\n  #marks: readonly Mark[] = Mark.none\n\n  /// Create a parser from schema and remark instance.\n  ///\n  /// ```typescript\n  /// const parser = ParserState.create(schema, remark)\n  /// const prosemirrorNode = parser(SomeMarkdownText)\n  /// ```\n  static create = (schema: Schema, remark: RemarkParser): Parser => {\n    const state = new this(schema)\n    return (text) => {\n      state.run(remark, text)\n      return state.toDoc()\n    }\n  }\n\n  /// @internal\n  protected constructor(schema: Schema) {\n    super()\n    this.schema = schema\n  }\n\n  /// @internal\n  #hasText = (node: Node): node is Node & { text: string } => node.isText\n\n  /// @internal\n  #maybeMerge = (a: Node, b: Node): Node | undefined => {\n    if (this.#hasText(a) && this.#hasText(b) && Mark.sameSet(a.marks, b.marks))\n      return this.schema.text(a.text + b.text, a.marks)\n\n    return undefined\n  }\n\n  /// @internal\n  #matchTarget = (node: MarkdownNode): NodeType | MarkType => {\n    const result = Object.values({\n      ...this.schema.nodes,\n      ...this.schema.marks,\n    }).find((x): x is NodeType | MarkType => {\n      const spec = x.spec as NodeSchema | MarkSchema\n      return spec.parseMarkdown.match(node)\n    })\n\n    if (!result) throw parserMatchError(node)\n\n    return result\n  }\n\n  /// @internal\n  #runNode = (node: MarkdownNode) => {\n    const type = this.#matchTarget(node)\n    const spec = type.spec as NodeSchema | MarkSchema\n\n    spec.parseMarkdown.runner(this, node, type as NodeType & MarkType)\n  }\n\n  /// Inject root node for prosemirror state.\n  injectRoot = (node: MarkdownNode, nodeType: NodeType, attrs?: Attrs) => {\n    this.openNode(nodeType, attrs)\n    this.next(node.children)\n\n    return this\n  }\n\n  /// Open a new node, the next operations will\n  /// add nodes into that new node until `closeNode` is called.\n  openNode = (nodeType: NodeType, attrs?: Attrs) => {\n    this.open(ParserStackElement.create(nodeType, [], attrs))\n    return this\n  }\n\n  /// @internal\n  #closeNodeAndPush = (): Node => {\n    this.#marks = Mark.none\n    const element = this.close()\n\n    return this.#addNodeAndPush(element.type, element.attrs, element.content)\n  }\n\n  /// Close the current node and push it into the parent node.\n  closeNode = () => {\n    this.#closeNodeAndPush()\n    return this\n  }\n\n  /// @internal\n  #addNodeAndPush = (\n    nodeType: NodeType,\n    attrs?: Attrs,\n    content?: Node[]\n  ): Node => {\n    const node = nodeType.createAndFill(attrs, content, this.#marks)\n    if (!node) throw createNodeInParserFail(nodeType, attrs, content)\n\n    this.push(node)\n\n    return node\n  }\n\n  /// Add a node into current node.\n  addNode = (nodeType: NodeType, attrs?: Attrs, content?: Node[]) => {\n    this.#addNodeAndPush(nodeType, attrs, content)\n    return this\n  }\n\n  /// Open a new mark, the next nodes added will have that mark.\n  openMark = (markType: MarkType, attrs?: Attrs) => {\n    const mark = markType.create(attrs)\n\n    this.#marks = mark.addToSet(this.#marks)\n    return this\n  }\n\n  /// Close a opened mark.\n  closeMark = (markType: MarkType) => {\n    this.#marks = markType.removeFromSet(this.#marks)\n    return this\n  }\n\n  /// Add a text node into current node.\n  addText = (text: string) => {\n    const topElement = this.top()\n    if (!topElement) throw stackOverFlow()\n\n    const prevNode = topElement.pop()\n    const currNode = this.schema.text(text, this.#marks)\n\n    if (!prevNode) {\n      topElement.push(currNode)\n      return this\n    }\n\n    const merged = this.#maybeMerge(prevNode, currNode)\n    if (merged) {\n      topElement.push(merged)\n      return this\n    }\n    topElement.push(prevNode, currNode)\n    return this\n  }\n\n  /// @internal\n  build = (): Node => {\n    let doc: Node | undefined\n\n    do doc = this.#closeNodeAndPush()\n    while (this.size())\n\n    return doc\n  }\n\n  /// Give the node or node list back to the state and\n  /// the state will find a proper runner (by `match` method in parser spec) to handle it.\n  next = (nodes: MarkdownNode | MarkdownNode[] = []) => {\n    ;[nodes].flat().forEach((node) => this.#runNode(node))\n    return this\n  }\n\n  /// Build the current state into a [prosemirror document](https://prosemirror.net/docs/ref/#model.Document_Structure).\n  toDoc = () => this.build()\n\n  /// Transform a markdown string into prosemirror state.\n  run = (remark: RemarkParser, markdown: string) => {\n    const tree = remark.runSync(\n      remark.parse(markdown),\n      markdown\n    ) as MarkdownNode\n    this.next(tree)\n\n    return this\n  }\n}\n","import type { MarkdownNode } from '..'\nimport type { JSONRecord } from '../utility'\nimport { StackElement } from '../utility'\n\nexport class SerializerStackElement extends StackElement<MarkdownNode> {\n  constructor(\n    public type: string,\n    public children?: MarkdownNode[],\n    public value?: string,\n    public props: JSONRecord = {}\n  ) {\n    super()\n  }\n\n  static create = (\n    type: string,\n    children?: MarkdownNode[],\n    value?: string,\n    props: JSONRecord = {}\n  ) => new SerializerStackElement(type, children, value, props)\n\n  push = (node: MarkdownNode, ...rest: MarkdownNode[]) => {\n    if (!this.children) this.children = []\n\n    this.children.push(node, ...rest)\n  }\n\n  pop = (): MarkdownNode | undefined => this.children?.pop()\n}\n","import { serializerMatchError } from '@milkdown/exception'\nimport type {\n  Fragment,\n  MarkType,\n  Node,\n  NodeType,\n  Schema,\n} from '@milkdown/prose/model'\nimport { Mark } from '@milkdown/prose/model'\n\nimport type {\n  JSONRecord,\n  MarkSchema,\n  MarkdownNode,\n  NodeSchema,\n  RemarkParser,\n  Root,\n} from '../utility'\nimport { Stack } from '../utility'\nimport { SerializerStackElement } from './stack-element'\nimport type { Serializer } from './types'\n\nconst isFragment = (x: Node | Fragment): x is Fragment =>\n  Object.prototype.hasOwnProperty.call(x, 'size')\n\n/// State for serializer.\n/// Transform prosemirror state into remark AST.\nexport class SerializerState extends Stack<\n  MarkdownNode,\n  SerializerStackElement\n> {\n  /// @internal\n  #marks: readonly Mark[] = Mark.none\n  /// Get the schema of state.\n  readonly schema: Schema\n\n  /// Create a serializer from schema and remark instance.\n  ///\n  /// ```typescript\n  /// const serializer = SerializerState.create(schema, remark)\n  /// const markdown = parser(prosemirrorDoc)\n  /// ```\n  static create = (schema: Schema, remark: RemarkParser): Serializer => {\n    const state = new this(schema)\n    return (content: Node) => {\n      state.run(content)\n      return state.toString(remark)\n    }\n  }\n\n  /// @internal\n  constructor(schema: Schema) {\n    super()\n    this.schema = schema\n  }\n\n  /// @internal\n  #matchTarget = (node: Node | Mark): NodeType | MarkType => {\n    const result = Object.values({\n      ...this.schema.nodes,\n      ...this.schema.marks,\n    }).find((x): x is NodeType | MarkType => {\n      const spec = x.spec as NodeSchema | MarkSchema\n      return spec.toMarkdown.match(node as Node & Mark)\n    })\n\n    if (!result) throw serializerMatchError(node.type)\n\n    return result\n  }\n\n  /// @internal\n  #runProseNode = (node: Node) => {\n    const type = this.#matchTarget(node)\n    const spec = type.spec as NodeSchema\n    return spec.toMarkdown.runner(this, node)\n  }\n\n  /// @internal\n  #runProseMark = (mark: Mark, node: Node) => {\n    const type = this.#matchTarget(mark)\n    const spec = type.spec as MarkSchema\n    return spec.toMarkdown.runner(this, mark, node)\n  }\n\n  /// @internal\n  #runNode = (node: Node) => {\n    const { marks } = node\n    const getPriority = (x: Mark) => x.type.spec.priority ?? 50\n    const tmp = [...marks].sort((a, b) => getPriority(a) - getPriority(b))\n    const unPreventNext = tmp.every((mark) => !this.#runProseMark(mark, node))\n    if (unPreventNext) this.#runProseNode(node)\n\n    marks.forEach((mark) => this.#closeMark(mark))\n  }\n\n  /// @internal\n  #searchType = (child: MarkdownNode, type: string): MarkdownNode => {\n    if (child.type === type) return child\n\n    if (child.children?.length !== 1) return child\n\n    const searchNode = (node: MarkdownNode): MarkdownNode | null => {\n      if (node.type === type) return node\n\n      if (node.children?.length !== 1) return null\n\n      const [firstChild] = node.children\n      if (!firstChild) return null\n\n      return searchNode(firstChild)\n    }\n\n    const target = searchNode(child)\n\n    if (!target) return child\n\n    const tmp = target.children ? [...target.children] : undefined\n    const node = { ...child, children: tmp }\n    node.children = tmp\n    target.children = [node]\n\n    return target\n  }\n\n  /// @internal\n  #maybeMergeChildren = (node: MarkdownNode): MarkdownNode => {\n    const { children } = node\n    if (!children) return node\n\n    node.children = children.reduce((nextChildren, child, index) => {\n      if (index === 0) return [child]\n\n      const last = nextChildren.at(-1)\n      if (last && last.isMark && child.isMark) {\n        child = this.#searchType(child, last.type)\n        const { children: currChildren, ...currRest } = child\n        const { children: prevChildren, ...prevRest } = last\n        if (\n          child.type === last.type &&\n          currChildren &&\n          prevChildren &&\n          JSON.stringify(currRest) === JSON.stringify(prevRest)\n        ) {\n          const next = {\n            ...prevRest,\n            children: [...prevChildren, ...currChildren],\n          }\n          return nextChildren\n            .slice(0, -1)\n            .concat(this.#maybeMergeChildren(next))\n        }\n      }\n      return nextChildren.concat(child)\n    }, [] as MarkdownNode[])\n\n    return node\n  }\n\n  /// @internal\n  #createMarkdownNode = (element: SerializerStackElement) => {\n    const node: MarkdownNode = {\n      ...element.props,\n      type: element.type,\n    }\n\n    if (element.children) node.children = element.children\n\n    if (element.value) node.value = element.value\n\n    return node\n  }\n\n  /// Open a new node, the next operations will\n  /// add nodes into that new node until `closeNode` is called.\n  openNode = (type: string, value?: string, props?: JSONRecord) => {\n    this.open(SerializerStackElement.create(type, undefined, value, props))\n    return this\n  }\n\n  #moveSpaces = (\n    element: SerializerStackElement,\n    onPush: () => MarkdownNode\n  ) => {\n    let startSpaces = ''\n    let endSpaces = ''\n    const children = element.children\n    let first = -1\n    let last = -1\n    const findIndex = (node: MarkdownNode[]) => {\n      if (!node) return\n      node.forEach((child, index) => {\n        if (child.type === 'text' && child.value) {\n          if (first < 0) first = index\n\n          last = index\n        }\n      })\n    }\n\n    if (children) {\n      findIndex(children)\n      const lastChild = children?.[last] as\n        | (MarkdownNode & { value: string })\n        | undefined\n      const firstChild = children?.[first] as\n        | (MarkdownNode & { value: string })\n        | undefined\n      if (lastChild && lastChild.value.endsWith(' ')) {\n        endSpaces = lastChild.value.match(/ +$/)![0]\n        lastChild.value = lastChild.value.trimEnd()\n      }\n      if (firstChild && firstChild.value.startsWith(' ')) {\n        startSpaces = firstChild.value.match(/^ +/)![0]\n        firstChild.value = firstChild.value.trimStart()\n      }\n    }\n\n    if (startSpaces.length) this.#addNodeAndPush('text', undefined, startSpaces)\n\n    const result = onPush()\n\n    if (endSpaces.length) this.#addNodeAndPush('text', undefined, endSpaces)\n\n    return result\n  }\n\n  /// @internal\n  #closeNodeAndPush = (trim: boolean = false): MarkdownNode => {\n    const element = this.close()\n\n    const onPush = () =>\n      this.#addNodeAndPush(\n        element.type,\n        element.children,\n        element.value,\n        element.props\n      )\n\n    if (trim) return this.#moveSpaces(element, onPush)\n\n    return onPush()\n  }\n\n  /// Close the current node and push it into the parent node.\n  closeNode = () => {\n    this.#closeNodeAndPush()\n    return this\n  }\n\n  /// @internal\n  #addNodeAndPush = (\n    type: string,\n    children?: MarkdownNode[],\n    value?: string,\n    props?: JSONRecord\n  ): MarkdownNode => {\n    const element = SerializerStackElement.create(type, children, value, props)\n    const node: MarkdownNode = this.#maybeMergeChildren(\n      this.#createMarkdownNode(element)\n    )\n    this.push(node)\n    return node\n  }\n\n  /// Add a node into current node.\n  addNode = (\n    type: string,\n    children?: MarkdownNode[],\n    value?: string,\n    props?: JSONRecord\n  ) => {\n    this.#addNodeAndPush(type, children, value, props)\n    return this\n  }\n\n  /// @internal\n  #openMark = (\n    mark: Mark,\n    type: string,\n    value?: string,\n    props?: JSONRecord\n  ) => {\n    const isIn = mark.isInSet(this.#marks)\n\n    if (isIn) return this\n\n    this.#marks = mark.addToSet(this.#marks)\n    return this.openNode(type, value, { ...props, isMark: true })\n  }\n\n  /// @internal\n  #closeMark = (mark: Mark): void => {\n    const isIn = mark.isInSet(this.#marks)\n\n    if (!isIn) return\n\n    this.#marks = mark.type.removeFromSet(this.#marks)\n    this.#closeNodeAndPush(true)\n  }\n\n  /// Open a new mark, the next nodes added will have that mark.\n  /// The mark will be closed automatically.\n  withMark = (mark: Mark, type: string, value?: string, props?: JSONRecord) => {\n    this.#openMark(mark, type, value, props)\n    return this\n  }\n\n  /// Close a opened mark.\n  /// In most cases you don't need this because\n  /// marks will be closed automatically.\n  closeMark = (mark: Mark) => {\n    this.#closeMark(mark)\n    return this\n  }\n\n  /// @internal\n  build = (): MarkdownNode => {\n    let doc: MarkdownNode | null = null\n    do doc = this.#closeNodeAndPush()\n    while (this.size())\n\n    return doc\n  }\n\n  /// Give the node or node list back to the state and\n  /// the state will find a proper runner (by `match` method in serializer spec) to handle it.\n  next = (nodes: Node | Fragment) => {\n    if (isFragment(nodes)) {\n      nodes.forEach((node) => {\n        this.#runNode(node)\n      })\n      return this\n    }\n    this.#runNode(nodes)\n    return this\n  }\n\n  /// Use a remark parser to serialize current AST stored.\n  override toString = (remark: RemarkParser): string =>\n    remark.stringify(this.build() as Root)\n\n  /// Transform a prosemirror node tree into remark AST.\n  run = (tree: Node) => {\n    this.next(tree)\n\n    return this\n  }\n}\n","import type { MilkdownPlugin, TimerType } from '@milkdown/ctx'\nimport { createSlice, createTimer } from '@milkdown/ctx'\nimport { ctxCallOutOfScope } from '@milkdown/exception'\nimport type { Parser } from '@milkdown/transformer'\nimport { ParserState } from '@milkdown/transformer'\n\nimport { withMeta } from '../__internal__'\nimport { remarkCtx } from './atoms'\nimport { SchemaReady, schemaCtx } from './schema'\n\n/// The timer which will be resolved when the parser plugin is ready.\nexport const ParserReady = createTimer('ParserReady')\n\nconst outOfScope = (() => {\n  throw ctxCallOutOfScope()\n}) as Parser\n\n/// A slice which contains the parser.\nexport const parserCtx = createSlice(outOfScope, 'parser')\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[SchemaReady]`.\nexport const parserTimerCtx = createSlice([] as TimerType[], 'parserTimer')\n\n/// The parser plugin.\n/// This plugin will create a parser.\n///\n/// This plugin will wait for the schema plugin.\nexport const parser: MilkdownPlugin = (ctx) => {\n  ctx\n    .inject(parserCtx, outOfScope)\n    .inject(parserTimerCtx, [SchemaReady])\n    .record(ParserReady)\n\n  return async () => {\n    await ctx.waitTimers(parserTimerCtx)\n    const remark = ctx.get(remarkCtx)\n    const schema = ctx.get(schemaCtx)\n\n    ctx.set(parserCtx, ParserState.create(schema, remark))\n    ctx.done(ParserReady)\n    return () => {\n      ctx.remove(parserCtx).remove(parserTimerCtx).clearTimer(ParserReady)\n    }\n  }\n}\n\nwithMeta(parser, {\n  displayName: 'Parser',\n})\n","import type { MilkdownPlugin, TimerType } from '@milkdown/ctx'\nimport { createSlice, createTimer } from '@milkdown/ctx'\nimport type { Serializer } from '@milkdown/transformer'\nimport { SerializerState } from '@milkdown/transformer'\n\nimport { ctxCallOutOfScope } from '@milkdown/exception'\nimport { withMeta } from '../__internal__'\nimport { remarkCtx } from './atoms'\nimport { SchemaReady, schemaCtx } from './schema'\n\n/// The timer which will be resolved when the serializer plugin is ready.\nexport const SerializerReady = createTimer('SerializerReady')\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[SchemaReady]`.\nexport const serializerTimerCtx = createSlice(\n  [] as TimerType[],\n  'serializerTimer'\n)\n\nconst outOfScope = (() => {\n  throw ctxCallOutOfScope()\n}) as Serializer\n\n/// A slice which contains the serializer.\nexport const serializerCtx = createSlice<Serializer, 'serializer'>(\n  outOfScope,\n  'serializer'\n)\n\n/// The serializer plugin.\n/// This plugin will create a serializer.\n///\n/// This plugin will wait for the schema plugin.\nexport const serializer: MilkdownPlugin = (ctx) => {\n  ctx\n    .inject(serializerCtx, outOfScope)\n    .inject(serializerTimerCtx, [SchemaReady])\n    .record(SerializerReady)\n\n  return async () => {\n    await ctx.waitTimers(serializerTimerCtx)\n    const remark = ctx.get(remarkCtx)\n    const schema = ctx.get(schemaCtx)\n\n    ctx.set(serializerCtx, SerializerState.create(schema, remark))\n    ctx.done(SerializerReady)\n\n    return () => {\n      ctx\n        .remove(serializerCtx)\n        .remove(serializerTimerCtx)\n        .clearTimer(SerializerReady)\n    }\n  }\n}\n\nwithMeta(serializer, {\n  displayName: 'Serializer',\n})\n","import type { MilkdownPlugin, TimerType } from '@milkdown/ctx'\nimport { createSlice, createTimer } from '@milkdown/ctx'\nimport { docTypeError } from '@milkdown/exception'\nimport { customInputRules as createInputRules } from '@milkdown/prose'\nimport {\n  baseKeymap,\n  chainCommands,\n  deleteSelection,\n  joinBackward,\n  selectNodeBackward,\n} from '@milkdown/prose/commands'\nimport { undoInputRule } from '@milkdown/prose/inputrules'\nimport { keymap as createKeymap } from '@milkdown/prose/keymap'\nimport type { Schema } from '@milkdown/prose/model'\nimport { DOMParser, Node } from '@milkdown/prose/model'\nimport type { Command } from '@milkdown/prose/state'\nimport { EditorState, Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { JSONRecord, Parser } from '@milkdown/transformer'\n\nimport { withMeta } from '../__internal__'\nimport { ParserReady, parserCtx } from './parser'\nimport { schemaCtx } from './schema'\nimport { SerializerReady } from './serializer'\nimport { CommandsReady } from './commands'\nimport { editorStateCtx, inputRulesCtx, prosePluginsCtx } from './atoms'\n\n/// @internal\nexport type DefaultValue =\n  | string\n  | { type: 'html'; dom: HTMLElement }\n  | { type: 'json'; value: JSONRecord }\ntype StateOptions = Parameters<typeof EditorState.create>[0]\ntype StateOptionsOverride = (prev: StateOptions) => StateOptions\n\n/// A slice which contains the default value of the editor.\n/// Can be markdown string, html string or json.\nexport const defaultValueCtx = createSlice('' as DefaultValue, 'defaultValue')\n\n/// A slice which contains the options which is used to create the editor state.\nexport const editorStateOptionsCtx = createSlice<StateOptionsOverride>(\n  (x) => x,\n  'stateOptions'\n)\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[ParserReady, SerializerReady, CommandsReady]`.\nexport const editorStateTimerCtx = createSlice(\n  [] as TimerType[],\n  'editorStateTimer'\n)\n\n/// The timer which will be resolved when the editor state plugin is ready.\nexport const EditorStateReady = createTimer('EditorStateReady')\n\n/// @internal\nexport function getDoc(\n  defaultValue: DefaultValue,\n  parser: Parser,\n  schema: Schema\n) {\n  if (typeof defaultValue === 'string') return parser(defaultValue)\n\n  if (defaultValue.type === 'html')\n    return DOMParser.fromSchema(schema).parse(defaultValue.dom)\n\n  if (defaultValue.type === 'json')\n    return Node.fromJSON(schema, defaultValue.value)\n\n  throw docTypeError(defaultValue)\n}\n\nconst key = new PluginKey('MILKDOWN_STATE_TRACKER')\n\nfunction overrideBaseKeymap(keymap: Record<string, Command>) {\n  const handleBackspace = chainCommands(\n    undoInputRule,\n    deleteSelection,\n    joinBackward,\n    selectNodeBackward\n  )\n  keymap.Backspace = handleBackspace\n  return keymap\n}\n\n/// The editor state plugin.\n/// This plugin will create a prosemirror editor state.\n///\n/// This plugin will wait for the parser plugin, serializer plugin and commands plugin.\nexport const editorState: MilkdownPlugin = (ctx) => {\n  ctx\n    .inject(defaultValueCtx, '')\n    .inject(editorStateCtx, {} as EditorState)\n    .inject(editorStateOptionsCtx, (x) => x)\n    .inject(editorStateTimerCtx, [ParserReady, SerializerReady, CommandsReady])\n    .record(EditorStateReady)\n\n  return async () => {\n    await ctx.waitTimers(editorStateTimerCtx)\n\n    const schema = ctx.get(schemaCtx)\n    const parser = ctx.get(parserCtx)\n    const rules = ctx.get(inputRulesCtx)\n    const optionsOverride = ctx.get(editorStateOptionsCtx)\n    const prosePlugins = ctx.get(prosePluginsCtx)\n    const defaultValue = ctx.get(defaultValueCtx)\n    const doc = getDoc(defaultValue, parser, schema)\n\n    const plugins = [\n      ...prosePlugins,\n      new Plugin({\n        key,\n        state: {\n          init: () => {\n            // do nothing\n          },\n          apply: (_tr, _value, _oldState, newState) => {\n            ctx.set(editorStateCtx, newState)\n          },\n        },\n      }),\n      createInputRules({ rules }),\n      createKeymap(overrideBaseKeymap(baseKeymap)),\n    ]\n\n    ctx.set(prosePluginsCtx, plugins)\n\n    const options = optionsOverride({\n      schema,\n      doc,\n      plugins,\n    })\n\n    const state = EditorState.create(options)\n    ctx.set(editorStateCtx, state)\n    ctx.done(EditorStateReady)\n\n    return () => {\n      ctx\n        .remove(defaultValueCtx)\n        .remove(editorStateCtx)\n        .remove(editorStateOptionsCtx)\n        .remove(editorStateTimerCtx)\n        .clearTimer(EditorStateReady)\n    }\n  }\n}\n\nwithMeta(editorState, {\n  displayName: 'EditorState',\n})\n","import { TextSelection, NodeSelection, AllSelection, Selection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, Slice, DOMParser } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nconst domIndex = function (node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n};\nconst parentNode = function (node) {\n    let parent = node.assignedSlot || node.parentNode;\n    return parent && parent.nodeType == 11 ? parent.host : parent;\n};\nlet reusedRange = null;\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nconst textRange = function (node, from, to) {\n    let range = reusedRange || (reusedRange = document.createRange());\n    range.setEnd(node, to == null ? node.nodeValue.length : to);\n    range.setStart(node, from || 0);\n    return range;\n};\nconst clearReusedRange = function () {\n    reusedRange = null;\n};\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nconst isEquivalentPosition = function (node, off, targetNode, targetOff) {\n    return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1));\n};\nconst atomElements = /^(img|br|input|textarea|hr)$/i;\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : nodeSize(node))) {\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n                node.contentEditable == \"false\")\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? nodeSize(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction nodeSize(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction textNodeBefore$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset)\n            return node;\n        if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = nodeSize(node);\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter$1(node, offset) {\n    for (;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length)\n            return node;\n        if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !hasBlockDesc(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction isOnEdge(node, offset, parent) {\n    for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n        if (node == parent)\n            return true;\n        let index = domIndex(node);\n        node = node.parentNode;\n        if (!node)\n            return false;\n        atStart = atStart && index == 0;\n        atEnd = atEnd && index == nodeSize(node);\n    }\n}\nfunction hasBlockDesc(dom) {\n    let desc;\n    for (let cur = dom; cur; cur = cur.parentNode)\n        if (desc = cur.pmViewDesc)\n            break;\n    return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom);\n}\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nconst selectionCollapsed = function (domSel) {\n    return domSel.focusNode && isEquivalentPosition(domSel.focusNode, domSel.focusOffset, domSel.anchorNode, domSel.anchorOffset);\n};\nfunction keyEvent(keyCode, key) {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"keydown\", true, true);\n    event.keyCode = keyCode;\n    event.key = event.code = key;\n    return event;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction caretFromPoint(doc, x, y) {\n    if (doc.caretPositionFromPoint) {\n        try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n            let pos = doc.caretPositionFromPoint(x, y);\n            // Clip the offset, because Chrome will return a text offset\n            // into <input> nodes, which can't be treated as a regular DOM\n            // offset\n            if (pos)\n                return { node: pos.offsetNode, offset: Math.min(nodeSize(pos.offsetNode), pos.offset) };\n        }\n        catch (_) { }\n    }\n    if (doc.caretRangeFromPoint) {\n        let range = doc.caretRangeFromPoint(x, y);\n        if (range)\n            return { node: range.startContainer, offset: Math.min(nodeSize(range.startContainer), range.startOffset) };\n    }\n}\n\nconst nav = typeof navigator != \"undefined\" ? navigator : null;\nconst doc = typeof document != \"undefined\" ? document : null;\nconst agent = (nav && nav.userAgent) || \"\";\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent);\nconst ie_upto10 = /MSIE \\d/.exec(agent);\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst ie_version = ie_upto10 ? document.documentMode : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0;\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(agent);\ngecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1];\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent);\nconst chrome = !!_chrome;\nconst chrome_version = _chrome ? +_chrome[1] : 0;\nconst safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n// Is true for both iOS and iPadOS for convenience\nconst ios = safari && (/Mobile\\/\\w+/.test(agent) || !!nav && nav.maxTouchPoints > 2);\nconst mac = ios || (nav ? /Mac/.test(nav.platform) : false);\nconst windows = nav ? /Win/.test(nav.platform) : false;\nconst android = /Android \\d/.test(agent);\nconst webkit = !!doc && \"webkitFontSmoothing\" in doc.documentElement.style;\nconst webkit_version = webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;\n\nfunction windowRect(doc) {\n    let vp = doc.defaultView && doc.defaultView.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: doc.documentElement.clientWidth,\n        top: 0, bottom: doc.documentElement.clientHeight };\n}\nfunction getSide(value, side) {\n    return typeof value == \"number\" ? value : value[side];\n}\nfunction clientRect(node) {\n    let rect = node.getBoundingClientRect();\n    // Adjust for elements with style \"transform: scale()\"\n    let scaleX = (rect.width / node.offsetWidth) || 1;\n    let scaleY = (rect.height / node.offsetHeight) || 1;\n    // Make sure scrollbar width isn't included in the rectangle\n    return { left: rect.left, right: rect.left + node.clientWidth * scaleX,\n        top: rect.top, bottom: rect.top + node.clientHeight * scaleY };\n}\nfunction scrollRectIntoView(view, rect, startDOM) {\n    let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n    let doc = view.dom.ownerDocument;\n    for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n        if (!parent)\n            break;\n        if (parent.nodeType != 1)\n            continue;\n        let elt = parent;\n        let atTop = elt == doc.body;\n        let bounding = atTop ? windowRect(doc) : clientRect(elt);\n        let moveX = 0, moveY = 0;\n        if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n            moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"));\n        else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n            moveY = rect.bottom - rect.top > bounding.bottom - bounding.top\n                ? rect.top + getSide(scrollMargin, \"top\") - bounding.top\n                : rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\");\n        if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n            moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"));\n        else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n            moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\");\n        if (moveX || moveY) {\n            if (atTop) {\n                doc.defaultView.scrollBy(moveX, moveY);\n            }\n            else {\n                let startX = elt.scrollLeft, startY = elt.scrollTop;\n                if (moveY)\n                    elt.scrollTop += moveY;\n                if (moveX)\n                    elt.scrollLeft += moveX;\n                let dX = elt.scrollLeft - startX, dY = elt.scrollTop - startY;\n                rect = { left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY };\n            }\n        }\n        if (atTop || /^(fixed|sticky)$/.test(getComputedStyle(parent).position))\n            break;\n    }\n}\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n    let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n    let refDOM, refTop;\n    for (let x = (rect.left + rect.right) / 2, y = startY + 1; y < Math.min(innerHeight, rect.bottom); y += 5) {\n        let dom = view.root.elementFromPoint(x, y);\n        if (!dom || dom == view.dom || !view.dom.contains(dom))\n            continue;\n        let localRect = dom.getBoundingClientRect();\n        if (localRect.top >= startY - 20) {\n            refDOM = dom;\n            refTop = localRect.top;\n            break;\n        }\n    }\n    return { refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom) };\n}\nfunction scrollStack(dom) {\n    let stack = [], doc = dom.ownerDocument;\n    for (let cur = dom; cur; cur = parentNode(cur)) {\n        stack.push({ dom: cur, top: cur.scrollTop, left: cur.scrollLeft });\n        if (dom == doc)\n            break;\n    }\n    return stack;\n}\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos({ refDOM, refTop, stack }) {\n    let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n    restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\nfunction restoreScrollStack(stack, dTop) {\n    for (let i = 0; i < stack.length; i++) {\n        let { dom, top, left } = stack[i];\n        if (dom.scrollTop != top + dTop)\n            dom.scrollTop = top + dTop;\n        if (dom.scrollLeft != left)\n            dom.scrollLeft = left;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stored = scrollStack(dom);\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        restoreScrollStack(stored, 0);\n    }\n}\nfunction findOffsetInNode(node, coords) {\n    let closest, dxClosest = 2e8, coordsClosest, offset = 0;\n    let rowBot = coords.top, rowTop = coords.top;\n    let firstBelow, coordsBelow;\n    for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n        let rects;\n        if (child.nodeType == 1)\n            rects = child.getClientRects();\n        else if (child.nodeType == 3)\n            rects = textRange(child).getClientRects();\n        else\n            continue;\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (rect.top <= rowBot && rect.bottom >= rowTop) {\n                rowBot = Math.max(rect.bottom, rowBot);\n                rowTop = Math.min(rect.top, rowTop);\n                let dx = rect.left > coords.left ? rect.left - coords.left\n                    : rect.right < coords.left ? coords.left - rect.right : 0;\n                if (dx < dxClosest) {\n                    closest = child;\n                    dxClosest = dx;\n                    coordsClosest = dx && closest.nodeType == 3 ? {\n                        left: rect.right < coords.left ? rect.right : rect.left,\n                        top: coords.top\n                    } : coords;\n                    if (child.nodeType == 1 && dx)\n                        offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0);\n                    continue;\n                }\n            }\n            else if (rect.top > coords.top && !firstBelow && rect.left <= coords.left && rect.right >= coords.left) {\n                firstBelow = child;\n                coordsBelow = { left: Math.max(rect.left, Math.min(rect.right, coords.left)), top: rect.top };\n            }\n            if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                coords.left >= rect.left && coords.top >= rect.bottom))\n                offset = childIndex + 1;\n        }\n    }\n    if (!closest && firstBelow) {\n        closest = firstBelow;\n        coordsClosest = coordsBelow;\n        dxClosest = 0;\n    }\n    if (closest && closest.nodeType == 3)\n        return findOffsetInText(closest, coordsClosest);\n    if (!closest || (dxClosest && closest.nodeType == 1))\n        return { node, offset };\n    return findOffsetInNode(closest, coordsClosest);\n}\nfunction findOffsetInText(node, coords) {\n    let len = node.nodeValue.length;\n    let range = document.createRange();\n    for (let i = 0; i < len; i++) {\n        range.setEnd(node, i + 1);\n        range.setStart(node, i);\n        let rect = singleRect(range, 1);\n        if (rect.top == rect.bottom)\n            continue;\n        if (inRect(coords, rect))\n            return { node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0) };\n    }\n    return { node, offset: 0 };\n}\nfunction inRect(coords, rect) {\n    return coords.left >= rect.left - 1 && coords.left <= rect.right + 1 &&\n        coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1;\n}\nfunction targetKludge(dom, coords) {\n    let parent = dom.parentNode;\n    if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n        return parent;\n    return dom;\n}\nfunction posFromElement(view, elt, coords) {\n    let { node, offset } = findOffsetInNode(elt, coords), bias = -1;\n    if (node.nodeType == 1 && !node.firstChild) {\n        let rect = node.getBoundingClientRect();\n        bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n    }\n    return view.docView.posFromDOM(node, offset, bias);\n}\nfunction posFromCaret(view, node, offset, coords) {\n    // Browser (in caretPosition/RangeFromPoint) will agressively\n    // normalize towards nearby inline nodes. Since we are interested in\n    // positions between block nodes too, we first walk up the hierarchy\n    // of nodes to see if there are block nodes that the coordinates\n    // fall outside of. If so, we take the position before/after that\n    // block. If not, we call `posFromDOM` on the raw node/offset.\n    let outsideBlock = -1;\n    for (let cur = node, sawBlock = false;;) {\n        if (cur == view.dom)\n            break;\n        let desc = view.docView.nearestDesc(cur, true);\n        if (!desc)\n            return null;\n        if (desc.dom.nodeType == 1 && (desc.node.isBlock && desc.parent || !desc.contentDOM)) {\n            let rect = desc.dom.getBoundingClientRect();\n            if (desc.node.isBlock && desc.parent) {\n                // Only apply the horizontal test to the innermost block. Vertical for any parent.\n                if (!sawBlock && rect.left > coords.left || rect.top > coords.top)\n                    outsideBlock = desc.posBefore;\n                else if (!sawBlock && rect.right < coords.left || rect.bottom < coords.top)\n                    outsideBlock = desc.posAfter;\n                sawBlock = true;\n            }\n            if (!desc.contentDOM && outsideBlock < 0 && !desc.node.isText) {\n                // If we are inside a leaf, return the side of the leaf closer to the coords\n                let before = desc.node.isBlock ? coords.top < (rect.top + rect.bottom) / 2\n                    : coords.left < (rect.left + rect.right) / 2;\n                return before ? desc.posBefore : desc.posAfter;\n            }\n        }\n        cur = desc.dom.parentNode;\n    }\n    return outsideBlock > -1 ? outsideBlock : view.docView.posFromDOM(node, offset, -1);\n}\nfunction elementFromPoint(element, coords, box) {\n    let len = element.childNodes.length;\n    if (len && box.top < box.bottom) {\n        for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n            let child = element.childNodes[i];\n            if (child.nodeType == 1) {\n                let rects = child.getClientRects();\n                for (let j = 0; j < rects.length; j++) {\n                    let rect = rects[j];\n                    if (inRect(coords, rect))\n                        return elementFromPoint(child, coords, rect);\n                }\n            }\n            if ((i = (i + 1) % len) == startI)\n                break;\n        }\n    }\n    return element;\n}\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n    let doc = view.dom.ownerDocument, node, offset = 0;\n    let caret = caretFromPoint(doc, coords.left, coords.top);\n    if (caret)\n        ({ node, offset } = caret);\n    let elt = (view.root.elementFromPoint ? view.root : doc)\n        .elementFromPoint(coords.left, coords.top);\n    let pos;\n    if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n        let box = view.dom.getBoundingClientRect();\n        if (!inRect(coords, box))\n            return null;\n        elt = elementFromPoint(view.dom, coords, box);\n        if (!elt)\n            return null;\n    }\n    // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n    if (safari) {\n        for (let p = elt; node && p; p = parentNode(p))\n            if (p.draggable)\n                node = undefined;\n    }\n    elt = targetKludge(elt, coords);\n    if (node) {\n        if (gecko && node.nodeType == 1) {\n            // Firefox will sometimes return offsets into <input> nodes, which\n            // have no actual children, from caretPositionFromPoint (#953)\n            offset = Math.min(offset, node.childNodes.length);\n            // It'll also move the returned position before image nodes,\n            // even if those are behind it.\n            if (offset < node.childNodes.length) {\n                let next = node.childNodes[offset], box;\n                if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n                    box.bottom > coords.top)\n                    offset++;\n            }\n        }\n        let prev;\n        // When clicking above the right side of an uneditable node, Chrome will report a cursor position after that node.\n        if (webkit && offset && node.nodeType == 1 && (prev = node.childNodes[offset - 1]).nodeType == 1 &&\n            prev.contentEditable == \"false\" && prev.getBoundingClientRect().top >= coords.top)\n            offset--;\n        // Suspiciously specific kludge to work around caret*FromPoint\n        // never returning a position at the end of the document\n        if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n            coords.top > node.lastChild.getBoundingClientRect().bottom)\n            pos = view.state.doc.content.size;\n        // Ignore positions directly after a BR, since caret*FromPoint\n        // 'round up' positions that would be more accurately placed\n        // before the BR node.\n        else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n            pos = posFromCaret(view, node, offset, coords);\n    }\n    if (pos == null)\n        pos = posFromElement(view, elt, coords);\n    let desc = view.docView.nearestDesc(elt, true);\n    return { pos, inside: desc ? desc.posAtStart - desc.border : -1 };\n}\nfunction nonZero(rect) {\n    return rect.top < rect.bottom || rect.left < rect.right;\n}\nfunction singleRect(target, bias) {\n    let rects = target.getClientRects();\n    if (rects.length) {\n        let first = rects[bias < 0 ? 0 : rects.length - 1];\n        if (nonZero(first))\n            return first;\n    }\n    return Array.prototype.find.call(rects, nonZero) || target.getBoundingClientRect();\n}\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n    let { node, offset, atom } = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n    let supportEmptyRange = webkit || gecko;\n    if (node.nodeType == 3) {\n        // These browsers support querying empty text ranges. Prefer that in\n        // bidi context or when at the end of a node.\n        if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n            let rect = singleRect(textRange(node, offset, offset), side);\n            // Firefox returns bad results (the position before the space)\n            // when querying a position directly after line-broken\n            // whitespace. Detect this situation and and kludge around it\n            if (gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n                let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n                if (rectBefore.top == rect.top) {\n                    let rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n                    if (rectAfter.top != rect.top)\n                        return flattenV(rectAfter, rectAfter.left < rectBefore.left);\n                }\n            }\n            return rect;\n        }\n        else {\n            let from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n            if (side < 0 && !offset) {\n                to++;\n                takeSide = -1;\n            }\n            else if (side >= 0 && offset == node.nodeValue.length) {\n                from--;\n                takeSide = 1;\n            }\n            else if (side < 0) {\n                from--;\n            }\n            else {\n                to++;\n            }\n            return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0);\n        }\n    }\n    let $dom = view.state.doc.resolve(pos - (atom || 0));\n    // Return a horizontal line in block context\n    if (!$dom.parent.inlineContent) {\n        if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n            let before = node.childNodes[offset - 1];\n            if (before.nodeType == 1)\n                return flattenH(before.getBoundingClientRect(), false);\n        }\n        if (atom == null && offset < nodeSize(node)) {\n            let after = node.childNodes[offset];\n            if (after.nodeType == 1)\n                return flattenH(after.getBoundingClientRect(), true);\n        }\n        return flattenH(node.getBoundingClientRect(), side >= 0);\n    }\n    // Inline, not in text node (this is not Bidi-safe)\n    if (atom == null && offset && (side < 0 || offset == nodeSize(node))) {\n        let before = node.childNodes[offset - 1];\n        let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n            // BR nodes tend to only return the rectangle before them.\n            // Only use them if they are the last element in their parent\n            : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null;\n        if (target)\n            return flattenV(singleRect(target, 1), false);\n    }\n    if (atom == null && offset < nodeSize(node)) {\n        let after = node.childNodes[offset];\n        while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords)\n            after = after.nextSibling;\n        let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n            : after.nodeType == 1 ? after : null;\n        if (target)\n            return flattenV(singleRect(target, -1), true);\n    }\n    // All else failed, just try to get a rectangle for the target node\n    return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0);\n}\nfunction flattenV(rect, left) {\n    if (rect.width == 0)\n        return rect;\n    let x = left ? rect.left : rect.right;\n    return { top: rect.top, bottom: rect.bottom, left: x, right: x };\n}\nfunction flattenH(rect, top) {\n    if (rect.height == 0)\n        return rect;\n    let y = top ? rect.top : rect.bottom;\n    return { top: y, bottom: y, left: rect.left, right: rect.right };\n}\nfunction withFlushedState(view, state, f) {\n    let viewState = view.state, active = view.root.activeElement;\n    if (viewState != state)\n        view.updateState(state);\n    if (active != view.dom)\n        view.focus();\n    try {\n        return f();\n    }\n    finally {\n        if (viewState != state)\n            view.updateState(viewState);\n        if (active != view.dom && active)\n            active.focus();\n    }\n}\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n    let sel = state.selection;\n    let $pos = dir == \"up\" ? sel.$from : sel.$to;\n    return withFlushedState(view, state, () => {\n        let { node: dom } = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n        for (;;) {\n            let nearest = view.docView.nearestDesc(dom, true);\n            if (!nearest)\n                break;\n            if (nearest.node.isBlock) {\n                dom = nearest.contentDOM || nearest.dom;\n                break;\n            }\n            dom = nearest.dom.parentNode;\n        }\n        let coords = coordsAtPos(view, $pos.pos, 1);\n        for (let child = dom.firstChild; child; child = child.nextSibling) {\n            let boxes;\n            if (child.nodeType == 1)\n                boxes = child.getClientRects();\n            else if (child.nodeType == 3)\n                boxes = textRange(child, 0, child.nodeValue.length).getClientRects();\n            else\n                continue;\n            for (let i = 0; i < boxes.length; i++) {\n                let box = boxes[i];\n                if (box.bottom > box.top + 1 &&\n                    (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n                        : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n                    return false;\n            }\n        }\n        return true;\n    });\n}\nconst maybeRTL = /[\\u0590-\\u08ac]/;\nfunction endOfTextblockHorizontal(view, state, dir) {\n    let { $head } = state.selection;\n    if (!$head.parent.isTextblock)\n        return false;\n    let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n    let sel = view.domSelection();\n    if (!sel)\n        return $head.pos == $head.start() || $head.pos == $head.end();\n    // If the textblock is all LTR, or the browser doesn't support\n    // Selection.modify (Edge), fall back to a primitive approach\n    if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n        return dir == \"left\" || dir == \"backward\" ? atStart : atEnd;\n    return withFlushedState(view, state, () => {\n        // This is a huge hack, but appears to be the best we can\n        // currently do: use `Selection.modify` to move the selection by\n        // one character, and see if that moves the cursor out of the\n        // textblock (or doesn't move it at all, when at the start/end of\n        // the document).\n        let { focusNode: oldNode, focusOffset: oldOff, anchorNode, anchorOffset } = view.domSelectionRange();\n        let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n        ;\n        sel.modify(\"move\", dir, \"character\");\n        let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n        let { focusNode: newNode, focusOffset: newOff } = view.domSelectionRange();\n        let result = newNode && !parentDOM.contains(newNode.nodeType == 1 ? newNode : newNode.parentNode) ||\n            (oldNode == newNode && oldOff == newOff);\n        // Restore the previous selection\n        try {\n            sel.collapse(anchorNode, anchorOffset);\n            if (oldNode && (oldNode != anchorNode || oldOff != anchorOffset) && sel.extend)\n                sel.extend(oldNode, oldOff);\n        }\n        catch (_) { }\n        if (oldBidiLevel != null)\n            sel.caretBidiLevel = oldBidiLevel;\n        return result;\n    });\n}\nlet cachedState = null;\nlet cachedDir = null;\nlet cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n    if (cachedState == state && cachedDir == dir)\n        return cachedResult;\n    cachedState = state;\n    cachedDir = dir;\n    return cachedResult = dir == \"up\" || dir == \"down\"\n        ? endOfTextblockVertical(view, state, dir)\n        : endOfTextblockHorizontal(view, state, dir);\n}\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n    constructor(parent, children, dom, \n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    contentDOM) {\n        this.parent = parent;\n        this.children = children;\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.dirty = NOT_DIRTY;\n        // An expando property on the DOM node provides a link back to its\n        // description.\n        dom.pmViewDesc = this;\n    }\n    // Used to check whether a given description corresponds to a\n    // widget/mark/node.\n    matchesWidget(widget) { return false; }\n    matchesMark(mark) { return false; }\n    matchesNode(node, outerDeco, innerDeco) { return false; }\n    matchesHack(nodeName) { return false; }\n    // When parsing in-editor content (in domchange.js), we allow\n    // descriptions to determine the parse rules that should be used to\n    // parse them.\n    parseRule() { return null; }\n    // Used by the editor's event handler to ignore events that come\n    // from certain descs.\n    stopEvent(event) { return false; }\n    // The size of the content represented by this desc.\n    get size() {\n        let size = 0;\n        for (let i = 0; i < this.children.length; i++)\n            size += this.children[i].size;\n        return size;\n    }\n    // For block nodes, this represents the space taken up by their\n    // start/end tokens.\n    get border() { return 0; }\n    destroy() {\n        this.parent = undefined;\n        if (this.dom.pmViewDesc == this)\n            this.dom.pmViewDesc = undefined;\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].destroy();\n    }\n    posBeforeChild(child) {\n        for (let i = 0, pos = this.posAtStart;; i++) {\n            let cur = this.children[i];\n            if (cur == child)\n                return pos;\n            pos += cur.size;\n        }\n    }\n    get posBefore() {\n        return this.parent.posBeforeChild(this);\n    }\n    get posAtStart() {\n        return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;\n    }\n    get posAfter() {\n        return this.posBefore + this.size;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.size - 2 * this.border;\n    }\n    localPosFromDOM(dom, offset, bias) {\n        // If the DOM position is in the content, use the child desc after\n        // it to figure out a position.\n        if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n            if (bias < 0) {\n                let domBefore, desc;\n                if (dom == this.contentDOM) {\n                    domBefore = dom.childNodes[offset - 1];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domBefore = dom.previousSibling;\n                }\n                while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this))\n                    domBefore = domBefore.previousSibling;\n                return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart;\n            }\n            else {\n                let domAfter, desc;\n                if (dom == this.contentDOM) {\n                    domAfter = dom.childNodes[offset];\n                }\n                else {\n                    while (dom.parentNode != this.contentDOM)\n                        dom = dom.parentNode;\n                    domAfter = dom.nextSibling;\n                }\n                while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this))\n                    domAfter = domAfter.nextSibling;\n                return domAfter ? this.posBeforeChild(desc) : this.posAtEnd;\n            }\n        }\n        // Otherwise, use various heuristics, falling back on the bias\n        // parameter, to determine whether to return the position at the\n        // start or at the end of this view desc.\n        let atEnd;\n        if (dom == this.dom && this.contentDOM) {\n            atEnd = offset > domIndex(this.contentDOM);\n        }\n        else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n            atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n        }\n        else if (this.dom.firstChild) {\n            if (offset == 0)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = false;\n                        break;\n                    }\n                    if (search.previousSibling)\n                        break;\n                }\n            if (atEnd == null && offset == dom.childNodes.length)\n                for (let search = dom;; search = search.parentNode) {\n                    if (search == this.dom) {\n                        atEnd = true;\n                        break;\n                    }\n                    if (search.nextSibling)\n                        break;\n                }\n        }\n        return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart;\n    }\n    nearestDesc(dom, onlyNodes = false) {\n        for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n            let desc = this.getDesc(cur), nodeDOM;\n            if (desc && (!onlyNodes || desc.node)) {\n                // If dom is outside of this desc's nodeDOM, don't count it.\n                if (first && (nodeDOM = desc.nodeDOM) &&\n                    !(nodeDOM.nodeType == 1 ? nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : nodeDOM == dom))\n                    first = false;\n                else\n                    return desc;\n            }\n        }\n    }\n    getDesc(dom) {\n        let desc = dom.pmViewDesc;\n        for (let cur = desc; cur; cur = cur.parent)\n            if (cur == this)\n                return desc;\n    }\n    posFromDOM(dom, offset, bias) {\n        for (let scan = dom; scan; scan = scan.parentNode) {\n            let desc = this.getDesc(scan);\n            if (desc)\n                return desc.localPosFromDOM(dom, offset, bias);\n        }\n        return -1;\n    }\n    // Find the desc for the node after the given pos, if any. (When a\n    // parent node overrode rendering, there might not be one.)\n    descAt(pos) {\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == pos && end != offset) {\n                while (!child.border && child.children.length)\n                    child = child.children[0];\n                return child;\n            }\n            if (pos < end)\n                return child.descAt(pos - offset - child.border);\n            offset = end;\n        }\n    }\n    domFromPos(pos, side) {\n        if (!this.contentDOM)\n            return { node: this.dom, offset: 0, atom: pos + 1 };\n        // First find the position in the child array\n        let i = 0, offset = 0;\n        for (let curPos = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = curPos + child.size;\n            if (end > pos || child instanceof TrailingHackViewDesc) {\n                offset = pos - curPos;\n                break;\n            }\n            curPos = end;\n        }\n        // If this points into the middle of a child, call through\n        if (offset)\n            return this.children[i].domFromPos(offset - this.children[i].border, side);\n        // Go back if there were any zero-length widgets with side >= 0 before this point\n        for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.side >= 0; i--) { }\n        // Scan towards the first useable node\n        if (side <= 0) {\n            let prev, enter = true;\n            for (;; i--, enter = false) {\n                prev = i ? this.children[i - 1] : null;\n                if (!prev || prev.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (prev && side && enter && !prev.border && !prev.domAtom)\n                return prev.domFromPos(prev.size, side);\n            return { node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0 };\n        }\n        else {\n            let next, enter = true;\n            for (;; i++, enter = false) {\n                next = i < this.children.length ? this.children[i] : null;\n                if (!next || next.dom.parentNode == this.contentDOM)\n                    break;\n            }\n            if (next && enter && !next.border && !next.domAtom)\n                return next.domFromPos(0, side);\n            return { node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length };\n        }\n    }\n    // Used to find a DOM range in a single parent for a given changed\n    // range.\n    parseRange(from, to, base = 0) {\n        if (this.children.length == 0)\n            return { node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };\n        let fromOffset = -1, toOffset = -1;\n        for (let offset = base, i = 0;; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (fromOffset == -1 && from <= end) {\n                let childBase = offset + child.border;\n                // FIXME maybe descend mark views to parse a narrower range?\n                if (from >= childBase && to <= end - child.border && child.node &&\n                    child.contentDOM && this.contentDOM.contains(child.contentDOM))\n                    return child.parseRange(from, to, childBase);\n                from = offset;\n                for (let j = i; j > 0; j--) {\n                    let prev = this.children[j - 1];\n                    if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n                        fromOffset = domIndex(prev.dom) + 1;\n                        break;\n                    }\n                    from -= prev.size;\n                }\n                if (fromOffset == -1)\n                    fromOffset = 0;\n            }\n            if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n                to = end;\n                for (let j = i + 1; j < this.children.length; j++) {\n                    let next = this.children[j];\n                    if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n                        toOffset = domIndex(next.dom);\n                        break;\n                    }\n                    to += next.size;\n                }\n                if (toOffset == -1)\n                    toOffset = this.contentDOM.childNodes.length;\n                break;\n            }\n            offset = end;\n        }\n        return { node: this.contentDOM, from, to, fromOffset, toOffset };\n    }\n    emptyChildAt(side) {\n        if (this.border || !this.contentDOM || !this.children.length)\n            return false;\n        let child = this.children[side < 0 ? 0 : this.children.length - 1];\n        return child.size == 0 || child.emptyChildAt(side);\n    }\n    domAfterPos(pos) {\n        let { node, offset } = this.domFromPos(pos, 0);\n        if (node.nodeType != 1 || offset == node.childNodes.length)\n            throw new RangeError(\"No node after pos \" + pos);\n        return node.childNodes[offset];\n    }\n    // View descs are responsible for setting any selection that falls\n    // entirely inside of them, so that custom implementations can do\n    // custom things with the selection. Note that this falls apart when\n    // a selection starts in such a node and ends in another, in which\n    // case we just use whatever domFromPos produces as a best effort.\n    setSelection(anchor, head, root, force = false) {\n        // If the selection falls entirely in a child, give it to that child\n        let from = Math.min(anchor, head), to = Math.max(anchor, head);\n        for (let i = 0, offset = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (from > offset && to < end)\n                return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force);\n            offset = end;\n        }\n        let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n        let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n        let domSel = root.getSelection();\n        let brKludge = false;\n        // On Firefox, using Selection.collapse to put the cursor after a\n        // BR node for some reason doesn't always work (#1073). On Safari,\n        // the cursor sometimes inexplicable visually lags behind its\n        // reported position in such situations (#1092).\n        if ((gecko || safari) && anchor == head) {\n            let { node, offset } = anchorDOM;\n            if (node.nodeType == 3) {\n                brKludge = !!(offset && node.nodeValue[offset - 1] == \"\\n\");\n                // Issue #1128\n                if (brKludge && offset == node.nodeValue.length) {\n                    for (let scan = node, after; scan; scan = scan.parentNode) {\n                        if (after = scan.nextSibling) {\n                            if (after.nodeName == \"BR\")\n                                anchorDOM = headDOM = { node: after.parentNode, offset: domIndex(after) + 1 };\n                            break;\n                        }\n                        let desc = scan.pmViewDesc;\n                        if (desc && desc.node && desc.node.isBlock)\n                            break;\n                    }\n                }\n            }\n            else {\n                let prev = node.childNodes[offset - 1];\n                brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n            }\n        }\n        // Firefox can act strangely when the selection is in front of an\n        // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n        if (gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n            let after = domSel.focusNode.childNodes[domSel.focusOffset];\n            if (after && after.contentEditable == \"false\")\n                force = true;\n        }\n        if (!(force || brKludge && safari) &&\n            isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n            isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n            return;\n        // Selection.extend can be used to create an 'inverted' selection\n        // (one where the focus is before the anchor), but not all\n        // browsers support it yet.\n        let domSelExtended = false;\n        if ((domSel.extend || anchor == head) && !brKludge) {\n            domSel.collapse(anchorDOM.node, anchorDOM.offset);\n            try {\n                if (anchor != head)\n                    domSel.extend(headDOM.node, headDOM.offset);\n                domSelExtended = true;\n            }\n            catch (_) {\n                // In some cases with Chrome the selection is empty after calling\n                // collapse, even when it should be valid. This appears to be a bug, but\n                // it is difficult to isolate. If this happens fallback to the old path\n                // without using extend.\n                // Similarly, this could crash on Safari if the editor is hidden, and\n                // there was no selection.\n            }\n        }\n        if (!domSelExtended) {\n            if (anchor > head) {\n                let tmp = anchorDOM;\n                anchorDOM = headDOM;\n                headDOM = tmp;\n            }\n            let range = document.createRange();\n            range.setEnd(headDOM.node, headDOM.offset);\n            range.setStart(anchorDOM.node, anchorDOM.offset);\n            domSel.removeAllRanges();\n            domSel.addRange(range);\n        }\n    }\n    ignoreMutation(mutation) {\n        return !this.contentDOM && mutation.type != \"selection\";\n    }\n    get contentLost() {\n        return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);\n    }\n    // Remove a subtree of the element tree that has been touched\n    // by a DOM change, so that the next update will redraw it.\n    markDirty(from, to) {\n        for (let offset = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = offset + child.size;\n            if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n                let startInside = offset + child.border, endInside = end - child.border;\n                if (from >= startInside && to <= endInside) {\n                    this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n                    if (from == startInside && to == endInside &&\n                        (child.contentLost || child.dom.parentNode != this.contentDOM))\n                        child.dirty = NODE_DIRTY;\n                    else\n                        child.markDirty(from - startInside, to - startInside);\n                    return;\n                }\n                else {\n                    child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n                        ? CONTENT_DIRTY : NODE_DIRTY;\n                }\n            }\n            offset = end;\n        }\n        this.dirty = CONTENT_DIRTY;\n    }\n    markParentsDirty() {\n        let level = 1;\n        for (let node = this.parent; node; node = node.parent, level++) {\n            let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n            if (node.dirty < dirty)\n                node.dirty = dirty;\n        }\n    }\n    get domAtom() { return false; }\n    get ignoreForCoords() { return false; }\n    isText(text) { return false; }\n}\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n    constructor(parent, widget, view, pos) {\n        let self, dom = widget.type.toDOM;\n        if (typeof dom == \"function\")\n            dom = dom(view, () => {\n                if (!self)\n                    return pos;\n                if (self.parent)\n                    return self.parent.posBeforeChild(self);\n            });\n        if (!widget.type.spec.raw) {\n            if (dom.nodeType != 1) {\n                let wrap = document.createElement(\"span\");\n                wrap.appendChild(dom);\n                dom = wrap;\n            }\n            dom.contentEditable = \"false\";\n            dom.classList.add(\"ProseMirror-widget\");\n        }\n        super(parent, [], dom, null);\n        this.widget = widget;\n        this.widget = widget;\n        self = this;\n    }\n    matchesWidget(widget) {\n        return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type);\n    }\n    parseRule() { return { ignore: true }; }\n    stopEvent(event) {\n        let stop = this.widget.spec.stopEvent;\n        return stop ? stop(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"selection\" || this.widget.spec.ignoreSelection;\n    }\n    destroy() {\n        this.widget.type.destroy(this.dom);\n        super.destroy();\n    }\n    get domAtom() { return true; }\n    get side() { return this.widget.type.side; }\n}\nclass CompositionViewDesc extends ViewDesc {\n    constructor(parent, dom, textDOM, text) {\n        super(parent, [], dom, null);\n        this.textDOM = textDOM;\n        this.text = text;\n    }\n    get size() { return this.text.length; }\n    localPosFromDOM(dom, offset) {\n        if (dom != this.textDOM)\n            return this.posAtStart + (offset ? this.size : 0);\n        return this.posAtStart + offset;\n    }\n    domFromPos(pos) {\n        return { node: this.textDOM, offset: pos };\n    }\n    ignoreMutation(mut) {\n        return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue;\n    }\n}\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n    constructor(parent, mark, dom, contentDOM, spec) {\n        super(parent, [], dom, contentDOM);\n        this.mark = mark;\n        this.spec = spec;\n    }\n    static create(parent, mark, inline, view) {\n        let custom = view.nodeViews[mark.type.name];\n        let spec = custom && custom(mark, view, inline);\n        if (!spec || !spec.dom)\n            spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline), null, mark.attrs);\n        return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom, spec);\n    }\n    parseRule() {\n        if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView)\n            return null;\n        return { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };\n    }\n    matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark); }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        // Move dirty info to nearest node view\n        if (this.dirty != NOT_DIRTY) {\n            let parent = this.parent;\n            while (!parent.node)\n                parent = parent.parent;\n            if (parent.dirty < this.dirty)\n                parent.dirty = this.dirty;\n            this.dirty = NOT_DIRTY;\n        }\n    }\n    slice(from, to, view) {\n        let copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n        let nodes = this.children, size = this.size;\n        if (to < size)\n            nodes = replaceNodes(nodes, to, size, view);\n        if (from > 0)\n            nodes = replaceNodes(nodes, 0, from, view);\n        for (let i = 0; i < nodes.length; i++)\n            nodes[i].parent = copy;\n        copy.children = nodes;\n        return copy;\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n}\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n        super(parent, [], dom, contentDOM);\n        this.node = node;\n        this.outerDeco = outerDeco;\n        this.innerDeco = innerDeco;\n        this.nodeDOM = nodeDOM;\n    }\n    // By default, a node is rendered using the `toDOM` method from the\n    // node type spec. But client code can use the `nodeViews` spec to\n    // supply a custom node view, which can influence various aspects of\n    // the way the node works.\n    //\n    // (Using subclassing for this was intentionally decided against,\n    // since it'd require exposing a whole slew of finicky\n    // implementation details to the user code that they probably will\n    // never need.)\n    static create(parent, node, outerDeco, innerDeco, view, pos) {\n        let custom = view.nodeViews[node.type.name], descObj;\n        let spec = custom && custom(node, view, () => {\n            // (This is a function that allows the custom view to find its\n            // own position)\n            if (!descObj)\n                return pos;\n            if (descObj.parent)\n                return descObj.parent.posBeforeChild(descObj);\n        }, outerDeco, innerDeco);\n        let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n        if (node.isText) {\n            if (!dom)\n                dom = document.createTextNode(node.text);\n            else if (dom.nodeType != 3)\n                throw new RangeError(\"Text must be rendered as a DOM text node\");\n        }\n        else if (!dom) {\n            let spec = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node), null, node.attrs);\n            ({ dom, contentDOM } = spec);\n        }\n        if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n            if (!dom.hasAttribute(\"contenteditable\"))\n                dom.contentEditable = \"false\";\n            if (node.type.spec.draggable)\n                dom.draggable = true;\n        }\n        let nodeDOM = dom;\n        dom = applyOuterDeco(dom, outerDeco, node);\n        if (spec)\n            return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, spec, view, pos + 1);\n        else if (node.isText)\n            return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view);\n        else\n            return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM || null, nodeDOM, view, pos + 1);\n    }\n    parseRule() {\n        // Experimental kludge to allow opt-in re-parsing of nodes\n        if (this.node.type.spec.reparseInView)\n            return null;\n        // FIXME the assumption that this can always return the current\n        // attrs means that if the user somehow manages to change the\n        // attrs in the dom, that won't be picked up. Not entirely sure\n        // whether this is a problem\n        let rule = { node: this.node.type.name, attrs: this.node.attrs };\n        if (this.node.type.whitespace == \"pre\")\n            rule.preserveWhitespace = \"full\";\n        if (!this.contentDOM) {\n            rule.getContent = () => this.node.content;\n        }\n        else if (!this.contentLost) {\n            rule.contentElement = this.contentDOM;\n        }\n        else {\n            // Chrome likes to randomly recreate parent nodes when\n            // backspacing things. When that happens, this tries to find the\n            // new parent.\n            for (let i = this.children.length - 1; i >= 0; i--) {\n                let child = this.children[i];\n                if (this.dom.contains(child.dom.parentNode)) {\n                    rule.contentElement = child.dom.parentNode;\n                    break;\n                }\n            }\n            if (!rule.contentElement)\n                rule.getContent = () => Fragment.empty;\n        }\n        return rule;\n    }\n    matchesNode(node, outerDeco, innerDeco) {\n        return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n            sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco);\n    }\n    get size() { return this.node.nodeSize; }\n    get border() { return this.node.isLeaf ? 0 : 1; }\n    // Syncs `this.children` to match `this.node.content` and the local\n    // decorations, possibly introducing nesting for marks. Then, in a\n    // separate step, syncs the DOM inside `this.contentDOM` to\n    // `this.children`.\n    updateChildren(view, pos) {\n        let inline = this.node.inlineContent, off = pos;\n        let composition = view.composing ? this.localCompositionInfo(view, pos) : null;\n        let localComposition = composition && composition.pos > -1 ? composition : null;\n        let compositionInChild = composition && composition.pos < 0;\n        let updater = new ViewTreeUpdater(this, localComposition && localComposition.node, view);\n        iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n            if (widget.spec.marks)\n                updater.syncToMarks(widget.spec.marks, inline, view);\n            else if (widget.type.side >= 0 && !insideNode)\n                updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view);\n            // If the next node is a desc matching this widget, reuse it,\n            // otherwise insert the widget as a new view desc.\n            updater.placeWidget(widget, view, off);\n        }, (child, outerDeco, innerDeco, i) => {\n            // Make sure the wrapping mark descs match the node's marks.\n            updater.syncToMarks(child.marks, inline, view);\n            // Try several strategies for drawing this node\n            let compIndex;\n            if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ;\n            else if (compositionInChild && view.state.selection.from > off &&\n                view.state.selection.to < off + child.nodeSize &&\n                (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ;\n            else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i, off)) ;\n            else {\n                // Add it as a new view\n                updater.addNode(child, outerDeco, innerDeco, view, off);\n            }\n            off += child.nodeSize;\n        });\n        // Drop all remaining descs after the current position.\n        updater.syncToMarks([], inline, view);\n        if (this.node.isTextblock)\n            updater.addTextblockHacks();\n        updater.destroyRest();\n        // Sync the DOM if anything changed\n        if (updater.changed || this.dirty == CONTENT_DIRTY) {\n            // May have to protect focused DOM from being changed if a composition is active\n            if (localComposition)\n                this.protectLocalComposition(view, localComposition);\n            renderDescs(this.contentDOM, this.children, view);\n            if (ios)\n                iosHacks(this.dom);\n        }\n    }\n    localCompositionInfo(view, pos) {\n        // Only do something if both the selection and a focused text node\n        // are inside of this node\n        let { from, to } = view.state.selection;\n        if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size)\n            return null;\n        let textNode = view.input.compositionNode;\n        if (!textNode || !this.dom.contains(textNode.parentNode))\n            return null;\n        if (this.node.inlineContent) {\n            // Find the text in the focused node in the node, stop if it's not\n            // there (may have been modified through other means, in which\n            // case it should overwritten)\n            let text = textNode.nodeValue;\n            let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n            return textPos < 0 ? null : { node: textNode, pos: textPos, text };\n        }\n        else {\n            return { node: textNode, pos: -1, text: \"\" };\n        }\n    }\n    protectLocalComposition(view, { node, pos, text }) {\n        // The node is already part of a local view desc, leave it there\n        if (this.getDesc(node))\n            return;\n        // Create a composition view for the orphaned nodes\n        let topNode = node;\n        for (;; topNode = topNode.parentNode) {\n            if (topNode.parentNode == this.contentDOM)\n                break;\n            while (topNode.previousSibling)\n                topNode.parentNode.removeChild(topNode.previousSibling);\n            while (topNode.nextSibling)\n                topNode.parentNode.removeChild(topNode.nextSibling);\n            if (topNode.pmViewDesc)\n                topNode.pmViewDesc = undefined;\n        }\n        let desc = new CompositionViewDesc(this, topNode, node, text);\n        view.input.compositionNodes.push(desc);\n        // Patch up this.children to contain the composition view\n        this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n    }\n    // If this desc must be updated to match the given node decoration,\n    // do so and return true.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateInner(node, outerDeco, innerDeco, view);\n        return true;\n    }\n    updateInner(node, outerDeco, innerDeco, view) {\n        this.updateOuterDeco(outerDeco);\n        this.node = node;\n        this.innerDeco = innerDeco;\n        if (this.contentDOM)\n            this.updateChildren(view, this.posAtStart);\n        this.dirty = NOT_DIRTY;\n    }\n    updateOuterDeco(outerDeco) {\n        if (sameOuterDeco(outerDeco, this.outerDeco))\n            return;\n        let needsWrap = this.nodeDOM.nodeType != 1;\n        let oldDOM = this.dom;\n        this.dom = patchOuterDeco(this.dom, this.nodeDOM, computeOuterDeco(this.outerDeco, this.node, needsWrap), computeOuterDeco(outerDeco, this.node, needsWrap));\n        if (this.dom != oldDOM) {\n            oldDOM.pmViewDesc = undefined;\n            this.dom.pmViewDesc = this;\n        }\n        this.outerDeco = outerDeco;\n    }\n    // Mark this node as being the selected node.\n    selectNode() {\n        if (this.nodeDOM.nodeType == 1)\n            this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n        if (this.contentDOM || !this.node.type.spec.draggable)\n            this.dom.draggable = true;\n    }\n    // Remove selected node marking from this node.\n    deselectNode() {\n        if (this.nodeDOM.nodeType == 1) {\n            this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n            if (this.contentDOM || !this.node.type.spec.draggable)\n                this.dom.removeAttribute(\"draggable\");\n        }\n    }\n    get domAtom() { return this.node.isAtom; }\n}\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n    applyOuterDeco(dom, outerDeco, doc);\n    let docView = new NodeViewDesc(undefined, doc, outerDeco, innerDeco, dom, dom, dom, view, 0);\n    if (docView.contentDOM)\n        docView.updateChildren(view, 0);\n    return docView;\n}\nclass TextViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n        super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view, 0);\n    }\n    parseRule() {\n        let skip = this.nodeDOM.parentNode;\n        while (skip && skip != this.dom && !skip.pmIsDeco)\n            skip = skip.parentNode;\n        return { skip: (skip || true) };\n    }\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n            !node.sameMarkup(this.node))\n            return false;\n        this.updateOuterDeco(outerDeco);\n        if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n            this.nodeDOM.nodeValue = node.text;\n            if (view.trackWrites == this.nodeDOM)\n                view.trackWrites = null;\n        }\n        this.node = node;\n        this.dirty = NOT_DIRTY;\n        return true;\n    }\n    inParent() {\n        let parentDOM = this.parent.contentDOM;\n        for (let n = this.nodeDOM; n; n = n.parentNode)\n            if (n == parentDOM)\n                return true;\n        return false;\n    }\n    domFromPos(pos) {\n        return { node: this.nodeDOM, offset: pos };\n    }\n    localPosFromDOM(dom, offset, bias) {\n        if (dom == this.nodeDOM)\n            return this.posAtStart + Math.min(offset, this.node.text.length);\n        return super.localPosFromDOM(dom, offset, bias);\n    }\n    ignoreMutation(mutation) {\n        return mutation.type != \"characterData\" && mutation.type != \"selection\";\n    }\n    slice(from, to, view) {\n        let node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n        return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view);\n    }\n    markDirty(from, to) {\n        super.markDirty(from, to);\n        if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n            this.dirty = NODE_DIRTY;\n    }\n    get domAtom() { return false; }\n    isText(text) { return this.node.text == text; }\n}\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n    parseRule() { return { ignore: true }; }\n    matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName; }\n    get domAtom() { return true; }\n    get ignoreForCoords() { return this.dom.nodeName == \"IMG\"; }\n}\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n    constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n        super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n        this.spec = spec;\n    }\n    // A custom `update` method gets to decide whether the update goes\n    // through. If it does, and there's a `contentDOM` node, our logic\n    // updates the children.\n    update(node, outerDeco, innerDeco, view) {\n        if (this.dirty == NODE_DIRTY)\n            return false;\n        if (this.spec.update && (this.node.type == node.type || this.spec.multiType)) {\n            let result = this.spec.update(node, outerDeco, innerDeco);\n            if (result)\n                this.updateInner(node, outerDeco, innerDeco, view);\n            return result;\n        }\n        else if (!this.contentDOM && !node.isLeaf) {\n            return false;\n        }\n        else {\n            return super.update(node, outerDeco, innerDeco, view);\n        }\n    }\n    selectNode() {\n        this.spec.selectNode ? this.spec.selectNode() : super.selectNode();\n    }\n    deselectNode() {\n        this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();\n    }\n    setSelection(anchor, head, root, force) {\n        this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n            : super.setSelection(anchor, head, root, force);\n    }\n    destroy() {\n        if (this.spec.destroy)\n            this.spec.destroy();\n        super.destroy();\n    }\n    stopEvent(event) {\n        return this.spec.stopEvent ? this.spec.stopEvent(event) : false;\n    }\n    ignoreMutation(mutation) {\n        return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation);\n    }\n}\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n    let dom = parentDOM.firstChild, written = false;\n    for (let i = 0; i < descs.length; i++) {\n        let desc = descs[i], childDOM = desc.dom;\n        if (childDOM.parentNode == parentDOM) {\n            while (childDOM != dom) {\n                dom = rm(dom);\n                written = true;\n            }\n            dom = dom.nextSibling;\n        }\n        else {\n            written = true;\n            parentDOM.insertBefore(childDOM, dom);\n        }\n        if (desc instanceof MarkViewDesc) {\n            let pos = dom ? dom.previousSibling : parentDOM.lastChild;\n            renderDescs(desc.contentDOM, desc.children, view);\n            dom = pos ? pos.nextSibling : parentDOM.firstChild;\n        }\n    }\n    while (dom) {\n        dom = rm(dom);\n        written = true;\n    }\n    if (written && view.trackWrites == parentDOM)\n        view.trackWrites = null;\n}\nconst OuterDecoLevel = function (nodeName) {\n    if (nodeName)\n        this.nodeName = nodeName;\n};\nOuterDecoLevel.prototype = Object.create(null);\nconst noDeco = [new OuterDecoLevel];\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n    if (outerDeco.length == 0)\n        return noDeco;\n    let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n    for (let i = 0; i < outerDeco.length; i++) {\n        let attrs = outerDeco[i].type.attrs;\n        if (!attrs)\n            continue;\n        if (attrs.nodeName)\n            result.push(top = new OuterDecoLevel(attrs.nodeName));\n        for (let name in attrs) {\n            let val = attrs[name];\n            if (val == null)\n                continue;\n            if (needsWrap && result.length == 1)\n                result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"));\n            if (name == \"class\")\n                top.class = (top.class ? top.class + \" \" : \"\") + val;\n            else if (name == \"style\")\n                top.style = (top.style ? top.style + \";\" : \"\") + val;\n            else if (name != \"nodeName\")\n                top[name] = val;\n        }\n    }\n    return result;\n}\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n    // Shortcut for trivial case\n    if (prevComputed == noDeco && curComputed == noDeco)\n        return nodeDOM;\n    let curDOM = nodeDOM;\n    for (let i = 0; i < curComputed.length; i++) {\n        let deco = curComputed[i], prev = prevComputed[i];\n        if (i) {\n            let parent;\n            if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n                (parent = curDOM.parentNode) && parent.nodeName.toLowerCase() == deco.nodeName) {\n                curDOM = parent;\n            }\n            else {\n                parent = document.createElement(deco.nodeName);\n                parent.pmIsDeco = true;\n                parent.appendChild(curDOM);\n                prev = noDeco[0];\n                curDOM = parent;\n            }\n        }\n        patchAttributes(curDOM, prev || noDeco[0], deco);\n    }\n    return curDOM;\n}\nfunction patchAttributes(dom, prev, cur) {\n    for (let name in prev)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n            dom.removeAttribute(name);\n    for (let name in cur)\n        if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n            dom.setAttribute(name, cur[name]);\n    if (prev.class != cur.class) {\n        let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : [];\n        let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : [];\n        for (let i = 0; i < prevList.length; i++)\n            if (curList.indexOf(prevList[i]) == -1)\n                dom.classList.remove(prevList[i]);\n        for (let i = 0; i < curList.length; i++)\n            if (prevList.indexOf(curList[i]) == -1)\n                dom.classList.add(curList[i]);\n        if (dom.classList.length == 0)\n            dom.removeAttribute(\"class\");\n    }\n    if (prev.style != cur.style) {\n        if (prev.style) {\n            let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n            while (m = prop.exec(prev.style))\n                dom.style.removeProperty(m[1]);\n        }\n        if (cur.style)\n            dom.style.cssText += cur.style;\n    }\n}\nfunction applyOuterDeco(dom, deco, node) {\n    return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1));\n}\nfunction sameOuterDeco(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].type.eq(b[i].type))\n            return false;\n    return true;\n}\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n    constructor(top, lock, view) {\n        this.lock = lock;\n        this.view = view;\n        // Index into `this.top`'s child array, represents the current\n        // update position.\n        this.index = 0;\n        // When entering a mark, the current top and index are pushed\n        // onto this.\n        this.stack = [];\n        // Tracks whether anything was changed\n        this.changed = false;\n        this.top = top;\n        this.preMatch = preMatch(top.node.content, top);\n    }\n    // Destroy and remove the children between the given indices in\n    // `this.top`.\n    destroyBetween(start, end) {\n        if (start == end)\n            return;\n        for (let i = start; i < end; i++)\n            this.top.children[i].destroy();\n        this.top.children.splice(start, end - start);\n        this.changed = true;\n    }\n    // Destroy all remaining children in `this.top`.\n    destroyRest() {\n        this.destroyBetween(this.index, this.top.children.length);\n    }\n    // Sync the current stack of mark descs with the given array of\n    // marks, reusing existing mark descs when possible.\n    syncToMarks(marks, inline, view) {\n        let keep = 0, depth = this.stack.length >> 1;\n        let maxKeep = Math.min(depth, marks.length);\n        while (keep < maxKeep &&\n            (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1])\n                .matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n            keep++;\n        while (keep < depth) {\n            this.destroyRest();\n            this.top.dirty = NOT_DIRTY;\n            this.index = this.stack.pop();\n            this.top = this.stack.pop();\n            depth--;\n        }\n        while (depth < marks.length) {\n            this.stack.push(this.top, this.index + 1);\n            let found = -1;\n            for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n                let next = this.top.children[i];\n                if (next.matchesMark(marks[depth]) && !this.isLocked(next.dom)) {\n                    found = i;\n                    break;\n                }\n            }\n            if (found > -1) {\n                if (found > this.index) {\n                    this.changed = true;\n                    this.destroyBetween(this.index, found);\n                }\n                this.top = this.top.children[this.index];\n            }\n            else {\n                let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n                this.top.children.splice(this.index, 0, markDesc);\n                this.top = markDesc;\n                this.changed = true;\n            }\n            this.index = 0;\n            depth++;\n        }\n    }\n    // Try to find a node desc matching the given data. Skip over it and\n    // return true when successful.\n    findNodeMatch(node, outerDeco, innerDeco, index) {\n        let found = -1, targetDesc;\n        if (index >= this.preMatch.index &&\n            (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n            targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n            found = this.top.children.indexOf(targetDesc, this.index);\n        }\n        else {\n            for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n                let child = this.top.children[i];\n                if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n                    found = i;\n                    break;\n                }\n            }\n        }\n        if (found < 0)\n            return false;\n        this.destroyBetween(this.index, found);\n        this.index++;\n        return true;\n    }\n    updateNodeAt(node, outerDeco, innerDeco, index, view) {\n        let child = this.top.children[index];\n        if (child.dirty == NODE_DIRTY && child.dom == child.contentDOM)\n            child.dirty = CONTENT_DIRTY;\n        if (!child.update(node, outerDeco, innerDeco, view))\n            return false;\n        this.destroyBetween(this.index, index);\n        this.index++;\n        return true;\n    }\n    findIndexWithChild(domNode) {\n        for (;;) {\n            let parent = domNode.parentNode;\n            if (!parent)\n                return -1;\n            if (parent == this.top.contentDOM) {\n                let desc = domNode.pmViewDesc;\n                if (desc)\n                    for (let i = this.index; i < this.top.children.length; i++) {\n                        if (this.top.children[i] == desc)\n                            return i;\n                    }\n                return -1;\n            }\n            domNode = parent;\n        }\n    }\n    // Try to update the next node, if any, to the given data. Checks\n    // pre-matches to avoid overwriting nodes that could still be used.\n    updateNextNode(node, outerDeco, innerDeco, view, index, pos) {\n        for (let i = this.index; i < this.top.children.length; i++) {\n            let next = this.top.children[i];\n            if (next instanceof NodeViewDesc) {\n                let preMatch = this.preMatch.matched.get(next);\n                if (preMatch != null && preMatch != index)\n                    return false;\n                let nextDOM = next.dom, updated;\n                // Can't update if nextDOM is or contains this.lock, except if\n                // it's a text node whose content already matches the new text\n                // and whose decorations match the new ones.\n                let locked = this.isLocked(nextDOM) &&\n                    !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n                        next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n                if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n                    this.destroyBetween(this.index, i);\n                    if (next.dom != nextDOM)\n                        this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                else if (!locked && (updated = this.recreateWrapper(next, node, outerDeco, innerDeco, view, pos))) {\n                    this.destroyBetween(this.index, i);\n                    this.top.children[this.index] = updated;\n                    if (updated.contentDOM) {\n                        updated.dirty = CONTENT_DIRTY;\n                        updated.updateChildren(view, pos + 1);\n                        updated.dirty = NOT_DIRTY;\n                    }\n                    this.changed = true;\n                    this.index++;\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n    // When a node with content is replaced by a different node with\n    // identical content, move over its children.\n    recreateWrapper(next, node, outerDeco, innerDeco, view, pos) {\n        if (next.dirty || node.isAtom || !next.children.length ||\n            !next.node.content.eq(node.content) ||\n            !sameOuterDeco(outerDeco, next.outerDeco) || !innerDeco.eq(next.innerDeco))\n            return null;\n        let wrapper = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (wrapper.contentDOM) {\n            wrapper.children = next.children;\n            next.children = [];\n            for (let ch of wrapper.children)\n                ch.parent = wrapper;\n        }\n        next.destroy();\n        return wrapper;\n    }\n    // Insert the node as a newly created node desc.\n    addNode(node, outerDeco, innerDeco, view, pos) {\n        let desc = NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos);\n        if (desc.contentDOM)\n            desc.updateChildren(view, pos + 1);\n        this.top.children.splice(this.index++, 0, desc);\n        this.changed = true;\n    }\n    placeWidget(widget, view, pos) {\n        let next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n        if (next && next.matchesWidget(widget) &&\n            (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n            this.index++;\n        }\n        else {\n            let desc = new WidgetViewDesc(this.top, widget, view, pos);\n            this.top.children.splice(this.index++, 0, desc);\n            this.changed = true;\n        }\n    }\n    // Make sure a textblock looks and behaves correctly in\n    // contentEditable.\n    addTextblockHacks() {\n        let lastChild = this.top.children[this.index - 1], parent = this.top;\n        while (lastChild instanceof MarkViewDesc) {\n            parent = lastChild;\n            lastChild = parent.children[parent.children.length - 1];\n        }\n        if (!lastChild || // Empty textblock\n            !(lastChild instanceof TextViewDesc) ||\n            /\\n$/.test(lastChild.node.text) ||\n            (this.view.requiresGeckoHackNode && /\\s$/.test(lastChild.node.text))) {\n            // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n            if ((safari || chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n                this.addHackNode(\"IMG\", parent);\n            this.addHackNode(\"BR\", this.top);\n        }\n    }\n    addHackNode(nodeName, parent) {\n        if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n            this.index++;\n        }\n        else {\n            let dom = document.createElement(nodeName);\n            if (nodeName == \"IMG\") {\n                dom.className = \"ProseMirror-separator\";\n                dom.alt = \"\";\n            }\n            if (nodeName == \"BR\")\n                dom.className = \"ProseMirror-trailingBreak\";\n            let hack = new TrailingHackViewDesc(this.top, [], dom, null);\n            if (parent != this.top)\n                parent.children.push(hack);\n            else\n                parent.children.splice(this.index++, 0, hack);\n            this.changed = true;\n        }\n    }\n    isLocked(node) {\n        return this.lock && (node == this.lock || node.nodeType == 1 && node.contains(this.lock.parentNode));\n    }\n}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n    let curDesc = parentDesc, descI = curDesc.children.length;\n    let fI = frag.childCount, matched = new Map, matches = [];\n    outer: while (fI > 0) {\n        let desc;\n        for (;;) {\n            if (descI) {\n                let next = curDesc.children[descI - 1];\n                if (next instanceof MarkViewDesc) {\n                    curDesc = next;\n                    descI = next.children.length;\n                }\n                else {\n                    desc = next;\n                    descI--;\n                    break;\n                }\n            }\n            else if (curDesc == parentDesc) {\n                break outer;\n            }\n            else {\n                // FIXME\n                descI = curDesc.parent.children.indexOf(curDesc);\n                curDesc = curDesc.parent;\n            }\n        }\n        let node = desc.node;\n        if (!node)\n            continue;\n        if (node != frag.child(fI - 1))\n            break;\n        --fI;\n        matched.set(desc, fI);\n        matches.push(desc);\n    }\n    return { index: fI, matched, matches: matches.reverse() };\n}\nfunction compareSide(a, b) {\n    return a.type.side - b.type.side;\n}\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n    let locals = deco.locals(parent), offset = 0;\n    // Simple, cheap variant for when there are no local decorations\n    if (locals.length == 0) {\n        for (let i = 0; i < parent.childCount; i++) {\n            let child = parent.child(i);\n            onNode(child, locals, deco.forChild(offset, child), i);\n            offset += child.nodeSize;\n        }\n        return;\n    }\n    let decoIndex = 0, active = [], restNode = null;\n    for (let parentIndex = 0;;) {\n        let widget, widgets;\n        while (decoIndex < locals.length && locals[decoIndex].to == offset) {\n            let next = locals[decoIndex++];\n            if (next.widget) {\n                if (!widget)\n                    widget = next;\n                else\n                    (widgets || (widgets = [widget])).push(next);\n            }\n        }\n        if (widget) {\n            if (widgets) {\n                widgets.sort(compareSide);\n                for (let i = 0; i < widgets.length; i++)\n                    onWidget(widgets[i], parentIndex, !!restNode);\n            }\n            else {\n                onWidget(widget, parentIndex, !!restNode);\n            }\n        }\n        let child, index;\n        if (restNode) {\n            index = -1;\n            child = restNode;\n            restNode = null;\n        }\n        else if (parentIndex < parent.childCount) {\n            index = parentIndex;\n            child = parent.child(parentIndex++);\n        }\n        else {\n            break;\n        }\n        for (let i = 0; i < active.length; i++)\n            if (active[i].to <= offset)\n                active.splice(i--, 1);\n        while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n            active.push(locals[decoIndex++]);\n        let end = offset + child.nodeSize;\n        if (child.isText) {\n            let cutAt = end;\n            if (decoIndex < locals.length && locals[decoIndex].from < cutAt)\n                cutAt = locals[decoIndex].from;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to < cutAt)\n                    cutAt = active[i].to;\n            if (cutAt < end) {\n                restNode = child.cut(cutAt - offset);\n                child = child.cut(0, cutAt - offset);\n                end = cutAt;\n                index = -1;\n            }\n        }\n        else {\n            while (decoIndex < locals.length && locals[decoIndex].to < end)\n                decoIndex++;\n        }\n        let outerDeco = child.isInline && !child.isLeaf ? active.filter(d => !d.inline) : active.slice();\n        onNode(child, outerDeco, deco.forChild(offset, child), index);\n        offset = end;\n    }\n}\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n    if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n        let oldCSS = dom.style.cssText;\n        dom.style.cssText = oldCSS + \"; list-style: square !important\";\n        window.getComputedStyle(dom).listStyle;\n        dom.style.cssText = oldCSS;\n    }\n}\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n    for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n        let child = frag.child(i++), childStart = pos;\n        pos += child.nodeSize;\n        if (!child.isText)\n            continue;\n        let str = child.text;\n        while (i < frag.childCount) {\n            let next = frag.child(i++);\n            pos += next.nodeSize;\n            if (!next.isText)\n                break;\n            str += next.text;\n        }\n        if (pos >= from) {\n            if (pos >= to && str.slice(to - text.length - childStart, to - childStart) == text)\n                return to - text.length;\n            let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1;\n            if (found >= 0 && found + text.length + childStart >= from)\n                return childStart + found;\n            if (from == to && str.length >= (to + text.length) - childStart &&\n                str.slice(to - childStart, to - childStart + text.length) == text)\n                return to;\n        }\n    }\n    return -1;\n}\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n    let result = [];\n    for (let i = 0, off = 0; i < nodes.length; i++) {\n        let child = nodes[i], start = off, end = off += child.size;\n        if (start >= to || end <= from) {\n            result.push(child);\n        }\n        else {\n            if (start < from)\n                result.push(child.slice(0, from - start, view));\n            if (replacement) {\n                result.push(replacement);\n                replacement = undefined;\n            }\n            if (end > to)\n                result.push(child.slice(to - start, child.size, view));\n        }\n    }\n    return result;\n}\n\nfunction selectionFromDOM(view, origin = null) {\n    let domSel = view.domSelectionRange(), doc = view.state.doc;\n    if (!domSel.focusNode)\n        return null;\n    let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset, 1);\n    if (head < 0)\n        return null;\n    let $head = doc.resolve(head), anchor, selection;\n    if (selectionCollapsed(domSel)) {\n        anchor = head;\n        while (nearestDesc && !nearestDesc.node)\n            nearestDesc = nearestDesc.parent;\n        let nearestDescNode = nearestDesc.node;\n        if (nearestDesc && nearestDescNode.isAtom && NodeSelection.isSelectable(nearestDescNode) && nearestDesc.parent\n            && !(nearestDescNode.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n            let pos = nearestDesc.posBefore;\n            selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n        }\n    }\n    else {\n        if (domSel instanceof view.dom.ownerDocument.defaultView.Selection && domSel.rangeCount > 1) {\n            let min = head, max = head;\n            for (let i = 0; i < domSel.rangeCount; i++) {\n                let range = domSel.getRangeAt(i);\n                min = Math.min(min, view.docView.posFromDOM(range.startContainer, range.startOffset, 1));\n                max = Math.max(max, view.docView.posFromDOM(range.endContainer, range.endOffset, -1));\n            }\n            if (min < 0)\n                return null;\n            [anchor, head] = max == view.state.selection.anchor ? [max, min] : [min, max];\n            $head = doc.resolve(head);\n        }\n        else {\n            anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset, 1);\n        }\n        if (anchor < 0)\n            return null;\n    }\n    let $anchor = doc.resolve(anchor);\n    if (!selection) {\n        let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n        selection = selectionBetween(view, $anchor, $head, bias);\n    }\n    return selection;\n}\nfunction editorOwnsSelection(view) {\n    return view.editable ? view.hasFocus() :\n        hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom);\n}\nfunction selectionToDOM(view, force = false) {\n    let sel = view.state.selection;\n    syncNodeSelection(view, sel);\n    if (!editorOwnsSelection(view))\n        return;\n    // The delayed drag selection causes issues with Cell Selections\n    // in Safari. And the drag selection delay is to workarond issues\n    // which only present in Chrome.\n    if (!force && view.input.mouseDown && view.input.mouseDown.allowDefault && chrome) {\n        let domSel = view.domSelectionRange(), curSel = view.domObserver.currentSelection;\n        if (domSel.anchorNode && curSel.anchorNode &&\n            isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset, curSel.anchorNode, curSel.anchorOffset)) {\n            view.input.mouseDown.delayedSelectionSync = true;\n            view.domObserver.setCurSelection();\n            return;\n        }\n    }\n    view.domObserver.disconnectSelection();\n    if (view.cursorWrapper) {\n        selectCursorWrapper(view);\n    }\n    else {\n        let { anchor, head } = sel, resetEditableFrom, resetEditableTo;\n        if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n            if (!sel.$from.parent.inlineContent)\n                resetEditableFrom = temporarilyEditableNear(view, sel.from);\n            if (!sel.empty && !sel.$from.parent.inlineContent)\n                resetEditableTo = temporarilyEditableNear(view, sel.to);\n        }\n        view.docView.setSelection(anchor, head, view.root, force);\n        if (brokenSelectBetweenUneditable) {\n            if (resetEditableFrom)\n                resetEditable(resetEditableFrom);\n            if (resetEditableTo)\n                resetEditable(resetEditableTo);\n        }\n        if (sel.visible) {\n            view.dom.classList.remove(\"ProseMirror-hideselection\");\n        }\n        else {\n            view.dom.classList.add(\"ProseMirror-hideselection\");\n            if (\"onselectionchange\" in document)\n                removeClassOnSelectionChange(view);\n        }\n    }\n    view.domObserver.setCurSelection();\n    view.domObserver.connectSelection();\n}\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\nconst brokenSelectBetweenUneditable = safari || chrome && chrome_version < 63;\nfunction temporarilyEditableNear(view, pos) {\n    let { node, offset } = view.docView.domFromPos(pos, 0);\n    let after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n    let before = offset ? node.childNodes[offset - 1] : null;\n    if (safari && after && after.contentEditable == \"false\")\n        return setEditable(after);\n    if ((!after || after.contentEditable == \"false\") &&\n        (!before || before.contentEditable == \"false\")) {\n        if (after)\n            return setEditable(after);\n        else if (before)\n            return setEditable(before);\n    }\n}\nfunction setEditable(element) {\n    element.contentEditable = \"true\";\n    if (safari && element.draggable) {\n        element.draggable = false;\n        element.wasDraggable = true;\n    }\n    return element;\n}\nfunction resetEditable(element) {\n    element.contentEditable = \"false\";\n    if (element.wasDraggable) {\n        element.draggable = true;\n        element.wasDraggable = null;\n    }\n}\nfunction removeClassOnSelectionChange(view) {\n    let doc = view.dom.ownerDocument;\n    doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n    let domSel = view.domSelectionRange();\n    let node = domSel.anchorNode, offset = domSel.anchorOffset;\n    doc.addEventListener(\"selectionchange\", view.input.hideSelectionGuard = () => {\n        if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n            doc.removeEventListener(\"selectionchange\", view.input.hideSelectionGuard);\n            setTimeout(() => {\n                if (!editorOwnsSelection(view) || view.state.selection.visible)\n                    view.dom.classList.remove(\"ProseMirror-hideselection\");\n            }, 20);\n        }\n    });\n}\nfunction selectCursorWrapper(view) {\n    let domSel = view.domSelection(), range = document.createRange();\n    if (!domSel)\n        return;\n    let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n    if (img)\n        range.setStart(node.parentNode, domIndex(node) + 1);\n    else\n        range.setStart(node, 0);\n    range.collapse(true);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n    // Kludge to kill 'control selection' in IE11 when selecting an\n    // invisible cursor wrapper, since that would result in those weird\n    // resize handles and a selection that considers the absolutely\n    // positioned wrapper, rather than the root editable node, the\n    // focused element.\n    if (!img && !view.state.selection.visible && ie && ie_version <= 11) {\n        node.disabled = true;\n        node.disabled = false;\n    }\n}\nfunction syncNodeSelection(view, sel) {\n    if (sel instanceof NodeSelection) {\n        let desc = view.docView.descAt(sel.from);\n        if (desc != view.lastSelectedViewDesc) {\n            clearNodeSelection(view);\n            if (desc)\n                desc.selectNode();\n            view.lastSelectedViewDesc = desc;\n        }\n    }\n    else {\n        clearNodeSelection(view);\n    }\n}\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n    if (view.lastSelectedViewDesc) {\n        if (view.lastSelectedViewDesc.parent)\n            view.lastSelectedViewDesc.deselectNode();\n        view.lastSelectedViewDesc = undefined;\n    }\n}\nfunction selectionBetween(view, $anchor, $head, bias) {\n    return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n        || TextSelection.between($anchor, $head, bias);\n}\nfunction hasFocusAndSelection(view) {\n    if (view.editable && !view.hasFocus())\n        return false;\n    return hasSelection(view);\n}\nfunction hasSelection(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n            (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode));\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction anchorInRightPlace(view) {\n    let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n    let domSel = view.domSelectionRange();\n    return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset);\n}\n\nfunction moveSelectionBlock(state, dir) {\n    let { $anchor, $head } = state.selection;\n    let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n    let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n    return $start && Selection.findFrom($start, dir);\n}\nfunction apply(view, sel) {\n    view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n    return true;\n}\nfunction selectHorizontally(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection) {\n        if (mods.indexOf(\"s\") > -1) {\n            let { $head } = sel, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter;\n            if (!node || node.isText || !node.isLeaf)\n                return false;\n            let $newHead = view.state.doc.resolve($head.pos + node.nodeSize * (dir < 0 ? -1 : 1));\n            return apply(view, new TextSelection(sel.$anchor, $newHead));\n        }\n        else if (!sel.empty) {\n            return false;\n        }\n        else if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) {\n            let next = moveSelectionBlock(view.state, dir);\n            if (next && (next instanceof NodeSelection))\n                return apply(view, next);\n            return false;\n        }\n        else if (!(mac && mods.indexOf(\"m\") > -1)) {\n            let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n            if (!node || node.isText)\n                return false;\n            let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n            if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM))\n                return false;\n            if (NodeSelection.isSelectable(node)) {\n                return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head));\n            }\n            else if (webkit) {\n                // Chrome and Safari will introduce extra pointless cursor\n                // positions around inline uneditable nodes, so we have to\n                // take over and move the cursor past them (#937)\n                return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)));\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    else if (sel instanceof NodeSelection && sel.node.isInline) {\n        return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from));\n    }\n    else {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next)\n            return apply(view, next);\n        return false;\n    }\n}\nfunction nodeLen(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction isIgnorable(dom, dir) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.size == 0 && (dir < 0 || dom.nextSibling || dom.nodeName != \"BR\");\n}\nfunction skipIgnoredNodes(view, dir) {\n    return dir < 0 ? skipIgnoredNodesBefore(view) : skipIgnoredNodesAfter(view);\n}\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesBefore(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let moveNode, moveOffset, force = false;\n    // Gecko will do odd things when the selection is directly in front\n    // of a non-editable node, so in that case, move it into the next\n    // node if possible. Issue prosemirror/prosemirror#832.\n    if (gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset], -1))\n        force = true;\n    for (;;) {\n        if (offset > 0) {\n            if (node.nodeType != 1) {\n                break;\n            }\n            else {\n                let before = node.childNodes[offset - 1];\n                if (isIgnorable(before, -1)) {\n                    moveNode = node;\n                    moveOffset = --offset;\n                }\n                else if (before.nodeType == 3) {\n                    node = before;\n                    offset = node.nodeValue.length;\n                }\n                else\n                    break;\n            }\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let prev = node.previousSibling;\n            while (prev && isIgnorable(prev, -1)) {\n                moveNode = node.parentNode;\n                moveOffset = domIndex(prev);\n                prev = prev.previousSibling;\n            }\n            if (!prev) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = 0;\n            }\n            else {\n                node = prev;\n                offset = nodeLen(node);\n            }\n        }\n    }\n    if (force)\n        setSelFocus(view, node, offset);\n    else if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesAfter(view) {\n    let sel = view.domSelectionRange();\n    let node = sel.focusNode, offset = sel.focusOffset;\n    if (!node)\n        return;\n    let len = nodeLen(node);\n    let moveNode, moveOffset;\n    for (;;) {\n        if (offset < len) {\n            if (node.nodeType != 1)\n                break;\n            let after = node.childNodes[offset];\n            if (isIgnorable(after, 1)) {\n                moveNode = node;\n                moveOffset = ++offset;\n            }\n            else\n                break;\n        }\n        else if (isBlockNode(node)) {\n            break;\n        }\n        else {\n            let next = node.nextSibling;\n            while (next && isIgnorable(next, 1)) {\n                moveNode = next.parentNode;\n                moveOffset = domIndex(next) + 1;\n                next = next.nextSibling;\n            }\n            if (!next) {\n                node = node.parentNode;\n                if (node == view.dom)\n                    break;\n                offset = len = 0;\n            }\n            else {\n                node = next;\n                offset = 0;\n                len = nodeLen(node);\n            }\n        }\n    }\n    if (moveNode)\n        setSelFocus(view, moveNode, moveOffset);\n}\nfunction isBlockNode(dom) {\n    let desc = dom.pmViewDesc;\n    return desc && desc.node && desc.node.isBlock;\n}\nfunction textNodeAfter(node, offset) {\n    while (node && offset == node.childNodes.length && !hasBlockDesc(node)) {\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n    while (node && offset < node.childNodes.length) {\n        let next = node.childNodes[offset];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = 0;\n    }\n}\nfunction textNodeBefore(node, offset) {\n    while (node && !offset && !hasBlockDesc(node)) {\n        offset = domIndex(node);\n        node = node.parentNode;\n    }\n    while (node && offset) {\n        let next = node.childNodes[offset - 1];\n        if (next.nodeType == 3)\n            return next;\n        if (next.nodeType == 1 && next.contentEditable == \"false\")\n            break;\n        node = next;\n        offset = node.childNodes.length;\n    }\n}\nfunction setSelFocus(view, node, offset) {\n    if (node.nodeType != 3) {\n        let before, after;\n        if (after = textNodeAfter(node, offset)) {\n            node = after;\n            offset = 0;\n        }\n        else if (before = textNodeBefore(node, offset)) {\n            node = before;\n            offset = before.nodeValue.length;\n        }\n    }\n    let sel = view.domSelection();\n    if (!sel)\n        return;\n    if (selectionCollapsed(sel)) {\n        let range = document.createRange();\n        range.setEnd(node, offset);\n        range.setStart(node, offset);\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    else if (sel.extend) {\n        sel.extend(node, offset);\n    }\n    view.domObserver.setCurSelection();\n    let { state } = view;\n    // If no state update ends up happening, reset the selection.\n    setTimeout(() => {\n        if (view.state == state)\n            selectionToDOM(view);\n    }, 50);\n}\nfunction findDirection(view, pos) {\n    let $pos = view.state.doc.resolve(pos);\n    if (!(chrome || windows) && $pos.parent.inlineContent) {\n        let coords = view.coordsAtPos(pos);\n        if (pos > $pos.start()) {\n            let before = view.coordsAtPos(pos - 1);\n            let mid = (before.top + before.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(before.left - coords.left) > 1)\n                return before.left < coords.left ? \"ltr\" : \"rtl\";\n        }\n        if (pos < $pos.end()) {\n            let after = view.coordsAtPos(pos + 1);\n            let mid = (after.top + after.bottom) / 2;\n            if (mid > coords.top && mid < coords.bottom && Math.abs(after.left - coords.left) > 1)\n                return after.left > coords.left ? \"ltr\" : \"rtl\";\n        }\n    }\n    let computed = getComputedStyle(view.dom).direction;\n    return computed == \"rtl\" ? \"rtl\" : \"ltr\";\n}\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n    let sel = view.state.selection;\n    if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1)\n        return false;\n    if (mac && mods.indexOf(\"m\") > -1)\n        return false;\n    let { $from, $to } = sel;\n    if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n        let next = moveSelectionBlock(view.state, dir);\n        if (next && (next instanceof NodeSelection))\n            return apply(view, next);\n    }\n    if (!$from.parent.inlineContent) {\n        let side = dir < 0 ? $from : $to;\n        let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n        return beyond ? apply(view, beyond) : false;\n    }\n    return false;\n}\nfunction stopNativeHorizontalDelete(view, dir) {\n    if (!(view.state.selection instanceof TextSelection))\n        return true;\n    let { $head, $anchor, empty } = view.state.selection;\n    if (!$head.sameParent($anchor))\n        return true;\n    if (!empty)\n        return false;\n    if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\"))\n        return true;\n    let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n    if (nextNode && !nextNode.isText) {\n        let tr = view.state.tr;\n        if (dir < 0)\n            tr.delete($head.pos - nextNode.nodeSize, $head.pos);\n        else\n            tr.delete($head.pos, $head.pos + nextNode.nodeSize);\n        view.dispatch(tr);\n        return true;\n    }\n    return false;\n}\nfunction switchEditable(view, node, state) {\n    view.domObserver.stop();\n    node.contentEditable = state;\n    view.domObserver.start();\n}\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n    if (!safari || view.state.selection.$head.parentOffset > 0)\n        return false;\n    let { focusNode, focusOffset } = view.domSelectionRange();\n    if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n        focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n        let child = focusNode.firstChild;\n        switchEditable(view, child, \"true\");\n        setTimeout(() => switchEditable(view, child, \"false\"), 20);\n    }\n    return false;\n}\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\nfunction getMods(event) {\n    let result = \"\";\n    if (event.ctrlKey)\n        result += \"c\";\n    if (event.metaKey)\n        result += \"m\";\n    if (event.altKey)\n        result += \"a\";\n    if (event.shiftKey)\n        result += \"s\";\n    return result;\n}\nfunction captureKeyDown(view, event) {\n    let code = event.keyCode, mods = getMods(event);\n    if (code == 8 || (mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n        return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodes(view, -1);\n    }\n    else if ((code == 46 && !event.shiftKey) || (mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n        return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodes(view, 1);\n    }\n    else if (code == 13 || code == 27) { // Enter, Esc\n        return true;\n    }\n    else if (code == 37 || (mac && code == 66 && mods == \"c\")) { // Left arrow, Ctrl-b on Mac\n        let dir = code == 37 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? -1 : 1) : -1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 39 || (mac && code == 70 && mods == \"c\")) { // Right arrow, Ctrl-f on Mac\n        let dir = code == 39 ? (findDirection(view, view.state.selection.from) == \"ltr\" ? 1 : -1) : 1;\n        return selectHorizontally(view, dir, mods) || skipIgnoredNodes(view, dir);\n    }\n    else if (code == 38 || (mac && code == 80 && mods == \"c\")) { // Up arrow, Ctrl-p on Mac\n        return selectVertically(view, -1, mods) || skipIgnoredNodes(view, -1);\n    }\n    else if (code == 40 || (mac && code == 78 && mods == \"c\")) { // Down arrow, Ctrl-n on Mac\n        return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodes(view, 1);\n    }\n    else if (mods == (mac ? \"m\" : \"c\") &&\n        (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n        return true;\n    }\n    return false;\n}\n\nfunction serializeForClipboard(view, slice) {\n    view.someProp(\"transformCopied\", f => { slice = f(slice, view); });\n    let context = [], { content, openStart, openEnd } = slice;\n    while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n        openStart--;\n        openEnd--;\n        let node = content.firstChild;\n        context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n        content = node.content;\n    }\n    let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n    let doc = detachedDoc(), wrap = doc.createElement(\"div\");\n    wrap.appendChild(serializer.serializeFragment(content, { document: doc }));\n    let firstChild = wrap.firstChild, needsWrap, wrappers = 0;\n    while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n        for (let i = needsWrap.length - 1; i >= 0; i--) {\n            let wrapper = doc.createElement(needsWrap[i]);\n            while (wrap.firstChild)\n                wrapper.appendChild(wrap.firstChild);\n            wrap.appendChild(wrapper);\n            wrappers++;\n        }\n        firstChild = wrap.firstChild;\n    }\n    if (firstChild && firstChild.nodeType == 1)\n        firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : \"\"} ${JSON.stringify(context)}`);\n    let text = view.someProp(\"clipboardTextSerializer\", f => f(slice, view)) ||\n        slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n    return { dom: wrap, text, slice };\n}\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n    let inCode = $context.parent.type.spec.code;\n    let dom, slice;\n    if (!html && !text)\n        return null;\n    let asText = text && (plainText || inCode || !html);\n    if (asText) {\n        view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText, view); });\n        if (inCode)\n            return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty;\n        let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText, view));\n        if (parsed) {\n            slice = parsed;\n        }\n        else {\n            let marks = $context.marks();\n            let { schema } = view.state, serializer = DOMSerializer.fromSchema(schema);\n            dom = document.createElement(\"div\");\n            text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n                let p = dom.appendChild(document.createElement(\"p\"));\n                if (block)\n                    p.appendChild(serializer.serializeNode(schema.text(block, marks)));\n            });\n        }\n    }\n    else {\n        view.someProp(\"transformPastedHTML\", f => { html = f(html, view); });\n        dom = readHTML(html);\n        if (webkit)\n            restoreReplacedSpaces(dom);\n    }\n    let contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n    let sliceData = contextNode && /^(\\d+) (\\d+)(?: -(\\d+))? (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\") || \"\");\n    if (sliceData && sliceData[3])\n        for (let i = +sliceData[3]; i > 0; i--) {\n            let child = dom.firstChild;\n            while (child && child.nodeType != 1)\n                child = child.nextSibling;\n            if (!child)\n                break;\n            dom = child;\n        }\n    if (!slice) {\n        let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n        slice = parser.parseSlice(dom, {\n            preserveWhitespace: !!(asText || sliceData),\n            context: $context,\n            ruleFromNode(dom) {\n                if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n                    dom.parentNode && !inlineParents.test(dom.parentNode.nodeName))\n                    return { ignore: true };\n                return null;\n            }\n        });\n    }\n    if (sliceData) {\n        slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[4]);\n    }\n    else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n        slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n        if (slice.openStart || slice.openEnd) {\n            let openStart = 0, openEnd = 0;\n            for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating; openStart++, node = node.firstChild) { }\n            for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating; openEnd++, node = node.lastChild) { }\n            slice = closeSlice(slice, openStart, openEnd);\n        }\n    }\n    view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    return slice;\n}\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n    if (fragment.childCount < 2)\n        return fragment;\n    for (let d = $context.depth; d >= 0; d--) {\n        let parent = $context.node(d);\n        let match = parent.contentMatchAt($context.index(d));\n        let lastWrap, result = [];\n        fragment.forEach(node => {\n            if (!result)\n                return;\n            let wrap = match.findWrapping(node.type), inLast;\n            if (!wrap)\n                return result = null;\n            if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n                result[result.length - 1] = inLast;\n            }\n            else {\n                if (result.length)\n                    result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length);\n                let wrapped = withWrappers(node, wrap);\n                result.push(wrapped);\n                match = match.matchType(wrapped.type);\n                lastWrap = wrap;\n            }\n        });\n        if (result)\n            return Fragment.from(result);\n    }\n    return fragment;\n}\nfunction withWrappers(node, wrap, from = 0) {\n    for (let i = wrap.length - 1; i >= from; i--)\n        node = wrap[i].create(null, Fragment.from(node));\n    return node;\n}\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n    if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n        let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n        if (inner)\n            return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner));\n        let match = sibling.contentMatchAt(sibling.childCount);\n        if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n            return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))));\n    }\n}\nfunction closeRight(node, depth) {\n    if (depth == 0)\n        return node;\n    let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n    let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n    return node.copy(fragment.append(fill));\n}\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n    let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n    if (fragment.childCount > 1)\n        openEnd = 0;\n    if (depth < to - 1)\n        inner = closeRange(inner, side, from, to, depth + 1, openEnd);\n    if (depth >= from)\n        inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, openEnd <= depth).append(inner)\n            : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true));\n    return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner));\n}\nfunction closeSlice(slice, openStart, openEnd) {\n    if (openStart < slice.openStart)\n        slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd);\n    if (openEnd < slice.openEnd)\n        slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd);\n    return slice;\n}\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n    thead: [\"table\"],\n    tbody: [\"table\"],\n    tfoot: [\"table\"],\n    caption: [\"table\"],\n    colgroup: [\"table\"],\n    col: [\"table\", \"colgroup\"],\n    tr: [\"table\", \"tbody\"],\n    td: [\"table\", \"tbody\", \"tr\"],\n    th: [\"table\", \"tbody\", \"tr\"]\n};\nlet _detachedDoc = null;\nfunction detachedDoc() {\n    return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"));\n}\nlet _policy = null;\nfunction maybeWrapTrusted(html) {\n    let trustedTypes = window.trustedTypes;\n    if (!trustedTypes)\n        return html;\n    // With the require-trusted-types-for CSP, Chrome will block\n    // innerHTML, even on a detached document. This wraps the string in\n    // a way that makes the browser allow us to use its parser again.\n    if (!_policy)\n        _policy = trustedTypes.createPolicy(\"ProseMirrorClipboard\", { createHTML: (s) => s });\n    return _policy.createHTML(html);\n}\nfunction readHTML(html) {\n    let metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n    if (metas)\n        html = html.slice(metas[0].length);\n    let elt = detachedDoc().createElement(\"div\");\n    let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n    if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n        html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\");\n    elt.innerHTML = maybeWrapTrusted(html);\n    if (wrap)\n        for (let i = 0; i < wrap.length; i++)\n            elt = elt.querySelector(wrap[i]) || elt;\n    return elt;\n}\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n    let nodes = dom.querySelectorAll(chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n    for (let i = 0; i < nodes.length; i++) {\n        let node = nodes[i];\n        if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n            node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node);\n    }\n}\nfunction addContext(slice, context) {\n    if (!slice.size)\n        return slice;\n    let schema = slice.content.firstChild.type.schema, array;\n    try {\n        array = JSON.parse(context);\n    }\n    catch (e) {\n        return slice;\n    }\n    let { content, openStart, openEnd } = slice;\n    for (let i = array.length - 2; i >= 0; i -= 2) {\n        let type = schema.nodes[array[i]];\n        if (!type || type.hasRequiredAttrs())\n            break;\n        content = Fragment.from(type.create(array[i + 1], content));\n        openStart++;\n        openEnd++;\n    }\n    return new Slice(content, openStart, openEnd);\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {};\nconst editHandlers = {};\nconst passiveHandlers = { touchstart: true, touchmove: true };\nclass InputState {\n    constructor() {\n        this.shiftKey = false;\n        this.mouseDown = null;\n        this.lastKeyCode = null;\n        this.lastKeyCodeTime = 0;\n        this.lastClick = { time: 0, x: 0, y: 0, type: \"\" };\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastIOSEnter = 0;\n        this.lastIOSEnterFallbackTimeout = -1;\n        this.lastFocus = 0;\n        this.lastTouch = 0;\n        this.lastAndroidDelete = 0;\n        this.composing = false;\n        this.compositionNode = null;\n        this.composingTimeout = -1;\n        this.compositionNodes = [];\n        this.compositionEndedAt = -2e8;\n        this.compositionID = 1;\n        // Set to a composition ID when there are pending changes at compositionend\n        this.compositionPendingChanges = 0;\n        this.domChangeCount = 0;\n        this.eventHandlers = Object.create(null);\n        this.hideSelectionGuard = null;\n    }\n}\nfunction initInput(view) {\n    for (let event in handlers) {\n        let handler = handlers[event];\n        view.dom.addEventListener(event, view.input.eventHandlers[event] = (event) => {\n            if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n                (view.editable || !(event.type in editHandlers)))\n                handler(view, event);\n        }, passiveHandlers[event] ? { passive: true } : undefined);\n    }\n    // On Safari, for reasons beyond my understanding, adding an input\n    // event handler makes an issue where the composition vanishes when\n    // you press enter go away.\n    if (safari)\n        view.dom.addEventListener(\"input\", () => null);\n    ensureListeners(view);\n}\nfunction setSelectionOrigin(view, origin) {\n    view.input.lastSelectionOrigin = origin;\n    view.input.lastSelectionTime = Date.now();\n}\nfunction destroyInput(view) {\n    view.domObserver.stop();\n    for (let type in view.input.eventHandlers)\n        view.dom.removeEventListener(type, view.input.eventHandlers[type]);\n    clearTimeout(view.input.composingTimeout);\n    clearTimeout(view.input.lastIOSEnterFallbackTimeout);\n}\nfunction ensureListeners(view) {\n    view.someProp(\"handleDOMEvents\", currentHandlers => {\n        for (let type in currentHandlers)\n            if (!view.input.eventHandlers[type])\n                view.dom.addEventListener(type, view.input.eventHandlers[type] = event => runCustomHandler(view, event));\n    });\n}\nfunction runCustomHandler(view, event) {\n    return view.someProp(\"handleDOMEvents\", handlers => {\n        let handler = handlers[event.type];\n        return handler ? handler(view, event) || event.defaultPrevented : false;\n    });\n}\nfunction eventBelongsToView(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target; node != view.dom; node = node.parentNode)\n        if (!node || node.nodeType == 11 ||\n            (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n            return false;\n    return true;\n}\nfunction dispatchEvent(view, event) {\n    if (!runCustomHandler(view, event) && handlers[event.type] &&\n        (view.editable || !(event.type in editHandlers)))\n        handlers[event.type](view, event);\n}\neditHandlers.keydown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.keyCode == 16 || event.shiftKey;\n    if (inOrNearComposition(view, event))\n        return;\n    view.input.lastKeyCode = event.keyCode;\n    view.input.lastKeyCodeTime = Date.now();\n    // Suppress enter key events on Chrome Android, because those tend\n    // to be part of a confused sequence of composition events fired,\n    // and handling them eagerly tends to corrupt the input.\n    if (android && chrome && event.keyCode == 13)\n        return;\n    if (event.keyCode != 229)\n        view.domObserver.forceFlush();\n    // On iOS, if we preventDefault enter key presses, the virtual\n    // keyboard gets confused. So the hack here is to set a flag that\n    // makes the DOM change code recognize that what just happens should\n    // be replaced by whatever the Enter key handlers do.\n    if (ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        let now = Date.now();\n        view.input.lastIOSEnter = now;\n        view.input.lastIOSEnterFallbackTimeout = setTimeout(() => {\n            if (view.input.lastIOSEnter == now) {\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")));\n                view.input.lastIOSEnter = 0;\n            }\n        }, 200);\n    }\n    else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"key\");\n    }\n};\neditHandlers.keyup = (view, event) => {\n    if (event.keyCode == 16)\n        view.input.shiftKey = false;\n};\neditHandlers.keypress = (view, _event) => {\n    let event = _event;\n    if (inOrNearComposition(view, event) || !event.charCode ||\n        event.ctrlKey && !event.altKey || mac && event.metaKey)\n        return;\n    if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n        event.preventDefault();\n        return;\n    }\n    let sel = view.state.selection;\n    if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n        let text = String.fromCharCode(event.charCode);\n        if (!/[\\r\\n]/.test(text) && !view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n            view.dispatch(view.state.tr.insertText(text).scrollIntoView());\n        event.preventDefault();\n    }\n};\nfunction eventCoords(event) { return { left: event.clientX, top: event.clientY }; }\nfunction isNear(event, click) {\n    let dx = click.x - event.clientX, dy = click.y - event.clientY;\n    return dx * dx + dy * dy < 100;\n}\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n            : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n            return true;\n    }\n    return false;\n}\nfunction updateSelection(view, selection, origin) {\n    if (!view.focused)\n        view.focus();\n    if (view.state.selection.eq(selection))\n        return;\n    let tr = view.state.tr.setSelection(selection);\n    if (origin == \"pointer\")\n        tr.setMeta(\"pointer\", true);\n    view.dispatch(tr);\n}\nfunction selectClickedLeaf(view, inside) {\n    if (inside == -1)\n        return false;\n    let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n    if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n        updateSelection(view, new NodeSelection($pos), \"pointer\");\n        return true;\n    }\n    return false;\n}\nfunction selectClickedNode(view, inside) {\n    if (inside == -1)\n        return false;\n    let sel = view.state.selection, selectedNode, selectAt;\n    if (sel instanceof NodeSelection)\n        selectedNode = sel.node;\n    let $pos = view.state.doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        if (NodeSelection.isSelectable(node)) {\n            if (selectedNode && sel.$from.depth > 0 &&\n                i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n                selectAt = $pos.before(sel.$from.depth);\n            else\n                selectAt = $pos.before(i);\n            break;\n        }\n    }\n    if (selectAt != null) {\n        updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n    return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n        (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside));\n}\nfunction handleDoubleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleDoubleClick\", f => f(view, pos, event));\n}\nfunction handleTripleClick(view, pos, inside, event) {\n    return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n        view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n        defaultTripleClick(view, inside, event);\n}\nfunction defaultTripleClick(view, inside, event) {\n    if (event.button != 0)\n        return false;\n    let doc = view.state.doc;\n    if (inside == -1) {\n        if (doc.inlineContent) {\n            updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n            return true;\n        }\n        return false;\n    }\n    let $pos = doc.resolve(inside);\n    for (let i = $pos.depth + 1; i > 0; i--) {\n        let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n        let nodePos = $pos.before(i);\n        if (node.inlineContent)\n            updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\");\n        else if (NodeSelection.isSelectable(node))\n            updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\");\n        else\n            continue;\n        return true;\n    }\n}\nfunction forceDOMFlush(view) {\n    return endComposition(view);\n}\nconst selectNodeModifier = mac ? \"metaKey\" : \"ctrlKey\";\nhandlers.mousedown = (view, _event) => {\n    let event = _event;\n    view.input.shiftKey = event.shiftKey;\n    let flushed = forceDOMFlush(view);\n    let now = Date.now(), type = \"singleClick\";\n    if (now - view.input.lastClick.time < 500 && isNear(event, view.input.lastClick) && !event[selectNodeModifier]) {\n        if (view.input.lastClick.type == \"singleClick\")\n            type = \"doubleClick\";\n        else if (view.input.lastClick.type == \"doubleClick\")\n            type = \"tripleClick\";\n    }\n    view.input.lastClick = { time: now, x: event.clientX, y: event.clientY, type };\n    let pos = view.posAtCoords(eventCoords(event));\n    if (!pos)\n        return;\n    if (type == \"singleClick\") {\n        if (view.input.mouseDown)\n            view.input.mouseDown.done();\n        view.input.mouseDown = new MouseDown(view, pos, event, !!flushed);\n    }\n    else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n        event.preventDefault();\n    }\n    else {\n        setSelectionOrigin(view, \"pointer\");\n    }\n};\nclass MouseDown {\n    constructor(view, pos, event, flushed) {\n        this.view = view;\n        this.pos = pos;\n        this.event = event;\n        this.flushed = flushed;\n        this.delayedSelectionSync = false;\n        this.mightDrag = null;\n        this.startDoc = view.state.doc;\n        this.selectNode = !!event[selectNodeModifier];\n        this.allowDefault = event.shiftKey;\n        let targetNode, targetPos;\n        if (pos.inside > -1) {\n            targetNode = view.state.doc.nodeAt(pos.inside);\n            targetPos = pos.inside;\n        }\n        else {\n            let $pos = view.state.doc.resolve(pos.pos);\n            targetNode = $pos.parent;\n            targetPos = $pos.depth ? $pos.before() : 0;\n        }\n        const target = flushed ? null : event.target;\n        const targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n        this.target = targetDesc && targetDesc.dom.nodeType == 1 ? targetDesc.dom : null;\n        let { selection } = view.state;\n        if (event.button == 0 &&\n            targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n            selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n            this.mightDrag = {\n                node: targetNode,\n                pos: targetPos,\n                addAttr: !!(this.target && !this.target.draggable),\n                setUneditable: !!(this.target && gecko && !this.target.hasAttribute(\"contentEditable\"))\n            };\n        if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.draggable = true;\n            if (this.mightDrag.setUneditable)\n                setTimeout(() => {\n                    if (this.view.input.mouseDown == this)\n                        this.target.setAttribute(\"contentEditable\", \"false\");\n                }, 20);\n            this.view.domObserver.start();\n        }\n        view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        setSelectionOrigin(view, \"pointer\");\n    }\n    done() {\n        this.view.root.removeEventListener(\"mouseup\", this.up);\n        this.view.root.removeEventListener(\"mousemove\", this.move);\n        if (this.mightDrag && this.target) {\n            this.view.domObserver.stop();\n            if (this.mightDrag.addAttr)\n                this.target.removeAttribute(\"draggable\");\n            if (this.mightDrag.setUneditable)\n                this.target.removeAttribute(\"contentEditable\");\n            this.view.domObserver.start();\n        }\n        if (this.delayedSelectionSync)\n            setTimeout(() => selectionToDOM(this.view));\n        this.view.input.mouseDown = null;\n    }\n    up(event) {\n        this.done();\n        if (!this.view.dom.contains(event.target))\n            return;\n        let pos = this.pos;\n        if (this.view.state.doc != this.startDoc)\n            pos = this.view.posAtCoords(eventCoords(event));\n        this.updateAllowDefault(event);\n        if (this.allowDefault || !pos) {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n        else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n            event.preventDefault();\n        }\n        else if (event.button == 0 &&\n            (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (chrome && !this.view.state.selection.visible &&\n                    Math.min(Math.abs(pos.pos - this.view.state.selection.from), Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n            updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n            event.preventDefault();\n        }\n        else {\n            setSelectionOrigin(this.view, \"pointer\");\n        }\n    }\n    move(event) {\n        this.updateAllowDefault(event);\n        setSelectionOrigin(this.view, \"pointer\");\n        if (event.buttons == 0)\n            this.done();\n    }\n    updateAllowDefault(event) {\n        if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n            Math.abs(this.event.y - event.clientY) > 4))\n            this.allowDefault = true;\n    }\n}\nhandlers.touchstart = view => {\n    view.input.lastTouch = Date.now();\n    forceDOMFlush(view);\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.touchmove = view => {\n    view.input.lastTouch = Date.now();\n    setSelectionOrigin(view, \"pointer\");\n};\nhandlers.contextmenu = view => forceDOMFlush(view);\nfunction inOrNearComposition(view, event) {\n    if (view.composing)\n        return true;\n    // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n    // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n    // emitted. The keydown event triggers newline insertion, which we don't want.\n    // This method returns true if the keydown event should be ignored.\n    // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n    // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n    // This guards against the case where compositionend is triggered without the keyboard\n    // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n    // afterwards- we wouldn't want to ignore the keydown event in this case.\n    if (safari && Math.abs(event.timeStamp - view.input.compositionEndedAt) < 500) {\n        view.input.compositionEndedAt = -2e8;\n        return true;\n    }\n    return false;\n}\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = android ? 5000 : -1;\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n    if (!view.composing) {\n        view.domObserver.flush();\n        let { state } = view, $pos = state.selection.$to;\n        if (state.selection instanceof TextSelection &&\n            (state.storedMarks ||\n                (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n            // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n            view.markCursor = view.state.storedMarks || $pos.marks();\n            endComposition(view, true);\n            view.markCursor = null;\n        }\n        else {\n            endComposition(view, !state.selection.empty);\n            // In firefox, if the cursor is after but outside a marked node,\n            // the inserted text won't inherit the marks. So this moves it\n            // inside if necessary.\n            if (gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n                let sel = view.domSelectionRange();\n                for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n                    let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n                    if (!before)\n                        break;\n                    if (before.nodeType == 3) {\n                        let sel = view.domSelection();\n                        if (sel)\n                            sel.collapse(before, before.nodeValue.length);\n                        break;\n                    }\n                    else {\n                        node = before;\n                        offset = -1;\n                    }\n                }\n            }\n        }\n        view.input.composing = true;\n    }\n    scheduleComposeEnd(view, timeoutComposition);\n};\neditHandlers.compositionend = (view, event) => {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = event.timeStamp;\n        view.input.compositionPendingChanges = view.domObserver.pendingRecords().length ? view.input.compositionID : 0;\n        view.input.compositionNode = null;\n        if (view.input.compositionPendingChanges)\n            Promise.resolve().then(() => view.domObserver.flush());\n        view.input.compositionID++;\n        scheduleComposeEnd(view, 20);\n    }\n};\nfunction scheduleComposeEnd(view, delay) {\n    clearTimeout(view.input.composingTimeout);\n    if (delay > -1)\n        view.input.composingTimeout = setTimeout(() => endComposition(view), delay);\n}\nfunction clearComposition(view) {\n    if (view.composing) {\n        view.input.composing = false;\n        view.input.compositionEndedAt = timestampFromCustomEvent();\n    }\n    while (view.input.compositionNodes.length > 0)\n        view.input.compositionNodes.pop().markParentsDirty();\n}\nfunction findCompositionNode(view) {\n    let sel = view.domSelectionRange();\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore$1(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter$1(sel.focusNode, sel.focusOffset);\n    if (textBefore && textAfter && textBefore != textAfter) {\n        let descAfter = textAfter.pmViewDesc, lastChanged = view.domObserver.lastChangedTextNode;\n        if (textBefore == lastChanged || textAfter == lastChanged)\n            return lastChanged;\n        if (!descAfter || !descAfter.isText(textAfter.nodeValue)) {\n            return textAfter;\n        }\n        else if (view.input.compositionNode == textAfter) {\n            let descBefore = textBefore.pmViewDesc;\n            if (!(!descBefore || !descBefore.isText(textBefore.nodeValue)))\n                return textAfter;\n        }\n    }\n    return textBefore || textAfter;\n}\nfunction timestampFromCustomEvent() {\n    let event = document.createEvent(\"Event\");\n    event.initEvent(\"event\", true, true);\n    return event.timeStamp;\n}\n/**\n@internal\n*/\nfunction endComposition(view, restarting = false) {\n    if (android && view.domObserver.flushingSoon >= 0)\n        return;\n    view.domObserver.forceFlush();\n    clearComposition(view);\n    if (restarting || view.docView && view.docView.dirty) {\n        let sel = selectionFromDOM(view);\n        if (sel && !sel.eq(view.state.selection))\n            view.dispatch(view.state.tr.setSelection(sel));\n        else if ((view.markCursor || restarting) && !view.state.selection.empty)\n            view.dispatch(view.state.tr.deleteSelection());\n        else\n            view.updateState(view.state);\n        return true;\n    }\n    return false;\n}\nfunction captureCopy(view, dom) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    if (!view.dom.parentNode)\n        return;\n    let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n    wrap.appendChild(dom);\n    wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    let sel = getSelection(), range = document.createRange();\n    range.selectNodeContents(dom);\n    // Done because IE will fire a selectionchange moving the selection\n    // to its start when removeAllRanges is called and the editor still\n    // has focus (which will mess up the editor's selection state).\n    view.dom.blur();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    setTimeout(() => {\n        if (wrap.parentNode)\n            wrap.parentNode.removeChild(wrap);\n        view.focus();\n    }, 50);\n}\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (ie && ie_version < 15) ||\n    (ios && webkit_version < 604);\nhandlers.copy = editHandlers.cut = (view, _event) => {\n    let event = _event;\n    let sel = view.state.selection, cut = event.type == \"cut\";\n    if (sel.empty)\n        return;\n    // IE and Edge's clipboard interface is completely broken\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let slice = sel.content(), { dom, text } = serializeForClipboard(view, slice);\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/html\", dom.innerHTML);\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, dom);\n    }\n    if (cut)\n        view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"));\n};\nfunction sliceSingleNode(slice) {\n    return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null;\n}\nfunction capturePaste(view, event) {\n    if (!view.dom.parentNode)\n        return;\n    let plainText = view.input.shiftKey || view.state.selection.$from.parent.type.spec.code;\n    let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n    if (!plainText)\n        target.contentEditable = \"true\";\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    setTimeout(() => {\n        view.focus();\n        if (target.parentNode)\n            target.parentNode.removeChild(target);\n        if (plainText)\n            doPaste(view, target.value, null, plain, event);\n        else\n            doPaste(view, target.textContent, target.innerHTML, plain, event);\n    }, 50);\n}\nfunction doPaste(view, text, html, preferPlain, event) {\n    let slice = parseFromClipboard(view, text, html, preferPlain, view.state.selection.$from);\n    if (view.someProp(\"handlePaste\", f => f(view, event, slice || Slice.empty)))\n        return true;\n    if (!slice)\n        return false;\n    let singleNode = sliceSingleNode(slice);\n    let tr = singleNode\n        ? view.state.tr.replaceSelectionWith(singleNode, preferPlain)\n        : view.state.tr.replaceSelection(slice);\n    view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n    return true;\n}\nfunction getText(clipboardData) {\n    let text = clipboardData.getData(\"text/plain\") || clipboardData.getData(\"Text\");\n    if (text)\n        return text;\n    let uris = clipboardData.getData(\"text/uri-list\");\n    return uris ? uris.replace(/\\r?\\n/g, \" \") : \"\";\n}\neditHandlers.paste = (view, _event) => {\n    let event = _event;\n    // Handling paste from JavaScript during composition is very poorly\n    // handled by browsers, so as a dodgy but preferable kludge, we just\n    // let the browser do its native thing there, except on Android,\n    // where the editor is almost always composing.\n    if (view.composing && !android)\n        return;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    let plain = view.input.shiftKey && view.input.lastKeyCode != 45;\n    if (data && doPaste(view, getText(data), data.getData(\"text/html\"), plain, event))\n        event.preventDefault();\n    else\n        capturePaste(view, event);\n};\nclass Dragging {\n    constructor(slice, move, node) {\n        this.slice = slice;\n        this.move = move;\n        this.node = node;\n    }\n}\nconst dragCopyModifier = mac ? \"altKey\" : \"ctrlKey\";\nhandlers.dragstart = (view, _event) => {\n    let event = _event;\n    let mouseDown = view.input.mouseDown;\n    if (mouseDown)\n        mouseDown.done();\n    if (!event.dataTransfer)\n        return;\n    let sel = view.state.selection;\n    let pos = sel.empty ? null : view.posAtCoords(eventCoords(event));\n    let node;\n    if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1 : sel.to)) ;\n    else if (mouseDown && mouseDown.mightDrag) {\n        node = NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos);\n    }\n    else if (event.target && event.target.nodeType == 1) {\n        let desc = view.docView.nearestDesc(event.target, true);\n        if (desc && desc.node.type.spec.draggable && desc != view.docView)\n            node = NodeSelection.create(view.state.doc, desc.posBefore);\n    }\n    let draggedSlice = (node || view.state.selection).content();\n    let { dom, text, slice } = serializeForClipboard(view, draggedSlice);\n    // Pre-120 Chrome versions clear files when calling `clearData` (#1472)\n    if (!event.dataTransfer.files.length || !chrome || chrome_version > 120)\n        event.dataTransfer.clearData();\n    event.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n    // See https://github.com/ProseMirror/prosemirror/issues/1156\n    event.dataTransfer.effectAllowed = \"copyMove\";\n    if (!brokenClipboardAPI)\n        event.dataTransfer.setData(\"text/plain\", text);\n    view.dragging = new Dragging(slice, !event[dragCopyModifier], node);\n};\nhandlers.dragend = view => {\n    let dragging = view.dragging;\n    window.setTimeout(() => {\n        if (view.dragging == dragging)\n            view.dragging = null;\n    }, 50);\n};\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault();\neditHandlers.drop = (view, _event) => {\n    let event = _event;\n    let dragging = view.dragging;\n    view.dragging = null;\n    if (!event.dataTransfer)\n        return;\n    let eventPos = view.posAtCoords(eventCoords(event));\n    if (!eventPos)\n        return;\n    let $mouse = view.state.doc.resolve(eventPos.pos);\n    let slice = dragging && dragging.slice;\n    if (slice) {\n        view.someProp(\"transformPasted\", f => { slice = f(slice, view); });\n    }\n    else {\n        slice = parseFromClipboard(view, getText(event.dataTransfer), brokenClipboardAPI ? null : event.dataTransfer.getData(\"text/html\"), false, $mouse);\n    }\n    let move = !!(dragging && !event[dragCopyModifier]);\n    if (view.someProp(\"handleDrop\", f => f(view, event, slice || Slice.empty, move))) {\n        event.preventDefault();\n        return;\n    }\n    if (!slice)\n        return;\n    event.preventDefault();\n    let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n    if (insertPos == null)\n        insertPos = $mouse.pos;\n    let tr = view.state.tr;\n    if (move) {\n        let { node } = dragging;\n        if (node)\n            node.replace(tr);\n        else\n            tr.deleteSelection();\n    }\n    let pos = tr.mapping.map(insertPos);\n    let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n    let beforeInsert = tr.doc;\n    if (isNode)\n        tr.replaceRangeWith(pos, pos, slice.content.firstChild);\n    else\n        tr.replaceRange(pos, pos, slice);\n    if (tr.doc.eq(beforeInsert))\n        return;\n    let $pos = tr.doc.resolve(pos);\n    if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n        $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n        tr.setSelection(new NodeSelection($pos));\n    }\n    else {\n        let end = tr.mapping.map(insertPos);\n        tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo);\n        tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n    }\n    view.focus();\n    view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\nhandlers.focus = view => {\n    view.input.lastFocus = Date.now();\n    if (!view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.add(\"ProseMirror-focused\");\n        view.domObserver.start();\n        view.focused = true;\n        setTimeout(() => {\n            if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.domSelectionRange()))\n                selectionToDOM(view);\n        }, 20);\n    }\n};\nhandlers.blur = (view, _event) => {\n    let event = _event;\n    if (view.focused) {\n        view.domObserver.stop();\n        view.dom.classList.remove(\"ProseMirror-focused\");\n        view.domObserver.start();\n        if (event.relatedTarget && view.dom.contains(event.relatedTarget))\n            view.domObserver.currentSelection.clear();\n        view.focused = false;\n    }\n};\nhandlers.beforeinput = (view, _event) => {\n    let event = _event;\n    // We should probably do more with beforeinput events, but support\n    // is so spotty that I'm still waiting to see where they are going.\n    // Very specific hack to deal with backspace sometimes failing on\n    // Chrome Android when after an uneditable node.\n    if (chrome && android && event.inputType == \"deleteContentBackward\") {\n        view.domObserver.flushSoon();\n        let { domChangeCount } = view.input;\n        setTimeout(() => {\n            if (view.input.domChangeCount != domChangeCount)\n                return; // Event already had some effect\n            // This bug tends to close the virtual keyboard, so we refocus\n            view.dom.blur();\n            view.focus();\n            if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\"))))\n                return;\n            let { $cursor } = view.state.selection;\n            // Crude approximation of backspace behavior when no command handled it\n            if ($cursor && $cursor.pos > 0)\n                view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView());\n        }, 50);\n    }\n};\n// Make sure all handlers get registered\nfor (let prop in editHandlers)\n    handlers[prop] = editHandlers[prop];\n\nfunction compareObjs(a, b) {\n    if (a == b)\n        return true;\n    for (let p in a)\n        if (a[p] !== b[p])\n            return false;\n    for (let p in b)\n        if (!(p in a))\n            return false;\n    return true;\n}\nclass WidgetType {\n    constructor(toDOM, spec) {\n        this.toDOM = toDOM;\n        this.spec = spec || noSpec;\n        this.side = this.spec.side || 0;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let { pos, deleted } = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n        return deleted ? null : new Decoration(pos - offset, pos - offset, this);\n    }\n    valid() { return true; }\n    eq(other) {\n        return this == other ||\n            (other instanceof WidgetType &&\n                (this.spec.key && this.spec.key == other.spec.key ||\n                    this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)));\n    }\n    destroy(node) {\n        if (this.spec.destroy)\n            this.spec.destroy(node);\n    }\n}\nclass InlineType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n        let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n        return from >= to ? null : new Decoration(from, to, this);\n    }\n    valid(_, span) { return span.from < span.to; }\n    eq(other) {\n        return this == other ||\n            (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    static is(span) { return span.type instanceof InlineType; }\n    destroy() { }\n}\nclass NodeType {\n    constructor(attrs, spec) {\n        this.attrs = attrs;\n        this.spec = spec || noSpec;\n    }\n    map(mapping, span, offset, oldOffset) {\n        let from = mapping.mapResult(span.from + oldOffset, 1);\n        if (from.deleted)\n            return null;\n        let to = mapping.mapResult(span.to + oldOffset, -1);\n        if (to.deleted || to.pos <= from.pos)\n            return null;\n        return new Decoration(from.pos - offset, to.pos - offset, this);\n    }\n    valid(node, span) {\n        let { index, offset } = node.content.findIndex(span.from), child;\n        return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to;\n    }\n    eq(other) {\n        return this == other ||\n            (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n                compareObjs(this.spec, other.spec));\n    }\n    destroy() { }\n}\n/**\nDecoration objects can be provided to the view through the\n[`decorations` prop](https://prosemirror.net/docs/ref/#view.EditorProps.decorations). They come in\nseveral variants—see the static members of this class for details.\n*/\nclass Decoration {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start position of the decoration.\n    */\n    from, \n    /**\n    The end position. Will be the same as `from` for [widget\n    decorations](https://prosemirror.net/docs/ref/#view.Decoration^widget).\n    */\n    to, \n    /**\n    @internal\n    */\n    type) {\n        this.from = from;\n        this.to = to;\n        this.type = type;\n    }\n    /**\n    @internal\n    */\n    copy(from, to) {\n        return new Decoration(from, to, this.type);\n    }\n    /**\n    @internal\n    */\n    eq(other, offset = 0) {\n        return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to;\n    }\n    /**\n    @internal\n    */\n    map(mapping, offset, oldOffset) {\n        return this.type.map(mapping, this, offset, oldOffset);\n    }\n    /**\n    Creates a widget decoration, which is a DOM node that's shown in\n    the document at the given position. It is recommended that you\n    delay rendering the widget by passing a function that will be\n    called when the widget is actually drawn in a view, but you can\n    also directly pass a DOM node. `getPos` can be used to find the\n    widget's current document position.\n    */\n    static widget(pos, toDOM, spec) {\n        return new Decoration(pos, pos, new WidgetType(toDOM, spec));\n    }\n    /**\n    Creates an inline decoration, which adds the given attributes to\n    each inline node between `from` and `to`.\n    */\n    static inline(from, to, attrs, spec) {\n        return new Decoration(from, to, new InlineType(attrs, spec));\n    }\n    /**\n    Creates a node decoration. `from` and `to` should point precisely\n    before and after a node in the document. That node, and only that\n    node, will receive the given attributes.\n    */\n    static node(from, to, attrs, spec) {\n        return new Decoration(from, to, new NodeType(attrs, spec));\n    }\n    /**\n    The spec provided when creating this decoration. Can be useful\n    if you've stored extra information in that object.\n    */\n    get spec() { return this.type.spec; }\n    /**\n    @internal\n    */\n    get inline() { return this.type instanceof InlineType; }\n    /**\n    @internal\n    */\n    get widget() { return this.type instanceof WidgetType; }\n}\nconst none = [], noSpec = {};\n/**\nA collection of [decorations](https://prosemirror.net/docs/ref/#view.Decoration), organized in such\na way that the drawing algorithm can efficiently use and compare\nthem. This is a persistent data structure—it is not modified,\nupdates create a new value.\n*/\nclass DecorationSet {\n    /**\n    @internal\n    */\n    constructor(local, children) {\n        this.local = local.length ? local : none;\n        this.children = children.length ? children : none;\n    }\n    /**\n    Create a set of decorations, using the structure of the given\n    document. This will consume (modify) the `decorations` array, so\n    you must make a copy if you want need to preserve that.\n    */\n    static create(doc, decorations) {\n        return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty;\n    }\n    /**\n    Find all decorations in this set which touch the given range\n    (including decorations that start or end directly at the\n    boundaries) and match the given predicate on their spec. When\n    `start` and `end` are omitted, all decorations in the set are\n    considered. When `predicate` isn't given, all decorations are\n    assumed to match.\n    */\n    find(start, end, predicate) {\n        let result = [];\n        this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n        return result;\n    }\n    findInner(start, end, result, offset, predicate) {\n        for (let i = 0; i < this.local.length; i++) {\n            let span = this.local[i];\n            if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n                result.push(span.copy(span.from + offset, span.to + offset));\n        }\n        for (let i = 0; i < this.children.length; i += 3) {\n            if (this.children[i] < end && this.children[i + 1] > start) {\n                let childOff = this.children[i] + 1;\n                this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n            }\n        }\n    }\n    /**\n    Map the set of decorations in response to a change in the\n    document.\n    */\n    map(mapping, doc, options) {\n        if (this == empty || mapping.maps.length == 0)\n            return this;\n        return this.mapInner(mapping, doc, 0, 0, options || noSpec);\n    }\n    /**\n    @internal\n    */\n    mapInner(mapping, node, offset, oldOffset, options) {\n        let newLocal;\n        for (let i = 0; i < this.local.length; i++) {\n            let mapped = this.local[i].map(mapping, offset, oldOffset);\n            if (mapped && mapped.type.valid(node, mapped))\n                (newLocal || (newLocal = [])).push(mapped);\n            else if (options.onRemove)\n                options.onRemove(this.local[i].spec);\n        }\n        if (this.children.length)\n            return mapChildren(this.children, newLocal || [], mapping, node, offset, oldOffset, options);\n        else\n            return newLocal ? new DecorationSet(newLocal.sort(byPos), none) : empty;\n    }\n    /**\n    Add the given array of decorations to the ones in the set,\n    producing a new set. Consumes the `decorations` array. Needs\n    access to the current document to create the appropriate tree\n    structure.\n    */\n    add(doc, decorations) {\n        if (!decorations.length)\n            return this;\n        if (this == empty)\n            return DecorationSet.create(doc, decorations);\n        return this.addInner(doc, decorations, 0);\n    }\n    addInner(doc, decorations, offset) {\n        let children, childIndex = 0;\n        doc.forEach((childNode, childOffset) => {\n            let baseOffset = childOffset + offset, found;\n            if (!(found = takeSpansForNode(decorations, childNode, baseOffset)))\n                return;\n            if (!children)\n                children = this.children.slice();\n            while (childIndex < children.length && children[childIndex] < childOffset)\n                childIndex += 3;\n            if (children[childIndex] == childOffset)\n                children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1);\n            else\n                children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec));\n            childIndex += 3;\n        });\n        let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n        for (let i = 0; i < local.length; i++)\n            if (!local[i].type.valid(doc, local[i]))\n                local.splice(i--, 1);\n        return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local, children || this.children);\n    }\n    /**\n    Create a new set that contains the decorations in this set, minus\n    the ones in the given array.\n    */\n    remove(decorations) {\n        if (decorations.length == 0 || this == empty)\n            return this;\n        return this.removeInner(decorations, 0);\n    }\n    removeInner(decorations, offset) {\n        let children = this.children, local = this.local;\n        for (let i = 0; i < children.length; i += 3) {\n            let found;\n            let from = children[i] + offset, to = children[i + 1] + offset;\n            for (let j = 0, span; j < decorations.length; j++)\n                if (span = decorations[j]) {\n                    if (span.from > from && span.to < to) {\n                        decorations[j] = null;\n                        (found || (found = [])).push(span);\n                    }\n                }\n            if (!found)\n                continue;\n            if (children == this.children)\n                children = this.children.slice();\n            let removed = children[i + 2].removeInner(found, from + 1);\n            if (removed != empty) {\n                children[i + 2] = removed;\n            }\n            else {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        }\n        if (local.length)\n            for (let i = 0, span; i < decorations.length; i++)\n                if (span = decorations[i]) {\n                    for (let j = 0; j < local.length; j++)\n                        if (local[j].eq(span, offset)) {\n                            if (local == this.local)\n                                local = this.local.slice();\n                            local.splice(j--, 1);\n                        }\n                }\n        if (children == this.children && local == this.local)\n            return this;\n        return local.length || children.length ? new DecorationSet(local, children) : empty;\n    }\n    forChild(offset, node) {\n        if (this == empty)\n            return this;\n        if (node.isLeaf)\n            return DecorationSet.empty;\n        let child, local;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] >= offset) {\n                if (this.children[i] == offset)\n                    child = this.children[i + 2];\n                break;\n            }\n        let start = offset + 1, end = start + node.content.size;\n        for (let i = 0; i < this.local.length; i++) {\n            let dec = this.local[i];\n            if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n                let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n                if (from < to)\n                    (local || (local = [])).push(dec.copy(from, to));\n            }\n        }\n        if (local) {\n            let localSet = new DecorationSet(local.sort(byPos), none);\n            return child ? new DecorationGroup([localSet, child]) : localSet;\n        }\n        return child || empty;\n    }\n    /**\n    @internal\n    */\n    eq(other) {\n        if (this == other)\n            return true;\n        if (!(other instanceof DecorationSet) ||\n            this.local.length != other.local.length ||\n            this.children.length != other.children.length)\n            return false;\n        for (let i = 0; i < this.local.length; i++)\n            if (!this.local[i].eq(other.local[i]))\n                return false;\n        for (let i = 0; i < this.children.length; i += 3)\n            if (this.children[i] != other.children[i] ||\n                this.children[i + 1] != other.children[i + 1] ||\n                !this.children[i + 2].eq(other.children[i + 2]))\n                return false;\n        return true;\n    }\n    /**\n    @internal\n    */\n    locals(node) {\n        return removeOverlap(this.localsInner(node));\n    }\n    /**\n    @internal\n    */\n    localsInner(node) {\n        if (this == empty)\n            return none;\n        if (node.inlineContent || !this.local.some(InlineType.is))\n            return this.local;\n        let result = [];\n        for (let i = 0; i < this.local.length; i++) {\n            if (!(this.local[i].type instanceof InlineType))\n                result.push(this.local[i]);\n        }\n        return result;\n    }\n    forEachSet(f) { f(this); }\n}\n/**\nThe empty set of decorations.\n*/\nDecorationSet.empty = new DecorationSet([], []);\n/**\n@internal\n*/\nDecorationSet.removeOverlap = removeOverlap;\nconst empty = DecorationSet.empty;\n// An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n    constructor(members) {\n        this.members = members;\n    }\n    map(mapping, doc) {\n        const mappedDecos = this.members.map(member => member.map(mapping, doc, noSpec));\n        return DecorationGroup.from(mappedDecos);\n    }\n    forChild(offset, child) {\n        if (child.isLeaf)\n            return DecorationSet.empty;\n        let found = [];\n        for (let i = 0; i < this.members.length; i++) {\n            let result = this.members[i].forChild(offset, child);\n            if (result == empty)\n                continue;\n            if (result instanceof DecorationGroup)\n                found = found.concat(result.members);\n            else\n                found.push(result);\n        }\n        return DecorationGroup.from(found);\n    }\n    eq(other) {\n        if (!(other instanceof DecorationGroup) ||\n            other.members.length != this.members.length)\n            return false;\n        for (let i = 0; i < this.members.length; i++)\n            if (!this.members[i].eq(other.members[i]))\n                return false;\n        return true;\n    }\n    locals(node) {\n        let result, sorted = true;\n        for (let i = 0; i < this.members.length; i++) {\n            let locals = this.members[i].localsInner(node);\n            if (!locals.length)\n                continue;\n            if (!result) {\n                result = locals;\n            }\n            else {\n                if (sorted) {\n                    result = result.slice();\n                    sorted = false;\n                }\n                for (let j = 0; j < locals.length; j++)\n                    result.push(locals[j]);\n            }\n        }\n        return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none;\n    }\n    // Create a group for the given array of decoration sets, or return\n    // a single set when possible.\n    static from(members) {\n        switch (members.length) {\n            case 0: return empty;\n            case 1: return members[0];\n            default: return new DecorationGroup(members.every(m => m instanceof DecorationSet) ? members :\n                members.reduce((r, m) => r.concat(m instanceof DecorationSet ? m : m.members), []));\n        }\n    }\n    forEachSet(f) {\n        for (let i = 0; i < this.members.length; i++)\n            this.members[i].forEachSet(f);\n    }\n}\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n    let children = oldChildren.slice();\n    // Mark the children that are directly touched by changes, and\n    // move those that are after the changes.\n    for (let i = 0, baseOffset = oldOffset; i < mapping.maps.length; i++) {\n        let moved = 0;\n        mapping.maps[i].forEach((oldStart, oldEnd, newStart, newEnd) => {\n            let dSize = (newEnd - newStart) - (oldEnd - oldStart);\n            for (let i = 0; i < children.length; i += 3) {\n                let end = children[i + 1];\n                if (end < 0 || oldStart > end + baseOffset - moved)\n                    continue;\n                let start = children[i] + baseOffset - moved;\n                if (oldEnd >= start) {\n                    children[i + 1] = oldStart <= start ? -2 : -1;\n                }\n                else if (oldStart >= baseOffset && dSize) {\n                    children[i] += dSize;\n                    children[i + 1] += dSize;\n                }\n            }\n            moved += dSize;\n        });\n        baseOffset = mapping.maps[i].map(baseOffset, -1);\n    }\n    // Find the child nodes that still correspond to a single node,\n    // recursively call mapInner on them and update their positions.\n    let mustRebuild = false;\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] < 0) { // Touched nodes\n            if (children[i + 1] == -2) {\n                mustRebuild = true;\n                children[i + 1] = -1;\n                continue;\n            }\n            let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset;\n            if (fromLocal < 0 || fromLocal >= node.content.size) {\n                mustRebuild = true;\n                continue;\n            }\n            // Must read oldChildren because children was tagged with -1\n            let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset;\n            let { index, offset: childOffset } = node.content.findIndex(fromLocal);\n            let childNode = node.maybeChild(index);\n            if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n                let mapped = children[i + 2]\n                    .mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options);\n                if (mapped != empty) {\n                    children[i] = fromLocal;\n                    children[i + 1] = toLocal;\n                    children[i + 2] = mapped;\n                }\n                else {\n                    children[i + 1] = -2;\n                    mustRebuild = true;\n                }\n            }\n            else {\n                mustRebuild = true;\n            }\n        }\n    // Remaining children must be collected and rebuilt into the appropriate structure\n    if (mustRebuild) {\n        let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal, mapping, offset, oldOffset, options);\n        let built = buildTree(decorations, node, 0, options);\n        newLocal = built.local;\n        for (let i = 0; i < children.length; i += 3)\n            if (children[i + 1] < 0) {\n                children.splice(i, 3);\n                i -= 3;\n            }\n        for (let i = 0, j = 0; i < built.children.length; i += 3) {\n            let from = built.children[i];\n            while (j < children.length && children[j] < from)\n                j += 3;\n            children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2]);\n        }\n    }\n    return new DecorationSet(newLocal.sort(byPos), children);\n}\nfunction moveSpans(spans, offset) {\n    if (!offset || !spans.length)\n        return spans;\n    let result = [];\n    for (let i = 0; i < spans.length; i++) {\n        let span = spans[i];\n        result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n    }\n    return result;\n}\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n    // Gather all decorations from the remaining marked children\n    function gather(set, oldOffset) {\n        for (let i = 0; i < set.local.length; i++) {\n            let mapped = set.local[i].map(mapping, offset, oldOffset);\n            if (mapped)\n                decorations.push(mapped);\n            else if (options.onRemove)\n                options.onRemove(set.local[i].spec);\n        }\n        for (let i = 0; i < set.children.length; i += 3)\n            gather(set.children[i + 2], set.children[i] + oldOffset + 1);\n    }\n    for (let i = 0; i < children.length; i += 3)\n        if (children[i + 1] == -1)\n            gather(children[i + 2], oldChildren[i] + oldOffset + 1);\n    return decorations;\n}\nfunction takeSpansForNode(spans, node, offset) {\n    if (node.isLeaf)\n        return null;\n    let end = offset + node.nodeSize, found = null;\n    for (let i = 0, span; i < spans.length; i++) {\n        if ((span = spans[i]) && span.from > offset && span.to < end) {\n            (found || (found = [])).push(span);\n            spans[i] = null;\n        }\n    }\n    return found;\n}\nfunction withoutNulls(array) {\n    let result = [];\n    for (let i = 0; i < array.length; i++)\n        if (array[i] != null)\n            result.push(array[i]);\n    return result;\n}\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n    let children = [], hasNulls = false;\n    node.forEach((childNode, localStart) => {\n        let found = takeSpansForNode(spans, childNode, localStart + offset);\n        if (found) {\n            hasNulls = true;\n            let subtree = buildTree(found, childNode, offset + localStart + 1, options);\n            if (subtree != empty)\n                children.push(localStart, localStart + childNode.nodeSize, subtree);\n        }\n    });\n    let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n    for (let i = 0; i < locals.length; i++)\n        if (!locals[i].type.valid(node, locals[i])) {\n            if (options.onRemove)\n                options.onRemove(locals[i].spec);\n            locals.splice(i--, 1);\n        }\n    return locals.length || children.length ? new DecorationSet(locals, children) : empty;\n}\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n    return a.from - b.from || a.to - b.to;\n}\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n    let working = spans;\n    for (let i = 0; i < working.length - 1; i++) {\n        let span = working[i];\n        if (span.from != span.to)\n            for (let j = i + 1; j < working.length; j++) {\n                let next = working[j];\n                if (next.from == span.from) {\n                    if (next.to != span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // Followed by a partially overlapping larger span. Split that\n                        // span.\n                        working[j] = next.copy(next.from, span.to);\n                        insertAhead(working, j + 1, next.copy(span.to, next.to));\n                    }\n                    continue;\n                }\n                else {\n                    if (next.from < span.to) {\n                        if (working == spans)\n                            working = spans.slice();\n                        // The end of this one overlaps with a subsequent span. Split\n                        // this one.\n                        working[i] = span.copy(span.from, next.from);\n                        insertAhead(working, j, span.copy(next.from, span.to));\n                    }\n                    break;\n                }\n            }\n    }\n    return working;\n}\nfunction insertAhead(array, i, deco) {\n    while (i < array.length && byPos(deco, array[i]) > 0)\n        i++;\n    array.splice(i, 0, deco);\n}\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n    let found = [];\n    view.someProp(\"decorations\", f => {\n        let result = f(view.state);\n        if (result && result != empty)\n            found.push(result);\n    });\n    if (view.cursorWrapper)\n        found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]));\n    return DecorationGroup.from(found);\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    characterDataOldValue: true,\n    attributes: true,\n    attributeOldValue: true,\n    subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = ie && ie_version <= 11;\nclass SelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    set(sel) {\n        this.anchorNode = sel.anchorNode;\n        this.anchorOffset = sel.anchorOffset;\n        this.focusNode = sel.focusNode;\n        this.focusOffset = sel.focusOffset;\n    }\n    clear() {\n        this.anchorNode = this.focusNode = null;\n    }\n    eq(sel) {\n        return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n            sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset;\n    }\n}\nclass DOMObserver {\n    constructor(view, handleDOMChange) {\n        this.view = view;\n        this.handleDOMChange = handleDOMChange;\n        this.queue = [];\n        this.flushingSoon = -1;\n        this.observer = null;\n        this.currentSelection = new SelectionState;\n        this.onCharData = null;\n        this.suppressingSelectionUpdates = false;\n        this.lastChangedTextNode = null;\n        this.observer = window.MutationObserver &&\n            new window.MutationObserver(mutations => {\n                for (let i = 0; i < mutations.length; i++)\n                    this.queue.push(mutations[i]);\n                // IE11 will sometimes (on backspacing out a single character\n                // text node after a BR node) call the observer callback\n                // before actually updating the DOM, which will cause\n                // ProseMirror to miss the change (see #930)\n                if (ie && ie_version <= 11 && mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                    this.flushSoon();\n                else\n                    this.flush();\n            });\n        if (useCharData) {\n            this.onCharData = e => {\n                this.queue.push({ target: e.target, type: \"characterData\", oldValue: e.prevValue });\n                this.flushSoon();\n            };\n        }\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n    }\n    flushSoon() {\n        if (this.flushingSoon < 0)\n            this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.flushingSoon > -1) {\n            window.clearTimeout(this.flushingSoon);\n            this.flushingSoon = -1;\n            this.flush();\n        }\n    }\n    start() {\n        if (this.observer) {\n            this.observer.takeRecords();\n            this.observer.observe(this.view.dom, observeOptions);\n        }\n        if (this.onCharData)\n            this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.connectSelection();\n    }\n    stop() {\n        if (this.observer) {\n            let take = this.observer.takeRecords();\n            if (take.length) {\n                for (let i = 0; i < take.length; i++)\n                    this.queue.push(take[i]);\n                window.setTimeout(() => this.flush(), 20);\n            }\n            this.observer.disconnect();\n        }\n        if (this.onCharData)\n            this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.disconnectSelection();\n    }\n    connectSelection() {\n        this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    disconnectSelection() {\n        this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    suppressSelectionUpdates() {\n        this.suppressingSelectionUpdates = true;\n        setTimeout(() => this.suppressingSelectionUpdates = false, 50);\n    }\n    onSelectionChange() {\n        if (!hasFocusAndSelection(this.view))\n            return;\n        if (this.suppressingSelectionUpdates)\n            return selectionToDOM(this.view);\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        if (ie && ie_version <= 11 && !this.view.state.selection.empty) {\n            let sel = this.view.domSelectionRange();\n            // Selection.isCollapsed isn't reliable on IE\n            if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n                return this.flushSoon();\n        }\n        this.flush();\n    }\n    setCurSelection() {\n        this.currentSelection.set(this.view.domSelectionRange());\n    }\n    ignoreSelectionChange(sel) {\n        if (!sel.focusNode)\n            return true;\n        let ancestors = new Set, container;\n        for (let scan = sel.focusNode; scan; scan = parentNode(scan))\n            ancestors.add(scan);\n        for (let scan = sel.anchorNode; scan; scan = parentNode(scan))\n            if (ancestors.has(scan)) {\n                container = scan;\n                break;\n            }\n        let desc = container && this.view.docView.nearestDesc(container);\n        if (desc && desc.ignoreMutation({\n            type: \"selection\",\n            target: container.nodeType == 3 ? container.parentNode : container\n        })) {\n            this.setCurSelection();\n            return true;\n        }\n    }\n    pendingRecords() {\n        if (this.observer)\n            for (let mut of this.observer.takeRecords())\n                this.queue.push(mut);\n        return this.queue;\n    }\n    flush() {\n        let { view } = this;\n        if (!view.docView || this.flushingSoon > -1)\n            return;\n        let mutations = this.pendingRecords();\n        if (mutations.length)\n            this.queue = [];\n        let sel = view.domSelectionRange();\n        let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(view) && !this.ignoreSelectionChange(sel);\n        let from = -1, to = -1, typeOver = false, added = [];\n        if (view.editable) {\n            for (let i = 0; i < mutations.length; i++) {\n                let result = this.registerMutation(mutations[i], added);\n                if (result) {\n                    from = from < 0 ? result.from : Math.min(result.from, from);\n                    to = to < 0 ? result.to : Math.max(result.to, to);\n                    if (result.typeOver)\n                        typeOver = true;\n                }\n            }\n        }\n        if (gecko && added.length) {\n            let brs = added.filter(n => n.nodeName == \"BR\");\n            if (brs.length == 2) {\n                let [a, b] = brs;\n                if (a.parentNode && a.parentNode.parentNode == b.parentNode)\n                    b.remove();\n                else\n                    a.remove();\n            }\n            else {\n                let { focusNode } = this.currentSelection;\n                for (let br of brs) {\n                    let parent = br.parentNode;\n                    if (parent && parent.nodeName == \"LI\" && (!focusNode || blockParent(view, focusNode) != parent))\n                        br.remove();\n                }\n            }\n        }\n        let readSel = null;\n        // If it looks like the browser has reset the selection to the\n        // start of the document after focus, restore the selection from\n        // the state\n        if (from < 0 && newSel && view.input.lastFocus > Date.now() - 200 &&\n            Math.max(view.input.lastTouch, view.input.lastClick.time) < Date.now() - 300 &&\n            selectionCollapsed(sel) && (readSel = selectionFromDOM(view)) &&\n            readSel.eq(Selection.near(view.state.doc.resolve(0), 1))) {\n            view.input.lastFocus = 0;\n            selectionToDOM(view);\n            this.currentSelection.set(sel);\n            view.scrollToSelection();\n        }\n        else if (from > -1 || newSel) {\n            if (from > -1) {\n                view.docView.markDirty(from, to);\n                checkCSS(view);\n            }\n            this.handleDOMChange(from, to, typeOver, added);\n            if (view.docView && view.docView.dirty)\n                view.updateState(view.state);\n            else if (!this.currentSelection.eq(sel))\n                selectionToDOM(view);\n            this.currentSelection.set(sel);\n        }\n    }\n    registerMutation(mut, added) {\n        // Ignore mutations inside nodes that were already noted as inserted\n        if (added.indexOf(mut.target) > -1)\n            return null;\n        let desc = this.view.docView.nearestDesc(mut.target);\n        if (mut.type == \"attributes\" &&\n            (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n                // Firefox sometimes fires spurious events for null/empty styles\n                (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n            return null;\n        if (!desc || desc.ignoreMutation(mut))\n            return null;\n        if (mut.type == \"childList\") {\n            for (let i = 0; i < mut.addedNodes.length; i++) {\n                let node = mut.addedNodes[i];\n                added.push(node);\n                if (node.nodeType == 3)\n                    this.lastChangedTextNode = node;\n            }\n            if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n                return { from: desc.posBefore, to: desc.posAfter };\n            let prev = mut.previousSibling, next = mut.nextSibling;\n            if (ie && ie_version <= 11 && mut.addedNodes.length) {\n                // IE11 gives us incorrect next/prev siblings for some\n                // insertions, so if there are added nodes, recompute those\n                for (let i = 0; i < mut.addedNodes.length; i++) {\n                    let { previousSibling, nextSibling } = mut.addedNodes[i];\n                    if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0)\n                        prev = previousSibling;\n                    if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0)\n                        next = nextSibling;\n                }\n            }\n            let fromOffset = prev && prev.parentNode == mut.target\n                ? domIndex(prev) + 1 : 0;\n            let from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n            let toOffset = next && next.parentNode == mut.target\n                ? domIndex(next) : mut.target.childNodes.length;\n            let to = desc.localPosFromDOM(mut.target, toOffset, 1);\n            return { from, to };\n        }\n        else if (mut.type == \"attributes\") {\n            return { from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border };\n        }\n        else { // \"characterData\"\n            this.lastChangedTextNode = mut.target;\n            return {\n                from: desc.posAtStart,\n                to: desc.posAtEnd,\n                // An event was generated for a text change that didn't change\n                // any text. Mark the dom change to fall back to assuming the\n                // selection was typed over with an identical value if it can't\n                // find another change.\n                typeOver: mut.target.nodeValue == mut.oldValue\n            };\n        }\n    }\n}\nlet cssChecked = new WeakMap();\nlet cssCheckWarned = false;\nfunction checkCSS(view) {\n    if (cssChecked.has(view))\n        return;\n    cssChecked.set(view, null);\n    if (['normal', 'nowrap', 'pre-line'].indexOf(getComputedStyle(view.dom).whiteSpace) !== -1) {\n        view.requiresGeckoHackNode = gecko;\n        if (cssCheckWarned)\n            return;\n        console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\");\n        cssCheckWarned = true;\n    }\n}\nfunction rangeToSelectionRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let currentAnchor = view.domAtPos(view.state.selection.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(currentAnchor.node, currentAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug\n// Based on https://github.com/codemirror/dev/issues/414 fix\nfunction safariShadowSelectionRange(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return rangeToSelectionRange(view, range);\n    }\n    let found;\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    // Because Safari (at least in 2018-2022) doesn't provide regular\n    // access to the selection inside a shadowRoot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    view.dom.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.dom.removeEventListener(\"beforeinput\", read, true);\n    return found ? rangeToSelectionRange(view, found) : null;\n}\nfunction blockParent(view, node) {\n    for (let p = node.parentNode; p && p != view.dom; p = p.parentNode) {\n        let desc = view.docView.nearestDesc(p, true);\n        if (desc && desc.node.isBlock)\n            return p;\n    }\n    return null;\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\nfunction parseBetween(view, from_, to_) {\n    let { node: parent, fromOffset, toOffset, from, to } = view.docView.parseRange(from_, to_);\n    let domSel = view.domSelectionRange();\n    let find;\n    let anchor = domSel.anchorNode;\n    if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n        find = [{ node: anchor, offset: domSel.anchorOffset }];\n        if (!selectionCollapsed(domSel))\n            find.push({ node: domSel.focusNode, offset: domSel.focusOffset });\n    }\n    // Work around issue in Chrome where backspacing sometimes replaces\n    // the deleted content with a random BR node (issues #799, #831)\n    if (chrome && view.input.lastKeyCode === 8) {\n        for (let off = toOffset; off > fromOffset; off--) {\n            let node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n            if (node.nodeName == \"BR\" && !desc) {\n                toOffset = off;\n                break;\n            }\n            if (!desc || desc.size)\n                break;\n        }\n    }\n    let startDoc = view.state.doc;\n    let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    let $from = startDoc.resolve(from);\n    let sel = null, doc = parser.parse(parent, {\n        topNode: $from.parent,\n        topMatch: $from.parent.contentMatchAt($from.index()),\n        topOpen: true,\n        from: fromOffset,\n        to: toOffset,\n        preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n        findPositions: find,\n        ruleFromNode,\n        context: $from\n    });\n    if (find && find[0].pos != null) {\n        let anchor = find[0].pos, head = find[1] && find[1].pos;\n        if (head == null)\n            head = anchor;\n        sel = { anchor: anchor + from, head: head + from };\n    }\n    return { doc, sel, from, to };\n}\nfunction ruleFromNode(dom) {\n    let desc = dom.pmViewDesc;\n    if (desc) {\n        return desc.parseRule();\n    }\n    else if (dom.nodeName == \"BR\" && dom.parentNode) {\n        // Safari replaces the list item or table cell with a BR\n        // directly in the list node (?!) if you delete the last\n        // character in a list item or table cell (#708, #862)\n        if (safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n            let skip = document.createElement(\"div\");\n            skip.appendChild(document.createElement(\"li\"));\n            return { skip };\n        }\n        else if (dom.parentNode.lastChild == dom || safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n            return { ignore: true };\n        }\n    }\n    else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n        return { ignore: true };\n    }\n    return null;\n}\nconst isInline = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n    let compositionID = view.input.compositionPendingChanges || (view.composing ? view.input.compositionID : 0);\n    view.input.compositionPendingChanges = 0;\n    if (from < 0) {\n        let origin = view.input.lastSelectionTime > Date.now() - 50 ? view.input.lastSelectionOrigin : null;\n        let newSel = selectionFromDOM(view, origin);\n        if (newSel && !view.state.selection.eq(newSel)) {\n            if (chrome && android &&\n                view.input.lastKeyCode === 13 && Date.now() - 100 < view.input.lastKeyCodeTime &&\n                view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\"))))\n                return;\n            let tr = view.state.tr.setSelection(newSel);\n            if (origin == \"pointer\")\n                tr.setMeta(\"pointer\", true);\n            else if (origin == \"key\")\n                tr.scrollIntoView();\n            if (compositionID)\n                tr.setMeta(\"composition\", compositionID);\n            view.dispatch(tr);\n        }\n        return;\n    }\n    let $before = view.state.doc.resolve(from);\n    let shared = $before.sharedDepth(to);\n    from = $before.before(shared + 1);\n    to = view.state.doc.resolve(to).after(shared + 1);\n    let sel = view.state.selection;\n    let parse = parseBetween(view, from, to);\n    let doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n    let preferredPos, preferredSide;\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.input.lastKeyCode === 8 && Date.now() - 100 < view.input.lastKeyCodeTime) {\n        preferredPos = view.state.selection.to;\n        preferredSide = \"end\";\n    }\n    else {\n        preferredPos = view.state.selection.from;\n        preferredSide = \"start\";\n    }\n    view.input.lastKeyCode = null;\n    let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n    if (change)\n        view.input.domChangeCount++;\n    if ((ios && view.input.lastIOSEnter > Date.now() - 225 || android) &&\n        addedNodes.some(n => n.nodeType == 1 && !isInline.test(n.nodeName)) &&\n        (!change || change.endA >= change.endB) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    if (!change) {\n        if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n            !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n            change = { start: sel.from, endA: sel.to, endB: sel.to };\n        }\n        else {\n            if (parse.sel) {\n                let sel = resolveSelection(view, view.state.doc, parse.sel);\n                if (sel && !sel.eq(view.state.selection)) {\n                    let tr = view.state.tr.setSelection(sel);\n                    if (compositionID)\n                        tr.setMeta(\"composition\", compositionID);\n                    view.dispatch(tr);\n                }\n            }\n            return;\n        }\n    }\n    // Handle the case where overwriting a selection by typing matches\n    // the start or end of the selected content, creating a change\n    // that's smaller than what was actually overwritten.\n    if (view.state.selection.from < view.state.selection.to &&\n        change.start == change.endB &&\n        view.state.selection instanceof TextSelection) {\n        if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n            view.state.selection.from >= parse.from) {\n            change.start = view.state.selection.from;\n        }\n        else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n            view.state.selection.to <= parse.to) {\n            change.endB += (view.state.selection.to - change.endA);\n            change.endA = view.state.selection.to;\n        }\n    }\n    // IE11 will insert a non-breaking space _ahead_ of the space after\n    // the cursor space when adding a space before another space. When\n    // that happened, adjust the change to cover the space instead.\n    if (ie && ie_version <= 11 && change.endB == change.start + 1 &&\n        change.endA == change.start && change.start > parse.from &&\n        parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n        change.start--;\n        change.endA--;\n        change.endB--;\n    }\n    let $from = parse.doc.resolveNoCache(change.start - parse.from);\n    let $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    let $fromA = doc.resolve(change.start);\n    let inlineChange = $from.sameParent($to) && $from.parent.inlineContent && $fromA.end() >= change.endA;\n    let nextSel;\n    // If this looks like the effect of pressing Enter (or was recorded\n    // as being an iOS enter press), just dispatch an Enter key instead.\n    if (((ios && view.input.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n        (!inlineChange && $from.pos < parse.doc.content.size && !$from.sameParent($to) &&\n            (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n            nextSel.head == $to.pos)) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n        view.input.lastIOSEnter = 0;\n        return;\n    }\n    // Same for backspace\n    if (view.state.selection.anchor > change.start &&\n        looksLikeBackspace(doc, change.start, change.endA, $from, $to) &&\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n        if (android && chrome)\n            view.domObserver.suppressSelectionUpdates(); // #820\n        return;\n    }\n    // Chrome Android will occasionally, during composition, delete the\n    // entire composition and then immediately insert it again. This is\n    // used to detect that situation.\n    if (chrome && android && change.endB == change.start)\n        view.input.lastAndroidDelete = Date.now();\n    // This tries to detect Android virtual keyboard\n    // enter-and-pick-suggestion action. That sometimes (see issue\n    // #1059) first fires a DOM mutation, before moving the selection to\n    // the newly created block. And then, because ProseMirror cleans up\n    // the DOM selection, it gives up moving the selection entirely,\n    // leaving the cursor in the wrong place. When that happens, we drop\n    // the new paragraph from the initial change, and fire a simulated\n    // enter key afterwards.\n    if (android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n        parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n        change.endB -= 2;\n        $to = parse.doc.resolveNoCache(change.endB - parse.from);\n        setTimeout(() => {\n            view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        }, 20);\n    }\n    let chFrom = change.start, chTo = change.endA;\n    let tr, storedMarks, markChange;\n    if (inlineChange) {\n        if ($from.pos == $to.pos) { // Deletion\n            // IE11 sometimes weirdly moves the DOM selection around after\n            // backspacing out the first element in a textblock\n            if (ie && ie_version <= 11 && $from.parentOffset == 0) {\n                view.domObserver.suppressSelectionUpdates();\n                setTimeout(() => selectionToDOM(view), 20);\n            }\n            tr = view.state.tr.delete(chFrom, chTo);\n            storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n        }\n        else if ( // Adding or removing a mark\n        change.endA == change.endB &&\n            (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset), $fromA.parent.content.cut($fromA.parentOffset, change.endA - $fromA.start())))) {\n            tr = view.state.tr;\n            if (markChange.type == \"add\")\n                tr.addMark(chFrom, chTo, markChange.mark);\n            else\n                tr.removeMark(chFrom, chTo, markChange.mark);\n        }\n        else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n            // Both positions in the same text node -- simply insert text\n            let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n            if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text)))\n                return;\n            tr = view.state.tr.insertText(text, chFrom, chTo);\n        }\n    }\n    if (!tr)\n        tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from));\n    if (parse.sel) {\n        let sel = resolveSelection(view, tr.doc, parse.sel);\n        // Chrome Android will sometimes, during composition, report the\n        // selection in the wrong place. If it looks like that is\n        // happening, don't update the selection.\n        // Edge just doesn't move the cursor forward when you start typing\n        // in an empty block or between br nodes.\n        if (sel && !(chrome && android && view.composing && sel.empty &&\n            (change.start != change.endB || view.input.lastAndroidDelete < Date.now() - 100) &&\n            (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n            ie && sel.empty && sel.head == chFrom))\n            tr.setSelection(sel);\n    }\n    if (storedMarks)\n        tr.ensureMarks(storedMarks);\n    if (compositionID)\n        tr.setMeta(\"composition\", compositionID);\n    view.dispatch(tr.scrollIntoView());\n}\nfunction resolveSelection(view, doc, parsedSel) {\n    if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size)\n        return null;\n    return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head));\n}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n    let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n    let added = curMarks, removed = prevMarks, type, mark, update;\n    for (let i = 0; i < prevMarks.length; i++)\n        added = prevMarks[i].removeFromSet(added);\n    for (let i = 0; i < curMarks.length; i++)\n        removed = curMarks[i].removeFromSet(removed);\n    if (added.length == 1 && removed.length == 0) {\n        mark = added[0];\n        type = \"add\";\n        update = (node) => node.mark(mark.addToSet(node.marks));\n    }\n    else if (added.length == 0 && removed.length == 1) {\n        mark = removed[0];\n        type = \"remove\";\n        update = (node) => node.mark(mark.removeFromSet(node.marks));\n    }\n    else {\n        return null;\n    }\n    let updated = [];\n    for (let i = 0; i < prev.childCount; i++)\n        updated.push(update(prev.child(i)));\n    if (Fragment.from(updated).eq(cur))\n        return { mark, type };\n}\nfunction looksLikeBackspace(old, start, end, $newStart, $newEnd) {\n    if ( // The content must have shrunk\n    end - start <= $newEnd.pos - $newStart.pos ||\n        // newEnd must point directly at or after the end of the block that newStart points into\n        skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n        return false;\n    let $start = old.resolve(start);\n    // Handle the case where, rather than joining blocks, the change just removed an entire block\n    if (!$newStart.parent.isTextblock) {\n        let after = $start.nodeAfter;\n        return after != null && end == start + after.nodeSize;\n    }\n    // Start must be at the end of a block\n    if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n        return false;\n    let $next = old.resolve(skipClosingAndOpening($start, true, true));\n    // The next textblock must start before end and end near it\n    if (!$next.parent.isTextblock || $next.pos > end ||\n        skipClosingAndOpening($next, true, false) < end)\n        return false;\n    // The fragments after the join point must match\n    return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content);\n}\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n    let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n    while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n        depth--;\n        end++;\n        fromEnd = false;\n    }\n    if (mayOpen) {\n        let next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n        while (next && !next.isLeaf) {\n            next = next.firstChild;\n            end++;\n        }\n    }\n    return end;\n}\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n    let start = a.findDiffStart(b, pos);\n    if (start == null)\n        return null;\n    let { a: endA, b: endB } = a.findDiffEnd(b, pos + a.size, pos + b.size);\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, start - Math.min(endA, endB));\n        preferredPos -= endA + adjust - start;\n    }\n    if (endA < start && a.size < b.size) {\n        let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < b.size && isSurrogatePair(b.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endB = start + (endB - endA);\n        endA = start;\n    }\n    else if (endB < start) {\n        let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n        start -= move;\n        if (start && start < a.size && isSurrogatePair(a.textBetween(start - 1, start + 1)))\n            start += move ? 1 : -1;\n        endA = start + (endA - endB);\n        endB = start;\n    }\n    return { start, endA, endB };\n}\nfunction isSurrogatePair(str) {\n    if (str.length != 2)\n        return false;\n    let a = str.charCodeAt(0), b = str.charCodeAt(1);\n    return a >= 0xDC00 && a <= 0xDFFF && b >= 0xD800 && b <= 0xDBFF;\n}\n\n/**\n@internal\n*/\nconst __serializeForClipboard = serializeForClipboard;\n/**\n@internal\n*/\nconst __parseFromClipboard = parseFromClipboard;\n/**\n@internal\n*/\nconst __endComposition = endComposition;\n/**\nAn editor view manages the DOM structure that represents an\neditable document. Its state and behavior are determined by its\n[props](https://prosemirror.net/docs/ref/#view.DirectEditorProps).\n*/\nclass EditorView {\n    /**\n    Create a view. `place` may be a DOM node that the editor should\n    be appended to, a function that will place it into the document,\n    or an object whose `mount` property holds the node to use as the\n    document container. If it is `null`, the editor will not be\n    added to the document.\n    */\n    constructor(place, props) {\n        this._root = null;\n        /**\n        @internal\n        */\n        this.focused = false;\n        /**\n        Kludge used to work around a Chrome bug @internal\n        */\n        this.trackWrites = null;\n        this.mounted = false;\n        /**\n        @internal\n        */\n        this.markCursor = null;\n        /**\n        @internal\n        */\n        this.cursorWrapper = null;\n        /**\n        @internal\n        */\n        this.lastSelectedViewDesc = undefined;\n        /**\n        @internal\n        */\n        this.input = new InputState;\n        this.prevDirectPlugins = [];\n        this.pluginViews = [];\n        /**\n        Holds `true` when a hack node is needed in Firefox to prevent the\n        [space is eaten issue](https://github.com/ProseMirror/prosemirror/issues/651)\n        @internal\n        */\n        this.requiresGeckoHackNode = false;\n        /**\n        When editor content is being dragged, this object contains\n        information about the dragged slice and whether it is being\n        copied or moved. At any other time, it is null.\n        */\n        this.dragging = null;\n        this._props = props;\n        this.state = props.state;\n        this.directPlugins = props.plugins || [];\n        this.directPlugins.forEach(checkStateComponent);\n        this.dispatch = this.dispatch.bind(this);\n        this.dom = (place && place.mount) || document.createElement(\"div\");\n        if (place) {\n            if (place.appendChild)\n                place.appendChild(this.dom);\n            else if (typeof place == \"function\")\n                place(this.dom);\n            else if (place.mount)\n                this.mounted = true;\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        this.nodeViews = buildNodeViews(this);\n        this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n        this.domObserver = new DOMObserver(this, (from, to, typeOver, added) => readDOMChange(this, from, to, typeOver, added));\n        this.domObserver.start();\n        initInput(this);\n        this.updatePluginViews();\n    }\n    /**\n    Holds `true` when a\n    [composition](https://w3c.github.io/uievents/#events-compositionevents)\n    is active.\n    */\n    get composing() { return this.input.composing; }\n    /**\n    The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).\n    */\n    get props() {\n        if (this._props.state != this.state) {\n            let prev = this._props;\n            this._props = {};\n            for (let name in prev)\n                this._props[name] = prev[name];\n            this._props.state = this.state;\n        }\n        return this._props;\n    }\n    /**\n    Update the view's props. Will immediately cause an update to\n    the DOM.\n    */\n    update(props) {\n        if (props.handleDOMEvents != this._props.handleDOMEvents)\n            ensureListeners(this);\n        let prevProps = this._props;\n        this._props = props;\n        if (props.plugins) {\n            props.plugins.forEach(checkStateComponent);\n            this.directPlugins = props.plugins;\n        }\n        this.updateStateInner(props.state, prevProps);\n    }\n    /**\n    Update the view by updating existing props object with the object\n    given as argument. Equivalent to `view.update(Object.assign({},\n    view.props, props))`.\n    */\n    setProps(props) {\n        let updated = {};\n        for (let name in this._props)\n            updated[name] = this._props[name];\n        updated.state = this.state;\n        for (let name in props)\n            updated[name] = props[name];\n        this.update(updated);\n    }\n    /**\n    Update the editor's `state` prop, without touching any of the\n    other props.\n    */\n    updateState(state) {\n        this.updateStateInner(state, this._props);\n    }\n    updateStateInner(state, prevProps) {\n        var _a;\n        let prev = this.state, redraw = false, updateSel = false;\n        // When stored marks are added, stop composition, so that they can\n        // be displayed.\n        if (state.storedMarks && this.composing) {\n            clearComposition(this);\n            updateSel = true;\n        }\n        this.state = state;\n        let pluginsChanged = prev.plugins != state.plugins || this._props.plugins != prevProps.plugins;\n        if (pluginsChanged || this._props.plugins != prevProps.plugins || this._props.nodeViews != prevProps.nodeViews) {\n            let nodeViews = buildNodeViews(this);\n            if (changedNodeViews(nodeViews, this.nodeViews)) {\n                this.nodeViews = nodeViews;\n                redraw = true;\n            }\n        }\n        if (pluginsChanged || prevProps.handleDOMEvents != this._props.handleDOMEvents) {\n            ensureListeners(this);\n        }\n        this.editable = getEditable(this);\n        updateCursorWrapper(this);\n        let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n        let scroll = prev.plugins != state.plugins && !prev.doc.eq(state.doc) ? \"reset\"\n            : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n        let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n        if (updateDoc || !state.selection.eq(prev.selection))\n            updateSel = true;\n        let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n        if (updateSel) {\n            this.domObserver.stop();\n            // Work around an issue in Chrome, IE, and Edge where changing\n            // the DOM around an active selection puts it into a broken\n            // state where the thing the user sees differs from the\n            // selection reported by the Selection object (#710, #973,\n            // #1011, #1013, #1035).\n            let forceSelUpdate = updateDoc && (ie || chrome) && !this.composing &&\n                !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n            if (updateDoc) {\n                // If the node that the selection points into is written to,\n                // Chrome sometimes starts misreporting the selection, so this\n                // tracks that and forces a selection reset when our update\n                // did write to the node.\n                let chromeKludge = chrome ? (this.trackWrites = this.domSelectionRange().focusNode) : null;\n                if (this.composing)\n                    this.input.compositionNode = findCompositionNode(this);\n                if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n                    this.docView.updateOuterDeco(outerDeco);\n                    this.docView.destroy();\n                    this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n                }\n                if (chromeKludge && !this.trackWrites)\n                    forceSelUpdate = true;\n            }\n            // Work around for an issue where an update arriving right between\n            // a DOM selection change and the \"selectionchange\" event for it\n            // can cause a spurious DOM selection update, disrupting mouse\n            // drag selection.\n            if (forceSelUpdate ||\n                !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) &&\n                    anchorInRightPlace(this))) {\n                selectionToDOM(this, forceSelUpdate);\n            }\n            else {\n                syncNodeSelection(this, state.selection);\n                this.domObserver.setCurSelection();\n            }\n            this.domObserver.start();\n        }\n        this.updatePluginViews(prev);\n        if (((_a = this.dragging) === null || _a === void 0 ? void 0 : _a.node) && !prev.doc.eq(state.doc))\n            this.updateDraggedNode(this.dragging, prev);\n        if (scroll == \"reset\") {\n            this.dom.scrollTop = 0;\n        }\n        else if (scroll == \"to selection\") {\n            this.scrollToSelection();\n        }\n        else if (oldScrollPos) {\n            resetScrollPos(oldScrollPos);\n        }\n    }\n    /**\n    @internal\n    */\n    scrollToSelection() {\n        let startDOM = this.domSelectionRange().focusNode;\n        if (this.someProp(\"handleScrollToSelection\", f => f(this))) ;\n        else if (this.state.selection instanceof NodeSelection) {\n            let target = this.docView.domAfterPos(this.state.selection.from);\n            if (target.nodeType == 1)\n                scrollRectIntoView(this, target.getBoundingClientRect(), startDOM);\n        }\n        else {\n            scrollRectIntoView(this, this.coordsAtPos(this.state.selection.head, 1), startDOM);\n        }\n    }\n    destroyPluginViews() {\n        let view;\n        while (view = this.pluginViews.pop())\n            if (view.destroy)\n                view.destroy();\n    }\n    updatePluginViews(prevState) {\n        if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n            this.prevDirectPlugins = this.directPlugins;\n            this.destroyPluginViews();\n            for (let i = 0; i < this.directPlugins.length; i++) {\n                let plugin = this.directPlugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n            for (let i = 0; i < this.state.plugins.length; i++) {\n                let plugin = this.state.plugins[i];\n                if (plugin.spec.view)\n                    this.pluginViews.push(plugin.spec.view(this));\n            }\n        }\n        else {\n            for (let i = 0; i < this.pluginViews.length; i++) {\n                let pluginView = this.pluginViews[i];\n                if (pluginView.update)\n                    pluginView.update(this, prevState);\n            }\n        }\n    }\n    updateDraggedNode(dragging, prev) {\n        let sel = dragging.node, found = -1;\n        if (this.state.doc.nodeAt(sel.from) == sel.node) {\n            found = sel.from;\n        }\n        else {\n            let movedPos = sel.from + (this.state.doc.content.size - prev.doc.content.size);\n            let moved = movedPos > 0 && this.state.doc.nodeAt(movedPos);\n            if (moved == sel.node)\n                found = movedPos;\n        }\n        this.dragging = new Dragging(dragging.slice, dragging.move, found < 0 ? undefined : NodeSelection.create(this.state.doc, found));\n    }\n    someProp(propName, f) {\n        let prop = this._props && this._props[propName], value;\n        if (prop != null && (value = f ? f(prop) : prop))\n            return value;\n        for (let i = 0; i < this.directPlugins.length; i++) {\n            let prop = this.directPlugins[i].props[propName];\n            if (prop != null && (value = f ? f(prop) : prop))\n                return value;\n        }\n        let plugins = this.state.plugins;\n        if (plugins)\n            for (let i = 0; i < plugins.length; i++) {\n                let prop = plugins[i].props[propName];\n                if (prop != null && (value = f ? f(prop) : prop))\n                    return value;\n            }\n    }\n    /**\n    Query whether the view has focus.\n    */\n    hasFocus() {\n        // Work around IE not handling focus correctly if resize handles are shown.\n        // If the cursor is inside an element with resize handles, activeElement\n        // will be that element instead of this.dom.\n        if (ie) {\n            // If activeElement is within this.dom, and there are no other elements\n            // setting `contenteditable` to false in between, treat it as focused.\n            let node = this.root.activeElement;\n            if (node == this.dom)\n                return true;\n            if (!node || !this.dom.contains(node))\n                return false;\n            while (node && this.dom != node && this.dom.contains(node)) {\n                if (node.contentEditable == 'false')\n                    return false;\n                node = node.parentElement;\n            }\n            return true;\n        }\n        return this.root.activeElement == this.dom;\n    }\n    /**\n    Focus the editor.\n    */\n    focus() {\n        this.domObserver.stop();\n        if (this.editable)\n            focusPreventScroll(this.dom);\n        selectionToDOM(this);\n        this.domObserver.start();\n    }\n    /**\n    Get the document root in which the editor exists. This will\n    usually be the top-level `document`, but might be a [shadow\n    DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n    root if the editor is inside one.\n    */\n    get root() {\n        let cached = this._root;\n        if (cached == null)\n            for (let search = this.dom.parentNode; search; search = search.parentNode) {\n                if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n                    if (!search.getSelection)\n                        Object.getPrototypeOf(search).getSelection = () => search.ownerDocument.getSelection();\n                    return this._root = search;\n                }\n            }\n        return cached || document;\n    }\n    /**\n    When an existing editor view is moved to a new document or\n    shadow tree, call this to make it recompute its root.\n    */\n    updateRoot() {\n        this._root = null;\n    }\n    /**\n    Given a pair of viewport coordinates, return the document\n    position that corresponds to them. May return null if the given\n    coordinates aren't inside of the editor. When an object is\n    returned, its `pos` property is the position nearest to the\n    coordinates, and its `inside` property holds the position of the\n    inner node that the position falls inside of, or -1 if it is at\n    the top level, not in any node.\n    */\n    posAtCoords(coords) {\n        return posAtCoords(this, coords);\n    }\n    /**\n    Returns the viewport rectangle at a given document position.\n    `left` and `right` will be the same number, as this returns a\n    flat cursor-ish rectangle. If the position is between two things\n    that aren't directly adjacent, `side` determines which element\n    is used. When < 0, the element before the position is used,\n    otherwise the element after.\n    */\n    coordsAtPos(pos, side = 1) {\n        return coordsAtPos(this, pos, side);\n    }\n    /**\n    Find the DOM position that corresponds to the given document\n    position. When `side` is negative, find the position as close as\n    possible to the content before the position. When positive,\n    prefer positions close to the content after the position. When\n    zero, prefer as shallow a position as possible.\n    \n    Note that you should **not** mutate the editor's internal DOM,\n    only inspect it (and even that is usually not necessary).\n    */\n    domAtPos(pos, side = 0) {\n        return this.docView.domFromPos(pos, side);\n    }\n    /**\n    Find the DOM node that represents the document node after the\n    given position. May return `null` when the position doesn't point\n    in front of a node or if the node is inside an opaque node view.\n    \n    This is intended to be able to call things like\n    `getBoundingClientRect` on that DOM node. Do **not** mutate the\n    editor DOM directly, or add styling this way, since that will be\n    immediately overriden by the editor as it redraws the node.\n    */\n    nodeDOM(pos) {\n        let desc = this.docView.descAt(pos);\n        return desc ? desc.nodeDOM : null;\n    }\n    /**\n    Find the document position that corresponds to a given DOM\n    position. (Whenever possible, it is preferable to inspect the\n    document structure directly, rather than poking around in the\n    DOM, but sometimes—for example when interpreting an event\n    target—you don't have a choice.)\n    \n    The `bias` parameter can be used to influence which side of a DOM\n    node to use when the position is inside a leaf node.\n    */\n    posAtDOM(node, offset, bias = -1) {\n        let pos = this.docView.posFromDOM(node, offset, bias);\n        if (pos == null)\n            throw new RangeError(\"DOM position not inside the editor\");\n        return pos;\n    }\n    /**\n    Find out whether the selection is at the end of a textblock when\n    moving in a given direction. When, for example, given `\"left\"`,\n    it will return true if moving left from the current cursor\n    position would leave that position's parent textblock. Will apply\n    to the view's current state by default, but it is possible to\n    pass a different state.\n    */\n    endOfTextblock(dir, state) {\n        return endOfTextblock(this, state || this.state, dir);\n    }\n    /**\n    Run the editor's paste logic with the given HTML string. The\n    `event`, if given, will be passed to the\n    [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.\n    */\n    pasteHTML(html, event) {\n        return doPaste(this, \"\", html, false, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Run the editor's paste logic with the given plain-text input.\n    */\n    pasteText(text, event) {\n        return doPaste(this, text, null, true, event || new ClipboardEvent(\"paste\"));\n    }\n    /**\n    Removes the editor from the DOM and destroys all [node\n    views](https://prosemirror.net/docs/ref/#view.NodeView).\n    */\n    destroy() {\n        if (!this.docView)\n            return;\n        destroyInput(this);\n        this.destroyPluginViews();\n        if (this.mounted) {\n            this.docView.update(this.state.doc, [], viewDecorations(this), this);\n            this.dom.textContent = \"\";\n        }\n        else if (this.dom.parentNode) {\n            this.dom.parentNode.removeChild(this.dom);\n        }\n        this.docView.destroy();\n        this.docView = null;\n        clearReusedRange();\n    }\n    /**\n    This is true when the view has been\n    [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be\n    used anymore).\n    */\n    get isDestroyed() {\n        return this.docView == null;\n    }\n    /**\n    Used for testing.\n    */\n    dispatchEvent(event) {\n        return dispatchEvent(this, event);\n    }\n    /**\n    Dispatch a transaction. Will call\n    [`dispatchTransaction`](https://prosemirror.net/docs/ref/#view.DirectEditorProps.dispatchTransaction)\n    when given, and otherwise defaults to applying the transaction to\n    the current state and calling\n    [`updateState`](https://prosemirror.net/docs/ref/#view.EditorView.updateState) with the result.\n    This method is bound to the view instance, so that it can be\n    easily passed around.\n    */\n    dispatch(tr) {\n        let dispatchTransaction = this._props.dispatchTransaction;\n        if (dispatchTransaction)\n            dispatchTransaction.call(this, tr);\n        else\n            this.updateState(this.state.apply(tr));\n    }\n    /**\n    @internal\n    */\n    domSelectionRange() {\n        let sel = this.domSelection();\n        if (!sel)\n            return { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };\n        return safari && this.root.nodeType === 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom && safariShadowSelectionRange(this, sel) || sel;\n    }\n    /**\n    @internal\n    */\n    domSelection() {\n        return this.root.getSelection();\n    }\n}\nfunction computeDocDeco(view) {\n    let attrs = Object.create(null);\n    attrs.class = \"ProseMirror\";\n    attrs.contenteditable = String(view.editable);\n    view.someProp(\"attributes\", value => {\n        if (typeof value == \"function\")\n            value = value(view.state);\n        if (value)\n            for (let attr in value) {\n                if (attr == \"class\")\n                    attrs.class += \" \" + value[attr];\n                else if (attr == \"style\")\n                    attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n                else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n                    attrs[attr] = String(value[attr]);\n            }\n    });\n    if (!attrs.translate)\n        attrs.translate = \"no\";\n    return [Decoration.node(0, view.state.doc.content.size, attrs)];\n}\nfunction updateCursorWrapper(view) {\n    if (view.markCursor) {\n        let dom = document.createElement(\"img\");\n        dom.className = \"ProseMirror-separator\";\n        dom.setAttribute(\"mark-placeholder\", \"true\");\n        dom.setAttribute(\"alt\", \"\");\n        view.cursorWrapper = { dom, deco: Decoration.widget(view.state.selection.from, dom, { raw: true, marks: view.markCursor }) };\n    }\n    else {\n        view.cursorWrapper = null;\n    }\n}\nfunction getEditable(view) {\n    return !view.someProp(\"editable\", value => value(view.state) === false);\n}\nfunction selectionContextChanged(sel1, sel2) {\n    let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n    return sel1.$anchor.start(depth) != sel2.$anchor.start(depth);\n}\nfunction buildNodeViews(view) {\n    let result = Object.create(null);\n    function add(obj) {\n        for (let prop in obj)\n            if (!Object.prototype.hasOwnProperty.call(result, prop))\n                result[prop] = obj[prop];\n    }\n    view.someProp(\"nodeViews\", add);\n    view.someProp(\"markViews\", add);\n    return result;\n}\nfunction changedNodeViews(a, b) {\n    let nA = 0, nB = 0;\n    for (let prop in a) {\n        if (a[prop] != b[prop])\n            return true;\n        nA++;\n    }\n    for (let _ in b)\n        nB++;\n    return nA != nB;\n}\nfunction checkStateComponent(plugin) {\n    if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n        throw new RangeError(\"Plugins passed directly to the view must not have a state component\");\n}\n\nexport { Decoration, DecorationSet, EditorView, __endComposition, __parseFromClipboard, __serializeForClipboard };\n","import type { Ctx, MilkdownPlugin, TimerType } from '@milkdown/ctx'\nimport { createSlice, createTimer } from '@milkdown/ctx'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { DirectEditorProps } from '@milkdown/prose/view'\nimport { EditorView } from '@milkdown/prose/view'\n\nimport { withMeta } from '../__internal__'\nimport { EditorStateReady } from './editor-state'\nimport { InitReady } from './init'\nimport {\n  editorStateCtx,\n  editorViewCtx,\n  markViewCtx,\n  nodeViewCtx,\n  prosePluginsCtx,\n} from './atoms'\n\ntype EditorOptions = Omit<DirectEditorProps, 'state'>\n\ntype RootType = Node | undefined | null | string\n\n/// The timer which will be resolved when the editor view plugin is ready.\nexport const EditorViewReady = createTimer('EditorViewReady')\n\n/// A slice which stores timers that need to be waited for before starting to run the plugin.\n/// By default, it's `[EditorStateReady]`.\nexport const editorViewTimerCtx = createSlice(\n  [] as TimerType[],\n  'editorViewTimer'\n)\n\n/// A slice which contains the editor view options which will be passed to the editor view.\nexport const editorViewOptionsCtx = createSlice(\n  {} as Partial<EditorOptions>,\n  'editorViewOptions'\n)\n\n/// A slice which contains the value to get the root element.\n/// Can be a selector string, a node or null.\n/// If it's null, the editor will be created in the body.\nexport const rootCtx = createSlice(null as RootType, 'root')\n\n/// A slice which contains the actually root element.\nexport const rootDOMCtx = createSlice(null as unknown as HTMLElement, 'rootDOM')\n\n/// A slice which contains the root element attributes.\n/// You can add attributes to the root element by this slice.\nexport const rootAttrsCtx = createSlice(\n  {} as Record<string, string>,\n  'rootAttrs'\n)\n\nfunction createViewContainer(root: Node, ctx: Ctx) {\n  const container = document.createElement('div')\n  container.className = 'milkdown'\n  root.appendChild(container)\n  ctx.set(rootDOMCtx, container)\n\n  const attrs = ctx.get(rootAttrsCtx)\n  Object.entries(attrs).forEach(([key, value]) =>\n    container.setAttribute(key, value)\n  )\n\n  return container\n}\n\nfunction prepareViewDom(dom: Element) {\n  dom.classList.add('editor')\n  dom.setAttribute('role', 'textbox')\n}\n\nconst key = new PluginKey('MILKDOWN_VIEW_CLEAR')\n\n/// The editor view plugin.\n/// This plugin will create an editor view.\n///\n/// This plugin will wait for the editor state plugin.\nexport const editorView: MilkdownPlugin = (ctx) => {\n  ctx\n    .inject(rootCtx, document.body)\n    .inject(editorViewCtx, {} as EditorView)\n    .inject(editorViewOptionsCtx, {})\n    .inject(rootDOMCtx, null as unknown as HTMLElement)\n    .inject(rootAttrsCtx, {})\n    .inject(editorViewTimerCtx, [EditorStateReady])\n    .record(EditorViewReady)\n\n  return async () => {\n    await ctx.wait(InitReady)\n\n    const root = ctx.get(rootCtx) || document.body\n    const el = typeof root === 'string' ? document.querySelector(root) : root\n\n    ctx.update(prosePluginsCtx, (xs) => [\n      new Plugin({\n        key,\n        view: (editorView) => {\n          const container = el ? createViewContainer(el, ctx) : undefined\n\n          const handleDOM = () => {\n            if (container && el) {\n              const editor = editorView.dom\n              el.replaceChild(container, editor)\n              container.appendChild(editor)\n            }\n          }\n          handleDOM()\n          return {\n            destroy: () => {\n              if (container?.parentNode)\n                container?.parentNode.replaceChild(editorView.dom, container)\n\n              container?.remove()\n            },\n          }\n        },\n      }),\n      ...xs,\n    ])\n\n    await ctx.waitTimers(editorViewTimerCtx)\n\n    const state = ctx.get(editorStateCtx)\n    const options = ctx.get(editorViewOptionsCtx)\n    const nodeViews = Object.fromEntries(ctx.get(nodeViewCtx))\n    const markViews = Object.fromEntries(ctx.get(markViewCtx))\n    const view = new EditorView(el as Node, {\n      state,\n      nodeViews,\n      markViews,\n      ...options,\n    })\n    prepareViewDom(view.dom)\n    ctx.set(editorViewCtx, view)\n    ctx.done(EditorViewReady)\n\n    return () => {\n      view?.destroy()\n      ctx\n        .remove(rootCtx)\n        .remove(editorViewCtx)\n        .remove(editorViewOptionsCtx)\n        .remove(rootDOMCtx)\n        .remove(rootAttrsCtx)\n        .remove(editorViewTimerCtx)\n        .clearTimer(EditorViewReady)\n    }\n  }\n}\n\nwithMeta(editorView, {\n  displayName: 'EditorView',\n})\n","import type { CtxRunner, MilkdownPlugin, Telemetry } from '@milkdown/ctx'\nimport { Clock, Container, Ctx } from '@milkdown/ctx'\n\nimport type { Config } from '../internal-plugin'\nimport {\n  commands,\n  config,\n  editorState,\n  editorView,\n  init,\n  parser,\n  schema,\n  serializer,\n} from '../internal-plugin'\n\n/// The status of the editor.\nexport enum EditorStatus {\n  /// The editor is not initialized.\n  Idle = 'Idle',\n  /// The editor is creating.\n  OnCreate = 'OnCreate',\n  /// The editor has been created and ready to use.\n  Created = 'Created',\n  /// The editor is destroying.\n  OnDestroy = 'OnDestroy',\n  /// The editor has been destroyed.\n  Destroyed = 'Destroyed',\n}\n\n/// Type for the callback called when editor status changed.\nexport type OnStatusChange = (status: EditorStatus) => void\n\ntype EditorPluginStore = Map<\n  MilkdownPlugin,\n  {\n    ctx: Ctx | undefined\n    handler: CtxRunner | undefined\n    cleanup: ReturnType<CtxRunner>\n  }\n>\n\n/// The milkdown editor class.\nexport class Editor {\n  /// Create a new editor instance.\n  static make() {\n    return new Editor()\n  }\n\n  /// @internal\n  #enableInspector = false\n  /// @internal\n  #status = EditorStatus.Idle\n  /// @internal\n  #configureList: Config[] = []\n  /// @internal\n  #onStatusChange: OnStatusChange = () => undefined\n\n  /// @internal\n  readonly #container = new Container()\n  /// @internal\n  readonly #clock = new Clock()\n\n  /// @internal\n  readonly #usrPluginStore: EditorPluginStore = new Map()\n\n  /// @internal\n  readonly #sysPluginStore: EditorPluginStore = new Map()\n\n  /// @internal\n  readonly #ctx = new Ctx(this.#container, this.#clock)\n\n  /// @internal\n  readonly #loadInternal = () => {\n    const configPlugin = config(async (ctx) => {\n      await Promise.all(this.#configureList.map((fn) => fn(ctx)))\n    })\n    const internalPlugins = [\n      schema,\n      parser,\n      serializer,\n      commands,\n      editorState,\n      editorView,\n      init(this),\n      configPlugin,\n    ]\n    this.#prepare(internalPlugins, this.#sysPluginStore)\n  }\n\n  /// @internal\n  readonly #prepare = (plugins: MilkdownPlugin[], store: EditorPluginStore) => {\n    plugins.forEach((plugin) => {\n      const ctx = this.#ctx.produce(\n        this.#enableInspector ? plugin.meta : undefined\n      )\n      const handler = plugin(ctx)\n      store.set(plugin, { ctx, handler, cleanup: undefined })\n    })\n  }\n\n  /// @internal\n  readonly #cleanup = (plugins: MilkdownPlugin[], remove = false) => {\n    return Promise.all(\n      [plugins].flat().map((plugin) => {\n        const loader = this.#usrPluginStore.get(plugin)\n        const cleanup = loader?.cleanup\n        if (remove) this.#usrPluginStore.delete(plugin)\n        else\n          this.#usrPluginStore.set(plugin, {\n            ctx: undefined,\n            handler: undefined,\n            cleanup: undefined,\n          })\n\n        if (typeof cleanup === 'function') return cleanup()\n\n        return cleanup\n      })\n    )\n  }\n\n  /// @internal\n  readonly #cleanupInternal = async () => {\n    await Promise.all(\n      [...this.#sysPluginStore.entries()].map(([_, { cleanup }]) => {\n        if (typeof cleanup === 'function') return cleanup()\n\n        return cleanup\n      })\n    )\n    this.#sysPluginStore.clear()\n  }\n\n  /// @internal\n  readonly #setStatus = (status: EditorStatus) => {\n    this.#status = status\n    this.#onStatusChange(status)\n  }\n\n  /// @internal\n  readonly #loadPluginInStore = (store: EditorPluginStore) => {\n    return [...store.entries()].map(async ([key, loader]) => {\n      const { ctx, handler } = loader\n      if (!handler) return\n\n      const cleanup = await handler()\n\n      store.set(key, { ctx, handler, cleanup })\n    })\n  }\n\n  /// Get the ctx of the editor.\n  get ctx() {\n    return this.#ctx\n  }\n\n  /// Get the status of the editor.\n  get status() {\n    return this.#status\n  }\n\n  /// Enable the inspector for the editor.\n  /// You can also pass `false` to disable the inspector.\n  readonly enableInspector = (enable = true) => {\n    this.#enableInspector = enable\n\n    return this\n  }\n\n  /// Subscribe to the status change event for the editor.\n  /// The new subscription will replace the old one.\n  readonly onStatusChange = (onChange: OnStatusChange) => {\n    this.#onStatusChange = onChange\n    return this\n  }\n\n  /// Add a config for the editor.\n  readonly config = (configure: Config) => {\n    this.#configureList.push(configure)\n    return this\n  }\n\n  /// Remove a config for the editor.\n  readonly removeConfig = (configure: Config) => {\n    this.#configureList = this.#configureList.filter((x) => x !== configure)\n    return this\n  }\n\n  /// Use a plugin or a list of plugins for the editor.\n  readonly use = (plugins: MilkdownPlugin | MilkdownPlugin[]) => {\n    const _plugins = [plugins].flat()\n    _plugins.flat().forEach((plugin) => {\n      this.#usrPluginStore.set(plugin, {\n        ctx: undefined,\n        handler: undefined,\n        cleanup: undefined,\n      })\n    })\n\n    if (this.#status === EditorStatus.Created)\n      this.#prepare(_plugins, this.#usrPluginStore)\n\n    return this\n  }\n\n  /// Remove a plugin or a list of plugins from the editor.\n  readonly remove = async (\n    plugins: MilkdownPlugin | MilkdownPlugin[]\n  ): Promise<Editor> => {\n    if (this.#status === EditorStatus.OnCreate) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Milkdown]: You are trying to remove plugins when the editor is creating, this is not recommended, please check your code.'\n      )\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(this.remove(plugins))\n        }, 50)\n      })\n    }\n\n    await this.#cleanup([plugins].flat(), true)\n    return this\n  }\n\n  /// Create the editor with current config and plugins.\n  /// If the editor is already created, it will be recreated.\n  readonly create = async (): Promise<Editor> => {\n    if (this.#status === EditorStatus.OnCreate) return this\n\n    if (this.#status === EditorStatus.Created) await this.destroy()\n\n    this.#setStatus(EditorStatus.OnCreate)\n\n    this.#loadInternal()\n    this.#prepare([...this.#usrPluginStore.keys()], this.#usrPluginStore)\n\n    await Promise.all(\n      [\n        this.#loadPluginInStore(this.#sysPluginStore),\n        this.#loadPluginInStore(this.#usrPluginStore),\n      ].flat()\n    )\n\n    this.#setStatus(EditorStatus.Created)\n    return this\n  }\n\n  /// Destroy the editor.\n  /// If you want to clear all plugins, set `clearPlugins` to `true`.\n  readonly destroy = async (clearPlugins = false): Promise<Editor> => {\n    if (\n      this.#status === EditorStatus.Destroyed ||\n      this.#status === EditorStatus.OnDestroy\n    )\n      return this\n\n    if (this.#status === EditorStatus.OnCreate) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(this.destroy(clearPlugins))\n        }, 50)\n      })\n    }\n\n    if (clearPlugins) this.#configureList = []\n\n    this.#setStatus(EditorStatus.OnDestroy)\n    await this.#cleanup([...this.#usrPluginStore.keys()], clearPlugins)\n    await this.#cleanupInternal()\n\n    this.#setStatus(EditorStatus.Destroyed)\n    return this\n  }\n\n  /// Call an action with the ctx of the editor.\n  /// This method should be used after the editor is created.\n  readonly action = <T>(action: (ctx: Ctx) => T) => action(this.#ctx)\n\n  /// Get inspections of plugins in editor.\n  /// Make sure you have enabled inspector by `editor.enableInspector()` before calling this method.\n  readonly inspect = (): Telemetry[] => {\n    if (!this.#enableInspector) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Milkdown]: You are trying to collect inspection when inspector is disabled, please enable inspector by `editor.enableInspector()` first.'\n      )\n      return []\n    }\n    return [...this.#sysPluginStore.values(), ...this.#usrPluginStore.values()]\n      .map(({ ctx }) => ctx?.inspector?.read())\n      .filter((x): x is Telemetry => Boolean(x))\n  }\n}\n","import type {\n  Cleanup,\n  Ctx,\n  MilkdownPlugin,\n  SliceType,\n  TimerType,\n} from '@milkdown/ctx'\nimport { createTimer } from '@milkdown/ctx'\nimport { customAlphabet } from 'nanoid'\n\n/// @internal\nexport const nanoid = customAlphabet('abcedfghicklmn', 10)\n\n/// @internal\nexport type WithTimer<T> = T & { timer: TimerType }\n\n/// @internal\nexport function addTimer<\n  T extends MilkdownPlugin,\n  PluginWithTimer extends T = WithTimer<T>,\n>(\n  runner: (\n    ctx: Ctx,\n    plugin: PluginWithTimer,\n    done: () => void\n  ) => Promise<void | Cleanup>,\n  injectTo: SliceType<TimerType[], string>,\n  timerName?: string\n): PluginWithTimer {\n  const timer = createTimer(timerName || nanoid())\n  let doneCalled = false\n\n  const plugin: MilkdownPlugin = (ctx) => {\n    ctx.record(timer)\n    ctx.update(injectTo, (x) => x.concat(timer))\n\n    return async () => {\n      const done = () => {\n        ctx.done(timer)\n        doneCalled = true\n      }\n\n      const cleanup = await runner(ctx, <PluginWithTimer>plugin, done)\n\n      if (!doneCalled) ctx.done(timer)\n\n      return () => {\n        ctx.update(injectTo, (x) => x.filter((y) => y !== timer))\n        ctx.clearTimer(timer)\n        cleanup?.()\n      }\n    }\n  }\n  ;(<T & { timer: TimerType }>plugin).timer = timer\n\n  return <PluginWithTimer>plugin\n}\n","import type { Cmd, CmdKey } from '@milkdown/core'\nimport type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  CommandsReady,\n  commandsCtx,\n  commandsTimerCtx,\n  createCmdKey,\n} from '@milkdown/core'\n\nimport { addTimer } from './utils'\n\n/// @internal\nexport type $Command<T> = MilkdownPlugin & {\n  run: (payload?: T) => boolean\n  key: CmdKey<T>\n}\n\n/// Create a command plugin. The command will be registered in the `commandsCtx` and can be called by other parts of the editor.\n/// It takes a key and a factory function. The factory function will be called when the plugin is created.\n/// The factory should return a function that will be called when the command is executed.\n/// The function should receive at **most one parameter**, which is the payload of the command.\n/// And the payload should always be **optional**.\n///\n/// ```ts\n/// import { setBlockType } from '@milkdown/prose/commands'\n///\n/// const commandPlugin = $command('SetAsHeading', (ctx) => {\n///   return (level = 1) => setBlockType(headingSchema.type(), { level });\n/// });\n/// ```\n///\n/// Additional property:\n/// - `key`: The key of the command.\n/// - `run`: The function to run the command.\n///\n/// You can use `callCommand` in `editor.action` to call the command.\n///\n/// ```ts\n/// import { callCommand } from '@milkdown/utils';\n/// const editor = Editor.make().use(/* some plugins */).use(commandPlugin).create();\n///\n/// editor.action(callCommand(commandPlugin.key, 3));\n/// ```\nexport function $command<T, K extends string>(\n  key: K,\n  cmd: (ctx: Ctx) => Cmd<T>\n): $Command<T> {\n  const cmdKey = createCmdKey<T>(key)\n\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    ;(<$Command<T>>plugin).key = cmdKey\n    await ctx.wait(CommandsReady)\n    const command = cmd(ctx)\n    ctx.get(commandsCtx).create(cmdKey, command)\n    ;(<$Command<T>>plugin).run = (payload?: T) =>\n      ctx.get(commandsCtx).call(key, payload)\n\n    return () => {\n      ctx.get(commandsCtx).remove(cmdKey)\n    }\n  }\n\n  return <$Command<T>>plugin\n}\n\n/// The async version for `$command`. You can use `await` in the factory when creating the command.\n/// ```ts\n/// const commandPlugin = $commandASync('LoadRemoteDoc', (ctx) => {\n///   return async (url = 'my-remote-api') => {\n///     const doc = await LoadRemoteDoc(url);\n///     return addDoc(doc);\n///   }\n/// });\n/// ```\n///\n/// Additional property:\n/// - `key`: The key of the command.\n/// - `run`: The function to run the command.\n/// - `timer`: The timer which will be resolved when the command is ready.\nexport function $commandAsync<T, K extends string>(\n  key: K,\n  cmd: (ctx: Ctx) => Promise<Cmd<T>>,\n  timerName?: string\n) {\n  const cmdKey = createCmdKey<T>(key)\n  return addTimer<$Command<T>>(\n    async (ctx, plugin) => {\n      await ctx.wait(CommandsReady)\n      const command = await cmd(ctx)\n      ctx.get(commandsCtx).create(cmdKey, command)\n      ;(<$Command<T>>plugin).run = (payload?: T) =>\n        ctx.get(commandsCtx).call(key, payload)\n      ;(<$Command<T>>plugin).key = cmdKey\n      return () => {\n        ctx.get(commandsCtx).remove(cmdKey)\n      }\n    },\n    commandsTimerCtx,\n    timerName\n  )\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport { SchemaReady, editorStateTimerCtx, inputRulesCtx } from '@milkdown/core'\nimport type { InputRule } from '@milkdown/prose/inputrules'\n\nimport { addTimer } from './utils'\n\n/// @internal\nexport type $InputRule = MilkdownPlugin & {\n  inputRule: InputRule\n}\n\n/// Create an input rule plugin.\n/// It takes a factory function which returns a [prosemirror input rule](https://prosemirror.net/docs/ref/#inputrules.InputRule).\n///\n/// Additional property:\n/// - `inputRule`: The prosemirror input rule created.\nexport function $inputRule(inputRule: (ctx: Ctx) => InputRule): $InputRule {\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady)\n    const ir = inputRule(ctx)\n    ctx.update(inputRulesCtx, (irs) => [...irs, ir])\n    ;(<$InputRule>plugin).inputRule = ir\n\n    return () => {\n      ctx.update(inputRulesCtx, (irs) => irs.filter((x) => x !== ir))\n    }\n  }\n\n  return <$InputRule>plugin\n}\n\n/// The async version for `$inputRule`. You can use `await` in the factory when creating the input rule.\n///\n/// Additional property:\n/// - `inputRule`: The prosemirror input rule created.\n/// - `timer`: The timer which will be resolved when the input rule is ready.\nexport function $inputRuleAsync(\n  inputRule: (ctx: Ctx) => Promise<InputRule>,\n  timerName?: string\n) {\n  return addTimer<$InputRule>(\n    async (ctx, plugin) => {\n      await ctx.wait(SchemaReady)\n      const ir = await inputRule(ctx)\n      ctx.update(inputRulesCtx, (irs) => [...irs, ir])\n      plugin.inputRule = ir\n      return () => {\n        ctx.update(inputRulesCtx, (irs) => irs.filter((x) => x !== ir))\n      }\n    },\n    editorStateTimerCtx,\n    timerName\n  )\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport type { MarkSchema } from '@milkdown/transformer'\nimport { marksCtx, schemaCtx, schemaTimerCtx } from '@milkdown/core'\nimport { missingMarkInSchema } from '@milkdown/exception'\nimport type { MarkType } from '@milkdown/prose/model'\n\nimport { addTimer } from './utils'\n\n/// @internal\nexport type $Mark = MilkdownPlugin & {\n  id: string\n  schema: MarkSchema\n  type: (ctx: Ctx) => MarkType\n}\n\n/// Create a mark plugin.\n/// It takes a mark id and a factory function.\n/// The factory should return a function that returns a [mark schema](/transformer#interface-markschema).\n///\n/// Additional property:\n/// - `id`: The id of the mark.\n/// - `schema`: The mark schema created.\n/// - `type`: A function that will return the [prosemirror mark type](https://prosemirror.net/docs/ref/#model.MarkType).\nexport function $mark(id: string, schema: (ctx: Ctx) => MarkSchema): $Mark {\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    const markSchema = schema(ctx)\n    ctx.update(marksCtx, (ns) => [\n      ...ns.filter((n) => n[0] !== id),\n      [id, markSchema] as [string, MarkSchema],\n    ])\n    ;(<$Mark>plugin).id = id\n    ;(<$Mark>plugin).schema = markSchema\n\n    return () => {\n      ctx.update(marksCtx, (ns) => ns.filter(([x]) => x !== id))\n    }\n  }\n  ;(<$Mark>plugin).type = (ctx) => {\n    const markType = ctx.get(schemaCtx).marks[id]\n    if (!markType) throw missingMarkInSchema(id)\n    return markType\n  }\n\n  return <$Mark>plugin\n}\n\n/// The async version for `$mark`. You can use `await` in the factory when creating the mark schema.\n///\n/// Additional property:\n/// - `id`: The id of the mark.\n/// - `schema`: The mark schema created.\n/// - `type`: A function that will return the [prosemirror mark type](https://prosemirror.net/docs/ref/#model.MarkType).\n/// - `timer`: The timer which will be resolved when the mark schema is ready.\nexport function $markAsync(\n  id: string,\n  schema: (ctx: Ctx) => Promise<MarkSchema>,\n  timerName?: string\n) {\n  const plugin = addTimer<$Mark>(\n    async (ctx, plugin, done) => {\n      const markSchema = await schema(ctx)\n      ctx.update(marksCtx, (ns) => [\n        ...ns.filter((n) => n[0] !== id),\n        [id, markSchema] as [string, MarkSchema],\n      ])\n\n      plugin.id = id\n      plugin.schema = markSchema\n      done()\n\n      return () => {\n        ctx.update(marksCtx, (ns) => ns.filter(([x]) => x !== id))\n      }\n    },\n    schemaTimerCtx,\n    timerName\n  )\n\n  plugin.type = (ctx) => {\n    const markType = ctx.get(schemaCtx).marks[id]\n    if (!markType) throw missingMarkInSchema(id)\n    return markType\n  }\n\n  return plugin\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport { nodesCtx, schemaCtx, schemaTimerCtx } from '@milkdown/core'\nimport { missingNodeInSchema } from '@milkdown/exception'\nimport type { NodeType } from '@milkdown/prose/model'\n\nimport type { NodeSchema } from '@milkdown/transformer'\nimport { addTimer } from './utils'\n\n/// @internal\nexport type $Node = MilkdownPlugin & {\n  id: string\n  schema: NodeSchema\n  type: (ctx: Ctx) => NodeType\n}\n\n/// Create a node plugin.\n/// It takes a node id and a factory function.\n/// The factory should return a function that returns a [node schema](/transformer#interface-nodeschema).\n///\n/// Additional property:\n/// - `id`: The id of the node.\n/// - `schema`: The node schema created.\n/// - `type`: A function that will return the [prosemirror node type](https://prosemirror.net/docs/ref/#model.NodeType).\nexport function $node(id: string, schema: (ctx: Ctx) => NodeSchema): $Node {\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    const nodeSchema = schema(ctx)\n    ctx.update(nodesCtx, (ns) => [\n      ...ns.filter((n) => n[0] !== id),\n      [id, nodeSchema] as [string, NodeSchema],\n    ])\n    ;(<$Node>plugin).id = id\n    ;(<$Node>plugin).schema = nodeSchema\n\n    return () => {\n      ctx.update(nodesCtx, (ns) => ns.filter(([x]) => x !== id))\n    }\n  }\n\n  ;(<$Node>plugin).type = (ctx) => {\n    const nodeType = ctx.get(schemaCtx).nodes[id]\n    if (!nodeType) throw missingNodeInSchema(id)\n\n    return nodeType\n  }\n\n  return <$Node>plugin\n}\n\n/// The async version for `$node`. You can use `await` in the factory when creating the node schema.\n///\n/// Additional property:\n/// - `id`: The id of the node.\n/// - `schema`: The node schema created.\n/// - `type`: A function that will return the [prosemirror node type](https://prosemirror.net/docs/ref/#model.NodeType).\n/// - `timer`: The timer which will be resolved when the node schema is ready.\nexport function $nodeAsync(\n  id: string,\n  schema: (ctx: Ctx) => Promise<NodeSchema>,\n  timerName?: string\n) {\n  const plugin = addTimer<$Node>(\n    async (ctx, plugin, done) => {\n      const nodeSchema = await schema(ctx)\n      ctx.update(nodesCtx, (ns) => [\n        ...ns.filter((n) => n[0] !== id),\n        [id, nodeSchema] as [string, NodeSchema],\n      ])\n\n      plugin.id = id\n      plugin.schema = nodeSchema\n      done()\n\n      return () => {\n        ctx.update(nodesCtx, (ns) => ns.filter(([x]) => x !== id))\n      }\n    },\n    schemaTimerCtx,\n    timerName\n  )\n\n  plugin.type = (ctx) => {\n    const nodeType = ctx.get(schemaCtx).nodes[id]\n    if (!nodeType) throw missingNodeInSchema(id)\n\n    return nodeType\n  }\n\n  return plugin\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  SchemaReady,\n  editorStateTimerCtx,\n  prosePluginsCtx,\n} from '@milkdown/core'\nimport type { Plugin, PluginKey } from '@milkdown/prose/state'\n\nimport { addTimer } from './utils'\n\n/// @internal\nexport type $Prose = MilkdownPlugin & {\n  plugin: () => Plugin\n  key: () => PluginKey | undefined\n}\n\n/// Create a milkdown wrapper for [prosemirror plugin](https://prosemirror.net/docs/ref/#state.Plugin).\n/// It takes a factory function which returns a [prosemirror plugin](https://prosemirror.net/docs/ref/#state.Plugin).\n///\n/// Additional property:\n/// - `plugin`: The prosemirror plugin created.\n/// - `key`: The [prosemirror plugin key](https://prosemirror.net/docs/ref/#state.PluginKey) of the plugin.\nexport function $prose(prose: (ctx: Ctx) => Plugin): $Prose {\n  let prosePlugin: Plugin | undefined\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady)\n    prosePlugin = prose(ctx)\n    ctx.update(prosePluginsCtx, (ps) => [...ps, prosePlugin!])\n\n    return () => {\n      ctx.update(prosePluginsCtx, (ps) => ps.filter((x) => x !== prosePlugin))\n    }\n  }\n  ;(<$Prose>plugin).plugin = () => prosePlugin!\n  ;(<$Prose>plugin).key = () => prosePlugin!.spec.key\n\n  return <$Prose>plugin\n}\n\n/// The async version for `$prose`. You can use `await` in the factory when creating the plugin.\n///\n/// Additional property:\n/// - `plugin`: The prosemirror plugin created.\n/// - `key`: The [prosemirror plugin key](https://prosemirror.net/docs/ref/#state.PluginKey) of the plugin.\n/// - `timer`: The timer which will be resolved when the plugin is ready.\nexport function $proseAsync(\n  prose: (ctx: Ctx) => Promise<Plugin>,\n  timerName?: string\n) {\n  let prosePlugin: Plugin | undefined\n  const plugin = addTimer<$Prose>(\n    async (ctx) => {\n      await ctx.wait(SchemaReady)\n      prosePlugin = await prose(ctx)\n      ctx.update(prosePluginsCtx, (ps) => [...ps, prosePlugin!])\n\n      return () => {\n        ctx.update(prosePluginsCtx, (ps) => ps.filter((x) => x !== prosePlugin))\n      }\n    },\n    editorStateTimerCtx,\n    timerName\n  )\n\n  plugin.plugin = () => prosePlugin!\n  plugin.key = () => prosePlugin!.spec.key\n\n  return plugin\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  SchemaReady,\n  editorStateTimerCtx,\n  prosePluginsCtx,\n} from '@milkdown/core'\nimport { keymap } from '@milkdown/prose/keymap'\nimport type { Command } from '@milkdown/prose/state'\n\nimport { addTimer } from './utils'\n\n/// @internal\nexport type Keymap = Record<string, Command>\n\n/// @internal\nexport type $Shortcut = MilkdownPlugin & {\n  keymap: Keymap\n}\n\n/// Create a shortcut for the editor.\n/// It takes a factory function which returns a [prosemirror keymap](https://prosemirror.net/docs/ref/#keymap).\n///\n/// Additional property:\n/// - `keymap`: The prosemirror keymap created.\nexport function $shortcut(shortcut: (ctx: Ctx) => Keymap): $Shortcut {\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady)\n    const k = shortcut(ctx)\n    const keymapPlugin = keymap(k)\n    ctx.update(prosePluginsCtx, (ps) => [...ps, keymapPlugin])\n    ;(<$Shortcut>plugin).keymap = k\n\n    return () => {\n      ctx.update(prosePluginsCtx, (ps) => ps.filter((x) => x !== keymapPlugin))\n    }\n  }\n\n  return <$Shortcut>plugin\n}\n\n/// The async version for `$shortcut`. You can use `await` in the factory when creating the keymap.\n///\n/// Additional property:\n/// - `keymap`: The prosemirror keymap created.\n/// - `timer`: The timer which will be resolved when the plugin is ready.\nexport function $shortcutAsync(\n  shortcut: (ctx: Ctx) => Promise<Keymap>,\n  timerName?: string\n) {\n  return addTimer<$Shortcut>(\n    async (ctx, plugin) => {\n      await ctx.wait(SchemaReady)\n      const k = await shortcut(ctx)\n      const keymapPlugin = keymap(k)\n      ctx.update(prosePluginsCtx, (ps) => [...ps, keymapPlugin])\n      plugin.keymap = k\n\n      return () => {\n        ctx.update(prosePluginsCtx, (ps) =>\n          ps.filter((x) => x !== keymapPlugin)\n        )\n      }\n    },\n    editorStateTimerCtx,\n    timerName\n  )\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  SchemaReady,\n  editorViewTimerCtx,\n  markViewCtx,\n  nodeViewCtx,\n} from '@milkdown/core'\nimport { NodeType } from '@milkdown/prose/model'\nimport type {\n  MarkViewConstructor,\n  NodeViewConstructor,\n} from '@milkdown/prose/view'\n\nimport { addTimer } from './utils'\nimport type { $Mark, $Node } from '.'\n\n/// @internal\nexport type $View<\n  T extends $Node | $Mark,\n  V extends NodeViewConstructor | MarkViewConstructor,\n> = MilkdownPlugin & {\n  view: V\n  type: T\n}\n\n/// @internal\nexport type GetConstructor<T extends $Node | $Mark> = T extends $Node\n  ? NodeViewConstructor\n  : T extends $Mark\n    ? MarkViewConstructor\n    : NodeViewConstructor | MarkViewConstructor\n\n/// Create a [prosemirror node/mark view](https://prosemirror.net/docs/ref/#view.NodeView) plugin.\n/// It takes two arguments\n/// - `type`: The node/mark plugin that needs to add a view.\n/// - `view`: The factory that creates the view. It should return a function that returns a [node/mark view constructor](https://prosemirror.net/docs/ref/#view.NodeView).\n///\n/// Additional property:\n/// - `view`: The view created.\n/// - `type`: The node/mark plugin that needs to add a view.\nexport function $view<\n  T extends $Node | $Mark,\n  V extends NodeViewConstructor | MarkViewConstructor = GetConstructor<T>,\n>(type: T, view: (ctx: Ctx) => V): $View<T, V> {\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    await ctx.wait(SchemaReady)\n    const v = view(ctx)\n    if (type.type(ctx) instanceof NodeType)\n      ctx.update(nodeViewCtx, (ps) => [\n        ...ps,\n        [type.id, v] as [string, NodeViewConstructor],\n      ])\n    else\n      ctx.update(markViewCtx, (ps) => [\n        ...ps,\n        [type.id, v] as [string, MarkViewConstructor],\n      ])\n    ;(<$View<T, V>>plugin).view = v\n    ;(<$View<T, V>>plugin).type = type\n\n    return () => {\n      if (type.type(ctx) instanceof NodeType)\n        ctx.update(nodeViewCtx, (ps) => ps.filter((x) => x[0] !== type.id))\n      else ctx.update(markViewCtx, (ps) => ps.filter((x) => x[0] !== type.id))\n    }\n  }\n\n  return <$View<T, V>>plugin\n}\n\n/// The async version for `$view`. You can use `await` in the factory when creating the view.\n///\n/// Additional property:\n/// - `view`: The view created.\n/// - `type`: The node/mark plugin that needs to add a view.\n/// - `timer`: The timer which will be resolved when the view is ready.\nexport function $viewAsync<\n  T extends $Node | $Mark,\n  V extends NodeViewConstructor | MarkViewConstructor = GetConstructor<T>,\n>(type: T, view: (ctx: Ctx) => Promise<V>, timerName?: string) {\n  return addTimer<$View<T, V>>(\n    async (ctx, plugin) => {\n      await ctx.wait(SchemaReady)\n      const v = await view(ctx)\n      if (type.type(ctx) instanceof NodeType)\n        ctx.update(nodeViewCtx, (ps) => [\n          ...ps,\n          [type.id, v] as [string, NodeViewConstructor],\n        ])\n      else\n        ctx.update(markViewCtx, (ps) => [\n          ...ps,\n          [type.id, v] as [string, MarkViewConstructor],\n        ])\n\n      plugin.view = v\n      plugin.type = type\n\n      return () => {\n        if (type.type(ctx) instanceof NodeType)\n          ctx.update(nodeViewCtx, (ps) => ps.filter((x) => x[0] !== type.id))\n        else ctx.update(markViewCtx, (ps) => ps.filter((x) => x[0] !== type.id))\n      }\n    },\n    editorViewTimerCtx,\n    timerName\n  )\n}\n","import type { MilkdownPlugin, SliceType } from '@milkdown/ctx'\nimport { createSlice } from '@milkdown/ctx'\n\n/// @internal\nexport type $Ctx<T, N extends string> = MilkdownPlugin & {\n  key: SliceType<T, N>\n}\n\n/// Create a slice plugin. The plugin will be registered in the `ctx` and can be accessed by other parts of the editor.\n/// ```ts\n/// const counterCtx = $ctx(0, 'counter');\n/// ```\n///\n/// Additional property:\n/// - `key`: The key of the slice.\nexport function $ctx<T, N extends string>(value: T, name: N): $Ctx<T, N> {\n  const slice = createSlice(value, name)\n  const plugin: $Ctx<T, N> = (ctx) => {\n    ctx.inject(slice)\n    return () => {\n      return () => {\n        ctx.remove(slice)\n      }\n    }\n  }\n\n  plugin.key = slice\n\n  return plugin\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport { nodesCtx } from '@milkdown/core'\nimport type { NodeSchema } from '@milkdown/transformer'\nimport type { $Ctx } from '../$ctx'\nimport { $ctx } from '../$ctx'\nimport type { $Node } from '../$node'\nimport { $node } from '../$node'\n\n/// @internal\nexport type GetNodeSchema = (ctx: Ctx) => NodeSchema\n\n/// @internal\nexport type $NodeSchema<T extends string> = [\n  schemaCtx: $Ctx<GetNodeSchema, T>,\n  schema: $Node,\n] & {\n  id: $Node['id']\n  type: $Node['type']\n  node: $Node\n  ctx: $Ctx<GetNodeSchema, T>\n  schema: NodeSchema\n  key: $Ctx<GetNodeSchema, T>['key']\n  extendSchema: (\n    handler: (prev: GetNodeSchema) => GetNodeSchema\n  ) => MilkdownPlugin\n}\n\n/// Create a plugin for node schema.\n/// The first parameter is the id of the node schema.\n/// The second parameter is the function that returns the node schema.\n///\n/// The function will return a plugin with additional properties:\n/// - `id`: The id of the node schema.\n/// - `type`: A function witch will return the type of the node schema.\n/// - `ctx`: The context of the node schema.\n/// - `node`: The node schema plugin.\n/// - `schema`: The node schema.\n/// - `key`: The key of slice which contains the node schema factory.\n/// - `extendSchema`: A function witch will return a plugin that can extend the node schema.\nexport function $nodeSchema<T extends string>(\n  id: T,\n  schema: GetNodeSchema\n): $NodeSchema<T> {\n  const schemaCtx = $ctx(schema, id)\n\n  const nodeSchema = $node(id, (ctx) => {\n    const userSchema = ctx.get(schemaCtx.key)\n    return userSchema(ctx)\n  })\n\n  const result = [schemaCtx, nodeSchema] as $NodeSchema<T>\n  result.id = nodeSchema.id\n  result.node = nodeSchema\n\n  result.type = (ctx: Ctx) => nodeSchema.type(ctx)\n  result.schema = nodeSchema.schema\n  result.ctx = schemaCtx\n  result.key = schemaCtx.key\n  result.extendSchema = (handler): MilkdownPlugin => {\n    return (ctx) => () => {\n      const prev = ctx.get(schemaCtx.key)\n      const next = handler(prev)\n      const nodeSchema = next(ctx)\n      ctx.update(nodesCtx, (ns) => [\n        ...ns.filter((n) => n[0] !== id),\n        [id, nodeSchema] as [string, NodeSchema],\n      ])\n      result.schema = nodeSchema\n    }\n  }\n\n  return result\n}\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport { marksCtx } from '@milkdown/core'\nimport type { MarkSchema } from '@milkdown/transformer'\nimport type { $Ctx } from '../$ctx'\nimport { $ctx } from '../$ctx'\nimport type { $Mark } from '../$mark'\nimport { $mark } from '../$mark'\n\n/// @internal\nexport type GetMarkSchema = (ctx: Ctx) => MarkSchema\n\n/// @internal\nexport type $MarkSchema<T extends string> = [\n  schemaCtx: $Ctx<GetMarkSchema, T>,\n  schema: $Mark,\n] & {\n  id: $Mark['id']\n  type: $Mark['type']\n  mark: $Mark\n  ctx: $Ctx<GetMarkSchema, T>\n  schema: MarkSchema\n  key: $Ctx<GetMarkSchema, T>['key']\n  extendSchema: (\n    handler: (prev: GetMarkSchema) => GetMarkSchema\n  ) => MilkdownPlugin\n}\n\n/// Create a plugin for mark schema.\n/// The first parameter is the id of the mark schema.\n/// The second parameter is the function that returns the mark schema.\n///\n/// The function will return a plugin with additional properties:\n/// - `id`: The id of the mark schema.\n/// - `type`: A function witch will return the type of the mark schema.\n/// - `ctx`: The context of the mark schema.\n/// - `mark`: The mark schema plugin.\n/// - `schema`: The mark schema.\n/// - `key`: The key of slice which contains the mark schema factory.\n/// - `extendSchema`: A function witch will return a plugin that can extend the mark schema.\nexport function $markSchema<T extends string>(\n  id: T,\n  schema: GetMarkSchema\n): $MarkSchema<T> {\n  const schemaCtx = $ctx(schema, id)\n\n  const markSchema = $mark(id, (ctx) => {\n    const userSchema = ctx.get(schemaCtx.key)\n    return userSchema(ctx)\n  })\n\n  const result = [schemaCtx, markSchema] as $MarkSchema<T>\n  result.id = markSchema.id\n  result.mark = markSchema\n  result.type = markSchema.type\n  result.schema = markSchema.schema\n  result.ctx = schemaCtx\n  result.key = schemaCtx.key\n  result.extendSchema = (handler): MilkdownPlugin => {\n    return (ctx) => () => {\n      const prev = ctx.get(schemaCtx.key)\n      const next = handler(prev)\n      const markSchema = next(ctx)\n      ctx.update(marksCtx, (ms) => [\n        ...ms.filter((m) => m[0] !== id),\n        [id, markSchema] as [string, MarkSchema],\n      ])\n      result.schema = markSchema\n    }\n  }\n\n  return result\n}\n","import type { Ctx, SliceType } from '@milkdown/ctx'\nimport type { Command } from '@milkdown/prose/state'\nimport type { $Ctx } from '../$ctx'\nimport { $ctx } from '../$ctx'\nimport type { $Shortcut, Keymap } from '../$shortcut'\nimport { $shortcut } from '../$shortcut'\n\n/// @internal\nexport type KeymapConfig<K extends string> = Record<K, string | string[]>\n\n/// @internal\nexport interface KeymapItem {\n  shortcuts: string | string[]\n  command: (ctx: Ctx) => Command\n}\n\n/// @internal\nexport type UserKeymapConfig<Key extends string> = Record<Key, KeymapItem>\n\n/// @internal\nexport type $UserKeymap<N extends string, Key extends string> = [\n  $Ctx<KeymapConfig<Key>, `${N}Keymap`>,\n  $Shortcut,\n] & {\n  key: SliceType<KeymapConfig<Key>, `${N}Keymap`>\n  keymap: Keymap\n  ctx: $Ctx<KeymapConfig<Key>, `${N}Keymap`>\n  shortcuts: $Shortcut\n}\n\n/// Create a keymap which can be customized by user.\n/// It takes two arguments:\n/// - `name`: The name of the keymap.\n/// - `userKeymap`: The keymap config which contains the shortcuts and the command.\nexport function $useKeymap<N extends string, Key extends string>(\n  name: N,\n  userKeymap: UserKeymapConfig<Key>\n) {\n  const key = Object.fromEntries(\n    Object.entries<KeymapItem>(userKeymap).map(([key, { shortcuts }]) => {\n      return [key, shortcuts]\n    })\n  ) as Record<Key, string | string[]>\n\n  const keymapDef = $ctx<KeymapConfig<Key>, `${N}Keymap`>(key, `${name}Keymap`)\n\n  const shortcuts = $shortcut((ctx) => {\n    const keys = ctx.get(keymapDef.key)\n\n    const keymapTuple = Object.entries<KeymapItem>(userKeymap).flatMap(\n      ([key, { command }]) => {\n        const targetKeys: string[] = [keys[key as Key]].flat()\n\n        return targetKeys.map((targetKey) => [targetKey, command(ctx)] as const)\n      }\n    )\n\n    return Object.fromEntries(keymapTuple)\n  })\n\n  const result = [keymapDef, shortcuts] as $UserKeymap<N, Key>\n  result.ctx = keymapDef\n  result.shortcuts = shortcuts\n  result.key = keymapDef.key\n  result.keymap = shortcuts.keymap\n\n  return result\n}\n","import type { Mark, Node } from '@milkdown/prose/model'\nimport type { $Ctx } from '../$ctx'\nimport { $ctx } from '../$ctx'\n\n/// @internal\nexport type $NodeAttr = $Ctx<\n  (node: Node) => Record<string, any>,\n  `${string}Attr`\n>\n\n/// Create a slice which contains the attributes for node schema.\nexport const $nodeAttr = (\n  name: string,\n  value: (node: Node) => Record<string, any> = () => ({})\n): $NodeAttr => $ctx(value, `${name}Attr`)\n\n/// @internal\nexport type $MarkAttr = $Ctx<\n  (node: Mark) => Record<string, any>,\n  `${string}Attr`\n>\n\n/// Create a slice which contains the attributes for mark schema.\nexport const $markAttr = (\n  name: string,\n  value: (mark: Mark) => Record<string, any> = () => ({})\n): $MarkAttr => $ctx(value, `${name}Attr`)\n","import type { Ctx, MilkdownPlugin } from '@milkdown/ctx'\nimport { InitReady, remarkPluginsCtx } from '@milkdown/core'\n\nimport type { RemarkPlugin, RemarkPluginRaw } from '@milkdown/transformer'\nimport type { $Ctx } from '../$ctx'\nimport { $ctx } from '../$ctx'\n\n/// @internal\nexport type $Remark<Id extends string, Options> = [\n  optionsCtx: $Ctx<Options, Id>,\n  plugin: MilkdownPlugin,\n] & {\n  id: Id\n  plugin: MilkdownPlugin\n  options: $Ctx<Options, Id>\n}\n\n/// Create a milkdown wrapper for [remark plugin](https://github.com/remarkjs/remark/blob/main/doc/plugins.md).\n/// It takes a factory function which returns a [remark plugin](https://github.com/remarkjs/remark/blob/main/doc/plugins.md).\n///\n/// Additional property:\n/// - `id`: The id of the remark plugin.\n/// - `plugin`: The remark plugin created.\n/// - `options`: The ctx contains the options of the remark plugin.\nexport function $remark<Id extends string, Options>(\n  id: Id,\n  remark: (ctx: Ctx) => RemarkPluginRaw<Options>,\n  initialOptions?: Options\n): $Remark<Id, Options> {\n  const options = $ctx<Options, Id>(initialOptions ?? ({} as Options), id)\n  const plugin: MilkdownPlugin = (ctx) => async () => {\n    await ctx.wait(InitReady)\n    const re = remark(ctx)\n    const remarkPlugin: RemarkPlugin<Options> = {\n      plugin: re,\n      options: ctx.get(options.key),\n    }\n    ctx.update(remarkPluginsCtx, (rp) => [...rp, remarkPlugin as RemarkPlugin])\n\n    return () => {\n      ctx.update(remarkPluginsCtx, (rp) => rp.filter((x) => x !== remarkPlugin))\n    }\n  }\n\n  const result = [options, plugin] as $Remark<Id, Options>\n  result.id = id\n  result.plugin = plugin\n  result.options = options\n\n  return result\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport { editorViewCtx, serializerCtx } from '@milkdown/core'\n\n/// Get content of the editor as markdown string.\nexport function getMarkdown() {\n  return (ctx: Ctx): string => {\n    const view = ctx.get(editorViewCtx)\n    const serializer = ctx.get(serializerCtx)\n\n    return serializer(view.state.doc)\n  }\n}\n","import type { SerializerState } from '@milkdown/transformer'\nimport type { Node } from '@milkdown/prose/model'\nimport { Fragment } from '@milkdown/prose/model'\n\nexport function serializeText(state: SerializerState, node: Node) {\n  const lastIsHardBreak =\n    node.childCount >= 1 && node.lastChild?.type.name === 'hardbreak'\n  if (!lastIsHardBreak) {\n    state.next(node.content)\n    return\n  }\n\n  const contentArr: Node[] = []\n  node.content.forEach((n, _, i) => {\n    if (i === node.childCount - 1) return\n\n    contentArr.push(n)\n  })\n  state.next(Fragment.fromArray(contentArr))\n}\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/preset-commonmark',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { commandsCtx, remarkStringifyOptionsCtx } from '@milkdown/core'\nimport {\n  $command,\n  $inputRule,\n  $markAttr,\n  $markSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { toggleMark } from '@milkdown/prose/commands'\nimport { markRule } from '@milkdown/prose'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for the emphasis mark.\nexport const emphasisAttr = $markAttr('emphasis')\n\nwithMeta(emphasisAttr, {\n  displayName: 'Attr<emphasis>',\n  group: 'Emphasis',\n})\n\n/// Emphasis mark schema.\nexport const emphasisSchema = $markSchema('emphasis', (ctx) => ({\n  attrs: {\n    marker: {\n      default: ctx.get(remarkStringifyOptionsCtx).emphasis || '*',\n    },\n  },\n  parseDOM: [\n    { tag: 'i' },\n    { tag: 'em' },\n    { style: 'font-style', getAttrs: (value) => (value === 'italic') as false },\n  ],\n  toDOM: (mark) => ['em', ctx.get(emphasisAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === 'emphasis',\n    runner: (state, node, markType) => {\n      state.openMark(markType, { marker: node.marker })\n      state.next(node.children)\n      state.closeMark(markType)\n    },\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === 'emphasis',\n    runner: (state, mark) => {\n      state.withMark(mark, 'emphasis', undefined, {\n        marker: mark.attrs.marker,\n      })\n    },\n  },\n}))\n\nwithMeta(emphasisSchema.mark, {\n  displayName: 'MarkSchema<emphasis>',\n  group: 'Emphasis',\n})\n\nwithMeta(emphasisSchema.ctx, {\n  displayName: 'MarkSchemaCtx<emphasis>',\n  group: 'Emphasis',\n})\n\n/// A command to toggle the emphasis mark.\nexport const toggleEmphasisCommand = $command('ToggleEmphasis', (ctx) => () => {\n  return toggleMark(emphasisSchema.type(ctx))\n})\n\nwithMeta(toggleEmphasisCommand, {\n  displayName: 'Command<toggleEmphasisCommand>',\n  group: 'Emphasis',\n})\n\n/// Input rule for use `*` to create emphasis mark.\nexport const emphasisStarInputRule = $inputRule((ctx) => {\n  return markRule(/(?:^|[^*])\\*([^*]+)\\*$/, emphasisSchema.type(ctx), {\n    getAttr: () => ({\n      marker: '*',\n    }),\n    updateCaptured: ({ fullMatch, start }) =>\n      !fullMatch.startsWith('*')\n        ? { fullMatch: fullMatch.slice(1), start: start + 1 }\n        : {},\n  })\n})\n\nwithMeta(emphasisStarInputRule, {\n  displayName: 'InputRule<emphasis>|Star',\n  group: 'Emphasis',\n})\n\n/// Input rule for use `_` to create emphasis mark.\nexport const emphasisUnderscoreInputRule = $inputRule((ctx) => {\n  return markRule(/(?:^|[^_])_([^_]+)_$/, emphasisSchema.type(ctx), {\n    getAttr: () => ({\n      marker: '_',\n    }),\n    updateCaptured: ({ fullMatch, start }) =>\n      !fullMatch.startsWith('_')\n        ? { fullMatch: fullMatch.slice(1), start: start + 1 }\n        : {},\n  })\n})\n\nwithMeta(emphasisUnderscoreInputRule, {\n  displayName: 'InputRule<emphasis>|Underscore',\n  group: 'Emphasis',\n})\n\n/// Keymap for the emphasis mark.\n/// - `Mod-i` - Toggle the emphasis mark.\nexport const emphasisKeymap = $useKeymap('emphasisKeymap', {\n  ToggleEmphasis: {\n    shortcuts: 'Mod-i',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(toggleEmphasisCommand.key)\n    },\n  },\n})\n\nwithMeta(emphasisKeymap.ctx, {\n  displayName: 'KeymapCtx<emphasis>',\n  group: 'Emphasis',\n})\n\nwithMeta(emphasisKeymap.shortcuts, {\n  displayName: 'Keymap<emphasis>',\n  group: 'Emphasis',\n})\n","import { commandsCtx, remarkStringifyOptionsCtx } from '@milkdown/core'\nimport {\n  $command,\n  $inputRule,\n  $markAttr,\n  $markSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { toggleMark } from '@milkdown/prose/commands'\nimport { markRule } from '@milkdown/prose'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for the strong mark.\nexport const strongAttr = $markAttr('strong')\n\nwithMeta(strongAttr, {\n  displayName: 'Attr<strong>',\n  group: 'Strong',\n})\n\n/// Strong mark schema.\nexport const strongSchema = $markSchema('strong', (ctx) => ({\n  attrs: {\n    marker: {\n      default: ctx.get(remarkStringifyOptionsCtx).strong || '*',\n    },\n  },\n  parseDOM: [\n    { tag: 'b' },\n    { tag: 'strong' },\n    { style: 'font-style', getAttrs: (value) => (value === 'bold') as false },\n  ],\n  toDOM: (mark) => ['strong', ctx.get(strongAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === 'strong',\n    runner: (state, node, markType) => {\n      state.openMark(markType, { marker: node.marker })\n      state.next(node.children)\n      state.closeMark(markType)\n    },\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === 'strong',\n    runner: (state, mark) => {\n      state.withMark(mark, 'strong', undefined, {\n        marker: mark.attrs.marker,\n      })\n    },\n  },\n}))\n\nwithMeta(strongSchema.mark, {\n  displayName: 'MarkSchema<strong>',\n  group: 'Strong',\n})\n\nwithMeta(strongSchema.ctx, {\n  displayName: 'MarkSchemaCtx<strong>',\n  group: 'Strong',\n})\n\n/// A command to toggle the strong mark.\nexport const toggleStrongCommand = $command('ToggleStrong', (ctx) => () => {\n  return toggleMark(strongSchema.type(ctx))\n})\n\nwithMeta(toggleStrongCommand, {\n  displayName: 'Command<toggleStrongCommand>',\n  group: 'Strong',\n})\n\n/// A input rule that will capture the strong mark.\nexport const strongInputRule = $inputRule((ctx) => {\n  return markRule(/(?:\\*\\*|__)([^*_]+)(?:\\*\\*|__)$/, strongSchema.type(ctx), {\n    getAttr: (match) => {\n      return {\n        marker: match[0].startsWith('*') ? '*' : '_',\n      }\n    },\n  })\n})\n\nwithMeta(strongInputRule, {\n  displayName: 'InputRule<strong>',\n  group: 'Strong',\n})\n\n/// Keymap for the strong mark.\n/// - `Mod-b` - Toggle the strong mark.\nexport const strongKeymap = $useKeymap('strongKeymap', {\n  ToggleBold: {\n    shortcuts: ['Mod-b'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(toggleStrongCommand.key)\n    },\n  },\n})\n\nwithMeta(strongKeymap.ctx, {\n  displayName: 'KeymapCtx<strong>',\n  group: 'Strong',\n})\n\nwithMeta(strongKeymap.shortcuts, {\n  displayName: 'Keymap<strong>',\n  group: 'Strong',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport type { MarkType } from '@milkdown/prose/model'\nimport {\n  $command,\n  $inputRule,\n  $markAttr,\n  $markSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { markRule } from '@milkdown/prose'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for the inlineCode mark.\nexport const inlineCodeAttr = $markAttr('inlineCode')\n\nwithMeta(inlineCodeAttr, {\n  displayName: 'Attr<inlineCode>',\n  group: 'InlineCode',\n})\n\n/// InlineCode mark schema.\nexport const inlineCodeSchema = $markSchema('inlineCode', (ctx) => ({\n  priority: 100,\n  code: true,\n  inclusive: false,\n  parseDOM: [{ tag: 'code' }],\n  toDOM: (mark) => ['code', ctx.get(inlineCodeAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === 'inlineCode',\n    runner: (state, node, markType) => {\n      state.openMark(markType)\n      state.addText(node.value as string)\n      state.closeMark(markType)\n    },\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === 'inlineCode',\n    runner: (state, mark, node) => {\n      state.withMark(mark, 'inlineCode', node.text || '')\n    },\n  },\n}))\n\nwithMeta(inlineCodeSchema.mark, {\n  displayName: 'MarkSchema<inlineCode>',\n  group: 'InlineCode',\n})\n\nwithMeta(inlineCodeSchema.ctx, {\n  displayName: 'MarkSchemaCtx<inlineCode>',\n  group: 'InlineCode',\n})\n\n/// A command to toggle the inlineCode mark.\nexport const toggleInlineCodeCommand = $command(\n  'ToggleInlineCode',\n  (ctx) => () => (state, dispatch) => {\n    const { selection, tr } = state\n    if (selection.empty) return false\n    const { from, to } = selection\n\n    const has = state.doc.rangeHasMark(from, to, inlineCodeSchema.type(ctx))\n    // remove exists inlineCode mark if have\n    if (has) {\n      dispatch?.(tr.removeMark(from, to, inlineCodeSchema.type(ctx)))\n      return true\n    }\n\n    const restMarksName = Object.keys(state.schema.marks).filter(\n      (x) => x !== inlineCodeSchema.type.name\n    )\n\n    // remove other marks\n    restMarksName\n      .map((name) => state.schema.marks[name] as MarkType)\n      .forEach((t) => {\n        tr.removeMark(from, to, t)\n      })\n\n    // add inlineCode mark\n    dispatch?.(tr.addMark(from, to, inlineCodeSchema.type(ctx).create()))\n    return true\n  }\n)\n\nwithMeta(toggleInlineCodeCommand, {\n  displayName: 'Command<toggleInlineCodeCommand>',\n  group: 'InlineCode',\n})\n\n/// Input rule for create inlineCode mark.\nexport const inlineCodeInputRule = $inputRule((ctx) => {\n  return markRule(/(?:`)([^`]+)(?:`)$/, inlineCodeSchema.type(ctx))\n})\n\nwithMeta(inlineCodeInputRule, {\n  displayName: 'InputRule<inlineCodeInputRule>',\n  group: 'InlineCode',\n})\n\n/// Keymap for the inlineCode mark.\n/// - `Mod-e` - Toggle the inlineCode mark.\nexport const inlineCodeKeymap = $useKeymap('inlineCodeKeymap', {\n  ToggleInlineCode: {\n    shortcuts: 'Mod-e',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(toggleInlineCodeCommand.key)\n    },\n  },\n})\n\nwithMeta(inlineCodeKeymap.ctx, {\n  displayName: 'KeymapCtx<inlineCode>',\n  group: 'InlineCode',\n})\n\nwithMeta(inlineCodeKeymap.shortcuts, {\n  displayName: 'Keymap<inlineCode>',\n  group: 'InlineCode',\n})\n","import { expectDomTypeError } from '@milkdown/exception'\nimport { toggleMark } from '@milkdown/prose/commands'\nimport type { Node as ProseNode } from '@milkdown/prose/model'\nimport { TextSelection } from '@milkdown/prose/state'\nimport { $command, $markAttr, $markSchema } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for the link mark.\nexport const linkAttr = $markAttr('link')\n\nwithMeta(linkAttr, {\n  displayName: 'Attr<link>',\n  group: 'Link',\n})\n\n/// Link mark schema.\nexport const linkSchema = $markSchema('link', (ctx) => ({\n  attrs: {\n    href: {},\n    title: { default: null },\n  },\n  parseDOM: [\n    {\n      tag: 'a[href]',\n      getAttrs: (dom) => {\n        if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n        return {\n          href: dom.getAttribute('href'),\n          title: dom.getAttribute('title'),\n        }\n      },\n    },\n  ],\n  toDOM: (mark) => ['a', { ...ctx.get(linkAttr.key)(mark), ...mark.attrs }],\n  parseMarkdown: {\n    match: (node) => node.type === 'link',\n    runner: (state, node, markType) => {\n      const url = node.url as string\n      const title = node.title as string\n      state.openMark(markType, { href: url, title })\n      state.next(node.children)\n      state.closeMark(markType)\n    },\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === 'link',\n    runner: (state, mark) => {\n      state.withMark(mark, 'link', undefined, {\n        title: mark.attrs.title,\n        url: mark.attrs.href,\n      })\n    },\n  },\n}))\n\nwithMeta(linkSchema.mark, {\n  displayName: 'MarkSchema<link>',\n  group: 'Link',\n})\n\n/// @internal\nexport interface UpdateLinkCommandPayload {\n  href?: string\n  title?: string\n}\n/// A command to toggle the link mark.\n/// You can pass the `href` and `title` to the link.\nexport const toggleLinkCommand = $command(\n  'ToggleLink',\n  (ctx) =>\n    (payload: UpdateLinkCommandPayload = {}) =>\n      toggleMark(linkSchema.type(ctx), payload)\n)\n\nwithMeta(toggleLinkCommand, {\n  displayName: 'Command<toggleLinkCommand>',\n  group: 'Link',\n})\n\n/// A command to update the link mark.\n/// You can pass the `href` and `title` to update the link.\nexport const updateLinkCommand = $command(\n  'UpdateLink',\n  (ctx) =>\n    (payload: UpdateLinkCommandPayload = {}) =>\n    (state, dispatch) => {\n      if (!dispatch) return false\n\n      let node: ProseNode | undefined\n      let pos = -1\n      const { selection } = state\n      const { from, to } = selection\n      state.doc.nodesBetween(from, from === to ? to + 1 : to, (n, p) => {\n        if (linkSchema.type(ctx).isInSet(n.marks)) {\n          node = n\n          pos = p\n          return false\n        }\n\n        return undefined\n      })\n\n      if (!node) return false\n\n      const mark = node.marks.find(({ type }) => type === linkSchema.type(ctx))\n      if (!mark) return false\n\n      const start = pos\n      const end = pos + node.nodeSize\n      const { tr } = state\n      const linkMark = linkSchema\n        .type(ctx)\n        .create({ ...mark.attrs, ...payload })\n      if (!linkMark) return false\n\n      dispatch(\n        tr\n          .removeMark(start, end, mark)\n          .addMark(start, end, linkMark)\n          .setSelection(new TextSelection(tr.selection.$anchor))\n          .scrollIntoView()\n      )\n\n      return true\n    }\n)\n\nwithMeta(updateLinkCommand, {\n  displayName: 'Command<updateLinkCommand>',\n  group: 'Link',\n})\n","import { $node } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// The top-level document node.\nexport const docSchema = $node('doc', () => ({\n  content: 'block+',\n  parseMarkdown: {\n    match: ({ type }) => type === 'root',\n    runner: (state, node, type) => {\n      state.injectRoot(node, type)\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'doc',\n    runner: (state, node) => {\n      state.openNode('root')\n      state.next(node.content)\n    },\n  },\n}))\n\nwithMeta(docSchema, {\n  displayName: 'NodeSchema<doc>',\n  group: 'Doc',\n})\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","const replacements = [\n\t// German umlauts\n\t['ß', 'ss'],\n\t['ẞ', 'Ss'],\n\t['ä', 'ae'],\n\t['Ä', 'Ae'],\n\t['ö', 'oe'],\n\t['Ö', 'Oe'],\n\t['ü', 'ue'],\n\t['Ü', 'Ue'],\n\n\t// Latin\n\t['À', 'A'],\n\t['Á', 'A'],\n\t['Â', 'A'],\n\t['Ã', 'A'],\n\t['Ä', 'Ae'],\n\t['Å', 'A'],\n\t['Æ', 'AE'],\n\t['Ç', 'C'],\n\t['È', 'E'],\n\t['É', 'E'],\n\t['Ê', 'E'],\n\t['Ë', 'E'],\n\t['Ì', 'I'],\n\t['Í', 'I'],\n\t['Î', 'I'],\n\t['Ï', 'I'],\n\t['Ð', 'D'],\n\t['Ñ', 'N'],\n\t['Ò', 'O'],\n\t['Ó', 'O'],\n\t['Ô', 'O'],\n\t['Õ', 'O'],\n\t['Ö', 'Oe'],\n\t['Ő', 'O'],\n\t['Ø', 'O'],\n\t['Ù', 'U'],\n\t['Ú', 'U'],\n\t['Û', 'U'],\n\t['Ü', 'Ue'],\n\t['Ű', 'U'],\n\t['Ý', 'Y'],\n\t['Þ', 'TH'],\n\t['ß', 'ss'],\n\t['à', 'a'],\n\t['á', 'a'],\n\t['â', 'a'],\n\t['ã', 'a'],\n\t['ä', 'ae'],\n\t['å', 'a'],\n\t['æ', 'ae'],\n\t['ç', 'c'],\n\t['è', 'e'],\n\t['é', 'e'],\n\t['ê', 'e'],\n\t['ë', 'e'],\n\t['ì', 'i'],\n\t['í', 'i'],\n\t['î', 'i'],\n\t['ï', 'i'],\n\t['ð', 'd'],\n\t['ñ', 'n'],\n\t['ò', 'o'],\n\t['ó', 'o'],\n\t['ô', 'o'],\n\t['õ', 'o'],\n\t['ö', 'oe'],\n\t['ő', 'o'],\n\t['ø', 'o'],\n\t['ù', 'u'],\n\t['ú', 'u'],\n\t['û', 'u'],\n\t['ü', 'ue'],\n\t['ű', 'u'],\n\t['ý', 'y'],\n\t['þ', 'th'],\n\t['ÿ', 'y'],\n\t['ẞ', 'SS'],\n\n\t// Vietnamese\n\t['à', 'a'],\n\t['À', 'A'],\n\t['á', 'a'],\n\t['Á', 'A'],\n\t['â', 'a'],\n\t['Â', 'A'],\n\t['ã', 'a'],\n\t['Ã', 'A'],\n\t['è', 'e'],\n\t['È', 'E'],\n\t['é', 'e'],\n\t['É', 'E'],\n\t['ê', 'e'],\n\t['Ê', 'E'],\n\t['ì', 'i'],\n\t['Ì', 'I'],\n\t['í', 'i'],\n\t['Í', 'I'],\n\t['ò', 'o'],\n\t['Ò', 'O'],\n\t['ó', 'o'],\n\t['Ó', 'O'],\n\t['ô', 'o'],\n\t['Ô', 'O'],\n\t['õ', 'o'],\n\t['Õ', 'O'],\n\t['ù', 'u'],\n\t['Ù', 'U'],\n\t['ú', 'u'],\n\t['Ú', 'U'],\n\t['ý', 'y'],\n\t['Ý', 'Y'],\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['Đ', 'D'],\n\t['đ', 'd'],\n\t['ĩ', 'i'],\n\t['Ĩ', 'I'],\n\t['ũ', 'u'],\n\t['Ũ', 'U'],\n\t['ơ', 'o'],\n\t['Ơ', 'O'],\n\t['ư', 'u'],\n\t['Ư', 'U'],\n\t['ạ', 'a'],\n\t['Ạ', 'A'],\n\t['ả', 'a'],\n\t['Ả', 'A'],\n\t['ấ', 'a'],\n\t['Ấ', 'A'],\n\t['ầ', 'a'],\n\t['Ầ', 'A'],\n\t['ẩ', 'a'],\n\t['Ẩ', 'A'],\n\t['ẫ', 'a'],\n\t['Ẫ', 'A'],\n\t['ậ', 'a'],\n\t['Ậ', 'A'],\n\t['ắ', 'a'],\n\t['Ắ', 'A'],\n\t['ằ', 'a'],\n\t['Ằ', 'A'],\n\t['ẳ', 'a'],\n\t['Ẳ', 'A'],\n\t['ẵ', 'a'],\n\t['Ẵ', 'A'],\n\t['ặ', 'a'],\n\t['Ặ', 'A'],\n\t['ẹ', 'e'],\n\t['Ẹ', 'E'],\n\t['ẻ', 'e'],\n\t['Ẻ', 'E'],\n\t['ẽ', 'e'],\n\t['Ẽ', 'E'],\n\t['ế', 'e'],\n\t['Ế', 'E'],\n\t['ề', 'e'],\n\t['Ề', 'E'],\n\t['ể', 'e'],\n\t['Ể', 'E'],\n\t['ễ', 'e'],\n\t['Ễ', 'E'],\n\t['ệ', 'e'],\n\t['Ệ', 'E'],\n\t['ỉ', 'i'],\n\t['Ỉ', 'I'],\n\t['ị', 'i'],\n\t['Ị', 'I'],\n\t['ọ', 'o'],\n\t['Ọ', 'O'],\n\t['ỏ', 'o'],\n\t['Ỏ', 'O'],\n\t['ố', 'o'],\n\t['Ố', 'O'],\n\t['ồ', 'o'],\n\t['Ồ', 'O'],\n\t['ổ', 'o'],\n\t['Ổ', 'O'],\n\t['ỗ', 'o'],\n\t['Ỗ', 'O'],\n\t['ộ', 'o'],\n\t['Ộ', 'O'],\n\t['ớ', 'o'],\n\t['Ớ', 'O'],\n\t['ờ', 'o'],\n\t['Ờ', 'O'],\n\t['ở', 'o'],\n\t['Ở', 'O'],\n\t['ỡ', 'o'],\n\t['Ỡ', 'O'],\n\t['ợ', 'o'],\n\t['Ợ', 'O'],\n\t['ụ', 'u'],\n\t['Ụ', 'U'],\n\t['ủ', 'u'],\n\t['Ủ', 'U'],\n\t['ứ', 'u'],\n\t['Ứ', 'U'],\n\t['ừ', 'u'],\n\t['Ừ', 'U'],\n\t['ử', 'u'],\n\t['Ử', 'U'],\n\t['ữ', 'u'],\n\t['Ữ', 'U'],\n\t['ự', 'u'],\n\t['Ự', 'U'],\n\t['ỳ', 'y'],\n\t['Ỳ', 'Y'],\n\t['ỵ', 'y'],\n\t['Ỵ', 'Y'],\n\t['ỷ', 'y'],\n\t['Ỷ', 'Y'],\n\t['ỹ', 'y'],\n\t['Ỹ', 'Y'],\n\n\t// Arabic\n\t['ء', 'e'],\n\t['آ', 'a'],\n\t['أ', 'a'],\n\t['ؤ', 'w'],\n\t['إ', 'i'],\n\t['ئ', 'y'],\n\t['ا', 'a'],\n\t['ب', 'b'],\n\t['ة', 't'],\n\t['ت', 't'],\n\t['ث', 'th'],\n\t['ج', 'j'],\n\t['ح', 'h'],\n\t['خ', 'kh'],\n\t['د', 'd'],\n\t['ذ', 'dh'],\n\t['ر', 'r'],\n\t['ز', 'z'],\n\t['س', 's'],\n\t['ش', 'sh'],\n\t['ص', 's'],\n\t['ض', 'd'],\n\t['ط', 't'],\n\t['ظ', 'z'],\n\t['ع', 'e'],\n\t['غ', 'gh'],\n\t['ـ', '_'],\n\t['ف', 'f'],\n\t['ق', 'q'],\n\t['ك', 'k'],\n\t['ل', 'l'],\n\t['م', 'm'],\n\t['ن', 'n'],\n\t['ه', 'h'],\n\t['و', 'w'],\n\t['ى', 'a'],\n\t['ي', 'y'],\n\t['َ‎', 'a'],\n\t['ُ', 'u'],\n\t['ِ‎', 'i'],\n\t['٠', '0'],\n\t['١', '1'],\n\t['٢', '2'],\n\t['٣', '3'],\n\t['٤', '4'],\n\t['٥', '5'],\n\t['٦', '6'],\n\t['٧', '7'],\n\t['٨', '8'],\n\t['٩', '9'],\n\n\t// Persian / Farsi\n\t['چ', 'ch'],\n\t['ک', 'k'],\n\t['گ', 'g'],\n\t['پ', 'p'],\n\t['ژ', 'zh'],\n\t['ی', 'y'],\n\t['۰', '0'],\n\t['۱', '1'],\n\t['۲', '2'],\n\t['۳', '3'],\n\t['۴', '4'],\n\t['۵', '5'],\n\t['۶', '6'],\n\t['۷', '7'],\n\t['۸', '8'],\n\t['۹', '9'],\n\n\t// Pashto\n\t['ټ', 'p'],\n\t['ځ', 'z'],\n\t['څ', 'c'],\n\t['ډ', 'd'],\n\t['ﺫ', 'd'],\n\t['ﺭ', 'r'],\n\t['ړ', 'r'],\n\t['ﺯ', 'z'],\n\t['ږ', 'g'],\n\t['ښ', 'x'],\n\t['ګ', 'g'],\n\t['ڼ', 'n'],\n\t['ۀ', 'e'],\n\t['ې', 'e'],\n\t['ۍ', 'ai'],\n\n\t// Urdu\n\t['ٹ', 't'],\n\t['ڈ', 'd'],\n\t['ڑ', 'r'],\n\t['ں', 'n'],\n\t['ہ', 'h'],\n\t['ھ', 'h'],\n\t['ے', 'e'],\n\n\t// Russian\n\t['А', 'A'],\n\t['а', 'a'],\n\t['Б', 'B'],\n\t['б', 'b'],\n\t['В', 'V'],\n\t['в', 'v'],\n\t['Г', 'G'],\n\t['г', 'g'],\n\t['Д', 'D'],\n\t['д', 'd'],\n\t['ъе', 'ye'],\n\t['Ъе', 'Ye'],\n\t['ъЕ', 'yE'],\n\t['ЪЕ', 'YE'],\n\t['Е', 'E'],\n\t['е', 'e'],\n\t['Ё', 'Yo'],\n\t['ё', 'yo'],\n\t['Ж', 'Zh'],\n\t['ж', 'zh'],\n\t['З', 'Z'],\n\t['з', 'z'],\n\t['И', 'I'],\n\t['и', 'i'],\n\t['ый', 'iy'],\n\t['Ый', 'Iy'],\n\t['ЫЙ', 'IY'],\n\t['ыЙ', 'iY'],\n\t['Й', 'Y'],\n\t['й', 'y'],\n\t['К', 'K'],\n\t['к', 'k'],\n\t['Л', 'L'],\n\t['л', 'l'],\n\t['М', 'M'],\n\t['м', 'm'],\n\t['Н', 'N'],\n\t['н', 'n'],\n\t['О', 'O'],\n\t['о', 'o'],\n\t['П', 'P'],\n\t['п', 'p'],\n\t['Р', 'R'],\n\t['р', 'r'],\n\t['С', 'S'],\n\t['с', 's'],\n\t['Т', 'T'],\n\t['т', 't'],\n\t['У', 'U'],\n\t['у', 'u'],\n\t['Ф', 'F'],\n\t['ф', 'f'],\n\t['Х', 'Kh'],\n\t['х', 'kh'],\n\t['Ц', 'Ts'],\n\t['ц', 'ts'],\n\t['Ч', 'Ch'],\n\t['ч', 'ch'],\n\t['Ш', 'Sh'],\n\t['ш', 'sh'],\n\t['Щ', 'Sch'],\n\t['щ', 'sch'],\n\t['Ъ', ''],\n\t['ъ', ''],\n\t['Ы', 'Y'],\n\t['ы', 'y'],\n\t['Ь', ''],\n\t['ь', ''],\n\t['Э', 'E'],\n\t['э', 'e'],\n\t['Ю', 'Yu'],\n\t['ю', 'yu'],\n\t['Я', 'Ya'],\n\t['я', 'ya'],\n\n\t// Romanian\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['ș', 's'],\n\t['Ș', 'S'],\n\t['ț', 't'],\n\t['Ț', 'T'],\n\t['ţ', 't'],\n\t['Ţ', 'T'],\n\n\t// Turkish\n\t['ş', 's'],\n\t['Ş', 'S'],\n\t['ç', 'c'],\n\t['Ç', 'C'],\n\t['ğ', 'g'],\n\t['Ğ', 'G'],\n\t['ı', 'i'],\n\t['İ', 'I'],\n\n\t// Armenian\n\t['ա', 'a'],\n\t['Ա', 'A'],\n\t['բ', 'b'],\n\t['Բ', 'B'],\n\t['գ', 'g'],\n\t['Գ', 'G'],\n\t['դ', 'd'],\n\t['Դ', 'D'],\n\t['ե', 'ye'],\n\t['Ե', 'Ye'],\n\t['զ', 'z'],\n\t['Զ', 'Z'],\n\t['է', 'e'],\n\t['Է', 'E'],\n\t['ը', 'y'],\n\t['Ը', 'Y'],\n\t['թ', 't'],\n\t['Թ', 'T'],\n\t['ժ', 'zh'],\n\t['Ժ', 'Zh'],\n\t['ի', 'i'],\n\t['Ի', 'I'],\n\t['լ', 'l'],\n\t['Լ', 'L'],\n\t['խ', 'kh'],\n\t['Խ', 'Kh'],\n\t['ծ', 'ts'],\n\t['Ծ', 'Ts'],\n\t['կ', 'k'],\n\t['Կ', 'K'],\n\t['հ', 'h'],\n\t['Հ', 'H'],\n\t['ձ', 'dz'],\n\t['Ձ', 'Dz'],\n\t['ղ', 'gh'],\n\t['Ղ', 'Gh'],\n\t['ճ', 'tch'],\n\t['Ճ', 'Tch'],\n\t['մ', 'm'],\n\t['Մ', 'M'],\n\t['յ', 'y'],\n\t['Յ', 'Y'],\n\t['ն', 'n'],\n\t['Ն', 'N'],\n\t['շ', 'sh'],\n\t['Շ', 'Sh'],\n\t['ո', 'vo'],\n\t['Ո', 'Vo'],\n\t['չ', 'ch'],\n\t['Չ', 'Ch'],\n\t['պ', 'p'],\n\t['Պ', 'P'],\n\t['ջ', 'j'],\n\t['Ջ', 'J'],\n\t['ռ', 'r'],\n\t['Ռ', 'R'],\n\t['ս', 's'],\n\t['Ս', 'S'],\n\t['վ', 'v'],\n\t['Վ', 'V'],\n\t['տ', 't'],\n\t['Տ', 'T'],\n\t['ր', 'r'],\n\t['Ր', 'R'],\n\t['ց', 'c'],\n\t['Ց', 'C'],\n\t['ու', 'u'],\n\t['ՈՒ', 'U'],\n\t['Ու', 'U'],\n\t['փ', 'p'],\n\t['Փ', 'P'],\n\t['ք', 'q'],\n\t['Ք', 'Q'],\n\t['օ', 'o'],\n\t['Օ', 'O'],\n\t['ֆ', 'f'],\n\t['Ֆ', 'F'],\n\t['և', 'yev'],\n\n\t// Georgian\n\t['ა', 'a'],\n\t['ბ', 'b'],\n\t['გ', 'g'],\n\t['დ', 'd'],\n\t['ე', 'e'],\n\t['ვ', 'v'],\n\t['ზ', 'z'],\n\t['თ', 't'],\n\t['ი', 'i'],\n\t['კ', 'k'],\n\t['ლ', 'l'],\n\t['მ', 'm'],\n\t['ნ', 'n'],\n\t['ო', 'o'],\n\t['პ', 'p'],\n\t['ჟ', 'zh'],\n\t['რ', 'r'],\n\t['ს', 's'],\n\t['ტ', 't'],\n\t['უ', 'u'],\n\t['ფ', 'ph'],\n\t['ქ', 'q'],\n\t['ღ', 'gh'],\n\t['ყ', 'k'],\n\t['შ', 'sh'],\n\t['ჩ', 'ch'],\n\t['ც', 'ts'],\n\t['ძ', 'dz'],\n\t['წ', 'ts'],\n\t['ჭ', 'tch'],\n\t['ხ', 'kh'],\n\t['ჯ', 'j'],\n\t['ჰ', 'h'],\n\n\t// Czech\n\t['č', 'c'],\n\t['ď', 'd'],\n\t['ě', 'e'],\n\t['ň', 'n'],\n\t['ř', 'r'],\n\t['š', 's'],\n\t['ť', 't'],\n\t['ů', 'u'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Ď', 'D'],\n\t['Ě', 'E'],\n\t['Ň', 'N'],\n\t['Ř', 'R'],\n\t['Š', 'S'],\n\t['Ť', 'T'],\n\t['Ů', 'U'],\n\t['Ž', 'Z'],\n\n\t// Dhivehi\n\t['ހ', 'h'],\n\t['ށ', 'sh'],\n\t['ނ', 'n'],\n\t['ރ', 'r'],\n\t['ބ', 'b'],\n\t['ޅ', 'lh'],\n\t['ކ', 'k'],\n\t['އ', 'a'],\n\t['ވ', 'v'],\n\t['މ', 'm'],\n\t['ފ', 'f'],\n\t['ދ', 'dh'],\n\t['ތ', 'th'],\n\t['ލ', 'l'],\n\t['ގ', 'g'],\n\t['ޏ', 'gn'],\n\t['ސ', 's'],\n\t['ޑ', 'd'],\n\t['ޒ', 'z'],\n\t['ޓ', 't'],\n\t['ޔ', 'y'],\n\t['ޕ', 'p'],\n\t['ޖ', 'j'],\n\t['ޗ', 'ch'],\n\t['ޘ', 'tt'],\n\t['ޙ', 'hh'],\n\t['ޚ', 'kh'],\n\t['ޛ', 'th'],\n\t['ޜ', 'z'],\n\t['ޝ', 'sh'],\n\t['ޞ', 's'],\n\t['ޟ', 'd'],\n\t['ޠ', 't'],\n\t['ޡ', 'z'],\n\t['ޢ', 'a'],\n\t['ޣ', 'gh'],\n\t['ޤ', 'q'],\n\t['ޥ', 'w'],\n\t['ަ', 'a'],\n\t['ާ', 'aa'],\n\t['ި', 'i'],\n\t['ީ', 'ee'],\n\t['ު', 'u'],\n\t['ޫ', 'oo'],\n\t['ެ', 'e'],\n\t['ޭ', 'ey'],\n\t['ޮ', 'o'],\n\t['ޯ', 'oa'],\n\t['ް', ''],\n\n\t// Greek\n\t['α', 'a'],\n\t['β', 'v'],\n\t['γ', 'g'],\n\t['δ', 'd'],\n\t['ε', 'e'],\n\t['ζ', 'z'],\n\t['η', 'i'],\n\t['θ', 'th'],\n\t['ι', 'i'],\n\t['κ', 'k'],\n\t['λ', 'l'],\n\t['μ', 'm'],\n\t['ν', 'n'],\n\t['ξ', 'ks'],\n\t['ο', 'o'],\n\t['π', 'p'],\n\t['ρ', 'r'],\n\t['σ', 's'],\n\t['τ', 't'],\n\t['υ', 'y'],\n\t['φ', 'f'],\n\t['χ', 'x'],\n\t['ψ', 'ps'],\n\t['ω', 'o'],\n\t['ά', 'a'],\n\t['έ', 'e'],\n\t['ί', 'i'],\n\t['ό', 'o'],\n\t['ύ', 'y'],\n\t['ή', 'i'],\n\t['ώ', 'o'],\n\t['ς', 's'],\n\t['ϊ', 'i'],\n\t['ΰ', 'y'],\n\t['ϋ', 'y'],\n\t['ΐ', 'i'],\n\t['Α', 'A'],\n\t['Β', 'B'],\n\t['Γ', 'G'],\n\t['Δ', 'D'],\n\t['Ε', 'E'],\n\t['Ζ', 'Z'],\n\t['Η', 'I'],\n\t['Θ', 'TH'],\n\t['Ι', 'I'],\n\t['Κ', 'K'],\n\t['Λ', 'L'],\n\t['Μ', 'M'],\n\t['Ν', 'N'],\n\t['Ξ', 'KS'],\n\t['Ο', 'O'],\n\t['Π', 'P'],\n\t['Ρ', 'R'],\n\t['Σ', 'S'],\n\t['Τ', 'T'],\n\t['Υ', 'Y'],\n\t['Φ', 'F'],\n\t['Χ', 'X'],\n\t['Ψ', 'PS'],\n\t['Ω', 'O'],\n\t['Ά', 'A'],\n\t['Έ', 'E'],\n\t['Ί', 'I'],\n\t['Ό', 'O'],\n\t['Ύ', 'Y'],\n\t['Ή', 'I'],\n\t['Ώ', 'O'],\n\t['Ϊ', 'I'],\n\t['Ϋ', 'Y'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Hungarian\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\t// ['ü', 'u'],\n\t// ['Ü', 'U'],\n\t// ['ű', 'u'],\n\t// ['Ű', 'U'],\n\n\t// Latvian\n\t['ā', 'a'],\n\t['ē', 'e'],\n\t['ģ', 'g'],\n\t['ī', 'i'],\n\t['ķ', 'k'],\n\t['ļ', 'l'],\n\t['ņ', 'n'],\n\t['ū', 'u'],\n\t['Ā', 'A'],\n\t['Ē', 'E'],\n\t['Ģ', 'G'],\n\t['Ī', 'I'],\n\t['Ķ', 'K'],\n\t['Ļ', 'L'],\n\t['Ņ', 'N'],\n\t['Ū', 'U'],\n\t['č', 'c'],\n\t['š', 's'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Š', 'S'],\n\t['Ž', 'Z'],\n\n\t// Lithuanian\n\t['ą', 'a'],\n\t['č', 'c'],\n\t['ę', 'e'],\n\t['ė', 'e'],\n\t['į', 'i'],\n\t['š', 's'],\n\t['ų', 'u'],\n\t['ū', 'u'],\n\t['ž', 'z'],\n\t['Ą', 'A'],\n\t['Č', 'C'],\n\t['Ę', 'E'],\n\t['Ė', 'E'],\n\t['Į', 'I'],\n\t['Š', 'S'],\n\t['Ų', 'U'],\n\t['Ū', 'U'],\n\n\t// Macedonian\n\t['Ќ', 'Kj'],\n\t['ќ', 'kj'],\n\t['Љ', 'Lj'],\n\t['љ', 'lj'],\n\t['Њ', 'Nj'],\n\t['њ', 'nj'],\n\t['Тс', 'Ts'],\n\t['тс', 'ts'],\n\n\t// Polish\n\t['ą', 'a'],\n\t['ć', 'c'],\n\t['ę', 'e'],\n\t['ł', 'l'],\n\t['ń', 'n'],\n\t['ś', 's'],\n\t['ź', 'z'],\n\t['ż', 'z'],\n\t['Ą', 'A'],\n\t['Ć', 'C'],\n\t['Ę', 'E'],\n\t['Ł', 'L'],\n\t['Ń', 'N'],\n\t['Ś', 'S'],\n\t['Ź', 'Z'],\n\t['Ż', 'Z'],\n\n\t// Disabled as it conflicts with Vietnamese.\n\t// Serbian\n\t// ['љ', 'lj'],\n\t// ['њ', 'nj'],\n\t// ['Љ', 'Lj'],\n\t// ['Њ', 'Nj'],\n\t// ['đ', 'dj'],\n\t// ['Đ', 'Dj'],\n\t// ['ђ', 'dj'],\n\t// ['ј', 'j'],\n\t// ['ћ', 'c'],\n\t// ['џ', 'dz'],\n\t// ['Ђ', 'Dj'],\n\t// ['Ј', 'j'],\n\t// ['Ћ', 'C'],\n\t// ['Џ', 'Dz'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Slovak\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ľ', 'l'],\n\t// ['ĺ', 'l'],\n\t// ['ŕ', 'r'],\n\t// ['Ľ', 'L'],\n\t// ['Ĺ', 'L'],\n\t// ['Ŕ', 'R'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Swedish\n\t// ['å', 'o'],\n\t// ['Å', 'o'],\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ë', 'e'],\n\t// ['Ë', 'E'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\n\t// Ukrainian\n\t['Є', 'Ye'],\n\t['І', 'I'],\n\t['Ї', 'Yi'],\n\t['Ґ', 'G'],\n\t['є', 'ye'],\n\t['і', 'i'],\n\t['ї', 'yi'],\n\t['ґ', 'g'],\n\n\t// Dutch\n\t['Ĳ', 'IJ'],\n\t['ĳ', 'ij'],\n\n\t// Danish\n\t// ['Æ', 'Ae'],\n\t// ['Ø', 'Oe'],\n\t// ['Å', 'Aa'],\n\t// ['æ', 'ae'],\n\t// ['ø', 'oe'],\n\t// ['å', 'aa']\n\n\t// Currencies\n\t['¢', 'c'],\n\t['¥', 'Y'],\n\t['߿', 'b'],\n\t['৳', 't'],\n\t['૱', 'Bo'],\n\t['฿', 'B'],\n\t['₠', 'CE'],\n\t['₡', 'C'],\n\t['₢', 'Cr'],\n\t['₣', 'F'],\n\t['₥', 'm'],\n\t['₦', 'N'],\n\t['₧', 'Pt'],\n\t['₨', 'Rs'],\n\t['₩', 'W'],\n\t['₫', 's'],\n\t['€', 'E'],\n\t['₭', 'K'],\n\t['₮', 'T'],\n\t['₯', 'Dp'],\n\t['₰', 'S'],\n\t['₱', 'P'],\n\t['₲', 'G'],\n\t['₳', 'A'],\n\t['₴', 'S'],\n\t['₵', 'C'],\n\t['₶', 'tt'],\n\t['₷', 'S'],\n\t['₸', 'T'],\n\t['₹', 'R'],\n\t['₺', 'L'],\n\t['₽', 'P'],\n\t['₿', 'B'],\n\t['﹩', '$'],\n\t['￠', 'c'],\n\t['￥', 'Y'],\n\t['￦', 'W'],\n\n\t// Latin\n\t['𝐀', 'A'],\n\t['𝐁', 'B'],\n\t['𝐂', 'C'],\n\t['𝐃', 'D'],\n\t['𝐄', 'E'],\n\t['𝐅', 'F'],\n\t['𝐆', 'G'],\n\t['𝐇', 'H'],\n\t['𝐈', 'I'],\n\t['𝐉', 'J'],\n\t['𝐊', 'K'],\n\t['𝐋', 'L'],\n\t['𝐌', 'M'],\n\t['𝐍', 'N'],\n\t['𝐎', 'O'],\n\t['𝐏', 'P'],\n\t['𝐐', 'Q'],\n\t['𝐑', 'R'],\n\t['𝐒', 'S'],\n\t['𝐓', 'T'],\n\t['𝐔', 'U'],\n\t['𝐕', 'V'],\n\t['𝐖', 'W'],\n\t['𝐗', 'X'],\n\t['𝐘', 'Y'],\n\t['𝐙', 'Z'],\n\t['𝐚', 'a'],\n\t['𝐛', 'b'],\n\t['𝐜', 'c'],\n\t['𝐝', 'd'],\n\t['𝐞', 'e'],\n\t['𝐟', 'f'],\n\t['𝐠', 'g'],\n\t['𝐡', 'h'],\n\t['𝐢', 'i'],\n\t['𝐣', 'j'],\n\t['𝐤', 'k'],\n\t['𝐥', 'l'],\n\t['𝐦', 'm'],\n\t['𝐧', 'n'],\n\t['𝐨', 'o'],\n\t['𝐩', 'p'],\n\t['𝐪', 'q'],\n\t['𝐫', 'r'],\n\t['𝐬', 's'],\n\t['𝐭', 't'],\n\t['𝐮', 'u'],\n\t['𝐯', 'v'],\n\t['𝐰', 'w'],\n\t['𝐱', 'x'],\n\t['𝐲', 'y'],\n\t['𝐳', 'z'],\n\t['𝐴', 'A'],\n\t['𝐵', 'B'],\n\t['𝐶', 'C'],\n\t['𝐷', 'D'],\n\t['𝐸', 'E'],\n\t['𝐹', 'F'],\n\t['𝐺', 'G'],\n\t['𝐻', 'H'],\n\t['𝐼', 'I'],\n\t['𝐽', 'J'],\n\t['𝐾', 'K'],\n\t['𝐿', 'L'],\n\t['𝑀', 'M'],\n\t['𝑁', 'N'],\n\t['𝑂', 'O'],\n\t['𝑃', 'P'],\n\t['𝑄', 'Q'],\n\t['𝑅', 'R'],\n\t['𝑆', 'S'],\n\t['𝑇', 'T'],\n\t['𝑈', 'U'],\n\t['𝑉', 'V'],\n\t['𝑊', 'W'],\n\t['𝑋', 'X'],\n\t['𝑌', 'Y'],\n\t['𝑍', 'Z'],\n\t['𝑎', 'a'],\n\t['𝑏', 'b'],\n\t['𝑐', 'c'],\n\t['𝑑', 'd'],\n\t['𝑒', 'e'],\n\t['𝑓', 'f'],\n\t['𝑔', 'g'],\n\t['𝑖', 'i'],\n\t['𝑗', 'j'],\n\t['𝑘', 'k'],\n\t['𝑙', 'l'],\n\t['𝑚', 'm'],\n\t['𝑛', 'n'],\n\t['𝑜', 'o'],\n\t['𝑝', 'p'],\n\t['𝑞', 'q'],\n\t['𝑟', 'r'],\n\t['𝑠', 's'],\n\t['𝑡', 't'],\n\t['𝑢', 'u'],\n\t['𝑣', 'v'],\n\t['𝑤', 'w'],\n\t['𝑥', 'x'],\n\t['𝑦', 'y'],\n\t['𝑧', 'z'],\n\t['𝑨', 'A'],\n\t['𝑩', 'B'],\n\t['𝑪', 'C'],\n\t['𝑫', 'D'],\n\t['𝑬', 'E'],\n\t['𝑭', 'F'],\n\t['𝑮', 'G'],\n\t['𝑯', 'H'],\n\t['𝑰', 'I'],\n\t['𝑱', 'J'],\n\t['𝑲', 'K'],\n\t['𝑳', 'L'],\n\t['𝑴', 'M'],\n\t['𝑵', 'N'],\n\t['𝑶', 'O'],\n\t['𝑷', 'P'],\n\t['𝑸', 'Q'],\n\t['𝑹', 'R'],\n\t['𝑺', 'S'],\n\t['𝑻', 'T'],\n\t['𝑼', 'U'],\n\t['𝑽', 'V'],\n\t['𝑾', 'W'],\n\t['𝑿', 'X'],\n\t['𝒀', 'Y'],\n\t['𝒁', 'Z'],\n\t['𝒂', 'a'],\n\t['𝒃', 'b'],\n\t['𝒄', 'c'],\n\t['𝒅', 'd'],\n\t['𝒆', 'e'],\n\t['𝒇', 'f'],\n\t['𝒈', 'g'],\n\t['𝒉', 'h'],\n\t['𝒊', 'i'],\n\t['𝒋', 'j'],\n\t['𝒌', 'k'],\n\t['𝒍', 'l'],\n\t['𝒎', 'm'],\n\t['𝒏', 'n'],\n\t['𝒐', 'o'],\n\t['𝒑', 'p'],\n\t['𝒒', 'q'],\n\t['𝒓', 'r'],\n\t['𝒔', 's'],\n\t['𝒕', 't'],\n\t['𝒖', 'u'],\n\t['𝒗', 'v'],\n\t['𝒘', 'w'],\n\t['𝒙', 'x'],\n\t['𝒚', 'y'],\n\t['𝒛', 'z'],\n\t['𝒜', 'A'],\n\t['𝒞', 'C'],\n\t['𝒟', 'D'],\n\t['𝒢', 'g'],\n\t['𝒥', 'J'],\n\t['𝒦', 'K'],\n\t['𝒩', 'N'],\n\t['𝒪', 'O'],\n\t['𝒫', 'P'],\n\t['𝒬', 'Q'],\n\t['𝒮', 'S'],\n\t['𝒯', 'T'],\n\t['𝒰', 'U'],\n\t['𝒱', 'V'],\n\t['𝒲', 'W'],\n\t['𝒳', 'X'],\n\t['𝒴', 'Y'],\n\t['𝒵', 'Z'],\n\t['𝒶', 'a'],\n\t['𝒷', 'b'],\n\t['𝒸', 'c'],\n\t['𝒹', 'd'],\n\t['𝒻', 'f'],\n\t['𝒽', 'h'],\n\t['𝒾', 'i'],\n\t['𝒿', 'j'],\n\t['𝓀', 'h'],\n\t['𝓁', 'l'],\n\t['𝓂', 'm'],\n\t['𝓃', 'n'],\n\t['𝓅', 'p'],\n\t['𝓆', 'q'],\n\t['𝓇', 'r'],\n\t['𝓈', 's'],\n\t['𝓉', 't'],\n\t['𝓊', 'u'],\n\t['𝓋', 'v'],\n\t['𝓌', 'w'],\n\t['𝓍', 'x'],\n\t['𝓎', 'y'],\n\t['𝓏', 'z'],\n\t['𝓐', 'A'],\n\t['𝓑', 'B'],\n\t['𝓒', 'C'],\n\t['𝓓', 'D'],\n\t['𝓔', 'E'],\n\t['𝓕', 'F'],\n\t['𝓖', 'G'],\n\t['𝓗', 'H'],\n\t['𝓘', 'I'],\n\t['𝓙', 'J'],\n\t['𝓚', 'K'],\n\t['𝓛', 'L'],\n\t['𝓜', 'M'],\n\t['𝓝', 'N'],\n\t['𝓞', 'O'],\n\t['𝓟', 'P'],\n\t['𝓠', 'Q'],\n\t['𝓡', 'R'],\n\t['𝓢', 'S'],\n\t['𝓣', 'T'],\n\t['𝓤', 'U'],\n\t['𝓥', 'V'],\n\t['𝓦', 'W'],\n\t['𝓧', 'X'],\n\t['𝓨', 'Y'],\n\t['𝓩', 'Z'],\n\t['𝓪', 'a'],\n\t['𝓫', 'b'],\n\t['𝓬', 'c'],\n\t['𝓭', 'd'],\n\t['𝓮', 'e'],\n\t['𝓯', 'f'],\n\t['𝓰', 'g'],\n\t['𝓱', 'h'],\n\t['𝓲', 'i'],\n\t['𝓳', 'j'],\n\t['𝓴', 'k'],\n\t['𝓵', 'l'],\n\t['𝓶', 'm'],\n\t['𝓷', 'n'],\n\t['𝓸', 'o'],\n\t['𝓹', 'p'],\n\t['𝓺', 'q'],\n\t['𝓻', 'r'],\n\t['𝓼', 's'],\n\t['𝓽', 't'],\n\t['𝓾', 'u'],\n\t['𝓿', 'v'],\n\t['𝔀', 'w'],\n\t['𝔁', 'x'],\n\t['𝔂', 'y'],\n\t['𝔃', 'z'],\n\t['𝔄', 'A'],\n\t['𝔅', 'B'],\n\t['𝔇', 'D'],\n\t['𝔈', 'E'],\n\t['𝔉', 'F'],\n\t['𝔊', 'G'],\n\t['𝔍', 'J'],\n\t['𝔎', 'K'],\n\t['𝔏', 'L'],\n\t['𝔐', 'M'],\n\t['𝔑', 'N'],\n\t['𝔒', 'O'],\n\t['𝔓', 'P'],\n\t['𝔔', 'Q'],\n\t['𝔖', 'S'],\n\t['𝔗', 'T'],\n\t['𝔘', 'U'],\n\t['𝔙', 'V'],\n\t['𝔚', 'W'],\n\t['𝔛', 'X'],\n\t['𝔜', 'Y'],\n\t['𝔞', 'a'],\n\t['𝔟', 'b'],\n\t['𝔠', 'c'],\n\t['𝔡', 'd'],\n\t['𝔢', 'e'],\n\t['𝔣', 'f'],\n\t['𝔤', 'g'],\n\t['𝔥', 'h'],\n\t['𝔦', 'i'],\n\t['𝔧', 'j'],\n\t['𝔨', 'k'],\n\t['𝔩', 'l'],\n\t['𝔪', 'm'],\n\t['𝔫', 'n'],\n\t['𝔬', 'o'],\n\t['𝔭', 'p'],\n\t['𝔮', 'q'],\n\t['𝔯', 'r'],\n\t['𝔰', 's'],\n\t['𝔱', 't'],\n\t['𝔲', 'u'],\n\t['𝔳', 'v'],\n\t['𝔴', 'w'],\n\t['𝔵', 'x'],\n\t['𝔶', 'y'],\n\t['𝔷', 'z'],\n\t['𝔸', 'A'],\n\t['𝔹', 'B'],\n\t['𝔻', 'D'],\n\t['𝔼', 'E'],\n\t['𝔽', 'F'],\n\t['𝔾', 'G'],\n\t['𝕀', 'I'],\n\t['𝕁', 'J'],\n\t['𝕂', 'K'],\n\t['𝕃', 'L'],\n\t['𝕄', 'M'],\n\t['𝕆', 'N'],\n\t['𝕊', 'S'],\n\t['𝕋', 'T'],\n\t['𝕌', 'U'],\n\t['𝕍', 'V'],\n\t['𝕎', 'W'],\n\t['𝕏', 'X'],\n\t['𝕐', 'Y'],\n\t['𝕒', 'a'],\n\t['𝕓', 'b'],\n\t['𝕔', 'c'],\n\t['𝕕', 'd'],\n\t['𝕖', 'e'],\n\t['𝕗', 'f'],\n\t['𝕘', 'g'],\n\t['𝕙', 'h'],\n\t['𝕚', 'i'],\n\t['𝕛', 'j'],\n\t['𝕜', 'k'],\n\t['𝕝', 'l'],\n\t['𝕞', 'm'],\n\t['𝕟', 'n'],\n\t['𝕠', 'o'],\n\t['𝕡', 'p'],\n\t['𝕢', 'q'],\n\t['𝕣', 'r'],\n\t['𝕤', 's'],\n\t['𝕥', 't'],\n\t['𝕦', 'u'],\n\t['𝕧', 'v'],\n\t['𝕨', 'w'],\n\t['𝕩', 'x'],\n\t['𝕪', 'y'],\n\t['𝕫', 'z'],\n\t['𝕬', 'A'],\n\t['𝕭', 'B'],\n\t['𝕮', 'C'],\n\t['𝕯', 'D'],\n\t['𝕰', 'E'],\n\t['𝕱', 'F'],\n\t['𝕲', 'G'],\n\t['𝕳', 'H'],\n\t['𝕴', 'I'],\n\t['𝕵', 'J'],\n\t['𝕶', 'K'],\n\t['𝕷', 'L'],\n\t['𝕸', 'M'],\n\t['𝕹', 'N'],\n\t['𝕺', 'O'],\n\t['𝕻', 'P'],\n\t['𝕼', 'Q'],\n\t['𝕽', 'R'],\n\t['𝕾', 'S'],\n\t['𝕿', 'T'],\n\t['𝖀', 'U'],\n\t['𝖁', 'V'],\n\t['𝖂', 'W'],\n\t['𝖃', 'X'],\n\t['𝖄', 'Y'],\n\t['𝖅', 'Z'],\n\t['𝖆', 'a'],\n\t['𝖇', 'b'],\n\t['𝖈', 'c'],\n\t['𝖉', 'd'],\n\t['𝖊', 'e'],\n\t['𝖋', 'f'],\n\t['𝖌', 'g'],\n\t['𝖍', 'h'],\n\t['𝖎', 'i'],\n\t['𝖏', 'j'],\n\t['𝖐', 'k'],\n\t['𝖑', 'l'],\n\t['𝖒', 'm'],\n\t['𝖓', 'n'],\n\t['𝖔', 'o'],\n\t['𝖕', 'p'],\n\t['𝖖', 'q'],\n\t['𝖗', 'r'],\n\t['𝖘', 's'],\n\t['𝖙', 't'],\n\t['𝖚', 'u'],\n\t['𝖛', 'v'],\n\t['𝖜', 'w'],\n\t['𝖝', 'x'],\n\t['𝖞', 'y'],\n\t['𝖟', 'z'],\n\t['𝖠', 'A'],\n\t['𝖡', 'B'],\n\t['𝖢', 'C'],\n\t['𝖣', 'D'],\n\t['𝖤', 'E'],\n\t['𝖥', 'F'],\n\t['𝖦', 'G'],\n\t['𝖧', 'H'],\n\t['𝖨', 'I'],\n\t['𝖩', 'J'],\n\t['𝖪', 'K'],\n\t['𝖫', 'L'],\n\t['𝖬', 'M'],\n\t['𝖭', 'N'],\n\t['𝖮', 'O'],\n\t['𝖯', 'P'],\n\t['𝖰', 'Q'],\n\t['𝖱', 'R'],\n\t['𝖲', 'S'],\n\t['𝖳', 'T'],\n\t['𝖴', 'U'],\n\t['𝖵', 'V'],\n\t['𝖶', 'W'],\n\t['𝖷', 'X'],\n\t['𝖸', 'Y'],\n\t['𝖹', 'Z'],\n\t['𝖺', 'a'],\n\t['𝖻', 'b'],\n\t['𝖼', 'c'],\n\t['𝖽', 'd'],\n\t['𝖾', 'e'],\n\t['𝖿', 'f'],\n\t['𝗀', 'g'],\n\t['𝗁', 'h'],\n\t['𝗂', 'i'],\n\t['𝗃', 'j'],\n\t['𝗄', 'k'],\n\t['𝗅', 'l'],\n\t['𝗆', 'm'],\n\t['𝗇', 'n'],\n\t['𝗈', 'o'],\n\t['𝗉', 'p'],\n\t['𝗊', 'q'],\n\t['𝗋', 'r'],\n\t['𝗌', 's'],\n\t['𝗍', 't'],\n\t['𝗎', 'u'],\n\t['𝗏', 'v'],\n\t['𝗐', 'w'],\n\t['𝗑', 'x'],\n\t['𝗒', 'y'],\n\t['𝗓', 'z'],\n\t['𝗔', 'A'],\n\t['𝗕', 'B'],\n\t['𝗖', 'C'],\n\t['𝗗', 'D'],\n\t['𝗘', 'E'],\n\t['𝗙', 'F'],\n\t['𝗚', 'G'],\n\t['𝗛', 'H'],\n\t['𝗜', 'I'],\n\t['𝗝', 'J'],\n\t['𝗞', 'K'],\n\t['𝗟', 'L'],\n\t['𝗠', 'M'],\n\t['𝗡', 'N'],\n\t['𝗢', 'O'],\n\t['𝗣', 'P'],\n\t['𝗤', 'Q'],\n\t['𝗥', 'R'],\n\t['𝗦', 'S'],\n\t['𝗧', 'T'],\n\t['𝗨', 'U'],\n\t['𝗩', 'V'],\n\t['𝗪', 'W'],\n\t['𝗫', 'X'],\n\t['𝗬', 'Y'],\n\t['𝗭', 'Z'],\n\t['𝗮', 'a'],\n\t['𝗯', 'b'],\n\t['𝗰', 'c'],\n\t['𝗱', 'd'],\n\t['𝗲', 'e'],\n\t['𝗳', 'f'],\n\t['𝗴', 'g'],\n\t['𝗵', 'h'],\n\t['𝗶', 'i'],\n\t['𝗷', 'j'],\n\t['𝗸', 'k'],\n\t['𝗹', 'l'],\n\t['𝗺', 'm'],\n\t['𝗻', 'n'],\n\t['𝗼', 'o'],\n\t['𝗽', 'p'],\n\t['𝗾', 'q'],\n\t['𝗿', 'r'],\n\t['𝘀', 's'],\n\t['𝘁', 't'],\n\t['𝘂', 'u'],\n\t['𝘃', 'v'],\n\t['𝘄', 'w'],\n\t['𝘅', 'x'],\n\t['𝘆', 'y'],\n\t['𝘇', 'z'],\n\t['𝘈', 'A'],\n\t['𝘉', 'B'],\n\t['𝘊', 'C'],\n\t['𝘋', 'D'],\n\t['𝘌', 'E'],\n\t['𝘍', 'F'],\n\t['𝘎', 'G'],\n\t['𝘏', 'H'],\n\t['𝘐', 'I'],\n\t['𝘑', 'J'],\n\t['𝘒', 'K'],\n\t['𝘓', 'L'],\n\t['𝘔', 'M'],\n\t['𝘕', 'N'],\n\t['𝘖', 'O'],\n\t['𝘗', 'P'],\n\t['𝘘', 'Q'],\n\t['𝘙', 'R'],\n\t['𝘚', 'S'],\n\t['𝘛', 'T'],\n\t['𝘜', 'U'],\n\t['𝘝', 'V'],\n\t['𝘞', 'W'],\n\t['𝘟', 'X'],\n\t['𝘠', 'Y'],\n\t['𝘡', 'Z'],\n\t['𝘢', 'a'],\n\t['𝘣', 'b'],\n\t['𝘤', 'c'],\n\t['𝘥', 'd'],\n\t['𝘦', 'e'],\n\t['𝘧', 'f'],\n\t['𝘨', 'g'],\n\t['𝘩', 'h'],\n\t['𝘪', 'i'],\n\t['𝘫', 'j'],\n\t['𝘬', 'k'],\n\t['𝘭', 'l'],\n\t['𝘮', 'm'],\n\t['𝘯', 'n'],\n\t['𝘰', 'o'],\n\t['𝘱', 'p'],\n\t['𝘲', 'q'],\n\t['𝘳', 'r'],\n\t['𝘴', 's'],\n\t['𝘵', 't'],\n\t['𝘶', 'u'],\n\t['𝘷', 'v'],\n\t['𝘸', 'w'],\n\t['𝘹', 'x'],\n\t['𝘺', 'y'],\n\t['𝘻', 'z'],\n\t['𝘼', 'A'],\n\t['𝘽', 'B'],\n\t['𝘾', 'C'],\n\t['𝘿', 'D'],\n\t['𝙀', 'E'],\n\t['𝙁', 'F'],\n\t['𝙂', 'G'],\n\t['𝙃', 'H'],\n\t['𝙄', 'I'],\n\t['𝙅', 'J'],\n\t['𝙆', 'K'],\n\t['𝙇', 'L'],\n\t['𝙈', 'M'],\n\t['𝙉', 'N'],\n\t['𝙊', 'O'],\n\t['𝙋', 'P'],\n\t['𝙌', 'Q'],\n\t['𝙍', 'R'],\n\t['𝙎', 'S'],\n\t['𝙏', 'T'],\n\t['𝙐', 'U'],\n\t['𝙑', 'V'],\n\t['𝙒', 'W'],\n\t['𝙓', 'X'],\n\t['𝙔', 'Y'],\n\t['𝙕', 'Z'],\n\t['𝙖', 'a'],\n\t['𝙗', 'b'],\n\t['𝙘', 'c'],\n\t['𝙙', 'd'],\n\t['𝙚', 'e'],\n\t['𝙛', 'f'],\n\t['𝙜', 'g'],\n\t['𝙝', 'h'],\n\t['𝙞', 'i'],\n\t['𝙟', 'j'],\n\t['𝙠', 'k'],\n\t['𝙡', 'l'],\n\t['𝙢', 'm'],\n\t['𝙣', 'n'],\n\t['𝙤', 'o'],\n\t['𝙥', 'p'],\n\t['𝙦', 'q'],\n\t['𝙧', 'r'],\n\t['𝙨', 's'],\n\t['𝙩', 't'],\n\t['𝙪', 'u'],\n\t['𝙫', 'v'],\n\t['𝙬', 'w'],\n\t['𝙭', 'x'],\n\t['𝙮', 'y'],\n\t['𝙯', 'z'],\n\t['𝙰', 'A'],\n\t['𝙱', 'B'],\n\t['𝙲', 'C'],\n\t['𝙳', 'D'],\n\t['𝙴', 'E'],\n\t['𝙵', 'F'],\n\t['𝙶', 'G'],\n\t['𝙷', 'H'],\n\t['𝙸', 'I'],\n\t['𝙹', 'J'],\n\t['𝙺', 'K'],\n\t['𝙻', 'L'],\n\t['𝙼', 'M'],\n\t['𝙽', 'N'],\n\t['𝙾', 'O'],\n\t['𝙿', 'P'],\n\t['𝚀', 'Q'],\n\t['𝚁', 'R'],\n\t['𝚂', 'S'],\n\t['𝚃', 'T'],\n\t['𝚄', 'U'],\n\t['𝚅', 'V'],\n\t['𝚆', 'W'],\n\t['𝚇', 'X'],\n\t['𝚈', 'Y'],\n\t['𝚉', 'Z'],\n\t['𝚊', 'a'],\n\t['𝚋', 'b'],\n\t['𝚌', 'c'],\n\t['𝚍', 'd'],\n\t['𝚎', 'e'],\n\t['𝚏', 'f'],\n\t['𝚐', 'g'],\n\t['𝚑', 'h'],\n\t['𝚒', 'i'],\n\t['𝚓', 'j'],\n\t['𝚔', 'k'],\n\t['𝚕', 'l'],\n\t['𝚖', 'm'],\n\t['𝚗', 'n'],\n\t['𝚘', 'o'],\n\t['𝚙', 'p'],\n\t['𝚚', 'q'],\n\t['𝚛', 'r'],\n\t['𝚜', 's'],\n\t['𝚝', 't'],\n\t['𝚞', 'u'],\n\t['𝚟', 'v'],\n\t['𝚠', 'w'],\n\t['𝚡', 'x'],\n\t['𝚢', 'y'],\n\t['𝚣', 'z'],\n\n\t// Dotless letters\n\t['𝚤', 'l'],\n\t['𝚥', 'j'],\n\n\t// Greek\n\t['𝛢', 'A'],\n\t['𝛣', 'B'],\n\t['𝛤', 'G'],\n\t['𝛥', 'D'],\n\t['𝛦', 'E'],\n\t['𝛧', 'Z'],\n\t['𝛨', 'I'],\n\t['𝛩', 'TH'],\n\t['𝛪', 'I'],\n\t['𝛫', 'K'],\n\t['𝛬', 'L'],\n\t['𝛭', 'M'],\n\t['𝛮', 'N'],\n\t['𝛯', 'KS'],\n\t['𝛰', 'O'],\n\t['𝛱', 'P'],\n\t['𝛲', 'R'],\n\t['𝛳', 'TH'],\n\t['𝛴', 'S'],\n\t['𝛵', 'T'],\n\t['𝛶', 'Y'],\n\t['𝛷', 'F'],\n\t['𝛸', 'x'],\n\t['𝛹', 'PS'],\n\t['𝛺', 'O'],\n\t['𝛻', 'D'],\n\t['𝛼', 'a'],\n\t['𝛽', 'b'],\n\t['𝛾', 'g'],\n\t['𝛿', 'd'],\n\t['𝜀', 'e'],\n\t['𝜁', 'z'],\n\t['𝜂', 'i'],\n\t['𝜃', 'th'],\n\t['𝜄', 'i'],\n\t['𝜅', 'k'],\n\t['𝜆', 'l'],\n\t['𝜇', 'm'],\n\t['𝜈', 'n'],\n\t['𝜉', 'ks'],\n\t['𝜊', 'o'],\n\t['𝜋', 'p'],\n\t['𝜌', 'r'],\n\t['𝜍', 's'],\n\t['𝜎', 's'],\n\t['𝜏', 't'],\n\t['𝜐', 'y'],\n\t['𝜑', 'f'],\n\t['𝜒', 'x'],\n\t['𝜓', 'ps'],\n\t['𝜔', 'o'],\n\t['𝜕', 'd'],\n\t['𝜖', 'E'],\n\t['𝜗', 'TH'],\n\t['𝜘', 'K'],\n\t['𝜙', 'f'],\n\t['𝜚', 'r'],\n\t['𝜛', 'p'],\n\t['𝜜', 'A'],\n\t['𝜝', 'V'],\n\t['𝜞', 'G'],\n\t['𝜟', 'D'],\n\t['𝜠', 'E'],\n\t['𝜡', 'Z'],\n\t['𝜢', 'I'],\n\t['𝜣', 'TH'],\n\t['𝜤', 'I'],\n\t['𝜥', 'K'],\n\t['𝜦', 'L'],\n\t['𝜧', 'M'],\n\t['𝜨', 'N'],\n\t['𝜩', 'KS'],\n\t['𝜪', 'O'],\n\t['𝜫', 'P'],\n\t['𝜬', 'S'],\n\t['𝜭', 'TH'],\n\t['𝜮', 'S'],\n\t['𝜯', 'T'],\n\t['𝜰', 'Y'],\n\t['𝜱', 'F'],\n\t['𝜲', 'X'],\n\t['𝜳', 'PS'],\n\t['𝜴', 'O'],\n\t['𝜵', 'D'],\n\t['𝜶', 'a'],\n\t['𝜷', 'v'],\n\t['𝜸', 'g'],\n\t['𝜹', 'd'],\n\t['𝜺', 'e'],\n\t['𝜻', 'z'],\n\t['𝜼', 'i'],\n\t['𝜽', 'th'],\n\t['𝜾', 'i'],\n\t['𝜿', 'k'],\n\t['𝝀', 'l'],\n\t['𝝁', 'm'],\n\t['𝝂', 'n'],\n\t['𝝃', 'ks'],\n\t['𝝄', 'o'],\n\t['𝝅', 'p'],\n\t['𝝆', 'r'],\n\t['𝝇', 's'],\n\t['𝝈', 's'],\n\t['𝝉', 't'],\n\t['𝝊', 'y'],\n\t['𝝋', 'f'],\n\t['𝝌', 'x'],\n\t['𝝍', 'ps'],\n\t['𝝎', 'o'],\n\t['𝝏', 'a'],\n\t['𝝐', 'e'],\n\t['𝝑', 'i'],\n\t['𝝒', 'k'],\n\t['𝝓', 'f'],\n\t['𝝔', 'r'],\n\t['𝝕', 'p'],\n\t['𝝖', 'A'],\n\t['𝝗', 'B'],\n\t['𝝘', 'G'],\n\t['𝝙', 'D'],\n\t['𝝚', 'E'],\n\t['𝝛', 'Z'],\n\t['𝝜', 'I'],\n\t['𝝝', 'TH'],\n\t['𝝞', 'I'],\n\t['𝝟', 'K'],\n\t['𝝠', 'L'],\n\t['𝝡', 'M'],\n\t['𝝢', 'N'],\n\t['𝝣', 'KS'],\n\t['𝝤', 'O'],\n\t['𝝥', 'P'],\n\t['𝝦', 'R'],\n\t['𝝧', 'TH'],\n\t['𝝨', 'S'],\n\t['𝝩', 'T'],\n\t['𝝪', 'Y'],\n\t['𝝫', 'F'],\n\t['𝝬', 'X'],\n\t['𝝭', 'PS'],\n\t['𝝮', 'O'],\n\t['𝝯', 'D'],\n\t['𝝰', 'a'],\n\t['𝝱', 'v'],\n\t['𝝲', 'g'],\n\t['𝝳', 'd'],\n\t['𝝴', 'e'],\n\t['𝝵', 'z'],\n\t['𝝶', 'i'],\n\t['𝝷', 'th'],\n\t['𝝸', 'i'],\n\t['𝝹', 'k'],\n\t['𝝺', 'l'],\n\t['𝝻', 'm'],\n\t['𝝼', 'n'],\n\t['𝝽', 'ks'],\n\t['𝝾', 'o'],\n\t['𝝿', 'p'],\n\t['𝞀', 'r'],\n\t['𝞁', 's'],\n\t['𝞂', 's'],\n\t['𝞃', 't'],\n\t['𝞄', 'y'],\n\t['𝞅', 'f'],\n\t['𝞆', 'x'],\n\t['𝞇', 'ps'],\n\t['𝞈', 'o'],\n\t['𝞉', 'a'],\n\t['𝞊', 'e'],\n\t['𝞋', 'i'],\n\t['𝞌', 'k'],\n\t['𝞍', 'f'],\n\t['𝞎', 'r'],\n\t['𝞏', 'p'],\n\t['𝞐', 'A'],\n\t['𝞑', 'V'],\n\t['𝞒', 'G'],\n\t['𝞓', 'D'],\n\t['𝞔', 'E'],\n\t['𝞕', 'Z'],\n\t['𝞖', 'I'],\n\t['𝞗', 'TH'],\n\t['𝞘', 'I'],\n\t['𝞙', 'K'],\n\t['𝞚', 'L'],\n\t['𝞛', 'M'],\n\t['𝞜', 'N'],\n\t['𝞝', 'KS'],\n\t['𝞞', 'O'],\n\t['𝞟', 'P'],\n\t['𝞠', 'S'],\n\t['𝞡', 'TH'],\n\t['𝞢', 'S'],\n\t['𝞣', 'T'],\n\t['𝞤', 'Y'],\n\t['𝞥', 'F'],\n\t['𝞦', 'X'],\n\t['𝞧', 'PS'],\n\t['𝞨', 'O'],\n\t['𝞩', 'D'],\n\t['𝞪', 'av'],\n\t['𝞫', 'g'],\n\t['𝞬', 'd'],\n\t['𝞭', 'e'],\n\t['𝞮', 'z'],\n\t['𝞯', 'i'],\n\t['𝞰', 'i'],\n\t['𝞱', 'th'],\n\t['𝞲', 'i'],\n\t['𝞳', 'k'],\n\t['𝞴', 'l'],\n\t['𝞵', 'm'],\n\t['𝞶', 'n'],\n\t['𝞷', 'ks'],\n\t['𝞸', 'o'],\n\t['𝞹', 'p'],\n\t['𝞺', 'r'],\n\t['𝞻', 's'],\n\t['𝞼', 's'],\n\t['𝞽', 't'],\n\t['𝞾', 'y'],\n\t['𝞿', 'f'],\n\t['𝟀', 'x'],\n\t['𝟁', 'ps'],\n\t['𝟂', 'o'],\n\t['𝟃', 'a'],\n\t['𝟄', 'e'],\n\t['𝟅', 'i'],\n\t['𝟆', 'k'],\n\t['𝟇', 'f'],\n\t['𝟈', 'r'],\n\t['𝟉', 'p'],\n\t['𝟊', 'F'],\n\t['𝟋', 'f'],\n\t['⒜', '(a)'],\n\t['⒝', '(b)'],\n\t['⒞', '(c)'],\n\t['⒟', '(d)'],\n\t['⒠', '(e)'],\n\t['⒡', '(f)'],\n\t['⒢', '(g)'],\n\t['⒣', '(h)'],\n\t['⒤', '(i)'],\n\t['⒥', '(j)'],\n\t['⒦', '(k)'],\n\t['⒧', '(l)'],\n\t['⒨', '(m)'],\n\t['⒩', '(n)'],\n\t['⒪', '(o)'],\n\t['⒫', '(p)'],\n\t['⒬', '(q)'],\n\t['⒭', '(r)'],\n\t['⒮', '(s)'],\n\t['⒯', '(t)'],\n\t['⒰', '(u)'],\n\t['⒱', '(v)'],\n\t['⒲', '(w)'],\n\t['⒳', '(x)'],\n\t['⒴', '(y)'],\n\t['⒵', '(z)'],\n\t['Ⓐ', '(A)'],\n\t['Ⓑ', '(B)'],\n\t['Ⓒ', '(C)'],\n\t['Ⓓ', '(D)'],\n\t['Ⓔ', '(E)'],\n\t['Ⓕ', '(F)'],\n\t['Ⓖ', '(G)'],\n\t['Ⓗ', '(H)'],\n\t['Ⓘ', '(I)'],\n\t['Ⓙ', '(J)'],\n\t['Ⓚ', '(K)'],\n\t['Ⓛ', '(L)'],\n\t['Ⓝ', '(N)'],\n\t['Ⓞ', '(O)'],\n\t['Ⓟ', '(P)'],\n\t['Ⓠ', '(Q)'],\n\t['Ⓡ', '(R)'],\n\t['Ⓢ', '(S)'],\n\t['Ⓣ', '(T)'],\n\t['Ⓤ', '(U)'],\n\t['Ⓥ', '(V)'],\n\t['Ⓦ', '(W)'],\n\t['Ⓧ', '(X)'],\n\t['Ⓨ', '(Y)'],\n\t['Ⓩ', '(Z)'],\n\t['ⓐ', '(a)'],\n\t['ⓑ', '(b)'],\n\t['ⓒ', '(b)'],\n\t['ⓓ', '(c)'],\n\t['ⓔ', '(e)'],\n\t['ⓕ', '(f)'],\n\t['ⓖ', '(g)'],\n\t['ⓗ', '(h)'],\n\t['ⓘ', '(i)'],\n\t['ⓙ', '(j)'],\n\t['ⓚ', '(k)'],\n\t['ⓛ', '(l)'],\n\t['ⓜ', '(m)'],\n\t['ⓝ', '(n)'],\n\t['ⓞ', '(o)'],\n\t['ⓟ', '(p)'],\n\t['ⓠ', '(q)'],\n\t['ⓡ', '(r)'],\n\t['ⓢ', '(s)'],\n\t['ⓣ', '(t)'],\n\t['ⓤ', '(u)'],\n\t['ⓥ', '(v)'],\n\t['ⓦ', '(w)'],\n\t['ⓧ', '(x)'],\n\t['ⓨ', '(y)'],\n\t['ⓩ', '(z)'],\n\n\t// Maltese\n\t['Ċ', 'C'],\n\t['ċ', 'c'],\n\t['Ġ', 'G'],\n\t['ġ', 'g'],\n\t['Ħ', 'H'],\n\t['ħ', 'h'],\n\t['Ż', 'Z'],\n\t['ż', 'z'],\n\n\t// Numbers\n\t['𝟎', '0'],\n\t['𝟏', '1'],\n\t['𝟐', '2'],\n\t['𝟑', '3'],\n\t['𝟒', '4'],\n\t['𝟓', '5'],\n\t['𝟔', '6'],\n\t['𝟕', '7'],\n\t['𝟖', '8'],\n\t['𝟗', '9'],\n\t['𝟘', '0'],\n\t['𝟙', '1'],\n\t['𝟚', '2'],\n\t['𝟛', '3'],\n\t['𝟜', '4'],\n\t['𝟝', '5'],\n\t['𝟞', '6'],\n\t['𝟟', '7'],\n\t['𝟠', '8'],\n\t['𝟡', '9'],\n\t['𝟢', '0'],\n\t['𝟣', '1'],\n\t['𝟤', '2'],\n\t['𝟥', '3'],\n\t['𝟦', '4'],\n\t['𝟧', '5'],\n\t['𝟨', '6'],\n\t['𝟩', '7'],\n\t['𝟪', '8'],\n\t['𝟫', '9'],\n\t['𝟬', '0'],\n\t['𝟭', '1'],\n\t['𝟮', '2'],\n\t['𝟯', '3'],\n\t['𝟰', '4'],\n\t['𝟱', '5'],\n\t['𝟲', '6'],\n\t['𝟳', '7'],\n\t['𝟴', '8'],\n\t['𝟵', '9'],\n\t['𝟶', '0'],\n\t['𝟷', '1'],\n\t['𝟸', '2'],\n\t['𝟹', '3'],\n\t['𝟺', '4'],\n\t['𝟻', '5'],\n\t['𝟼', '6'],\n\t['𝟽', '7'],\n\t['𝟾', '8'],\n\t['𝟿', '9'],\n\t['①', '1'],\n\t['②', '2'],\n\t['③', '3'],\n\t['④', '4'],\n\t['⑤', '5'],\n\t['⑥', '6'],\n\t['⑦', '7'],\n\t['⑧', '8'],\n\t['⑨', '9'],\n\t['⑩', '10'],\n\t['⑪', '11'],\n\t['⑫', '12'],\n\t['⑬', '13'],\n\t['⑭', '14'],\n\t['⑮', '15'],\n\t['⑯', '16'],\n\t['⑰', '17'],\n\t['⑱', '18'],\n\t['⑲', '19'],\n\t['⑳', '20'],\n\t['⑴', '1'],\n\t['⑵', '2'],\n\t['⑶', '3'],\n\t['⑷', '4'],\n\t['⑸', '5'],\n\t['⑹', '6'],\n\t['⑺', '7'],\n\t['⑻', '8'],\n\t['⑼', '9'],\n\t['⑽', '10'],\n\t['⑾', '11'],\n\t['⑿', '12'],\n\t['⒀', '13'],\n\t['⒁', '14'],\n\t['⒂', '15'],\n\t['⒃', '16'],\n\t['⒄', '17'],\n\t['⒅', '18'],\n\t['⒆', '19'],\n\t['⒇', '20'],\n\t['⒈', '1.'],\n\t['⒉', '2.'],\n\t['⒊', '3.'],\n\t['⒋', '4.'],\n\t['⒌', '5.'],\n\t['⒍', '6.'],\n\t['⒎', '7.'],\n\t['⒏', '8.'],\n\t['⒐', '9.'],\n\t['⒑', '10.'],\n\t['⒒', '11.'],\n\t['⒓', '12.'],\n\t['⒔', '13.'],\n\t['⒕', '14.'],\n\t['⒖', '15.'],\n\t['⒗', '16.'],\n\t['⒘', '17.'],\n\t['⒙', '18.'],\n\t['⒚', '19.'],\n\t['⒛', '20.'],\n\t['⓪', '0'],\n\t['⓫', '11'],\n\t['⓬', '12'],\n\t['⓭', '13'],\n\t['⓮', '14'],\n\t['⓯', '15'],\n\t['⓰', '16'],\n\t['⓱', '17'],\n\t['⓲', '18'],\n\t['⓳', '19'],\n\t['⓴', '20'],\n\t['⓵', '1'],\n\t['⓶', '2'],\n\t['⓷', '3'],\n\t['⓸', '4'],\n\t['⓹', '5'],\n\t['⓺', '6'],\n\t['⓻', '7'],\n\t['⓼', '8'],\n\t['⓽', '9'],\n\t['⓾', '10'],\n\t['⓿', '0'],\n\n\t// Punctuation\n\t['🙰', '&'],\n\t['🙱', '&'],\n\t['🙲', '&'],\n\t['🙳', '&'],\n\t['🙴', '&'],\n\t['🙵', '&'],\n\t['🙶', '\"'],\n\t['🙷', '\"'],\n\t['🙸', '\"'],\n\t['‽', '?!'],\n\t['🙹', '?!'],\n\t['🙺', '?!'],\n\t['🙻', '?!'],\n\t['🙼', '/'],\n\t['🙽', '\\\\'],\n\n\t// Alchemy\n\t['🜇', 'AR'],\n\t['🜈', 'V'],\n\t['🜉', 'V'],\n\t['🜆', 'VR'],\n\t['🜅', 'VF'],\n\t['🜩', '2'],\n\t['🜪', '5'],\n\t['🝡', 'f'],\n\t['🝢', 'W'],\n\t['🝣', 'U'],\n\t['🝧', 'V'],\n\t['🝨', 'T'],\n\t['🝪', 'V'],\n\t['🝫', 'MB'],\n\t['🝬', 'VB'],\n\t['🝲', '3B'],\n\t['🝳', '3B'],\n\n\t// Emojis\n\t['💯', '100'],\n\t['🔙', 'BACK'],\n\t['🔚', 'END'],\n\t['🔛', 'ON!'],\n\t['🔜', 'SOON'],\n\t['🔝', 'TOP'],\n\t['🔞', '18'],\n\t['🔤', 'abc'],\n\t['🔠', 'ABCD'],\n\t['🔡', 'abcd'],\n\t['🔢', '1234'],\n\t['🔣', 'T&@%'],\n\t['#️⃣', '#'],\n\t['*️⃣', '*'],\n\t['0️⃣', '0'],\n\t['1️⃣', '1'],\n\t['2️⃣', '2'],\n\t['3️⃣', '3'],\n\t['4️⃣', '4'],\n\t['5️⃣', '5'],\n\t['6️⃣', '6'],\n\t['7️⃣', '7'],\n\t['8️⃣', '8'],\n\t['9️⃣', '9'],\n\t['🔟', '10'],\n\t['🅰️', 'A'],\n\t['🅱️', 'B'],\n\t['🆎', 'AB'],\n\t['🆑', 'CL'],\n\t['🅾️', 'O'],\n\t['🅿', 'P'],\n\t['🆘', 'SOS'],\n\t['🅲', 'C'],\n\t['🅳', 'D'],\n\t['🅴', 'E'],\n\t['🅵', 'F'],\n\t['🅶', 'G'],\n\t['🅷', 'H'],\n\t['🅸', 'I'],\n\t['🅹', 'J'],\n\t['🅺', 'K'],\n\t['🅻', 'L'],\n\t['🅼', 'M'],\n\t['🅽', 'N'],\n\t['🆀', 'Q'],\n\t['🆁', 'R'],\n\t['🆂', 'S'],\n\t['🆃', 'T'],\n\t['🆄', 'U'],\n\t['🆅', 'V'],\n\t['🆆', 'W'],\n\t['🆇', 'X'],\n\t['🆈', 'Y'],\n\t['🆉', 'Z']\n];\n\nexport default replacements;\n","import escapeStringRegexp from 'escape-string-regexp';\nimport builtinReplacements from './replacements.js';\n\nconst doCustomReplacements = (string, replacements) => {\n\tfor (const [key, value] of replacements) {\n\t\t// TODO: Use `String#replaceAll()` when targeting Node.js 16.\n\t\tstring = string.replace(new RegExp(escapeStringRegexp(key), 'g'), value);\n\t}\n\n\treturn string;\n};\n\nexport default function transliterate(string, options) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tcustomReplacements: [],\n\t\t...options\n\t};\n\n\tconst customReplacements = new Map([\n\t\t...builtinReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = string.normalize();\n\tstring = doCustomReplacements(string, customReplacements);\n\tstring = string.normalize('NFD').replace(/\\p{Diacritic}/gu, '').normalize();\n\n\treturn string;\n}\n","const overridableReplacements = [\n\t['&', ' and '],\n\t['🦄', ' unicorn '],\n\t['♥', ' love ']\n];\n\nexport default overridableReplacements;\n","import escapeStringRegexp from 'escape-string-regexp';\nimport transliterate from '@sindresorhus/transliterate';\nimport builtinOverridableReplacements from './overridable-replacements.js';\n\nconst decamelize = string => {\n\treturn string\n\t\t// Separate capitalized words.\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\n\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n\t\t// `[a-rt-z]` matches all lowercase characters except `s`.\n\t\t// This avoids matching plural acronyms like `APIs`.\n\t\t.replace(/([A-Z]+)([A-Z][a-rt-z\\d]+)/g, '$1 $2');\n};\n\nconst removeMootSeparators = (string, separator) => {\n\tconst escapedSeparator = escapeStringRegexp(separator);\n\n\treturn string\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\n};\n\nconst buildPatternSlug = options => {\n\tlet negationSetPattern = 'a-z\\\\d';\n\tnegationSetPattern += options.lowercase ? '' : 'A-Z';\n\n\tif (options.preserveCharacters.length > 0) {\n\t\tfor (const character of options.preserveCharacters) {\n\t\t\tif (character === options.separator) {\n\t\t\t\tthrow new Error(`The separator character \\`${options.separator}\\` cannot be included in preserved characters: ${options.preserveCharacters}`);\n\t\t\t}\n\n\t\t\tnegationSetPattern += escapeStringRegexp(character);\n\t\t}\n\t}\n\n\treturn new RegExp(`[^${negationSetPattern}]+`, 'g');\n};\n\nexport default function slugify(string, options) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tseparator: '-',\n\t\tlowercase: true,\n\t\tdecamelize: true,\n\t\tcustomReplacements: [],\n\t\tpreserveLeadingUnderscore: false,\n\t\tpreserveTrailingDash: false,\n\t\tpreserveCharacters: [],\n\t\t...options\n\t};\n\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n\tconst shouldAppendDash = options.preserveTrailingDash && string.endsWith('-');\n\n\tconst customReplacements = new Map([\n\t\t...builtinOverridableReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = transliterate(string, {customReplacements});\n\n\tif (options.decamelize) {\n\t\tstring = decamelize(string);\n\t}\n\n\tconst patternSlug = buildPatternSlug(options);\n\n\tif (options.lowercase) {\n\t\tstring = string.toLowerCase();\n\t}\n\n\t// Detect contractions/possessives by looking for any word followed by a `'t`\n\t// or `'s` in isolation and then remove it.\n\tstring = string.replace(/([a-zA-Z\\d]+)'([ts])(\\s|$)/g, '$1$2$3');\n\n\tstring = string.replace(patternSlug, options.separator);\n\tstring = string.replace(/\\\\/g, '');\n\n\tif (options.separator) {\n\t\tstring = removeMootSeparators(string, options.separator);\n\t}\n\n\tif (shouldPrependUnderscore) {\n\t\tstring = `_${string}`;\n\t}\n\n\tif (shouldAppendDash) {\n\t\tstring = `${string}-`;\n\t}\n\n\treturn string;\n}\n\nexport function slugifyWithCounter() {\n\tconst occurrences = new Map();\n\n\tconst countable = (string, options) => {\n\t\tstring = slugify(string, options);\n\n\t\tif (!string) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst stringLower = string.toLowerCase();\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n\t\tconst counter = occurrences.get(stringLower);\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\n\t\tif (newCounter >= 2 || numberless > 2) {\n\t\t\tstring = `${string}-${newCounter}`;\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tcountable.reset = () => {\n\t\toccurrences.clear();\n\t};\n\n\treturn countable;\n}\n","import { commandsCtx } from '@milkdown/core'\nimport { setBlockType } from '@milkdown/prose/commands'\nimport { $command, $nodeAttr, $nodeSchema, $useKeymap } from '@milkdown/utils'\nimport { serializeText, withMeta } from '../__internal__'\n\n/// HTML attributes for paragraph node.\nexport const paragraphAttr = $nodeAttr('paragraph')\n\nwithMeta(paragraphAttr, {\n  displayName: 'Attr<paragraph>',\n  group: 'Paragraph',\n})\n\n/// Schema for paragraph node.\nexport const paragraphSchema = $nodeSchema('paragraph', (ctx) => ({\n  content: 'inline*',\n  group: 'block',\n  parseDOM: [{ tag: 'p' }],\n  toDOM: (node) => ['p', ctx.get(paragraphAttr.key)(node), 0],\n  parseMarkdown: {\n    match: (node) => node.type === 'paragraph',\n    runner: (state, node, type) => {\n      state.openNode(type)\n      if (node.children) state.next(node.children)\n      else state.addText((node.value || '') as string)\n\n      state.closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'paragraph',\n    runner: (state, node) => {\n      state.openNode('paragraph')\n      serializeText(state, node)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(paragraphSchema.node, {\n  displayName: 'NodeSchema<paragraph>',\n  group: 'Paragraph',\n})\nwithMeta(paragraphSchema.ctx, {\n  displayName: 'NodeSchemaCtx<paragraph>',\n  group: 'Paragraph',\n})\n\n/// This command can turn the selected block into paragraph.\nexport const turnIntoTextCommand = $command(\n  'TurnIntoText',\n  (ctx) => () => setBlockType(paragraphSchema.type(ctx))\n)\n\nwithMeta(turnIntoTextCommand, {\n  displayName: 'Command<turnIntoTextCommand>',\n  group: 'Paragraph',\n})\n\n/// Keymap for paragraph node.\n/// - `<Mod-Alt-0>`: Turn the selected block into paragraph.\nexport const paragraphKeymap = $useKeymap('paragraphKeymap', {\n  TurnIntoText: {\n    shortcuts: 'Mod-Alt-0',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(turnIntoTextCommand.key)\n    },\n  },\n})\n\nwithMeta(paragraphKeymap.ctx, {\n  displayName: 'KeymapCtx<paragraph>',\n  group: 'Paragraph',\n})\n\nwithMeta(paragraphKeymap.shortcuts, {\n  displayName: 'Keymap<paragraph>',\n  group: 'Paragraph',\n})\n","import { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport { expectDomTypeError } from '@milkdown/exception'\nimport { setBlockType } from '@milkdown/prose/commands'\nimport { textblockTypeInputRule } from '@milkdown/prose/inputrules'\nimport type { Node } from '@milkdown/prose/model'\nimport {\n  $command,\n  $ctx,\n  $inputRule,\n  $nodeAttr,\n  $nodeSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport slugify from '@sindresorhus/slugify'\nimport { serializeText, withMeta } from '../__internal__'\nimport { paragraphSchema } from './paragraph'\n\nconst headingIndex = Array(6)\n  .fill(0)\n  .map((_, i) => i + 1)\n\nfunction defaultHeadingIdGenerator(node: Node) {\n  return slugify(node.textContent)\n}\n\n/// This is a slice contains a function to generate heading id.\n/// You can configure it to generate id in your own way.\nexport const headingIdGenerator = $ctx(\n  defaultHeadingIdGenerator,\n  'headingIdGenerator'\n)\n\nwithMeta(headingIdGenerator, {\n  displayName: 'Ctx<HeadingIdGenerator>',\n  group: 'Heading',\n})\n\n/// HTML attributes for heading node.\nexport const headingAttr = $nodeAttr('heading')\n\nwithMeta(headingAttr, {\n  displayName: 'Attr<heading>',\n  group: 'Heading',\n})\n\n/// Schema for heading node.\nexport const headingSchema = $nodeSchema('heading', (ctx) => {\n  const getId = ctx.get(headingIdGenerator.key)\n  return {\n    content: 'inline*',\n    group: 'block',\n    defining: true,\n    attrs: {\n      id: {\n        default: '',\n      },\n      level: {\n        default: 1,\n      },\n    },\n    parseDOM: headingIndex.map((x) => ({\n      tag: `h${x}`,\n      getAttrs: (node) => {\n        if (!(node instanceof HTMLElement)) throw expectDomTypeError(node)\n\n        return { level: x, id: node.id }\n      },\n    })),\n    toDOM: (node) => {\n      return [\n        `h${node.attrs.level}`,\n        {\n          ...ctx.get(headingAttr.key)(node),\n          id: node.attrs.id || getId(node),\n        },\n        0,\n      ]\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === 'heading',\n      runner: (state, node, type) => {\n        const depth = node.depth as number\n        state.openNode(type, { level: depth })\n        state.next(node.children)\n        state.closeNode()\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'heading',\n      runner: (state, node) => {\n        state.openNode('heading', undefined, { depth: node.attrs.level })\n        serializeText(state, node)\n        state.closeNode()\n      },\n    },\n  }\n})\n\nwithMeta(headingSchema.node, {\n  displayName: 'NodeSchema<heading>',\n  group: 'Heading',\n})\n\nwithMeta(headingSchema.ctx, {\n  displayName: 'NodeSchemaCtx<heading>',\n  group: 'Heading',\n})\n\n/// This input rule can turn the selected block into heading.\n/// You can input numbers of `#` and a `space` to create heading.\nexport const wrapInHeadingInputRule = $inputRule((ctx) => {\n  return textblockTypeInputRule(\n    /^(?<hashes>#+)\\s$/,\n    headingSchema.type(ctx),\n    (match) => {\n      const x = match.groups?.hashes?.length || 0\n\n      const view = ctx.get(editorViewCtx)\n      const { $from } = view.state.selection\n      const node = $from.node()\n      if (node.type.name === 'heading') {\n        let level = Number(node.attrs.level) + Number(x)\n        if (level > 6) level = 6\n\n        return { level }\n      }\n      return { level: x }\n    }\n  )\n})\n\nwithMeta(wrapInHeadingInputRule, {\n  displayName: 'InputRule<wrapInHeadingInputRule>',\n  group: 'Heading',\n})\n\n/// This command can turn the selected block into heading.\n/// You can pass the level of heading to this command.\n/// By default, the level is 1, which means it will create a `h1` element.\nexport const wrapInHeadingCommand = $command('WrapInHeading', (ctx) => {\n  return (level?: number) => {\n    level ??= 1\n\n    if (level < 1) return setBlockType(paragraphSchema.type(ctx))\n\n    return setBlockType(headingSchema.type(ctx), { level })\n  }\n})\n\nwithMeta(wrapInHeadingCommand, {\n  displayName: 'Command<wrapInHeadingCommand>',\n  group: 'Heading',\n})\n\n/// This command can downgrade the selected heading.\n/// For example, if you have a `h2` element, and you call this command, you will get a `h1` element.\n/// If the element is already a `h1` element, it will turn it into a `p` element.\nexport const downgradeHeadingCommand = $command(\n  'DowngradeHeading',\n  (ctx) => () => (state, dispatch, view) => {\n    const { $from } = state.selection\n    const node = $from.node()\n    if (\n      node.type !== headingSchema.type(ctx) ||\n      !state.selection.empty ||\n      $from.parentOffset !== 0\n    )\n      return false\n\n    const level = node.attrs.level - 1\n    if (!level)\n      return setBlockType(paragraphSchema.type(ctx))(state, dispatch, view)\n\n    dispatch?.(\n      state.tr.setNodeMarkup(state.selection.$from.before(), undefined, {\n        ...node.attrs,\n        level,\n      })\n    )\n    return true\n  }\n)\n\nwithMeta(downgradeHeadingCommand, {\n  displayName: 'Command<downgradeHeadingCommand>',\n  group: 'Heading',\n})\n\n/// Keymap for heading node.\n/// - `<Mod-Alt-{1-6}>`: Turn the selected block into `h{1-6}` element.\n/// - `<Delete>/<Backspace>`: Downgrade the selected heading.\nexport const headingKeymap = $useKeymap('headingKeymap', {\n  TurnIntoH1: {\n    shortcuts: 'Mod-Alt-1',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInHeadingCommand.key, 1)\n    },\n  },\n  TurnIntoH2: {\n    shortcuts: 'Mod-Alt-2',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInHeadingCommand.key, 2)\n    },\n  },\n  TurnIntoH3: {\n    shortcuts: 'Mod-Alt-3',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInHeadingCommand.key, 3)\n    },\n  },\n  TurnIntoH4: {\n    shortcuts: 'Mod-Alt-4',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInHeadingCommand.key, 4)\n    },\n  },\n  TurnIntoH5: {\n    shortcuts: 'Mod-Alt-5',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInHeadingCommand.key, 5)\n    },\n  },\n  TurnIntoH6: {\n    shortcuts: 'Mod-Alt-6',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInHeadingCommand.key, 6)\n    },\n  },\n  DowngradeHeading: {\n    shortcuts: ['Delete', 'Backspace'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(downgradeHeadingCommand.key)\n    },\n  },\n})\n\nwithMeta(headingKeymap.ctx, {\n  displayName: 'KeymapCtx<heading>',\n  group: 'Heading',\n})\n\nwithMeta(headingKeymap.shortcuts, {\n  displayName: 'Keymap<heading>',\n  group: 'Heading',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport { wrapIn } from '@milkdown/prose/commands'\nimport { wrappingInputRule } from '@milkdown/prose/inputrules'\nimport type { $NodeSchema } from '@milkdown/utils'\nimport {\n  $command,\n  $inputRule,\n  $nodeAttr,\n  $nodeSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for blockquote node.\nexport const blockquoteAttr = $nodeAttr('blockquote')\n\nwithMeta(blockquoteAttr, {\n  displayName: 'Attr<blockquote>',\n  group: 'Blockquote',\n})\n\n/// Schema for blockquote node.\nexport const blockquoteSchema: $NodeSchema<'blockquote'> = $nodeSchema(\n  'blockquote',\n  (ctx) => ({\n    content: 'block+',\n    group: 'block',\n    defining: true,\n    parseDOM: [{ tag: 'blockquote' }],\n    toDOM: (node) => ['blockquote', ctx.get(blockquoteAttr.key)(node), 0],\n    parseMarkdown: {\n      match: ({ type }) => type === 'blockquote',\n      runner: (state, node, type) => {\n        state.openNode(type).next(node.children).closeNode()\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'blockquote',\n      runner: (state, node) => {\n        state.openNode('blockquote').next(node.content).closeNode()\n      },\n    },\n  })\n)\n\nwithMeta(blockquoteSchema.node, {\n  displayName: 'NodeSchema<blockquote>',\n  group: 'Blockquote',\n})\n\nwithMeta(blockquoteSchema.ctx, {\n  displayName: 'NodeSchemaCtx<blockquote>',\n  group: 'Blockquote',\n})\n\n/// This input rule will convert a line that starts with `> ` into a blockquote.\n/// You can type `> ` at the start of a line to create a blockquote.\nexport const wrapInBlockquoteInputRule = $inputRule((ctx) =>\n  wrappingInputRule(/^\\s*>\\s$/, blockquoteSchema.type(ctx))\n)\n\nwithMeta(wrapInBlockquoteInputRule, {\n  displayName: 'InputRule<wrapInBlockquoteInputRule>',\n  group: 'Blockquote',\n})\n\n/// This command will wrap the current selection in a blockquote.\nexport const wrapInBlockquoteCommand = $command(\n  'WrapInBlockquote',\n  (ctx) => () => wrapIn(blockquoteSchema.type(ctx))\n)\n\nwithMeta(wrapInBlockquoteCommand, {\n  displayName: 'Command<wrapInBlockquoteCommand>',\n  group: 'Blockquote',\n})\n\n/// Keymap for blockquote.\n/// - `Mod-Shift-b`: Wrap selection in blockquote.\nexport const blockquoteKeymap = $useKeymap('blockquoteKeymap', {\n  WrapInBlockquote: {\n    shortcuts: 'Mod-Shift-b',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInBlockquoteCommand.key)\n    },\n  },\n})\n\nwithMeta(blockquoteKeymap.ctx, {\n  displayName: 'KeymapCtx<blockquote>',\n  group: 'Blockquote',\n})\n\nwithMeta(blockquoteKeymap.shortcuts, {\n  displayName: 'Keymap<blockquote>',\n  group: 'Blockquote',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport { expectDomTypeError } from '@milkdown/exception'\nimport { setBlockType } from '@milkdown/prose/commands'\nimport { textblockTypeInputRule } from '@milkdown/prose/inputrules'\nimport {\n  $command,\n  $inputRule,\n  $nodeAttr,\n  $nodeSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for code block node.\nexport const codeBlockAttr = $nodeAttr('codeBlock', () => ({\n  pre: {},\n  code: {},\n}))\n\nwithMeta(codeBlockAttr, {\n  displayName: 'Attr<codeBlock>',\n  group: 'CodeBlock',\n})\n\n/// Schema for code block node.\nexport const codeBlockSchema = $nodeSchema('code_block', (ctx) => {\n  return {\n    content: 'text*',\n    group: 'block',\n    marks: '',\n    defining: true,\n    code: true,\n    attrs: {\n      language: {\n        default: '',\n      },\n    },\n    parseDOM: [\n      {\n        tag: 'pre',\n        preserveWhitespace: 'full',\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return { language: dom.dataset.language }\n        },\n      },\n    ],\n    toDOM: (node) => {\n      const attr = ctx.get(codeBlockAttr.key)(node)\n      return [\n        'pre',\n        {\n          ...attr.pre,\n          'data-language': node.attrs.language,\n        },\n        ['code', attr.code, 0],\n      ]\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === 'code',\n      runner: (state, node, type) => {\n        const language = node.lang as string\n        const value = node.value as string\n        state.openNode(type, { language })\n        if (value) state.addText(value)\n\n        state.closeNode()\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'code_block',\n      runner: (state, node) => {\n        state.addNode('code', undefined, node.content.firstChild?.text || '', {\n          lang: node.attrs.language,\n        })\n      },\n    },\n  }\n})\n\nwithMeta(codeBlockSchema.node, {\n  displayName: 'NodeSchema<codeBlock>',\n  group: 'CodeBlock',\n})\n\nwithMeta(codeBlockSchema.ctx, {\n  displayName: 'NodeSchemaCtx<codeBlock>',\n  group: 'CodeBlock',\n})\n\n/// A input rule for creating code block.\n/// For example, ` ```javascript ` will create a code block with language javascript.\nexport const createCodeBlockInputRule = $inputRule((ctx) =>\n  textblockTypeInputRule(\n    /^```(?<language>[a-z]*)?[\\s\\n]$/,\n    codeBlockSchema.type(ctx),\n    (match) => ({\n      language: match.groups?.language ?? '',\n    })\n  )\n)\n\nwithMeta(createCodeBlockInputRule, {\n  displayName: 'InputRule<createCodeBlockInputRule>',\n  group: 'CodeBlock',\n})\n\n/// A command for creating code block.\n/// You can pass the language of the code block as the parameter.\nexport const createCodeBlockCommand = $command(\n  'CreateCodeBlock',\n  (ctx) =>\n    (language = '') =>\n      setBlockType(codeBlockSchema.type(ctx), { language })\n)\n\nwithMeta(createCodeBlockCommand, {\n  displayName: 'Command<createCodeBlockCommand>',\n  group: 'CodeBlock',\n})\n\n/// A command for updating the code block language of the target position.\nexport const updateCodeBlockLanguageCommand = $command(\n  'UpdateCodeBlockLanguage',\n  () =>\n    (\n      { pos, language }: { pos: number; language: string } = {\n        pos: -1,\n        language: '',\n      }\n    ) =>\n    (state, dispatch) => {\n      if (pos >= 0) {\n        dispatch?.(state.tr.setNodeAttribute(pos, 'language', language))\n        return true\n      }\n\n      return false\n    }\n)\n\nwithMeta(updateCodeBlockLanguageCommand, {\n  displayName: 'Command<updateCodeBlockLanguageCommand>',\n  group: 'CodeBlock',\n})\n\n/// Keymap for code block.\n/// - `Mod-Alt-c`: Create a code block.\nexport const codeBlockKeymap = $useKeymap('codeBlockKeymap', {\n  CreateCodeBlock: {\n    shortcuts: 'Mod-Alt-c',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(createCodeBlockCommand.key)\n    },\n  },\n})\n\nwithMeta(codeBlockKeymap.ctx, {\n  displayName: 'KeymapCtx<codeBlock>',\n  group: 'CodeBlock',\n})\n\nwithMeta(codeBlockKeymap.shortcuts, {\n  displayName: 'Keymap<codeBlock>',\n  group: 'CodeBlock',\n})\n","import { expectDomTypeError } from '@milkdown/exception'\nimport { findSelectedNodeOfType } from '@milkdown/prose'\nimport { InputRule } from '@milkdown/prose/inputrules'\nimport { $command, $inputRule, $nodeAttr, $nodeSchema } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for image node.\nexport const imageAttr = $nodeAttr('image')\n\nwithMeta(imageAttr, {\n  displayName: 'Attr<image>',\n  group: 'Image',\n})\n\n/// Schema for image node.\nexport const imageSchema = $nodeSchema('image', (ctx) => {\n  return {\n    inline: true,\n    group: 'inline',\n    selectable: true,\n    draggable: true,\n    marks: '',\n    atom: true,\n    defining: true,\n    isolating: true,\n    attrs: {\n      src: { default: '' },\n      alt: { default: '' },\n      title: { default: '' },\n    },\n    parseDOM: [\n      {\n        tag: 'img[src]',\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return {\n            src: dom.getAttribute('src') || '',\n            alt: dom.getAttribute('alt') || '',\n            title: dom.getAttribute('title') || dom.getAttribute('alt') || '',\n          }\n        },\n      },\n    ],\n    toDOM: (node) => {\n      return ['img', { ...ctx.get(imageAttr.key)(node), ...node.attrs }]\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === 'image',\n      runner: (state, node, type) => {\n        const url = node.url as string\n        const alt = node.alt as string\n        const title = node.title as string\n        state.addNode(type, {\n          src: url,\n          alt,\n          title,\n        })\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'image',\n      runner: (state, node) => {\n        state.addNode('image', undefined, undefined, {\n          title: node.attrs.title,\n          url: node.attrs.src,\n          alt: node.attrs.alt,\n        })\n      },\n    },\n  }\n})\n\nwithMeta(imageSchema.node, {\n  displayName: 'NodeSchema<image>',\n  group: 'Image',\n})\n\nwithMeta(imageSchema.ctx, {\n  displayName: 'NodeSchemaCtx<image>',\n  group: 'Image',\n})\n\n/// @internal\nexport interface UpdateImageCommandPayload {\n  src?: string\n  title?: string\n  alt?: string\n}\n\n/// This command will insert a image node.\n/// You can pass a payload to set `src`, `alt` and `title` for the image node.\nexport const insertImageCommand = $command(\n  'InsertImage',\n  (ctx) =>\n    (payload: UpdateImageCommandPayload = {}) =>\n    (state, dispatch) => {\n      if (!dispatch) return true\n\n      const { src = '', alt = '', title = '' } = payload\n\n      const node = imageSchema.type(ctx).create({ src, alt, title })\n      if (!node) return true\n\n      dispatch(state.tr.replaceSelectionWith(node).scrollIntoView())\n      return true\n    }\n)\n\nwithMeta(insertImageCommand, {\n  displayName: 'Command<insertImageCommand>',\n  group: 'Image',\n})\n\n/// This command will update the selected image node.\n/// You can pass a payload to update `src`, `alt` and `title` for the image node.\nexport const updateImageCommand = $command(\n  'UpdateImage',\n  (ctx) =>\n    (payload: UpdateImageCommandPayload = {}) =>\n    (state, dispatch) => {\n      const nodeWithPos = findSelectedNodeOfType(\n        state.selection,\n        imageSchema.type(ctx)\n      )\n      if (!nodeWithPos) return false\n\n      const { node, pos } = nodeWithPos\n\n      const newAttrs = { ...node.attrs }\n      const { src, alt, title } = payload\n      if (src !== undefined) newAttrs.src = src\n      if (alt !== undefined) newAttrs.alt = alt\n      if (title !== undefined) newAttrs.title = title\n\n      dispatch?.(\n        state.tr.setNodeMarkup(pos, undefined, newAttrs).scrollIntoView()\n      )\n      return true\n    }\n)\n\nwithMeta(updateImageCommand, {\n  displayName: 'Command<updateImageCommand>',\n  group: 'Image',\n})\n\n/// This input rule will insert a image node.\n/// You can input `![alt](src \"title\")` to insert a image node.\n/// The `title` is optional.\nexport const insertImageInputRule = $inputRule(\n  (ctx) =>\n    new InputRule(\n      /!\\[(?<alt>.*?)]\\((?<filename>.*?)\\s*(?=\"|\\))\"?(?<title>[^\"]+)?\"?\\)/,\n      (state, match, start, end) => {\n        const [matched, alt, src = '', title] = match\n        if (matched)\n          return state.tr.replaceWith(\n            start,\n            end,\n            imageSchema.type(ctx).create({ src, alt, title })\n          )\n\n        return null\n      }\n    )\n)\n\nwithMeta(insertImageInputRule, {\n  displayName: 'InputRule<insertImageInputRule>',\n  group: 'Image',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport { Selection, TextSelection } from '@milkdown/prose/state'\nimport { $command, $nodeAttr, $nodeSchema, $useKeymap } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for the hardbreak node.\n///\n/// Default value:\n/// - `data-is-inline` - Whether the hardbreak is inline.\nexport const hardbreakAttr = $nodeAttr('hardbreak', (node) => {\n  return {\n    'data-type': 'hardbreak',\n    'data-is-inline': node.attrs.isInline,\n  }\n})\n\nwithMeta(hardbreakAttr, {\n  displayName: 'Attr<hardbreak>',\n  group: 'Hardbreak',\n})\n\n/// Hardbreak node schema.\nexport const hardbreakSchema = $nodeSchema('hardbreak', (ctx) => ({\n  inline: true,\n  group: 'inline',\n  attrs: {\n    isInline: {\n      default: false,\n    },\n  },\n  selectable: false,\n  parseDOM: [\n    { tag: 'br' },\n    {\n      tag: 'span[data-type=\"hardbreak\"]',\n      getAttrs: () => ({ isInline: true }),\n    },\n  ],\n  toDOM: (node) =>\n    node.attrs.isInline\n      ? ['span', ctx.get(hardbreakAttr.key)(node), ' ']\n      : ['br', ctx.get(hardbreakAttr.key)(node)],\n  parseMarkdown: {\n    match: ({ type }) => type === 'break',\n    runner: (state, node, type) => {\n      state.addNode(type, {\n        isInline: Boolean(\n          (node.data as undefined | { isInline: boolean })?.isInline\n        ),\n      })\n    },\n  },\n  leafText: () => '\\n',\n  toMarkdown: {\n    match: (node) => node.type.name === 'hardbreak',\n    runner: (state, node) => {\n      if (node.attrs.isInline) state.addNode('text', undefined, '\\n')\n      else state.addNode('break')\n    },\n  },\n}))\n\nwithMeta(hardbreakSchema.node, {\n  displayName: 'NodeSchema<hardbreak>',\n  group: 'Hardbreak',\n})\n\nwithMeta(hardbreakSchema.ctx, {\n  displayName: 'NodeSchemaCtx<hardbreak>',\n  group: 'Hardbreak',\n})\n\n/// Command to insert a hardbreak.\nexport const insertHardbreakCommand = $command(\n  'InsertHardbreak',\n  (ctx) => () => (state, dispatch) => {\n    const { selection, tr } = state\n    if (!(selection instanceof TextSelection)) return false\n\n    if (selection.empty) {\n      // Transform two successive hardbreak into a new line\n      const node = selection.$from.node()\n      if (node.childCount > 0 && node.lastChild?.type.name === 'hardbreak') {\n        dispatch?.(\n          tr\n            .replaceRangeWith(\n              selection.to - 1,\n              selection.to,\n              state.schema.node('paragraph')\n            )\n            .setSelection(Selection.near(tr.doc.resolve(selection.to)))\n            .scrollIntoView()\n        )\n        return true\n      }\n    }\n    dispatch?.(\n      tr\n        .setMeta('hardbreak', true)\n        .replaceSelectionWith(hardbreakSchema.type(ctx).create())\n        .scrollIntoView()\n    )\n    return true\n  }\n)\n\nwithMeta(insertHardbreakCommand, {\n  displayName: 'Command<insertHardbreakCommand>',\n  group: 'Hardbreak',\n})\n\n/// Keymap for the hardbreak node.\n/// - `Shift-Enter` - Insert a hardbreak.\nexport const hardbreakKeymap = $useKeymap('hardbreakKeymap', {\n  InsertHardbreak: {\n    shortcuts: 'Shift-Enter',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(insertHardbreakCommand.key)\n    },\n  },\n})\n\nwithMeta(hardbreakKeymap.ctx, {\n  displayName: 'KeymapCtx<hardbreak>',\n  group: 'Hardbreak',\n})\n\nwithMeta(hardbreakKeymap.shortcuts, {\n  displayName: 'Keymap<hardbreak>',\n  group: 'Hardbreak',\n})\n","import { InputRule } from '@milkdown/prose/inputrules'\nimport { Selection } from '@milkdown/prose/state'\nimport { $command, $inputRule, $nodeAttr, $nodeSchema } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\nimport { paragraphSchema } from './paragraph'\n\n/// HTML attributes for the hr node.\nexport const hrAttr = $nodeAttr('hr')\n\nwithMeta(hrAttr, {\n  displayName: 'Attr<hr>',\n  group: 'Hr',\n})\n\n/// Hr node schema.\nexport const hrSchema = $nodeSchema('hr', (ctx) => ({\n  group: 'block',\n  parseDOM: [{ tag: 'hr' }],\n  toDOM: (node) => ['hr', ctx.get(hrAttr.key)(node)],\n  parseMarkdown: {\n    match: ({ type }) => type === 'thematicBreak',\n    runner: (state, _, type) => {\n      state.addNode(type)\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'hr',\n    runner: (state) => {\n      state.addNode('thematicBreak')\n    },\n  },\n}))\n\nwithMeta(hrSchema.node, {\n  displayName: 'NodeSchema<hr>',\n  group: 'Hr',\n})\n\nwithMeta(hrSchema.ctx, {\n  displayName: 'NodeSchemaCtx<hr>',\n  group: 'Hr',\n})\n\n/// Input rule to insert a hr.\n/// For example, `---` will be converted to a hr.\nexport const insertHrInputRule = $inputRule(\n  (ctx) =>\n    new InputRule(/^(?:---|___\\s|\\*\\*\\*\\s)$/, (state, match, start, end) => {\n      const { tr } = state\n\n      if (match[0]) tr.replaceWith(start - 1, end, hrSchema.type(ctx).create())\n\n      return tr\n    })\n)\n\nwithMeta(insertHrInputRule, {\n  displayName: 'InputRule<insertHrInputRule>',\n  group: 'Hr',\n})\n\n/// Command to insert a hr.\nexport const insertHrCommand = $command(\n  'InsertHr',\n  (ctx) => () => (state, dispatch) => {\n    if (!dispatch) return true\n\n    const paragraph = paragraphSchema.node.type(ctx).create()\n    const { tr, selection } = state\n    const { from } = selection\n    const node = hrSchema.type(ctx).create()\n    if (!node) return true\n\n    const _tr = tr.replaceSelectionWith(node).insert(from, paragraph)\n    const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true)\n    if (!sel) return true\n\n    dispatch(_tr.setSelection(sel).scrollIntoView())\n    return true\n  }\n)\n\nwithMeta(insertHrCommand, {\n  displayName: 'Command<insertHrCommand>',\n  group: 'Hr',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport { expectDomTypeError } from '@milkdown/exception'\nimport { wrapIn } from '@milkdown/prose/commands'\nimport { wrappingInputRule } from '@milkdown/prose/inputrules'\nimport {\n  $command,\n  $inputRule,\n  $nodeAttr,\n  $nodeSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for bullet list node.\nexport const bulletListAttr = $nodeAttr('bulletList')\n\nwithMeta(bulletListAttr, {\n  displayName: 'Attr<bulletList>',\n  group: 'BulletList',\n})\n\n/// Schema for bullet list node.\nexport const bulletListSchema = $nodeSchema('bullet_list', (ctx) => {\n  return {\n    content: 'listItem+',\n    group: 'block',\n    attrs: {\n      spread: {\n        default: false,\n      },\n    },\n    parseDOM: [\n      {\n        tag: 'ul',\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return {\n            spread: dom.dataset.spread,\n          }\n        },\n      },\n    ],\n    toDOM: (node) => {\n      return [\n        'ul',\n        {\n          ...ctx.get(bulletListAttr.key)(node),\n          'data-spread': node.attrs.spread,\n        },\n        0,\n      ]\n    },\n    parseMarkdown: {\n      match: ({ type, ordered }) => type === 'list' && !ordered,\n      runner: (state, node, type) => {\n        const spread = node.spread != null ? `${node.spread}` : 'false'\n        state.openNode(type, { spread }).next(node.children).closeNode()\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'bullet_list',\n      runner: (state, node) => {\n        state\n          .openNode('list', undefined, {\n            ordered: false,\n            spread: node.attrs.spread === 'true',\n          })\n          .next(node.content)\n          .closeNode()\n      },\n    },\n  }\n})\n\nwithMeta(bulletListSchema.node, {\n  displayName: 'NodeSchema<bulletList>',\n  group: 'BulletList',\n})\n\nwithMeta(bulletListSchema.ctx, {\n  displayName: 'NodeSchemaCtx<bulletList>',\n  group: 'BulletList',\n})\n\n/// Input rule for wrapping a block in bullet list node.\nexport const wrapInBulletListInputRule = $inputRule((ctx) =>\n  wrappingInputRule(/^\\s*([-+*])\\s$/, bulletListSchema.type(ctx))\n)\n\nwithMeta(wrapInBulletListInputRule, {\n  displayName: 'InputRule<wrapInBulletListInputRule>',\n  group: 'BulletList',\n})\n\n/// Command for creating bullet list node.\nexport const wrapInBulletListCommand = $command(\n  'WrapInBulletList',\n  (ctx) => () => wrapIn(bulletListSchema.type(ctx))\n)\n\nwithMeta(wrapInBulletListCommand, {\n  displayName: 'Command<wrapInBulletListCommand>',\n  group: 'BulletList',\n})\n\n/// Keymap for bullet list node.\n/// - `Mod-Alt-8`: Wrap a block in bullet list.\nexport const bulletListKeymap = $useKeymap('bulletListKeymap', {\n  WrapInBulletList: {\n    shortcuts: 'Mod-Alt-8',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInBulletListCommand.key)\n    },\n  },\n})\n\nwithMeta(bulletListKeymap.ctx, {\n  displayName: 'KeymapCtx<bulletListKeymap>',\n  group: 'BulletList',\n})\n\nwithMeta(bulletListKeymap.shortcuts, {\n  displayName: 'Keymap<bulletListKeymap>',\n  group: 'BulletList',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport { expectDomTypeError } from '@milkdown/exception'\nimport { wrapIn } from '@milkdown/prose/commands'\nimport { wrappingInputRule } from '@milkdown/prose/inputrules'\nimport {\n  $command,\n  $inputRule,\n  $nodeAttr,\n  $nodeSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for ordered list node.\nexport const orderedListAttr = $nodeAttr('orderedList')\n\nwithMeta(orderedListAttr, {\n  displayName: 'Attr<orderedList>',\n  group: 'OrderedList',\n})\n\n/// Schema for ordered list node.\nexport const orderedListSchema = $nodeSchema('ordered_list', (ctx) => ({\n  content: 'listItem+',\n  group: 'block',\n  attrs: {\n    order: {\n      default: 1,\n    },\n    spread: {\n      default: false,\n    },\n  },\n  parseDOM: [\n    {\n      tag: 'ol',\n      getAttrs: (dom) => {\n        if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n        return {\n          spread: dom.dataset.spread,\n          order: dom.hasAttribute('start')\n            ? Number(dom.getAttribute('start'))\n            : 1,\n        }\n      },\n    },\n  ],\n  toDOM: (node) => [\n    'ol',\n    {\n      ...ctx.get(orderedListAttr.key)(node),\n      ...(node.attrs.order === 1 ? {} : node.attrs.order),\n      'data-spread': node.attrs.spread,\n    },\n    0,\n  ],\n  parseMarkdown: {\n    match: ({ type, ordered }) => type === 'list' && !!ordered,\n    runner: (state, node, type) => {\n      const spread = node.spread != null ? `${node.spread}` : 'true'\n      state.openNode(type, { spread }).next(node.children).closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'ordered_list',\n    runner: (state, node) => {\n      state.openNode('list', undefined, {\n        ordered: true,\n        start: 1,\n        spread: node.attrs.spread === 'true',\n      })\n      state.next(node.content)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(orderedListSchema.node, {\n  displayName: 'NodeSchema<orderedList>',\n  group: 'OrderedList',\n})\n\nwithMeta(orderedListSchema.ctx, {\n  displayName: 'NodeSchemaCtx<orderedList>',\n  group: 'OrderedList',\n})\n\n/// Input rule for wrapping a block in ordered list node.\nexport const wrapInOrderedListInputRule = $inputRule((ctx) =>\n  wrappingInputRule(\n    /^\\s*(\\d+)\\.\\s$/,\n    orderedListSchema.type(ctx),\n    (match) => ({ order: Number(match[1]) }),\n    (match, node) => node.childCount + node.attrs.order === Number(match[1])\n  )\n)\n\nwithMeta(wrapInOrderedListInputRule, {\n  displayName: 'InputRule<wrapInOrderedListInputRule>',\n  group: 'OrderedList',\n})\n\n/// Command for wrapping a block in ordered list node.\nexport const wrapInOrderedListCommand = $command(\n  'WrapInOrderedList',\n  (ctx) => () => wrapIn(orderedListSchema.type(ctx))\n)\n\nwithMeta(wrapInOrderedListCommand, {\n  displayName: 'Command<wrapInOrderedListCommand>',\n  group: 'OrderedList',\n})\n\n/// Keymap for ordered list node.\n/// - `Mod-Alt-7`: Wrap a block in ordered list.\nexport const orderedListKeymap = $useKeymap('orderedListKeymap', {\n  WrapInOrderedList: {\n    shortcuts: 'Mod-Alt-7',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(wrapInOrderedListCommand.key)\n    },\n  },\n})\n\nwithMeta(orderedListKeymap.ctx, {\n  displayName: 'KeymapCtx<orderedList>',\n  group: 'OrderedList',\n})\n\nwithMeta(orderedListKeymap.shortcuts, {\n  displayName: 'Keymap<orderedList>',\n  group: 'OrderedList',\n})\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget, canJoin } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\nimport { Selection } from 'prosemirror-state';\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n/**\nAn ordered list [node spec](https://prosemirror.net/docs/ref/#model.NodeSpec). Has a single\nattribute, `order`, which determines the number at which the list\nstarts counting, and defaults to 1. Represented as an `<ol>`\nelement.\n*/\nconst orderedList = {\n    attrs: { order: { default: 1, validate: \"number\" } },\n    parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1 };\n            } }],\n    toDOM(node) {\n        return node.attrs.order == 1 ? olDOM : [\"ol\", { start: node.attrs.order }, 0];\n    }\n};\n/**\nA bullet list node spec, represented in the DOM as `<ul>`.\n*/\nconst bulletList = {\n    parseDOM: [{ tag: \"ul\" }],\n    toDOM() { return ulDOM; }\n};\n/**\nA list item (`<li>`) spec.\n*/\nconst listItem = {\n    parseDOM: [{ tag: \"li\" }],\n    toDOM() { return liDOM; },\n    defining: true\n};\nfunction add(obj, props) {\n    let copy = {};\n    for (let prop in obj)\n        copy[prop] = obj[prop];\n    for (let prop in props)\n        copy[prop] = props[prop];\n    return copy;\n}\n/**\nConvenience function for adding list-related node types to a map\nspecifying the nodes for a schema. Adds\n[`orderedList`](https://prosemirror.net/docs/ref/#schema-list.orderedList) as `\"ordered_list\"`,\n[`bulletList`](https://prosemirror.net/docs/ref/#schema-list.bulletList) as `\"bullet_list\"`, and\n[`listItem`](https://prosemirror.net/docs/ref/#schema-list.listItem) as `\"list_item\"`.\n\n`itemContent` determines the content expression for the list items.\nIf you want the commands defined in this module to apply to your\nlist structure, it should have a shape like `\"paragraph block*\"` or\n`\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\ngiven to assign a group name to the list node types, for example\n`\"block\"`.\n*/\nfunction addListNodes(nodes, itemContent, listGroup) {\n    return nodes.append({\n        ordered_list: add(orderedList, { content: \"list_item+\", group: listGroup }),\n        bullet_list: add(bulletList, { content: \"list_item+\", group: listGroup }),\n        list_item: add(listItem, { content: itemContent })\n    });\n}\n/**\nReturns a command function that wraps the selection in a list with\nthe given type an attributes. If `dispatch` is null, only return a\nvalue to indicate whether this is possible, but don't actually\nperform the change.\n*/\nfunction wrapInList(listType, attrs = null) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to);\n        if (!range)\n            return false;\n        let tr = dispatch ? state.tr : null;\n        if (!wrapRangeInList(tr, range, listType, attrs))\n            return false;\n        if (dispatch)\n            dispatch(tr.scrollIntoView());\n        return true;\n    };\n}\n/**\nTry to wrap the given node range in a list of the given type.\nReturn `true` when this is possible, `false` otherwise. When `tr`\nis non-null, the wrapping is added to that transaction. When it is\n`null`, the function only queries whether the wrapping is\npossible.\n*/\nfunction wrapRangeInList(tr, range, listType, attrs = null) {\n    let doJoin = false, outerRange = range, doc = range.$from.doc;\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && range.$from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n        // Don't do anything if this is the top of the list\n        if (range.$from.index(range.depth - 1) == 0)\n            return false;\n        let $insert = doc.resolve(range.start - 2);\n        outerRange = new NodeRange($insert, $insert, range.depth);\n        if (range.endIndex < range.parent.childCount)\n            range = new NodeRange(range.$from, doc.resolve(range.$to.end(range.depth)), range.depth);\n        doJoin = true;\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range);\n    if (!wrap)\n        return false;\n    if (tr)\n        doWrapInList(tr, range, wrap, doJoin, listType);\n    return true;\n}\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n    let content = Fragment.empty;\n    for (let i = wrappers.length - 1; i >= 0; i--)\n        content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n    tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end, new Slice(content, 0, 0), wrappers.length, true));\n    let found = 0;\n    for (let i = 0; i < wrappers.length; i++)\n        if (wrappers[i].type == listType)\n            found = i + 1;\n    let splitDepth = wrappers.length - found;\n    let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n    for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n        if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n            tr.split(splitPos, splitDepth);\n            splitPos += 2 * splitDepth;\n        }\n        splitPos += parent.child(i).nodeSize;\n    }\n    return tr;\n}\n/**\nBuild a command that splits a non-empty textblock at the top level\nof a list item by also splitting that list item.\n*/\nfunction splitListItem(itemType, itemAttrs) {\n    return function (state, dispatch) {\n        let { $from, $to, node } = state.selection;\n        if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to))\n            return false;\n        let grandParent = $from.node(-1);\n        if (grandParent.type != itemType)\n            return false;\n        if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n            // In an empty block. If this is a nested list, the wrapping\n            // list item should be split. Otherwise, bail out and let next\n            // command handle lifting.\n            if ($from.depth == 3 || $from.node(-3).type != itemType ||\n                $from.index(-2) != $from.node(-2).childCount - 1)\n                return false;\n            if (dispatch) {\n                let wrap = Fragment.empty;\n                let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n                // Build a fragment containing empty versions of the structure\n                // from the outer list item to the parent node of the cursor\n                for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n                    wrap = Fragment.from($from.node(d).copy(wrap));\n                let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n                    : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n                // Add a second list item with an empty default start node\n                wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n                let start = $from.before($from.depth - (depthBefore - 1));\n                let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n                let sel = -1;\n                tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n                    if (sel > -1)\n                        return false;\n                    if (node.isTextblock && node.content.size == 0)\n                        sel = pos + 1;\n                });\n                if (sel > -1)\n                    tr.setSelection(Selection.near(tr.doc.resolve(sel)));\n                dispatch(tr.scrollIntoView());\n            }\n            return true;\n        }\n        let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n        let tr = state.tr.delete($from.pos, $to.pos);\n        let types = nextType ? [itemAttrs ? { type: itemType, attrs: itemAttrs } : null, { type: nextType }] : undefined;\n        if (!canSplit(tr.doc, $from.pos, 2, types))\n            return false;\n        if (dispatch)\n            dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n        return true;\n    };\n}\n/**\nActs like [`splitListItem`](https://prosemirror.net/docs/ref/#schema-list.splitListItem), but\nwithout resetting the set of active marks at the cursor.\n*/\nfunction splitListItemKeepMarks(itemType, itemAttrs) {\n    let split = splitListItem(itemType, itemAttrs);\n    return (state, dispatch) => {\n        return split(state, dispatch && (tr => {\n            let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n            if (marks)\n                tr.ensureMarks(marks);\n            dispatch(tr);\n        }));\n    };\n}\n/**\nCreate a command to lift the list item around the selection up into\na wrapping list.\n*/\nfunction liftListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        if (!dispatch)\n            return true;\n        if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n            return liftToOuterList(state, dispatch, itemType, range);\n        else // Outer list node\n            return liftOutOfList(state, dispatch, range);\n    };\n}\nfunction liftToOuterList(state, dispatch, itemType, range) {\n    let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n    if (end < endOfList) {\n        // There are siblings after the lifted items, which must become\n        // children of the last item\n        tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList, new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n        range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n    }\n    const target = liftTarget(range);\n    if (target == null)\n        return false;\n    tr.lift(range, target);\n    let after = tr.mapping.map(end, -1) - 1;\n    if (canJoin(tr.doc, after))\n        tr.join(after);\n    dispatch(tr.scrollIntoView());\n    return true;\n}\nfunction liftOutOfList(state, dispatch, range) {\n    let tr = state.tr, list = range.parent;\n    // Merge the list items into a single big item\n    for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n        pos -= list.child(i).nodeSize;\n        tr.delete(pos - 1, pos + 1);\n    }\n    let $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n    if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize)\n        return false;\n    let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n    let parent = $start.node(-1), indexBefore = $start.index(-1);\n    if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1, item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n        return false;\n    let start = $start.pos, end = start + item.nodeSize;\n    // Strip off the surrounding list. At the sides where we're not at\n    // the end of the list, the existing list is closed. At sides where\n    // this is the end, it is overwritten to its end.\n    tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1, new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n        .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))), atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n    dispatch(tr.scrollIntoView());\n    return true;\n}\n/**\nCreate a command to sink the list item around the selection down\ninto an inner list.\n*/\nfunction sinkListItem(itemType) {\n    return function (state, dispatch) {\n        let { $from, $to } = state.selection;\n        let range = $from.blockRange($to, node => node.childCount > 0 && node.firstChild.type == itemType);\n        if (!range)\n            return false;\n        let startIndex = range.startIndex;\n        if (startIndex == 0)\n            return false;\n        let parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n        if (nodeBefore.type != itemType)\n            return false;\n        if (dispatch) {\n            let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n            let inner = Fragment.from(nestedBefore ? itemType.create() : null);\n            let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))), nestedBefore ? 3 : 1, 0);\n            let before = range.start, after = range.end;\n            dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after, before, after, slice, 1, true))\n                .scrollIntoView());\n        }\n        return true;\n    };\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, splitListItemKeepMarks, wrapInList, wrapRangeInList };\n","import { commandsCtx } from '@milkdown/core'\nimport { expectDomTypeError } from '@milkdown/exception'\nimport {\n  liftListItem,\n  sinkListItem,\n  splitListItem,\n} from '@milkdown/prose/schema-list'\nimport { $command, $nodeAttr, $nodeSchema, $useKeymap } from '@milkdown/utils'\nimport { type Command, TextSelection } from '@milkdown/prose/state'\nimport type { Ctx } from '@milkdown/ctx'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for list item node.\nexport const listItemAttr = $nodeAttr('listItem')\n\nwithMeta(listItemAttr, {\n  displayName: 'Attr<listItem>',\n  group: 'ListItem',\n})\n\n/// Schema for list item node.\nexport const listItemSchema = $nodeSchema('list_item', (ctx) => ({\n  group: 'listItem',\n  content: '(paragraph|blockquote) block*',\n  attrs: {\n    label: {\n      default: '•',\n    },\n    listType: {\n      default: 'bullet',\n    },\n    spread: {\n      default: 'true',\n    },\n  },\n  defining: true,\n  parseDOM: [\n    {\n      tag: 'li',\n      getAttrs: (dom) => {\n        if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n        return {\n          label: dom.dataset.label,\n          listType: dom.dataset.listType,\n          spread: dom.dataset.spread,\n        }\n      },\n    },\n  ],\n  toDOM: (node) => [\n    'li',\n    {\n      ...ctx.get(listItemAttr.key)(node),\n      'data-label': node.attrs.label,\n      'data-list-type': node.attrs.listType,\n      'data-spread': node.attrs.spread,\n    },\n    0,\n  ],\n  parseMarkdown: {\n    match: ({ type }) => type === 'listItem',\n    runner: (state, node, type) => {\n      const label = node.label != null ? `${node.label}.` : '•'\n      const listType = node.label != null ? 'ordered' : 'bullet'\n      const spread = node.spread != null ? `${node.spread}` : 'true'\n      state.openNode(type, { label, listType, spread })\n      state.next(node.children)\n      state.closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'list_item',\n    runner: (state, node) => {\n      state.openNode('listItem', undefined, {\n        spread: node.attrs.spread === 'true',\n      })\n      state.next(node.content)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(listItemSchema.node, {\n  displayName: 'NodeSchema<listItem>',\n  group: 'ListItem',\n})\n\nwithMeta(listItemSchema.ctx, {\n  displayName: 'NodeSchemaCtx<listItem>',\n  group: 'ListItem',\n})\n\n/// The command to sink list item.\n///\n/// For example:\n/// ```md\n/// * List item 1\n/// * List item 2 <- cursor here\n/// ```\n/// Will get:\n/// ```md\n/// * List item 1\n///   * List item 2\n/// ```\nexport const sinkListItemCommand = $command(\n  'SinkListItem',\n  (ctx) => () => sinkListItem(listItemSchema.type(ctx))\n)\n\nwithMeta(sinkListItemCommand, {\n  displayName: 'Command<sinkListItemCommand>',\n  group: 'ListItem',\n})\n\n/// The command to lift list item.\n///\n/// For example:\n/// ```md\n/// * List item 1\n///   * List item 2 <- cursor here\n/// ```\n/// Will get:\n/// ```md\n/// * List item 1\n/// * List item 2\n/// ```\nexport const liftListItemCommand = $command(\n  'LiftListItem',\n  (ctx) => () => liftListItem(listItemSchema.type(ctx))\n)\n\nwithMeta(liftListItemCommand, {\n  displayName: 'Command<liftListItemCommand>',\n  group: 'ListItem',\n})\n\n/// The command to split a list item.\n///\n/// For example:\n/// ```md\n/// * List item 1\n/// * List item 2 <- cursor here\n/// ```\n/// Will get:\n/// ```md\n/// * List item 1\n/// * List item 2\n/// * <- cursor here\n/// ```\nexport const splitListItemCommand = $command(\n  'SplitListItem',\n  (ctx) => () => splitListItem(listItemSchema.type(ctx))\n)\n\nwithMeta(splitListItemCommand, {\n  displayName: 'Command<splitListItemCommand>',\n  group: 'ListItem',\n})\n\nfunction liftFirstListItem(ctx: Ctx): Command {\n  return (state, dispatch, view) => {\n    const { selection } = state\n    if (!(selection instanceof TextSelection)) return false\n\n    const { empty, $from } = selection\n\n    // selection should be empty and at the start of the node\n    if (!empty || $from.parentOffset !== 0) return false\n\n    const parentItem = $from.node(-1)\n    // selection should be in list item and list item should be the first child of the list\n    if (\n      parentItem.type !== listItemSchema.type(ctx) ||\n      parentItem.firstChild !== $from.node()\n    )\n      return false\n\n    const list = $from.node(-2)\n    // list should have only one list item\n    if (list.childCount > 1) return false\n\n    return liftListItem(listItemSchema.type(ctx))(state, dispatch, view)\n  }\n}\n\n/// The command to remove list item **only if**:\n///\n/// - Selection is at the start of the list item.\n/// - List item is the only child of the list.\n///\n/// Most of the time, you shouldn't use this command directly.\nexport const liftFirstListItemCommand = $command(\n  'LiftFirstListItem',\n  (ctx) => () => liftFirstListItem(ctx)\n)\n\nwithMeta(liftFirstListItemCommand, {\n  displayName: 'Command<liftFirstListItemCommand>',\n  group: 'ListItem',\n})\n\n/// Keymap for list item node.\n/// - `<Enter>`: Split the current list item.\n/// - `<Tab>/<Mod-]>`: Sink the current list item.\n/// - `<Shift-Tab>/<Mod-[>`: Lift the current list item.\nexport const listItemKeymap = $useKeymap('listItemKeymap', {\n  NextListItem: {\n    shortcuts: 'Enter',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(splitListItemCommand.key)\n    },\n  },\n  SinkListItem: {\n    shortcuts: ['Tab', 'Mod-]'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(sinkListItemCommand.key)\n    },\n  },\n  LiftListItem: {\n    shortcuts: ['Shift-Tab', 'Mod-['],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(liftListItemCommand.key)\n    },\n  },\n  LiftFirstListItem: {\n    shortcuts: ['Backspace', 'Delete'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(liftFirstListItemCommand.key)\n    },\n  },\n})\n\nwithMeta(listItemKeymap.ctx, {\n  displayName: 'KeymapCtx<listItem>',\n  group: 'ListItem',\n})\n\nwithMeta(listItemKeymap.shortcuts, {\n  displayName: 'Keymap<listItem>',\n  group: 'ListItem',\n})\n","import { $node } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// The bottom-level node.\nexport const textSchema = $node('text', () => ({\n  group: 'inline',\n  parseMarkdown: {\n    match: ({ type }) => type === 'text',\n    runner: (state, node) => {\n      state.addText(node.value as string)\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'text',\n    runner: (state, node) => {\n      state.addNode('text', undefined, node.text as string)\n    },\n  },\n}))\n\nwithMeta(textSchema, {\n  displayName: 'NodeSchema<text>',\n  group: 'Text',\n})\n","import { $nodeAttr, $nodeSchema } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\nexport const htmlAttr = $nodeAttr('html')\n\nwithMeta(htmlAttr, {\n  displayName: 'Attr<html>',\n  group: 'Html',\n})\n\nexport const htmlSchema = $nodeSchema('html', (ctx) => {\n  return {\n    atom: true,\n    group: 'inline',\n    inline: true,\n    attrs: {\n      value: {\n        default: '',\n      },\n    },\n    toDOM: (node) => {\n      const span = document.createElement('span')\n      const attr = {\n        ...ctx.get(htmlAttr.key)(node),\n        'data-value': node.attrs.value,\n        'data-type': 'html',\n      }\n      span.textContent = node.attrs.value\n      return ['span', attr, node.attrs.value]\n    },\n    parseDOM: [\n      {\n        tag: 'span[data-type=\"html\"]',\n        getAttrs: (dom) => {\n          return {\n            value: dom.dataset.value ?? '',\n          }\n        },\n      },\n    ],\n    parseMarkdown: {\n      match: ({ type }) => Boolean(type === 'html'),\n      runner: (state, node, type) => {\n        state.addNode(type, { value: node.value as string })\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'html',\n      runner: (state, node) => {\n        state.addNode('html', undefined, node.attrs.value)\n      },\n    },\n  }\n})\n\nwithMeta(htmlSchema.node, {\n  displayName: 'NodeSchema<html>',\n  group: 'Html',\n})\n\nwithMeta(htmlSchema.ctx, {\n  displayName: 'NodeSchemaCtx<html>',\n  group: 'Html',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  emphasisAttr,\n  emphasisSchema,\n  inlineCodeAttr,\n  inlineCodeSchema,\n  linkAttr,\n  linkSchema,\n  strongAttr,\n  strongSchema,\n} from '../mark'\nimport {\n  blockquoteAttr,\n  blockquoteSchema,\n  bulletListAttr,\n  bulletListSchema,\n  codeBlockAttr,\n  codeBlockSchema,\n  docSchema,\n  hardbreakAttr,\n  hardbreakSchema,\n  headingAttr,\n  headingIdGenerator,\n  headingSchema,\n  hrAttr,\n  hrSchema,\n  htmlAttr,\n  htmlSchema,\n  imageAttr,\n  imageSchema,\n  listItemAttr,\n  listItemSchema,\n  orderedListAttr,\n  orderedListSchema,\n  paragraphAttr,\n  paragraphSchema,\n  textSchema,\n} from '../node'\n\n/// @internal\nexport const schema: MilkdownPlugin[] = [\n  docSchema,\n\n  paragraphAttr,\n  paragraphSchema,\n\n  headingIdGenerator,\n  headingAttr,\n  headingSchema,\n\n  hardbreakAttr,\n  hardbreakSchema,\n\n  blockquoteAttr,\n  blockquoteSchema,\n\n  codeBlockAttr,\n  codeBlockSchema,\n\n  hrAttr,\n  hrSchema,\n\n  imageAttr,\n  imageSchema,\n\n  bulletListAttr,\n  bulletListSchema,\n\n  orderedListAttr,\n  orderedListSchema,\n\n  listItemAttr,\n  listItemSchema,\n\n  emphasisAttr,\n  emphasisSchema,\n\n  strongAttr,\n  strongSchema,\n\n  inlineCodeAttr,\n  inlineCodeSchema,\n\n  linkAttr,\n  linkSchema,\n\n  htmlAttr,\n  htmlSchema,\n\n  textSchema,\n].flat()\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  createCodeBlockInputRule,\n  insertHrInputRule,\n  wrapInBlockquoteInputRule,\n  wrapInBulletListInputRule,\n  wrapInHeadingInputRule,\n  wrapInOrderedListInputRule,\n} from '../node'\nimport {\n  emphasisStarInputRule,\n  emphasisUnderscoreInputRule,\n  inlineCodeInputRule,\n  strongInputRule,\n} from '../mark'\n\n/// @internal\nexport const inputRules: MilkdownPlugin[] = [\n  wrapInBlockquoteInputRule,\n  wrapInBulletListInputRule,\n  wrapInOrderedListInputRule,\n  createCodeBlockInputRule,\n  insertHrInputRule,\n  wrapInHeadingInputRule,\n].flat()\n\n/// @internal\nexport const markInputRules: MilkdownPlugin[] = [\n  emphasisStarInputRule,\n  emphasisUnderscoreInputRule,\n  inlineCodeInputRule,\n  strongInputRule,\n]\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  toggleLinkCommand,\n  toggleStrongCommand,\n  updateLinkCommand,\n} from '../mark'\nimport {\n  createCodeBlockCommand,\n  downgradeHeadingCommand,\n  insertHardbreakCommand,\n  insertHrCommand,\n  insertImageCommand,\n  liftFirstListItemCommand,\n  liftListItemCommand,\n  sinkListItemCommand,\n  splitListItemCommand,\n  turnIntoTextCommand,\n  updateImageCommand,\n  wrapInBlockquoteCommand,\n  wrapInBulletListCommand,\n  wrapInHeadingCommand,\n  wrapInOrderedListCommand,\n} from '../node'\n\n/// @internal\nexport const commands: MilkdownPlugin[] = [\n  turnIntoTextCommand,\n  wrapInBlockquoteCommand,\n  wrapInHeadingCommand,\n  downgradeHeadingCommand,\n  createCodeBlockCommand,\n  insertHardbreakCommand,\n  insertHrCommand,\n\n  insertImageCommand,\n  updateImageCommand,\n\n  wrapInOrderedListCommand,\n  wrapInBulletListCommand,\n  sinkListItemCommand,\n  splitListItemCommand,\n  liftListItemCommand,\n  liftFirstListItemCommand,\n\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  toggleStrongCommand,\n\n  toggleLinkCommand,\n  updateLinkCommand,\n]\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { emphasisKeymap, inlineCodeKeymap, strongKeymap } from '../mark'\nimport {\n  blockquoteKeymap,\n  bulletListKeymap,\n  codeBlockKeymap,\n  hardbreakKeymap,\n  headingKeymap,\n  listItemKeymap,\n  orderedListKeymap,\n  paragraphKeymap,\n} from '../node'\n\n/// @internal\nexport const keymap: MilkdownPlugin[] = [\n  blockquoteKeymap,\n  codeBlockKeymap,\n  hardbreakKeymap,\n  headingKeymap,\n  listItemKeymap,\n  orderedListKeymap,\n  bulletListKeymap,\n  paragraphKeymap,\n\n  emphasisKeymap,\n  inlineCodeKeymap,\n  strongKeymap,\n].flat()\n","import { $remark } from '@milkdown/utils'\nimport { visit } from 'unist-util-visit'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to add order in list for remark AST.\nexport const remarkAddOrderInListPlugin = $remark(\n  'remarkAddOrderInList',\n  () => () => (tree) => {\n    visit(tree, 'list', (node) => {\n      if (node.ordered) {\n        const start = node.start ?? 1\n        node.children.forEach((child, index) => {\n          ;(child as unknown as Record<string, number>).label = index + start\n        })\n      }\n    })\n  }\n)\n\nwithMeta(remarkAddOrderInListPlugin.plugin, {\n  displayName: 'Remark<remarkAddOrderInListPlugin>',\n  group: 'Remark',\n})\n\nwithMeta(remarkAddOrderInListPlugin.options, {\n  displayName: 'RemarkConfig<remarkAddOrderInListPlugin>',\n  group: 'Remark',\n})\n","import { $remark } from '@milkdown/utils'\nimport type { Node } from '@milkdown/transformer'\nimport { visit } from 'unist-util-visit'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to add inline line break for remark AST.\n/// The inline line break should be treated as a `space`.\n/// And the normal line break should be treated as a `LF`.\nexport const remarkLineBreak = $remark(\n  'remarkLineBreak',\n  () => () => (tree: Node) => {\n    const find = /[\\t ]*(?:\\r?\\n|\\r)/g\n    visit(\n      tree,\n      'text',\n      (\n        node: Node & { value: string },\n        index: number,\n        parent: Node & { children: Node[] }\n      ) => {\n        if (!node.value || typeof node.value !== 'string') return\n\n        const result = []\n        let start = 0\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n\n          if (start !== position)\n            result.push({\n              type: 'text',\n              value: node.value.slice(start, position),\n            })\n\n          result.push({ type: 'break', data: { isInline: true } })\n          start = position + match[0].length\n          match = find.exec(node.value)\n        }\n\n        const hasResultAndIndex =\n          result.length > 0 && parent && typeof index === 'number'\n\n        if (!hasResultAndIndex) return\n\n        if (start < node.value.length)\n          result.push({ type: 'text', value: node.value.slice(start) })\n\n        parent.children.splice(index, 1, ...result)\n        return index + result.length\n      }\n    )\n  }\n)\n\nwithMeta(remarkLineBreak.plugin, {\n  displayName: 'Remark<remarkLineBreak>',\n  group: 'Remark',\n})\n\nwithMeta(remarkLineBreak.options, {\n  displayName: 'RemarkConfig<remarkLineBreak>',\n  group: 'Remark',\n})\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Nodes} Nodes\n */\n\n/**\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition (optional).\n * @returns {Definition | undefined}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Nodes} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Map<string, Definition>} */\n  const cache = new Map()\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', function (definition) {\n    const id = clean(definition.identifier)\n    if (id && !cache.get(id)) {\n      cache.set(id, definition)\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return cache.get(id)\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root} Root\n */\n\nimport {definitions} from 'mdast-util-definitions'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/**\n * Turn references and definitions into normal links and images.\n *\n * @returns\n *   Transform.\n */\nexport default function remarkInlineLinks() {\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    const definition = definitions(tree)\n\n    visit(tree, function (node, index, parent) {\n      if (\n        node.type === 'definition' &&\n        parent !== undefined &&\n        typeof index === 'number'\n      ) {\n        parent.children.splice(index, 1)\n        return [SKIP, index]\n      }\n\n      if (node.type === 'imageReference' || node.type === 'linkReference') {\n        const def = definition(node.identifier)\n\n        if (def && parent && typeof index === 'number') {\n          parent.children[index] =\n            node.type === 'imageReference'\n              ? {type: 'image', url: def.url, title: def.title, alt: node.alt}\n              : {\n                  type: 'link',\n                  url: def.url,\n                  title: def.title,\n                  children: node.children\n                }\n          return [SKIP, index]\n        }\n      }\n    })\n  }\n}\n","import { $remark } from '@milkdown/utils'\nimport remarkInlineLinks from 'remark-inline-links'\nimport { withMeta } from '../__internal__'\n\n/// This plugin wraps [remark-inline-links](https://github.com/remarkjs/remark-inline-links).\nexport const remarkInlineLinkPlugin = $remark(\n  'remarkInlineLink',\n  () => remarkInlineLinks\n)\n\nwithMeta(remarkInlineLinkPlugin.plugin, {\n  displayName: 'Remark<remarkInlineLinkPlugin>',\n  group: 'Remark',\n})\n\nwithMeta(remarkInlineLinkPlugin.options, {\n  displayName: 'RemarkConfig<remarkInlineLinkPlugin>',\n  group: 'Remark',\n})\n","import { $remark } from '@milkdown/utils'\nimport type { Node } from '@milkdown/transformer'\nimport { withMeta } from '../__internal__'\n\nconst isParent = (node: Node): node is Node & { children: Node[] } =>\n  !!(node as Node & { children: Node[] }).children\nconst isHTML = (\n  node: Node\n): node is Node & { children: Node[]; value: unknown } => node.type === 'html'\n\nfunction flatMapWithDepth(\n  ast: Node,\n  fn: (node: Node, index: number, parent: Node | null) => Node[]\n) {\n  return transform(ast, 0, null)[0]\n\n  function transform(node: Node, index: number, parent: Node | null) {\n    if (isParent(node)) {\n      const out = []\n      for (let i = 0, n = node.children.length; i < n; i++) {\n        const nthChild = node.children[i]\n        if (nthChild) {\n          const xs = transform(nthChild, i, node)\n          if (xs) {\n            for (let j = 0, m = xs.length; j < m; j++) {\n              const item = xs[j]\n              if (item) out.push(item)\n            }\n          }\n        }\n      }\n      node.children = out\n    }\n\n    return fn(node, index, parent)\n  }\n}\n\n/// @internal\n/// This plugin should be deprecated after we support HTML.\nexport const remarkHtmlTransformer = $remark(\n  'remarkHTMLTransformer',\n  () => () => (tree: Node) => {\n    flatMapWithDepth(tree, (node, _index, parent) => {\n      if (!isHTML(node)) return [node]\n\n      if (parent?.type === 'root') {\n        node.children = [{ ...node }]\n        delete node.value\n        ;(node as { type: string }).type = 'paragraph'\n      }\n\n      return [node]\n    })\n  }\n)\n\nwithMeta(remarkHtmlTransformer.plugin, {\n  displayName: 'Remark<remarkHtmlTransformer>',\n  group: 'Remark',\n})\n\nwithMeta(remarkHtmlTransformer.options, {\n  displayName: 'RemarkConfig<remarkHtmlTransformer>',\n  group: 'Remark',\n})\n","import { $remark } from '@milkdown/utils'\nimport type { Node } from '@milkdown/transformer'\nimport { visit } from 'unist-util-visit'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to keep the marker (`_` and `*`) of emphasis and strong nodes.\nexport const remarkMarker = $remark(\n  'remarkMarker',\n  () => () => (tree, file) => {\n    const getMarker = (node: Node) => {\n      return (file.value as string).charAt(node.position!.start.offset!)\n    }\n    visit(\n      tree,\n      (node: Node) => ['strong', 'emphasis'].includes(node.type),\n      (node: Node) => {\n        ;(node as Node & { marker: string }).marker = getMarker(node)\n      }\n    )\n  }\n)\n\nwithMeta(remarkMarker.plugin, {\n  displayName: 'Remark<remarkMarker>',\n  group: 'Remark',\n})\n\nwithMeta(remarkMarker.options, {\n  displayName: 'RemarkConfig<remarkMarker>',\n  group: 'Remark',\n})\n","import { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { Decoration, DecorationSet } from '@milkdown/prose/view'\nimport { $prose } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is to solve the [chrome 98 bug](https://discuss.prosemirror.net/t/cursor-jumps-at-the-end-of-line-when-it-betweens-two-inline-nodes/4641).\nexport const inlineNodesCursorPlugin = $prose(() => {\n  let lock = false\n  const inlineNodesCursorPluginKey = new PluginKey(\n    'MILKDOWN_INLINE_NODES_CURSOR'\n  )\n  const inlineNodesCursorPlugin: Plugin = new Plugin({\n    key: inlineNodesCursorPluginKey,\n    state: {\n      init() {\n        return false\n      },\n      apply(tr) {\n        if (!tr.selection.empty) return false\n\n        const pos = tr.selection.$from\n        const left = pos.nodeBefore\n        const right = pos.nodeAfter\n        if (\n          left &&\n          right &&\n          left.isInline &&\n          !left.isText &&\n          right.isInline &&\n          !right.isText\n        )\n          return true\n\n        return false\n      },\n    },\n    props: {\n      handleDOMEvents: {\n        compositionend: (view, e) => {\n          if (lock) {\n            lock = false\n            requestAnimationFrame(() => {\n              const active = inlineNodesCursorPlugin.getState(view.state)\n              if (active) {\n                const from = view.state.selection.from\n                e.preventDefault()\n                view.dispatch(view.state.tr.insertText(e.data || '', from))\n              }\n            })\n\n            return true\n          }\n          return false\n        },\n        compositionstart: (view) => {\n          const active = inlineNodesCursorPlugin.getState(view.state)\n          if (active) lock = true\n\n          return false\n        },\n        beforeinput: (view, e) => {\n          const active = inlineNodesCursorPlugin.getState(view.state)\n          if (active && e instanceof InputEvent && e.data && !lock) {\n            const from = view.state.selection.from\n            e.preventDefault()\n            view.dispatch(view.state.tr.insertText(e.data || '', from))\n\n            return true\n          }\n\n          return false\n        },\n      },\n      decorations(state) {\n        const active = inlineNodesCursorPlugin.getState(state)\n        if (active) {\n          const pos = state.selection.$from\n          const position = pos.pos\n          const left = document.createElement('span')\n          const leftDec = Decoration.widget(position, left, {\n            side: -1,\n          })\n          const right = document.createElement('span')\n          const rightDec = Decoration.widget(position, right)\n          setTimeout(() => {\n            left.contentEditable = 'true'\n            right.contentEditable = 'true'\n          })\n          return DecorationSet.create(state.doc, [leftDec, rightDec])\n        }\n        return DecorationSet.empty\n      },\n    },\n  })\n\n  return inlineNodesCursorPlugin\n})\n\nwithMeta(inlineNodesCursorPlugin, {\n  displayName: 'Prose<inlineNodesCursorPlugin>',\n  group: 'Prose',\n})\n","import { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { AddMarkStep, ReplaceStep } from '@milkdown/prose/transform'\nimport { $prose } from '@milkdown/utils'\nimport { hardbreakSchema } from '../node'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to clear the marks around the hardbreak node.\nexport const hardbreakClearMarkPlugin = $prose((ctx) => {\n  return new Plugin({\n    key: new PluginKey('MILKDOWN_HARDBREAK_MARKS'),\n    appendTransaction: (trs, _oldState, newState) => {\n      if (!trs.length) return\n\n      const [tr] = trs\n      if (!tr) return\n\n      const [step] = tr.steps\n\n      const isInsertHr = tr.getMeta('hardbreak')\n      if (isInsertHr) {\n        if (!(step instanceof ReplaceStep)) return\n\n        const { from } = step as unknown as { from: number }\n        return newState.tr.setNodeMarkup(\n          from,\n          hardbreakSchema.type(ctx),\n          undefined,\n          []\n        )\n      }\n\n      const isAddMarkStep = step instanceof AddMarkStep\n      if (isAddMarkStep) {\n        let _tr = newState.tr\n        const { from, to } = step as unknown as { from: number; to: number }\n        newState.doc.nodesBetween(from, to, (node, pos) => {\n          if (node.type === hardbreakSchema.type(ctx))\n            _tr = _tr.setNodeMarkup(\n              pos,\n              hardbreakSchema.type(ctx),\n              undefined,\n              []\n            )\n        })\n\n        return _tr\n      }\n\n      return undefined\n    },\n  })\n})\n\nwithMeta(hardbreakClearMarkPlugin, {\n  displayName: 'Prose<hardbreakClearMarkPlugin>',\n  group: 'Prose',\n})\n","import { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { $ctx, $prose } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// This slice contains the nodes that within which the hardbreak will be ignored.\nexport const hardbreakFilterNodes = $ctx(\n  ['table', 'code_block'],\n  'hardbreakFilterNodes'\n)\n\nwithMeta(hardbreakFilterNodes, {\n  displayName: 'Ctx<hardbreakFilterNodes>',\n  group: 'Prose',\n})\n\n/// This plugin is used to filter the hardbreak node.\n/// If the hardbreak is going to be inserted within a node that is in the `hardbreakFilterNodes`, ignore it.\nexport const hardbreakFilterPlugin = $prose((ctx) => {\n  const notIn = ctx.get(hardbreakFilterNodes.key)\n  return new Plugin({\n    key: new PluginKey('MILKDOWN_HARDBREAK_FILTER'),\n    filterTransaction: (tr, state) => {\n      const isInsertHr = tr.getMeta('hardbreak')\n      const [step] = tr.steps\n      if (isInsertHr && step) {\n        const { from } = step as unknown as { from: number }\n        const $from = state.doc.resolve(from)\n        let curDepth = $from.depth\n        let canApply = true\n        while (curDepth > 0) {\n          if (notIn.includes($from.node(curDepth).type.name)) canApply = false\n\n          curDepth--\n        }\n        return canApply\n      }\n      return true\n    },\n  })\n})\n\nwithMeta(hardbreakFilterPlugin, {\n  displayName: 'Prose<hardbreakFilterPlugin>',\n  group: 'Prose',\n})\n","import { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { $prose } from '@milkdown/utils'\nimport { headingIdGenerator, headingSchema } from '../node/heading'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to sync the heading id when the heading content changes.\n/// It will use the `headingIdGenerator` to generate the id.\nexport const syncHeadingIdPlugin = $prose((ctx) => {\n  const headingIdPluginKey = new PluginKey('MILKDOWN_HEADING_ID')\n\n  const updateId = (view: EditorView) => {\n    if (view.composing) return\n\n    const getId = ctx.get(headingIdGenerator.key)\n    const tr = view.state.tr.setMeta('addToHistory', false)\n\n    let found = false\n    const idMap: Record<string, number> = {}\n\n    view.state.doc.descendants((node, pos) => {\n      if (node.type === headingSchema.type(ctx)) {\n        if (node.textContent.trim().length === 0) return\n\n        const attrs = node.attrs\n        let id = getId(node)\n        if (idMap[id]) {\n          idMap[id]! += 1\n          id += `-#${idMap[id]}`\n        } else {\n          idMap[id] = 1\n        }\n\n        if (attrs.id !== id) {\n          found = true\n          tr.setMeta(headingIdPluginKey, true).setNodeMarkup(pos, undefined, {\n            ...attrs,\n            id,\n          })\n        }\n      }\n    })\n\n    if (found) view.dispatch(tr)\n  }\n\n  return new Plugin({\n    key: headingIdPluginKey,\n    view: (view) => {\n      updateId(view)\n\n      return {\n        update: (view, prevState) => {\n          if (view.state.doc.eq(prevState.doc)) return\n          updateId(view)\n        },\n      }\n    },\n  })\n})\n\nwithMeta(syncHeadingIdPlugin, {\n  displayName: 'Prose<syncHeadingIdPlugin>',\n  group: 'Prose',\n})\n","import { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { $prose } from '@milkdown/utils'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { listItemSchema } from '../node/list-item'\n\nimport { orderedListSchema } from '../node/ordered-list'\nimport { bulletListSchema } from '../node'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to keep the label of list item up to date in ordered list.\nexport const syncListOrderPlugin = $prose((ctx) => {\n  const syncOrderLabel = (view: EditorView) => {\n    if (view.composing || !view.editable) return\n\n    const orderedListType = orderedListSchema.type(ctx)\n    const bulletListType = bulletListSchema.type(ctx)\n    const listItemType = listItemSchema.type(ctx)\n    const state = view.state\n    const handleNodeItem = (\n      attrs: Record<string, any>,\n      index: number\n    ): boolean => {\n      let changed = false\n      const expectedLabel = `${index + 1}.`\n      if (attrs.label !== expectedLabel) {\n        attrs.label = expectedLabel\n        changed = true\n      }\n\n      return changed\n    }\n\n    let tr = state.tr\n    let needDispatch = false\n    state.doc.descendants((node, pos, parent, index) => {\n      if (node.type === bulletListType) {\n        const base = node.maybeChild(0)\n        if (base?.type === listItemType && base.attrs.listType === 'ordered') {\n          needDispatch = true\n          tr.setNodeMarkup(pos, orderedListType, { spread: 'true' })\n\n          node.descendants((child, pos, _parent, index) => {\n            if (child.type === listItemType) {\n              const attrs = { ...child.attrs }\n              const changed = handleNodeItem(attrs, index)\n              if (changed) tr = tr.setNodeMarkup(pos, undefined, attrs)\n            }\n            return false\n          })\n        }\n      } else if (\n        node.type === listItemType &&\n        parent?.type === orderedListType\n      ) {\n        const attrs = { ...node.attrs }\n        let changed = false\n        if (attrs.listType !== 'ordered') {\n          attrs.listType = 'ordered'\n          changed = true\n        }\n\n        const base = parent?.maybeChild(0)\n        if (base) changed = handleNodeItem(attrs, index)\n\n        if (changed) {\n          tr = tr.setNodeMarkup(pos, undefined, attrs)\n          needDispatch = true\n        }\n      }\n    })\n\n    if (needDispatch) view.dispatch(tr.setMeta('addToHistory', false))\n  }\n  return new Plugin({\n    key: new PluginKey('MILKDOWN_KEEP_LIST_ORDER'),\n    view: (view) => {\n      syncOrderLabel(view)\n      return {\n        update: (view) => {\n          syncOrderLabel(view)\n        },\n      }\n    },\n  })\n})\n\nwithMeta(syncListOrderPlugin, {\n  displayName: 'Prose<syncListOrderPlugin>',\n  group: 'Prose',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  hardbreakClearMarkPlugin,\n  hardbreakFilterNodes,\n  hardbreakFilterPlugin,\n  inlineNodesCursorPlugin,\n  remarkAddOrderInListPlugin,\n  remarkHtmlTransformer,\n  remarkInlineLinkPlugin,\n  remarkLineBreak,\n  remarkMarker,\n  syncHeadingIdPlugin,\n  syncListOrderPlugin,\n} from '../plugin'\n\n/// @internal\nexport const plugins: MilkdownPlugin[] = [\n  hardbreakClearMarkPlugin,\n  hardbreakFilterNodes,\n  hardbreakFilterPlugin,\n\n  inlineNodesCursorPlugin,\n\n  remarkAddOrderInListPlugin,\n  remarkInlineLinkPlugin,\n  remarkLineBreak,\n  remarkHtmlTransformer,\n  remarkMarker,\n\n  syncHeadingIdPlugin,\n  syncListOrderPlugin,\n].flat()\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  commands,\n  inputRules,\n  keymap,\n  markInputRules,\n  plugins,\n  schema,\n} from './composed'\n\nexport * from './node'\nexport * from './mark'\nexport * from './plugin'\nexport * from './composed'\n\n/// The commonmark preset, includes all the plugins.\nexport const commonmark: MilkdownPlugin[] = [\n  schema,\n  inputRules,\n  markInputRules,\n  commands,\n  keymap,\n  plugins,\n].flat()\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { $ctx } from '@milkdown/utils'\nimport type { Extension } from '@codemirror/state'\nimport type { LanguageDescription } from '@codemirror/language'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport interface CodeBlockConfig {\n  extensions: Extension[]\n  languages: LanguageDescription[]\n  expandIcon: () => ReturnType<typeof html> | string | HTMLElement\n  searchIcon: () => ReturnType<typeof html> | string | HTMLElement\n  clearSearchIcon: () => ReturnType<typeof html> | string | HTMLElement\n  searchPlaceholder: string\n  noResultText: string\n  renderLanguage: (\n    language: string,\n    selected: boolean\n  ) => ReturnType<typeof html>\n}\n\nexport const defaultConfig: CodeBlockConfig = {\n  extensions: [],\n  languages: [],\n  expandIcon: () => '⬇',\n  searchIcon: () => '🔍',\n  clearSearchIcon: () => '⌫',\n  searchPlaceholder: 'Search language',\n  noResultText: 'No result',\n  renderLanguage: (language) => html`${language}`,\n}\n\nexport const codeBlockConfig = $ctx(defaultConfig, 'codeBlockConfigCtx')\n\nwithMeta(codeBlockConfig, {\n  displayName: 'Config<code-block>',\n  group: 'CodeBlock',\n})\n","export function defIfNotExists(\n  tagName: string,\n  element: CustomElementConstructor\n) {\n  const current = customElements.get(tagName)\n  if (current == null) {\n    customElements.define(tagName, element)\n    return\n  }\n\n  if (current === element) return\n\n  // eslint-disable-next-line no-console\n  console.warn(`Custom element ${tagName} has been defined before.`)\n}\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nexport default RopeSequence;\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n// Used to schedule history compression\nconst max_empty_items = 500;\nclass Branch {\n    constructor(items, eventCount) {\n        this.items = items;\n        this.eventCount = eventCount;\n    }\n    // Pop the latest event off the branch's history and apply it\n    // to a document transform.\n    popEvent(state, preserveItems) {\n        if (this.eventCount == 0)\n            return null;\n        let end = this.items.length;\n        for (;; end--) {\n            let next = this.items.get(end - 1);\n            if (next.selection) {\n                --end;\n                break;\n            }\n        }\n        let remap, mapFrom;\n        if (preserveItems) {\n            remap = this.remapping(end, this.items.length);\n            mapFrom = remap.maps.length;\n        }\n        let transform = state.tr;\n        let selection, remaining;\n        let addAfter = [], addBefore = [];\n        this.items.forEach((item, i) => {\n            if (!item.step) {\n                if (!remap) {\n                    remap = this.remapping(end, i + 1);\n                    mapFrom = remap.maps.length;\n                }\n                mapFrom--;\n                addBefore.push(item);\n                return;\n            }\n            if (remap) {\n                addBefore.push(new Item(item.map));\n                let step = item.step.map(remap.slice(mapFrom)), map;\n                if (step && transform.maybeStep(step).doc) {\n                    map = transform.mapping.maps[transform.mapping.maps.length - 1];\n                    addAfter.push(new Item(map, undefined, undefined, addAfter.length + addBefore.length));\n                }\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n            }\n            else {\n                transform.maybeStep(item.step);\n            }\n            if (item.selection) {\n                selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n                remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1);\n                return false;\n            }\n        }, this.items.length, 0);\n        return { remaining: remaining, transform, selection: selection };\n    }\n    // Create a new branch with the given transform added.\n    addTransform(transform, selection, histOptions, preserveItems) {\n        let newItems = [], eventCount = this.eventCount;\n        let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n        for (let i = 0; i < transform.steps.length; i++) {\n            let step = transform.steps[i].invert(transform.docs[i]);\n            let item = new Item(transform.mapping.maps[i], step, selection), merged;\n            if (merged = lastItem && lastItem.merge(item)) {\n                item = merged;\n                if (i)\n                    newItems.pop();\n                else\n                    oldItems = oldItems.slice(0, oldItems.length - 1);\n            }\n            newItems.push(item);\n            if (selection) {\n                eventCount++;\n                selection = undefined;\n            }\n            if (!preserveItems)\n                lastItem = item;\n        }\n        let overflow = eventCount - histOptions.depth;\n        if (overflow > DEPTH_OVERFLOW) {\n            oldItems = cutOffEvents(oldItems, overflow);\n            eventCount -= overflow;\n        }\n        return new Branch(oldItems.append(newItems), eventCount);\n    }\n    remapping(from, to) {\n        let maps = new Mapping;\n        this.items.forEach((item, i) => {\n            let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n                ? maps.maps.length - item.mirrorOffset : undefined;\n            maps.appendMap(item.map, mirrorPos);\n        }, from, to);\n        return maps;\n    }\n    addMaps(array) {\n        if (this.eventCount == 0)\n            return this;\n        return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount);\n    }\n    // When the collab module receives remote changes, the history has\n    // to know about those, so that it can adjust the steps that were\n    // rebased on top of the remote changes, and include the position\n    // maps for the remote changes in its array of items.\n    rebased(rebasedTransform, rebasedCount) {\n        if (!this.eventCount)\n            return this;\n        let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n        let mapping = rebasedTransform.mapping;\n        let newUntil = rebasedTransform.steps.length;\n        let eventCount = this.eventCount;\n        this.items.forEach(item => { if (item.selection)\n            eventCount--; }, start);\n        let iRebased = rebasedCount;\n        this.items.forEach(item => {\n            let pos = mapping.getMirror(--iRebased);\n            if (pos == null)\n                return;\n            newUntil = Math.min(newUntil, pos);\n            let map = mapping.maps[pos];\n            if (item.step) {\n                let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n                let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n                if (selection)\n                    eventCount++;\n                rebasedItems.push(new Item(map, step, selection));\n            }\n            else {\n                rebasedItems.push(new Item(map));\n            }\n        }, start);\n        let newMaps = [];\n        for (let i = rebasedCount; i < newUntil; i++)\n            newMaps.push(new Item(mapping.maps[i]));\n        let items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n        let branch = new Branch(items, eventCount);\n        if (branch.emptyItemCount() > max_empty_items)\n            branch = branch.compress(this.items.length - rebasedItems.length);\n        return branch;\n    }\n    emptyItemCount() {\n        let count = 0;\n        this.items.forEach(item => { if (!item.step)\n            count++; });\n        return count;\n    }\n    // Compressing a branch means rewriting it to push the air (map-only\n    // items) out. During collaboration, these naturally accumulate\n    // because each remote change adds one. The `upto` argument is used\n    // to ensure that only the items below a given level are compressed,\n    // because `rebased` relies on a clean, untouched set of items in\n    // order to associate old items with rebased steps.\n    compress(upto = this.items.length) {\n        let remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n        let items = [], events = 0;\n        this.items.forEach((item, i) => {\n            if (i >= upto) {\n                items.push(item);\n                if (item.selection)\n                    events++;\n            }\n            else if (item.step) {\n                let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n                mapFrom--;\n                if (map)\n                    remap.appendMap(map, mapFrom);\n                if (step) {\n                    let selection = item.selection && item.selection.map(remap.slice(mapFrom));\n                    if (selection)\n                        events++;\n                    let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n                    if (merged = items.length && items[last].merge(newItem))\n                        items[last] = merged;\n                    else\n                        items.push(newItem);\n                }\n            }\n            else if (item.map) {\n                mapFrom--;\n            }\n        }, this.items.length, 0);\n        return new Branch(RopeSequence.from(items.reverse()), events);\n    }\n}\nBranch.empty = new Branch(RopeSequence.empty, 0);\nfunction cutOffEvents(items, n) {\n    let cutPoint;\n    items.forEach((item, i) => {\n        if (item.selection && (n-- == 0)) {\n            cutPoint = i;\n            return false;\n        }\n    });\n    return items.slice(cutPoint);\n}\nclass Item {\n    constructor(\n    // The (forward) step map for this item.\n    map, \n    // The inverted step\n    step, \n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    selection, \n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    mirrorOffset) {\n        this.map = map;\n        this.step = step;\n        this.selection = selection;\n        this.mirrorOffset = mirrorOffset;\n    }\n    merge(other) {\n        if (this.step && other.step && !other.selection) {\n            let step = other.step.merge(this.step);\n            if (step)\n                return new Item(step.getMap().invert(), step, this.selection);\n        }\n    }\n}\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nclass HistoryState {\n    constructor(done, undone, prevRanges, prevTime, prevComposition) {\n        this.done = done;\n        this.undone = undone;\n        this.prevRanges = prevRanges;\n        this.prevTime = prevTime;\n        this.prevComposition = prevComposition;\n    }\n}\nconst DEPTH_OVERFLOW = 20;\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n    let historyTr = tr.getMeta(historyKey), rebased;\n    if (historyTr)\n        return historyTr.historyState;\n    if (tr.getMeta(closeHistoryKey))\n        history = new HistoryState(history.done, history.undone, null, 0, -1);\n    let appended = tr.getMeta(\"appendedTransaction\");\n    if (tr.steps.length == 0) {\n        return history;\n    }\n    else if (appended && appended.getMeta(historyKey)) {\n        if (appended.getMeta(historyKey).redo)\n            return new HistoryState(history.done.addTransform(tr, undefined, options, mustPreserveItems(state)), history.undone, rangesFor(tr.mapping.maps), history.prevTime, history.prevComposition);\n        else\n            return new HistoryState(history.done, history.undone.addTransform(tr, undefined, options, mustPreserveItems(state)), null, history.prevTime, history.prevComposition);\n    }\n    else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n        // Group transforms that occur in quick succession into one event.\n        let composition = tr.getMeta(\"composition\");\n        let newGroup = history.prevTime == 0 ||\n            (!appended && history.prevComposition != composition &&\n                (history.prevTime < (tr.time || 0) - options.newGroupDelay || !isAdjacentTo(tr, history.prevRanges)));\n        let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps);\n        return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : undefined, options, mustPreserveItems(state)), Branch.empty, prevRanges, tr.time, composition == null ? history.prevComposition : composition);\n    }\n    else if (rebased = tr.getMeta(\"rebased\")) {\n        // Used by the collab module to tell the history that some of its\n        // content has been rebased.\n        return new HistoryState(history.done.rebased(tr, rebased), history.undone.rebased(tr, rebased), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n    else {\n        return new HistoryState(history.done.addMaps(tr.mapping.maps), history.undone.addMaps(tr.mapping.maps), mapRanges(history.prevRanges, tr.mapping), history.prevTime, history.prevComposition);\n    }\n}\nfunction isAdjacentTo(transform, prevRanges) {\n    if (!prevRanges)\n        return false;\n    if (!transform.docChanged)\n        return true;\n    let adjacent = false;\n    transform.mapping.maps[0].forEach((start, end) => {\n        for (let i = 0; i < prevRanges.length; i += 2)\n            if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n                adjacent = true;\n    });\n    return adjacent;\n}\nfunction rangesFor(maps) {\n    let result = [];\n    for (let i = maps.length - 1; i >= 0 && result.length == 0; i--)\n        maps[i].forEach((_from, _to, from, to) => result.push(from, to));\n    return result;\n}\nfunction mapRanges(ranges, mapping) {\n    if (!ranges)\n        return null;\n    let result = [];\n    for (let i = 0; i < ranges.length; i += 2) {\n        let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n        if (from <= to)\n            result.push(from, to);\n    }\n    return result;\n}\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, redo) {\n    let preserveItems = mustPreserveItems(state);\n    let histOptions = historyKey.get(state).spec.config;\n    let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n    if (!pop)\n        return null;\n    let selection = pop.selection.resolve(pop.transform.doc);\n    let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(), histOptions, preserveItems);\n    let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0, -1);\n    return pop.transform.setSelection(selection).setMeta(historyKey, { redo, historyState: newHist });\n}\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n    let plugins = state.plugins;\n    if (cachedPreserveItemsPlugins != plugins) {\n        cachedPreserveItems = false;\n        cachedPreserveItemsPlugins = plugins;\n        for (let i = 0; i < plugins.length; i++)\n            if (plugins[i].spec.historyPreserveItems) {\n                cachedPreserveItems = true;\n                break;\n            }\n    }\n    return cachedPreserveItems;\n}\n/**\nSet a flag on the given transaction that will prevent further steps\nfrom being appended to an existing history event (so that they\nrequire a separate undo command to undo).\n*/\nfunction closeHistory(tr) {\n    return tr.setMeta(closeHistoryKey, true);\n}\nconst historyKey = new PluginKey(\"history\");\nconst closeHistoryKey = new PluginKey(\"closeHistory\");\n/**\nReturns a plugin that enables the undo history for an editor. The\nplugin will track undo and redo stacks, which can be used with the\n[`undo`](https://prosemirror.net/docs/ref/#history.undo) and [`redo`](https://prosemirror.net/docs/ref/#history.redo) commands.\n\nYou can set an `\"addToHistory\"` [metadata\nproperty](https://prosemirror.net/docs/ref/#state.Transaction.setMeta) of `false` on a transaction\nto prevent it from being rolled back by undo.\n*/\nfunction history(config = {}) {\n    config = { depth: config.depth || 100,\n        newGroupDelay: config.newGroupDelay || 500 };\n    return new Plugin({\n        key: historyKey,\n        state: {\n            init() {\n                return new HistoryState(Branch.empty, Branch.empty, null, 0, -1);\n            },\n            apply(tr, hist, state) {\n                return applyTransaction(hist, state, tr, config);\n            }\n        },\n        config,\n        props: {\n            handleDOMEvents: {\n                beforeinput(view, e) {\n                    let inputType = e.inputType;\n                    let command = inputType == \"historyUndo\" ? undo : inputType == \"historyRedo\" ? redo : null;\n                    if (!command)\n                        return false;\n                    e.preventDefault();\n                    return command(view.state, view.dispatch);\n                }\n            }\n        }\n    });\n}\nfunction buildCommand(redo, scroll) {\n    return (state, dispatch) => {\n        let hist = historyKey.getState(state);\n        if (!hist || (redo ? hist.undone : hist.done).eventCount == 0)\n            return false;\n        if (dispatch) {\n            let tr = histTransaction(hist, state, redo);\n            if (tr)\n                dispatch(scroll ? tr.scrollIntoView() : tr);\n        }\n        return true;\n    };\n}\n/**\nA command function that undoes the last change, if any.\n*/\nconst undo = buildCommand(false, true);\n/**\nA command function that redoes the last undone change, if any.\n*/\nconst redo = buildCommand(true, true);\n/**\nA command function that undoes the last change. Don't scroll the\nselection into view.\n*/\nconst undoNoScroll = buildCommand(false, false);\n/**\nA command function that redoes the last undone change. Don't\nscroll the selection into view.\n*/\nconst redoNoScroll = buildCommand(true, false);\n/**\nThe amount of undoable events available in a given state.\n*/\nfunction undoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.done.eventCount : 0;\n}\n/**\nThe amount of redoable events available in a given editor state.\n*/\nfunction redoDepth(state) {\n    let hist = historyKey.getState(state);\n    return hist ? hist.undone.eventCount : 0;\n}\n\nexport { closeHistory, history, redo, redoDepth, redoNoScroll, undo, undoDepth, undoNoScroll };\n","import type { EditorView, NodeView } from '@milkdown/prose/view'\nimport {\n  EditorView as CodeMirror,\n  type KeyBinding,\n  type ViewUpdate,\n  keymap as cmKeymap,\n} from '@codemirror/view'\nimport type { Node } from '@milkdown/prose/model'\nimport { redo, undo } from '@milkdown/prose/history'\nimport { Compartment, EditorState } from '@codemirror/state'\nimport type { Line, SelectionRange } from '@codemirror/state'\nimport { exitCode } from '@milkdown/prose/commands'\nimport { TextSelection } from '@milkdown/prose/state'\n\nimport type { CodeBlockConfig } from '../config'\nimport type { CodeComponentProps } from './component'\nimport type { LanguageLoader } from './loader'\n\nexport class CodeMirrorBlock implements NodeView {\n  dom: HTMLElement & CodeComponentProps\n  cm: CodeMirror\n\n  private updating = false\n  private languageName: string = ''\n\n  private readonly languageConf: Compartment\n  private readonly readOnlyConf: Compartment\n\n  constructor(\n    public node: Node,\n    public view: EditorView,\n    public getPos: () => number | undefined,\n    public loader: LanguageLoader,\n    public config: CodeBlockConfig\n  ) {\n    this.languageConf = new Compartment()\n    this.readOnlyConf = new Compartment()\n\n    this.cm = new CodeMirror({\n      doc: this.node.textContent,\n      root: this.view.root,\n      extensions: [\n        this.readOnlyConf.of(EditorState.readOnly.of(!this.view.editable)),\n        cmKeymap.of(this.codeMirrorKeymap()),\n        this.languageConf.of([]),\n        ...config.extensions,\n        CodeMirror.updateListener.of(this.forwardUpdate),\n      ],\n    })\n\n    this.dom = this.createDom()\n\n    this.updateLanguage()\n  }\n\n  private forwardUpdate = (update: ViewUpdate) => {\n    if (this.updating || !this.cm.hasFocus) return\n    let offset = (this.getPos() ?? 0) + 1\n    const { main } = update.state.selection\n    const selFrom = offset + main.from\n    const selTo = offset + main.to\n    const pmSel = this.view.state.selection\n    if (update.docChanged || pmSel.from !== selFrom || pmSel.to !== selTo) {\n      const tr = this.view.state.tr\n      update.changes.iterChanges((fromA, toA, fromB, toB, text) => {\n        if (text.length)\n          tr.replaceWith(\n            offset + fromA,\n            offset + toA,\n            this.view.state.schema.text(text.toString())\n          )\n        else tr.delete(offset + fromA, offset + toA)\n        offset += toB - fromB - (toA - fromA)\n      })\n      tr.setSelection(TextSelection.create(tr.doc, selFrom, selTo))\n      this.view.dispatch(tr)\n    }\n  }\n\n  private createDom() {\n    const dom = document.createElement('milkdown-code-block') as HTMLElement &\n      CodeComponentProps\n    dom.codemirror = this.cm\n    dom.getAllLanguages = this.getAllLanguages\n    dom.setLanguage = this.setLanguage\n    dom.isEditorReadonly = () => !this.view.editable\n    const { languages, extensions, ...viewConfig } = this.config\n    dom.config = viewConfig\n    return dom\n  }\n\n  private updateLanguage() {\n    const languageName = this.node.attrs.language\n\n    if (languageName === this.languageName) return\n\n    this.dom.language = languageName\n    const language = this.loader.load(languageName ?? '')\n\n    language.then((lang) => {\n      if (lang) {\n        this.cm.dispatch({\n          effects: this.languageConf.reconfigure(lang),\n        })\n        this.languageName = languageName\n      }\n    })\n  }\n\n  private codeMirrorKeymap = (): KeyBinding[] => {\n    const view = this.view\n    return [\n      { key: 'ArrowUp', run: () => this.maybeEscape('line', -1) },\n      { key: 'ArrowLeft', run: () => this.maybeEscape('char', -1) },\n      { key: 'ArrowDown', run: () => this.maybeEscape('line', 1) },\n      { key: 'ArrowRight', run: () => this.maybeEscape('char', 1) },\n      {\n        key: 'Mod-Enter',\n        run: () => {\n          if (!exitCode(view.state, view.dispatch)) return false\n\n          view.focus()\n          return true\n        },\n      },\n      { key: 'Mod-z', run: () => undo(view.state, view.dispatch) },\n      { key: 'Shift-Mod-z', run: () => redo(view.state, view.dispatch) },\n      { key: 'Mod-y', run: () => redo(view.state, view.dispatch) },\n      {\n        key: 'Backspace',\n        run: () => {\n          const ranges = this.cm.state.selection.ranges\n\n          if (ranges.length > 1) return false\n\n          const selection = ranges[0]\n\n          if (selection && (!selection.empty || selection.anchor > 0))\n            return false\n\n          if (this.cm.state.doc.lines >= 2) return false\n\n          const state = this.view.state\n          const pos = this.getPos() ?? 0\n          const tr = state.tr.replaceWith(\n            pos,\n            pos + this.node.nodeSize,\n            state.schema.nodes.paragraph!.createChecked({}, this.node.content)\n          )\n\n          tr.setSelection(TextSelection.near(tr.doc.resolve(pos)))\n\n          this.view.dispatch(tr)\n          this.view.focus()\n          return true\n        },\n      },\n    ]\n  }\n\n  private maybeEscape = (unit: 'line' | 'char', dir: -1 | 1): boolean => {\n    const { state } = this.cm\n    let main: SelectionRange | Line = state.selection.main\n    if (!main.empty) return false\n    if (unit === 'line') main = state.doc.lineAt(main.head)\n    if (dir < 0 ? main.from > 0 : main.to < state.doc.length) return false\n\n    const targetPos = (this.getPos() ?? 0) + (dir < 0 ? 0 : this.node.nodeSize)\n    const selection = TextSelection.near(\n      this.view.state.doc.resolve(targetPos),\n      dir\n    )\n    const tr = this.view.state.tr.setSelection(selection).scrollIntoView()\n    this.view.dispatch(tr)\n    this.view.focus()\n    return true\n  }\n\n  setSelection(anchor: number, head: number) {\n    if (!this.cm.dom.isConnected) return\n\n    this.cm.focus()\n    this.updating = true\n    this.cm.dispatch({ selection: { anchor, head } })\n    this.updating = false\n  }\n\n  update(node: Node) {\n    if (node.type !== this.node.type) return false\n\n    if (this.updating) return true\n\n    this.node = node\n    this.updateLanguage()\n    if (this.view.editable === this.cm.state.readOnly) {\n      this.cm.dispatch({\n        effects: this.readOnlyConf.reconfigure(\n          EditorState.readOnly.of(!this.view.editable)\n        ),\n      })\n    }\n\n    const change = computeChange(this.cm.state.doc.toString(), node.textContent)\n    if (change) {\n      this.updating = true\n      this.cm.dispatch({\n        changes: { from: change.from, to: change.to, insert: change.text },\n      })\n      this.updating = false\n    }\n    return true\n  }\n\n  selectNode() {\n    this.dom.selected = true\n    this.cm.focus()\n  }\n\n  deselectNode() {\n    this.dom.selected = false\n  }\n\n  stopEvent() {\n    return true\n  }\n\n  destroy() {\n    this.cm.destroy()\n  }\n\n  setLanguage = (language: string) => {\n    this.view.dispatch(\n      this.view.state.tr.setNodeAttribute(\n        this.getPos() ?? 0,\n        'language',\n        language\n      )\n    )\n  }\n\n  getAllLanguages = () => {\n    return this.loader.getAll()\n  }\n}\n\nfunction computeChange(\n  oldVal: string,\n  newVal: string\n): { from: number; to: number; text: string } | null {\n  if (oldVal === newVal) return null\n\n  let start = 0\n  let oldEnd = oldVal.length\n  let newEnd = newVal.length\n\n  while (\n    start < oldEnd &&\n    oldVal.charCodeAt(start) === newVal.charCodeAt(start)\n  )\n    ++start\n\n  while (\n    oldEnd > start &&\n    newEnd > start &&\n    oldVal.charCodeAt(oldEnd - 1) === newVal.charCodeAt(newEnd - 1)\n  ) {\n    oldEnd--\n    newEnd--\n  }\n\n  return { from: start, to: oldEnd, text: newVal.slice(start, newEnd) }\n}\n","import type { LanguageDescription, LanguageSupport } from '@codemirror/language'\n\nexport interface LanguageInfo {\n  name: string\n  alias: readonly string[]\n}\n\nexport class LanguageLoader {\n  private readonly map: Record<string, LanguageDescription>\n\n  constructor(private languages: LanguageDescription[]) {\n    this.map = {}\n\n    languages.forEach((language) => {\n      language.alias.forEach((alias) => {\n        this.map[alias] = language\n      })\n    })\n  }\n\n  getAll(): LanguageInfo[] {\n    return this.languages.map((language): LanguageInfo => {\n      return {\n        name: language.name,\n        alias: language.alias,\n      }\n    })\n  }\n\n  load(languageName: string): Promise<LanguageSupport | undefined> {\n    const languageMap = this.map\n    const language = languageMap[languageName.toLowerCase()]\n\n    if (!language) return Promise.resolve(undefined)\n\n    if (language.support) return Promise.resolve(language.support)\n\n    return language.load()\n  }\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import type { EditorView as CodeMirror } from '@codemirror/view'\nimport type { Component } from 'atomico'\nimport {\n  c,\n  h,\n  html,\n  useEffect,\n  useHost,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'atomico'\nimport { computePosition } from '@floating-ui/dom'\nimport clsx from 'clsx'\nimport type { CodeBlockConfig } from '../config'\nimport type { LanguageInfo } from './loader'\n\nexport interface CodeComponentProps {\n  selected: boolean\n  codemirror: CodeMirror\n  language: string\n  getAllLanguages: () => Array<LanguageInfo>\n  setLanguage: (language: string) => void\n  isEditorReadonly: () => boolean\n  config: Omit<CodeBlockConfig, 'languages' | 'extensions'>\n}\n\nexport const codeComponent: Component<CodeComponentProps> = ({\n  selected = false,\n  codemirror,\n  getAllLanguages,\n  setLanguage,\n  language,\n  config,\n  isEditorReadonly,\n}) => {\n  const host = useHost()\n  const triggerRef = useRef<HTMLButtonElement>()\n  const pickerRef = useRef<HTMLDivElement>()\n  const searchRef = useRef<HTMLInputElement>()\n  const [filter, setFilter] = useState('')\n  const [showPicker, setShowPicker] = useState(false)\n\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  useEffect(() => {\n    const lang = getAllLanguages?.()?.find((languageInfo) =>\n      languageInfo.alias.some(\n        (alias) => alias.toLowerCase() === language?.toLowerCase()\n      )\n    )\n\n    if (lang && lang.name !== language) setLanguage?.(lang.name)\n  }, [language])\n\n  useEffect(() => {\n    setShowPicker(false)\n  }, [language])\n\n  useEffect(() => {\n    const clickHandler = (e: MouseEvent) => {\n      const target = e.target as HTMLElement\n\n      if (triggerRef.current && triggerRef.current.contains(target)) return\n\n      const picker = pickerRef.current\n      if (!picker) return\n\n      if (picker.dataset.expanded !== 'true') return\n\n      if (!picker.contains(target)) setShowPicker(false)\n    }\n\n    root.addEventListener('click', clickHandler)\n\n    return () => {\n      root.removeEventListener('click', clickHandler)\n    }\n  }, [])\n\n  useLayoutEffect(() => {\n    setFilter('')\n    const picker = triggerRef.current\n    const languageList = pickerRef.current\n    if (!picker || !languageList) return\n\n    computePosition(picker, languageList, {\n      placement: 'bottom-start',\n    }).then(({ x, y }) => {\n      Object.assign(languageList.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n    })\n  }, [showPicker])\n\n  const languages = useMemo(() => {\n    if (!showPicker) return []\n\n    const all = getAllLanguages?.() ?? []\n\n    const selected = all.find(\n      (languageInfo) =>\n        languageInfo.name.toLowerCase() === language?.toLowerCase()\n    )\n\n    const filtered = all.filter((languageInfo) => {\n      return (\n        (languageInfo.name.toLowerCase().includes(filter.toLowerCase()) ||\n          languageInfo.alias.some((alias) =>\n            alias.toLowerCase().includes(filter.toLowerCase())\n          )) &&\n        languageInfo !== selected\n      )\n    })\n\n    if (filtered.length === 0) return []\n\n    if (!selected) return filtered\n\n    return [selected, ...filtered]\n  }, [filter, showPicker, language])\n\n  const changeFilter = (e: InputEvent) => {\n    const target = e.target as HTMLInputElement\n    setFilter(target.value)\n  }\n\n  const onTogglePicker = (e: Event) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (isEditorReadonly?.()) return\n\n    setShowPicker((show) => {\n      if (!show) {\n        setTimeout(() => searchRef.current?.focus(), 0)\n      }\n      return !show\n    })\n  }\n\n  const onClear = (e: MouseEvent) => {\n    e.preventDefault()\n    setFilter('')\n  }\n\n  const onSearchKeydown = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') setFilter('')\n  }\n\n  const onListKeydown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      const active = document.activeElement\n      if (active instanceof HTMLElement && active.dataset.language)\n        setLanguage?.(active.dataset.language)\n    }\n  }\n\n  const renderedLanguageList = useMemo(() => {\n    if (!languages?.length)\n      return html`<li class=\"language-list-item no-result\">\n        ${config?.noResultText}\n      </li>`\n\n    return languages.map(\n      (languageInfo) =>\n        html`<li\n          role=\"listitem\"\n          tabindex=\"0\"\n          class=\"language-list-item\"\n          aria-selected=${languageInfo.name.toLowerCase() ===\n          language?.toLowerCase()}\n          data-language=${languageInfo.name}\n          onclick=${() => setLanguage?.(languageInfo.name)}\n        >\n          ${config?.renderLanguage?.(\n            languageInfo.name,\n            languageInfo.name.toLowerCase() === language?.toLowerCase()\n          )}\n        </li>`\n    )\n  }, [languages])\n\n  return html`<host class=${clsx(selected && 'selected')}>\n    <div class=\"tools\">\n      <button\n        type=\"button\"\n        ref=${triggerRef}\n        class=\"language-button\"\n        onpointerdown=${onTogglePicker}\n        data-expanded=${showPicker}\n      >\n        ${language || 'Text'}\n        <div class=\"expand-icon\">${config?.expandIcon?.()}</div>\n      </button>\n      <div\n        ref=${pickerRef}\n        data-expanded=${showPicker}\n        class=${clsx('language-picker', showPicker && 'show')}\n      >\n        <div class=\"list-wrapper\">\n          <div class=\"search-box\">\n            <div class=\"search-icon\">${config?.searchIcon?.()}</div>\n            <input\n              ref=${searchRef}\n              class=\"search-input\"\n              placeholder=${config?.searchPlaceholder}\n              value=${filter}\n              oninput=${changeFilter}\n              onkeydown=${onSearchKeydown}\n            />\n            <div\n              class=${clsx('clear-icon', filter.length === 0 && 'hidden')}\n              onmousedown=${onClear}\n            >\n              ${config?.clearSearchIcon?.()}\n            </div>\n          </div>\n          <ul class=\"language-list\" role=\"listbox\" onkeydown=${onListKeydown}>\n            ${renderedLanguageList}\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"codemirror-host\">${h(codemirror?.dom, {})}</div>\n  </host>`\n}\n\ncodeComponent.props = {\n  selected: Boolean,\n  codemirror: Object,\n  language: String,\n  getAllLanguages: Function,\n  setLanguage: Function,\n  isEditorReadonly: Function,\n  config: Object,\n}\n\nexport const CodeElement = c(codeComponent)\n","import { $view } from '@milkdown/utils'\nimport { codeBlockSchema } from '@milkdown/preset-commonmark'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\nimport { codeBlockConfig } from '../config'\nimport { withMeta } from '../../__internal__/meta'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { CodeMirrorBlock } from './node-view'\nimport { LanguageLoader } from './loader'\nimport { CodeElement } from './component'\n\ndefIfNotExists('milkdown-code-block', CodeElement)\nexport const codeBlockView = $view(\n  codeBlockSchema.node,\n  (ctx): NodeViewConstructor => {\n    const config = ctx.get(codeBlockConfig.key)\n    const languageLoader = new LanguageLoader(config.languages)\n    return (node, view, getPos) =>\n      new CodeMirrorBlock(node, view, getPos, languageLoader, config)\n  }\n)\n\nwithMeta(codeBlockView, {\n  displayName: 'NodeView<code-block>',\n  group: 'CodeBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { codeBlockView } from './view'\nimport { codeBlockConfig } from './config'\n\nexport * from './config'\nexport * from './view'\n\nexport const codeBlockComponent: MilkdownPlugin[] = [\n  codeBlockView,\n  codeBlockConfig,\n]\n","import { html } from 'atomico'\n\nexport const alignCenterIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M4.25 20.5C4.0375 20.5 3.85942 20.4281 3.71575 20.2843C3.57192 20.1404 3.5 19.9622 3.5 19.7498C3.5 19.5371 3.57192 19.359 3.71575 19.2155C3.85942 19.0718 4.0375 19 4.25 19H19.75C19.9625 19 20.1406 19.0719 20.2843 19.2158C20.4281 19.3596 20.5 19.5378 20.5 19.7502C20.5 19.9629 20.4281 20.141 20.2843 20.2845C20.1406 20.4282 19.9625 20.5 19.75 20.5H4.25ZM8.25 16.625C8.0375 16.625 7.85942 16.5531 7.71575 16.4093C7.57192 16.2654 7.5 16.0872 7.5 15.8748C7.5 15.6621 7.57192 15.484 7.71575 15.3405C7.85942 15.1968 8.0375 15.125 8.25 15.125H15.75C15.9625 15.125 16.1406 15.1969 16.2843 15.3408C16.4281 15.4846 16.5 15.6628 16.5 15.8753C16.5 16.0879 16.4281 16.266 16.2843 16.4095C16.1406 16.5532 15.9625 16.625 15.75 16.625H8.25ZM4.25 12.75C4.0375 12.75 3.85942 12.6781 3.71575 12.5343C3.57192 12.3904 3.5 12.2122 3.5 11.9998C3.5 11.7871 3.57192 11.609 3.71575 11.4655C3.85942 11.3218 4.0375 11.25 4.25 11.25H19.75C19.9625 11.25 20.1406 11.3219 20.2843 11.4658C20.4281 11.6096 20.5 11.7878 20.5 12.0003C20.5 12.2129 20.4281 12.391 20.2843 12.5345C20.1406 12.6782 19.9625 12.75 19.75 12.75H4.25ZM8.25 8.875C8.0375 8.875 7.85942 8.80308 7.71575 8.65925C7.57192 8.51542 7.5 8.33725 7.5 8.12475C7.5 7.91208 7.57192 7.734 7.71575 7.5905C7.85942 7.44683 8.0375 7.375 8.25 7.375H15.75C15.9625 7.375 16.1406 7.44692 16.2843 7.59075C16.4281 7.73458 16.5 7.91275 16.5 8.12525C16.5 8.33792 16.4281 8.516 16.2843 8.6595C16.1406 8.80317 15.9625 8.875 15.75 8.875H8.25ZM4.25 5C4.0375 5 3.85942 4.92808 3.71575 4.78425C3.57192 4.64042 3.5 4.46225 3.5 4.24975C3.5 4.03708 3.57192 3.859 3.71575 3.7155C3.85942 3.57183 4.0375 3.5 4.25 3.5H19.75C19.9625 3.5 20.1406 3.57192 20.2843 3.71575C20.4281 3.85958 20.5 4.03775 20.5 4.25025C20.5 4.46292 20.4281 4.641 20.2843 4.7845C20.1406 4.92817 19.9625 5 19.75 5H4.25Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const alignLeftIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M4.25 20.5C4.0375 20.5 3.85942 20.4281 3.71575 20.2843C3.57192 20.1404 3.5 19.9622 3.5 19.7498C3.5 19.5371 3.57192 19.359 3.71575 19.2155C3.85942 19.0718 4.0375 19 4.25 19H19.75C19.9625 19 20.1406 19.0719 20.2843 19.2158C20.4281 19.3596 20.5 19.5378 20.5 19.7502C20.5 19.9629 20.4281 20.141 20.2843 20.2845C20.1406 20.4282 19.9625 20.5 19.75 20.5H4.25ZM4.25 16.625C4.0375 16.625 3.85942 16.5531 3.71575 16.4093C3.57192 16.2654 3.5 16.0872 3.5 15.8748C3.5 15.6621 3.57192 15.484 3.71575 15.3405C3.85942 15.1968 4.0375 15.125 4.25 15.125H13.75C13.9625 15.125 14.1406 15.1969 14.2843 15.3408C14.4281 15.4846 14.5 15.6628 14.5 15.8753C14.5 16.0879 14.4281 16.266 14.2843 16.4095C14.1406 16.5532 13.9625 16.625 13.75 16.625H4.25ZM4.25 12.75C4.0375 12.75 3.85942 12.6781 3.71575 12.5343C3.57192 12.3904 3.5 12.2122 3.5 11.9998C3.5 11.7871 3.57192 11.609 3.71575 11.4655C3.85942 11.3218 4.0375 11.25 4.25 11.25H19.75C19.9625 11.25 20.1406 11.3219 20.2843 11.4658C20.4281 11.6096 20.5 11.7878 20.5 12.0003C20.5 12.2129 20.4281 12.391 20.2843 12.5345C20.1406 12.6782 19.9625 12.75 19.75 12.75H4.25ZM4.25 8.875C4.0375 8.875 3.85942 8.80308 3.71575 8.65925C3.57192 8.51542 3.5 8.33725 3.5 8.12475C3.5 7.91208 3.57192 7.734 3.71575 7.5905C3.85942 7.44683 4.0375 7.375 4.25 7.375H13.75C13.9625 7.375 14.1406 7.44692 14.2843 7.59075C14.4281 7.73458 14.5 7.91275 14.5 8.12525C14.5 8.33792 14.4281 8.516 14.2843 8.6595C14.1406 8.80317 13.9625 8.875 13.75 8.875H4.25ZM4.25 5C4.0375 5 3.85942 4.92808 3.71575 4.78425C3.57192 4.64042 3.5 4.46225 3.5 4.24975C3.5 4.03708 3.57192 3.859 3.71575 3.7155C3.85942 3.57183 4.0375 3.5 4.25 3.5H19.75C19.9625 3.5 20.1406 3.57192 20.2843 3.71575C20.4281 3.85958 20.5 4.03775 20.5 4.25025C20.5 4.46292 20.4281 4.641 20.2843 4.7845C20.1406 4.92817 19.9625 5 19.75 5H4.25Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const alignRightIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M4.25 5C4.0375 5 3.85942 4.92808 3.71575 4.78425C3.57192 4.64042 3.5 4.46225 3.5 4.24975C3.5 4.03708 3.57192 3.859 3.71575 3.7155C3.85942 3.57183 4.0375 3.5 4.25 3.5H19.75C19.9625 3.5 20.1406 3.57192 20.2843 3.71575C20.4281 3.85958 20.5 4.03775 20.5 4.25025C20.5 4.46292 20.4281 4.641 20.2843 4.7845C20.1406 4.92817 19.9625 5 19.75 5H4.25ZM10.25 8.875C10.0375 8.875 9.85942 8.80308 9.71575 8.65925C9.57192 8.51542 9.5 8.33725 9.5 8.12475C9.5 7.91208 9.57192 7.734 9.71575 7.5905C9.85942 7.44683 10.0375 7.375 10.25 7.375H19.75C19.9625 7.375 20.1406 7.44692 20.2843 7.59075C20.4281 7.73458 20.5 7.91275 20.5 8.12525C20.5 8.33792 20.4281 8.516 20.2843 8.6595C20.1406 8.80317 19.9625 8.875 19.75 8.875H10.25ZM4.25 12.75C4.0375 12.75 3.85942 12.6781 3.71575 12.5343C3.57192 12.3904 3.5 12.2122 3.5 11.9998C3.5 11.7871 3.57192 11.609 3.71575 11.4655C3.85942 11.3218 4.0375 11.25 4.25 11.25H19.75C19.9625 11.25 20.1406 11.3219 20.2843 11.4658C20.4281 11.6096 20.5 11.7878 20.5 12.0003C20.5 12.2129 20.4281 12.391 20.2843 12.5345C20.1406 12.6782 19.9625 12.75 19.75 12.75H4.25ZM10.25 16.625C10.0375 16.625 9.85942 16.5531 9.71575 16.4093C9.57192 16.2654 9.5 16.0872 9.5 15.8748C9.5 15.6621 9.57192 15.484 9.71575 15.3405C9.85942 15.1968 10.0375 15.125 10.25 15.125H19.75C19.9625 15.125 20.1406 15.1969 20.2843 15.3408C20.4281 15.4846 20.5 15.6628 20.5 15.8753C20.5 16.0879 20.4281 16.266 20.2843 16.4095C20.1406 16.5532 19.9625 16.625 19.75 16.625H10.25ZM4.25 20.5C4.0375 20.5 3.85942 20.4281 3.71575 20.2843C3.57192 20.1404 3.5 19.9622 3.5 19.7498C3.5 19.5371 3.57192 19.359 3.71575 19.2155C3.85942 19.0718 4.0375 19 4.25 19H19.75C19.9625 19 20.1406 19.0719 20.2843 19.2158C20.4281 19.3596 20.5 19.5378 20.5 19.7502C20.5 19.9629 20.4281 20.141 20.2843 20.2845C20.1406 20.4282 19.9625 20.5 19.75 20.5H4.25Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const boldIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M8.85758 18.625C8.4358 18.625 8.07715 18.4772 7.78163 18.1817C7.48613 17.8862 7.33838 17.5275 7.33838 17.1058V6.8942C7.33838 6.47242 7.48613 6.11377 7.78163 5.81825C8.07715 5.52275 8.4358 5.375 8.85758 5.375H12.1999C13.2191 5.375 14.1406 5.69231 14.9643 6.32693C15.788 6.96154 16.1999 7.81603 16.1999 8.89038C16.1999 9.63779 16.0194 10.2471 15.6585 10.7183C15.2976 11.1894 14.9088 11.5314 14.4922 11.7442C15.005 11.9211 15.4947 12.2708 15.9614 12.7933C16.428 13.3157 16.6614 14.0192 16.6614 14.9038C16.6614 16.182 16.1902 17.1217 15.2479 17.723C14.3056 18.3243 13.3563 18.625 12.3999 18.625H8.85758ZM9.4883 16.6327H12.3191C13.1063 16.6327 13.6627 16.4141 13.9884 15.9769C14.314 15.5397 14.4768 15.1205 14.4768 14.7192C14.4768 14.3179 14.314 13.8987 13.9884 13.4615C13.6627 13.0243 13.0909 12.8057 12.273 12.8057H9.4883V16.6327ZM9.4883 10.875H12.0826C12.6903 10.875 13.172 10.7013 13.5278 10.3539C13.8836 10.0064 14.0615 9.59037 14.0615 9.10575C14.0615 8.59035 13.8733 8.16918 13.497 7.84225C13.1207 7.51533 12.6595 7.35188 12.1133 7.35188H9.4883V10.875Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const bulletIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_952_6527)\">\n      <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_952_6527\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const bulletListIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8070)\">\n      <path\n        d=\"M4 10.5C3.17 10.5 2.5 11.17 2.5 12C2.5 12.83 3.17 13.5 4 13.5C4.83 13.5 5.5 12.83 5.5 12C5.5 11.17 4.83 10.5 4 10.5ZM4 4.5C3.17 4.5 2.5 5.17 2.5 6C2.5 6.83 3.17 7.5 4 7.5C4.83 7.5 5.5 6.83 5.5 6C5.5 5.17 4.83 4.5 4 4.5ZM4 16.5C3.17 16.5 2.5 17.18 2.5 18C2.5 18.82 3.18 19.5 4 19.5C4.82 19.5 5.5 18.82 5.5 18C5.5 17.18 4.83 16.5 4 16.5ZM8 19H20C20.55 19 21 18.55 21 18C21 17.45 20.55 17 20 17H8C7.45 17 7 17.45 7 18C7 18.55 7.45 19 8 19ZM8 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H8C7.45 11 7 11.45 7 12C7 12.55 7.45 13 8 13ZM7 6C7 6.55 7.45 7 8 7H20C20.55 7 21 6.55 21 6C21 5.45 20.55 5 20 5H8C7.45 5 7 5.45 7 6Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8070\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const captionIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"32\"\n    height=\"32\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M9 22a1 1 0 0 1-1-1v-3H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6.1l-3.7 3.71c-.2.19-.45.29-.7.29zm1-6v3.08L13.08 16H20V4H4v12z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const checkBoxCheckedIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_1803_1151)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM10.71 16.29C10.32 16.68 9.69 16.68 9.3 16.29L5.71 12.7C5.32 12.31 5.32 11.68 5.71 11.29C6.1 10.9 6.73 10.9 7.12 11.29L10 14.17L16.88 7.29C17.27 6.9 17.9 6.9 18.29 7.29C18.68 7.68 18.68 8.31 18.29 8.7L10.71 16.29Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1803_1151\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const checkBoxUncheckedIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_1803_535)\">\n      <path\n        d=\"M18 19H6C5.45 19 5 18.55 5 18V6C5 5.45 5.45 5 6 5H18C18.55 5 19 5.45 19 6V18C19 18.55 18.55 19 18 19ZM19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1803_535\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const chevronDownIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    class=\"w-6 h-6\"\n  >\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const clearIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_1098_15553)\">\n      <path\n        d=\"M18.3007 5.70973C17.9107 5.31973 17.2807 5.31973 16.8907 5.70973L12.0007 10.5897L7.1107 5.69973C6.7207 5.30973 6.0907 5.30973 5.7007 5.69973C5.3107 6.08973 5.3107 6.71973 5.7007 7.10973L10.5907 11.9997L5.7007 16.8897C5.3107 17.2797 5.3107 17.9097 5.7007 18.2997C6.0907 18.6897 6.7207 18.6897 7.1107 18.2997L12.0007 13.4097L16.8907 18.2997C17.2807 18.6897 17.9107 18.6897 18.3007 18.2997C18.6907 17.9097 18.6907 17.2797 18.3007 16.8897L13.4107 11.9997L18.3007 7.10973C18.6807 6.72973 18.6807 6.08973 18.3007 5.70973Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1098_15553\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const codeIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8081)\">\n      <path\n        d=\"M9.4 16.6L4.8 12L9.4 7.4L8 6L2 12L8 18L9.4 16.6ZM14.6 16.6L19.2 12L14.6 7.4L16 6L22 12L16 18L14.6 16.6Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8081\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const confirmIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n  >\n    <g clip-path=\"url(#clip0_1013_1606)\">\n      <path\n        d=\"M9.00012 16.1998L5.50012 12.6998C5.11012 12.3098 4.49012 12.3098 4.10012 12.6998C3.71012 13.0898 3.71012 13.7098 4.10012 14.0998L8.29012 18.2898C8.68012 18.6798 9.31012 18.6798 9.70012 18.2898L20.3001 7.69982C20.6901 7.30982 20.6901 6.68982 20.3001 6.29982C19.9101 5.90982 19.2901 5.90982 18.9001 6.29982L9.00012 16.1998Z\"\n        fill=\"#817567\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1013_1606\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const copyIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"24px\"\n    viewBox=\"0 -960 960 960\"\n    width=\"24px\"\n    fill=\"none\"\n  >\n    <path\n      d=\"M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const dividerIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7900)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M19 13H5C4.45 13 4 12.55 4 12C4 11.45 4.45 11 5 11H19C19.55 11 20 11.45 20 12C20 12.55 19.55 13 19 13Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7900\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const dragHandleIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n  >\n    <path\n      d=\"M3.5 9.83366C3.35833 9.83366 3.23961 9.78571 3.14383 9.68983C3.04794 9.59394 3 9.47516 3 9.33349C3 9.19171 3.04794 9.07299 3.14383 8.97733C3.23961 8.88155 3.35833 8.83366 3.5 8.83366H12.5C12.6417 8.83366 12.7604 8.8816 12.8562 8.97749C12.9521 9.07338 13 9.19216 13 9.33383C13 9.4756 12.9521 9.59433 12.8562 9.68999C12.7604 9.78577 12.6417 9.83366 12.5 9.83366H3.5ZM3.5 7.16699C3.35833 7.16699 3.23961 7.11905 3.14383 7.02316C3.04794 6.92727 3 6.80849 3 6.66683C3 6.52505 3.04794 6.40633 3.14383 6.31066C3.23961 6.21488 3.35833 6.16699 3.5 6.16699H12.5C12.6417 6.16699 12.7604 6.21494 12.8562 6.31083C12.9521 6.40671 13 6.52549 13 6.66716C13 6.80894 12.9521 6.92766 12.8562 7.02333C12.7604 7.1191 12.6417 7.16699 12.5 7.16699H3.5Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const editIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_1013_1585)\">\n      <path\n        d=\"M14.06 9.02L14.98 9.94L5.92 19H5V18.08L14.06 9.02ZM17.66 3C17.41 3 17.15 3.1 16.96 3.29L15.13 5.12L18.88 8.87L20.71 7.04C21.1 6.65 21.1 6.02 20.71 5.63L18.37 3.29C18.17 3.09 17.92 3 17.66 3ZM14.06 6.19L3 17.25V21H6.75L17.81 9.94L14.06 6.19Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1013_1585\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const h1Icon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5553)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM12 17H14V7H10V9H12V17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5553\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const h2Icon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5559)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM15 15H11V13H13C14.1 13 15 12.11 15 11V9C15 7.89 14.1 7 13 7H9V9H13V11H11C9.9 11 9 11.89 9 13V17H15V15Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5559\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const h3Icon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5565)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM15 15V13.5C15 12.67 14.33 12 13.5 12C14.33 12 15 11.33 15 10.5V9C15 7.89 14.1 7 13 7H9V9H13V11H11V13H13V15H9V17H13C14.1 17 15 16.11 15 15Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5565\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const h4Icon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7757)\">\n      <path\n        d=\"M19.04 3H5.04004C3.94004 3 3.04004 3.9 3.04004 5V19C3.04004 20.1 3.94004 21 5.04004 21H19.04C20.14 21 21.04 20.1 21.04 19V5C21.04 3.9 20.14 3 19.04 3ZM19.04 19H5.04004V5H19.04V19ZM13.04 17H15.04V7H13.04V11H11.04V7H9.04004V13H13.04V17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7757\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const h5Icon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7760)\">\n      <path\n        d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM15 15V13C15 11.89 14.1 11 13 11H11V9H15V7H9V13H13V15H9V17H13C14.1 17 15 16.11 15 15Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7760\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const h6Icon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7763)\">\n      <path\n        d=\"M11 17H13C14.1 17 15 16.11 15 15V13C15 11.89 14.1 11 13 11H11V9H15V7H11C9.9 7 9 7.89 9 9V15C9 16.11 9.9 17 11 17ZM11 13H13V15H11V13ZM19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7763\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const imageIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8075)\">\n      <path\n        d=\"M19 5V19H5V5H19ZM19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM14.14 11.86L11.14 15.73L9 13.14L6 17H18L14.14 11.86Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8075\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const italicIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M6.29811 18.625C6.04505 18.625 5.83115 18.5375 5.65641 18.3626C5.48166 18.1877 5.39429 17.9736 5.39429 17.7203C5.39429 17.467 5.48166 17.2532 5.65641 17.0788C5.83115 16.9045 6.04505 16.8173 6.29811 16.8173H9.21159L12.452 7.18265H9.53851C9.28545 7.18265 9.07155 7.0952 8.89681 6.9203C8.72206 6.7454 8.63469 6.5313 8.63469 6.278C8.63469 6.02472 8.72206 5.81089 8.89681 5.63652C9.07155 5.46217 9.28545 5.375 9.53851 5.375H16.8847C17.1377 5.375 17.3516 5.46245 17.5264 5.63735C17.7011 5.81225 17.7885 6.02634 17.7885 6.27962C17.7885 6.53293 17.7011 6.74676 17.5264 6.92113C17.3516 7.09548 17.1377 7.18265 16.8847 7.18265H14.2789L11.0385 16.8173H13.6443C13.8973 16.8173 14.1112 16.9048 14.286 17.0797C14.4607 17.2546 14.5481 17.4687 14.5481 17.722C14.5481 17.9752 14.4607 18.1891 14.286 18.3634C14.1112 18.5378 13.8973 18.625 13.6443 18.625H6.29811Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const linkIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M17.0385 19.5003V16.5388H14.0769V15.0388H17.0385V12.0773H18.5384V15.0388H21.5V16.5388H18.5384V19.5003H17.0385ZM10.8077 16.5388H7.03845C5.78282 16.5388 4.7125 16.0963 3.8275 15.2114C2.9425 14.3266 2.5 13.2564 2.5 12.0009C2.5 10.7454 2.9425 9.67504 3.8275 8.78979C4.7125 7.90454 5.78282 7.46191 7.03845 7.46191H10.8077V8.96186H7.03845C6.1987 8.96186 5.48235 9.25834 4.8894 9.85129C4.29645 10.4442 3.99998 11.1606 3.99998 12.0003C3.99998 12.8401 4.29645 13.5564 4.8894 14.1494C5.48235 14.7423 6.1987 15.0388 7.03845 15.0388H10.8077V16.5388ZM8.25 12.7503V11.2504H15.75V12.7503H8.25ZM21.5 12.0003H20C20 11.1606 19.7035 10.4442 19.1106 9.85129C18.5176 9.25834 17.8013 8.96186 16.9615 8.96186H13.1923V7.46191H16.9615C18.2171 7.46191 19.2875 7.90441 20.1725 8.78939C21.0575 9.67439 21.5 10.7447 21.5 12.0003Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const menuIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_971_7680)\">\n      <path\n        d=\"M11 18C11 19.1 10.1 20 9 20C7.9 20 7 19.1 7 18C7 16.9 7.9 16 9 16C10.1 16 11 16.9 11 18ZM9 10C7.9 10 7 10.9 7 12C7 13.1 7.9 14 9 14C10.1 14 11 13.1 11 12C11 10.9 10.1 10 9 10ZM9 4C7.9 4 7 4.9 7 6C7 7.1 7.9 8 9 8C10.1 8 11 7.1 11 6C11 4.9 10.1 4 9 4ZM15 8C16.1 8 17 7.1 17 6C17 4.9 16.1 4 15 4C13.9 4 13 4.9 13 6C13 7.1 13.9 8 15 8ZM15 10C13.9 10 13 10.9 13 12C13 13.1 13.9 14 15 14C16.1 14 17 13.1 17 12C17 10.9 16.1 10 15 10ZM15 16C13.9 16 13 16.9 13 18C13 19.1 13.9 20 15 20C16.1 20 17 19.1 17 18C17 16.9 16.1 16 15 16Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_971_7680\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const orderedListIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8067)\">\n      <path\n        d=\"M8 7H20C20.55 7 21 6.55 21 6C21 5.45 20.55 5 20 5H8C7.45 5 7 5.45 7 6C7 6.55 7.45 7 8 7ZM20 17H8C7.45 17 7 17.45 7 18C7 18.55 7.45 19 8 19H20C20.55 19 21 18.55 21 18C21 17.45 20.55 17 20 17ZM20 11H8C7.45 11 7 11.45 7 12C7 12.55 7.45 13 8 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11ZM4.5 16H2.5C2.22 16 2 16.22 2 16.5C2 16.78 2.22 17 2.5 17H4V17.5H3.5C3.22 17.5 3 17.72 3 18C3 18.28 3.22 18.5 3.5 18.5H4V19H2.5C2.22 19 2 19.22 2 19.5C2 19.78 2.22 20 2.5 20H4.5C4.78 20 5 19.78 5 19.5V16.5C5 16.22 4.78 16 4.5 16ZM2.5 5H3V7.5C3 7.78 3.22 8 3.5 8C3.78 8 4 7.78 4 7.5V4.5C4 4.22 3.78 4 3.5 4H2.5C2.22 4 2 4.22 2 4.5C2 4.78 2.22 5 2.5 5ZM4.5 10H2.5C2.22 10 2 10.22 2 10.5C2 10.78 2.22 11 2.5 11H3.8L2.12 12.96C2.04 13.05 2 13.17 2 13.28V13.5C2 13.78 2.22 14 2.5 14H4.5C4.78 14 5 13.78 5 13.5C5 13.22 4.78 13 4.5 13H3.2L4.88 11.04C4.96 10.95 5 10.83 5 10.72V10.5C5 10.22 4.78 10 4.5 10Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8067\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const plusIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_971_7676)\">\n      <path\n        d=\"M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_971_7676\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const quoteIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_7897)\">\n      <path\n        d=\"M7.17 17C7.68 17 8.15 16.71 8.37 16.26L9.79 13.42C9.93 13.14 10 12.84 10 12.53V8C10 7.45 9.55 7 9 7H5C4.45 7 4 7.45 4 8V12C4 12.55 4.45 13 5 13H7L5.97 15.06C5.52 15.95 6.17 17 7.17 17ZM17.17 17C17.68 17 18.15 16.71 18.37 16.26L19.79 13.42C19.93 13.14 20 12.84 20 12.53V8C20 7.45 19.55 7 19 7H15C14.45 7 14 7.45 14 8V12C14 12.55 14.45 13 15 13H17L15.97 15.06C15.52 15.95 16.17 17 17.17 17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_7897\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const removeIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M7.30775 20.4997C6.81058 20.4997 6.385 20.3227 6.031 19.9687C5.677 19.6147 5.5 19.1892 5.5 18.692V5.99973H5.25C5.0375 5.99973 4.85942 5.92782 4.71575 5.78398C4.57192 5.64015 4.5 5.46198 4.5 5.24948C4.5 5.03682 4.57192 4.85873 4.71575 4.71523C4.85942 4.57157 5.0375 4.49973 5.25 4.49973H9C9 4.2549 9.08625 4.04624 9.25875 3.87374C9.43108 3.7014 9.63967 3.61523 9.8845 3.61523H14.1155C14.3603 3.61523 14.5689 3.7014 14.7413 3.87374C14.9138 4.04624 15 4.2549 15 4.49973H18.75C18.9625 4.49973 19.1406 4.57165 19.2843 4.71548C19.4281 4.85932 19.5 5.03748 19.5 5.24998C19.5 5.46265 19.4281 5.64073 19.2843 5.78423C19.1406 5.9279 18.9625 5.99973 18.75 5.99973H18.5V18.692C18.5 19.1892 18.323 19.6147 17.969 19.9687C17.615 20.3227 17.1894 20.4997 16.6923 20.4997H7.30775ZM17 5.99973H7V18.692C7 18.7818 7.02883 18.8556 7.0865 18.9132C7.14417 18.9709 7.21792 18.9997 7.30775 18.9997H16.6923C16.7821 18.9997 16.8558 18.9709 16.9135 18.9132C16.9712 18.8556 17 18.7818 17 18.692V5.99973ZM10.1543 16.9997C10.3668 16.9997 10.5448 16.9279 10.6885 16.7842C10.832 16.6404 10.9037 16.4622 10.9037 16.2497V8.74973C10.9037 8.53723 10.8318 8.35907 10.688 8.21523C10.5443 8.07157 10.3662 7.99973 10.1535 7.99973C9.941 7.99973 9.76292 8.07157 9.61925 8.21523C9.47575 8.35907 9.404 8.53723 9.404 8.74973V16.2497C9.404 16.4622 9.47583 16.6404 9.6195 16.7842C9.76333 16.9279 9.94158 16.9997 10.1543 16.9997ZM13.8465 16.9997C14.059 16.9997 14.2371 16.9279 14.3807 16.7842C14.5243 16.6404 14.596 16.4622 14.596 16.2497V8.74973C14.596 8.53723 14.5242 8.35907 14.3805 8.21523C14.2367 8.07157 14.0584 7.99973 13.8458 7.99973C13.6333 7.99973 13.4552 8.07157 13.3115 8.21523C13.168 8.35907 13.0962 8.53723 13.0962 8.74973V16.2497C13.0962 16.4622 13.1682 16.6404 13.312 16.7842C13.4557 16.9279 13.6338 16.9997 13.8465 16.9997Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const searchIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    class=\"w-6 h-6\"\n  >\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const strikethroughIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M3.25 13.7404C3.0375 13.7404 2.85938 13.6684 2.71563 13.5246C2.57188 13.3808 2.5 13.2026 2.5 12.99C2.5 12.7774 2.57188 12.5993 2.71563 12.4558C2.85938 12.3122 3.0375 12.2404 3.25 12.2404H20.75C20.9625 12.2404 21.1406 12.3123 21.2843 12.4561C21.4281 12.5999 21.5 12.7781 21.5 12.9907C21.5 13.2033 21.4281 13.3814 21.2843 13.525C21.1406 13.6686 20.9625 13.7404 20.75 13.7404H3.25ZM10.9423 10.2596V6.62495H6.5673C6.2735 6.62495 6.02377 6.52201 5.8181 6.31613C5.61245 6.11026 5.50963 5.86027 5.50963 5.56615C5.50963 5.27205 5.61245 5.02083 5.8181 4.8125C6.02377 4.60417 6.2735 4.5 6.5673 4.5H17.4423C17.7361 4.5 17.9858 4.60294 18.1915 4.80883C18.3971 5.01471 18.5 5.2647 18.5 5.5588C18.5 5.85292 18.3971 6.10413 18.1915 6.31245C17.9858 6.52078 17.7361 6.62495 17.4423 6.62495H13.0673V10.2596H10.9423ZM10.9423 15.7211H13.0673V18.4423C13.0673 18.7361 12.9643 18.9858 12.7584 19.1915C12.5526 19.3971 12.3026 19.5 12.0085 19.5C11.7144 19.5 11.4631 19.3962 11.2548 19.1887C11.0465 18.9811 10.9423 18.7291 10.9423 18.4327V15.7211Z\"\n    />\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const tableIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_977_8078)\">\n      <path\n        d=\"M20 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H20C21.1 21 22 20.1 22 19V5C22 3.9 21.1 3 20 3ZM20 5V8H5V5H20ZM15 19H10V10H15V19ZM5 10H8V19H5V10ZM17 19V10H20V19H17Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_977_8078\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const textIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <g clip-path=\"url(#clip0_992_5547)\">\n      <path\n        d=\"M5 5.5C5 6.33 5.67 7 6.5 7H10.5V17.5C10.5 18.33 11.17 19 12 19C12.83 19 13.5 18.33 13.5 17.5V7H17.5C18.33 7 19 6.33 19 5.5C19 4.67 18.33 4 17.5 4H6.5C5.67 4 5 4.67 5 5.5Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_992_5547\">\n        <rect width=\"24\" height=\"24\" />\n      </clipPath>\n    </defs>\n  </svg>\n`\n","import { html } from 'atomico'\n\nexport const todoListIcon = html`\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M5.66936 16.3389L9.39244 12.6158C9.54115 12.4671 9.71679 12.3937 9.91936 12.3957C10.1219 12.3976 10.2975 12.4761 10.4463 12.6312C10.5847 12.7823 10.654 12.9585 10.654 13.1599C10.654 13.3613 10.5847 13.5363 10.4463 13.6851L6.32704 17.8197C6.14627 18.0004 5.93538 18.0908 5.69436 18.0908C5.45333 18.0908 5.24243 18.0004 5.06166 17.8197L3.01744 15.7754C2.87899 15.637 2.81136 15.4629 2.81456 15.2533C2.81776 15.0437 2.88859 14.8697 3.02706 14.7312C3.16551 14.5928 3.34008 14.5235 3.55076 14.5235C3.76144 14.5235 3.93494 14.5928 4.07126 14.7312L5.66936 16.3389ZM5.66936 8.72359L9.39244 5.00049C9.54115 4.85177 9.71679 4.77838 9.91936 4.78031C10.1219 4.78223 10.2975 4.86075 10.4463 5.01586C10.5847 5.16691 10.654 5.34314 10.654 5.54454C10.654 5.74592 10.5847 5.92097 10.4463 6.06969L6.32704 10.2043C6.14627 10.3851 5.93538 10.4755 5.69436 10.4755C5.45333 10.4755 5.24243 10.3851 5.06166 10.2043L3.01744 8.16009C2.87899 8.02162 2.81136 7.84759 2.81456 7.63799C2.81776 7.42837 2.88859 7.25433 3.02706 7.11586C3.16551 6.97741 3.34008 6.90819 3.55076 6.90819C3.76144 6.90819 3.93494 6.97741 4.07126 7.11586L5.66936 8.72359ZM13.7597 16.5581C13.5472 16.5581 13.3691 16.4862 13.2253 16.3424C13.0816 16.1986 13.0097 16.0204 13.0097 15.8078C13.0097 15.5952 13.0816 15.4171 13.2253 15.2735C13.3691 15.13 13.5472 15.0582 13.7597 15.0582H20.7597C20.9722 15.0582 21.1503 15.1301 21.2941 15.2739C21.4378 15.4177 21.5097 15.5959 21.5097 15.8085C21.5097 16.0211 21.4378 16.1992 21.2941 16.3427C21.1503 16.4863 20.9722 16.5581 20.7597 16.5581H13.7597ZM13.7597 8.94276C13.5472 8.94276 13.3691 8.87085 13.2253 8.72704C13.0816 8.58324 13.0097 8.40504 13.0097 8.19244C13.0097 7.97985 13.0816 7.80177 13.2253 7.65819C13.3691 7.5146 13.5472 7.44281 13.7597 7.44281H20.7597C20.9722 7.44281 21.1503 7.51471 21.2941 7.65851C21.4378 7.80233 21.5097 7.98053 21.5097 8.19311C21.5097 8.40571 21.4378 8.5838 21.2941 8.72739C21.1503 8.87097 20.9722 8.94276 20.7597 8.94276H13.7597Z\"\n    />\n  </svg>\n`\n","import {\n  codeBlockComponent,\n  codeBlockConfig,\n} from '@milkdown-nota/kit/component/code-block'\nimport type { LanguageDescription } from '@codemirror/language'\nimport type { Extension } from '@codemirror/state'\nimport { basicSetup } from 'codemirror'\nimport { keymap } from '@codemirror/view'\nimport { defaultKeymap, indentWithTab } from '@codemirror/commands'\nimport type { html } from 'atomico'\nimport type { DefineFeature, Icon } from '../shared'\nimport { chevronDownIcon, clearIcon, searchIcon } from '../../icons'\nimport { languages as langList } from '@codemirror/language-data'\nimport { oneDark } from '@codemirror/theme-one-dark'\n\ninterface CodeMirrorConfig {\n  extensions: Extension[]\n  languages: LanguageDescription[]\n  theme: Extension\n\n  expandIcon: Icon\n  searchIcon: Icon\n  clearSearchIcon: Icon\n\n  searchPlaceholder: string\n  noResultText: string\n\n  renderLanguage: (\n    language: string,\n    selected: boolean\n  ) => ReturnType<typeof html> | string | HTMLElement\n}\nexport type CodeMirrorFeatureConfig = Partial<CodeMirrorConfig>\n\nexport const defineFeature: DefineFeature<CodeMirrorFeatureConfig> = (\n  editor,\n  config = {}\n) => {\n  editor\n    .config((ctx) => {\n      let { languages, theme } = config\n      if (!languages) {\n        languages = langList\n      }\n      if (!theme) {\n        theme = oneDark\n      }\n      ctx.update(codeBlockConfig.key, (defaultConfig) => ({\n        extensions: [\n          keymap.of(defaultKeymap.concat(indentWithTab)),\n          basicSetup,\n          theme,\n          ...(config?.extensions ?? []),\n        ],\n        languages,\n\n        expandIcon: config.expandIcon || (() => chevronDownIcon),\n        searchIcon: config.searchIcon || (() => searchIcon),\n        clearSearchIcon: config.clearSearchIcon || (() => clearIcon),\n        searchPlaceholder: config.searchPlaceholder || 'Search language',\n        noResultText: config.noResultText || 'No result',\n        renderLanguage: config.renderLanguage || defaultConfig.renderLanguage,\n      }))\n    })\n    .use(codeBlockComponent)\n}\n","import type { Component } from 'atomico'\nimport { c, html, useHost, useLayoutEffect, useRef } from 'atomico'\nimport type { ListItemBlockConfig } from './config'\n\ninterface Attrs {\n  label: string\n  checked: boolean\n  listType: string\n}\n\nexport type ListItemComponentProps = Attrs & {\n  config: ListItemBlockConfig\n  readonly: boolean\n  selected: boolean\n  setAttr: <T extends keyof Attrs>(attr: T, value: Attrs[T]) => void\n  onMount: () => void\n}\n\nexport const listItemComponent: Component<ListItemComponentProps> = ({\n  selected,\n  label = '',\n  listType = '',\n  checked,\n  onMount,\n  setAttr,\n  config,\n  readonly,\n}) => {\n  const host = useHost()\n  const contentWrapperRef = useRef<HTMLDivElement>()\n\n  useLayoutEffect(() => {\n    const current = contentWrapperRef.current\n    if (!current) return\n\n    const contentDOM = host.current.querySelector('[data-content-dom]')\n\n    if (contentDOM) {\n      current.appendChild(contentDOM)\n      onMount?.()\n    }\n  }, [])\n\n  const onClickLabel = () => {\n    if (checked == null) return\n\n    setAttr?.('checked', !checked)\n  }\n\n  const labelProps = {\n    label,\n    listType,\n    checked,\n    readonly,\n  }\n\n  return html`<host class=${selected && 'ProseMirror-selectednode'}>\n    <li class=\"list-item\">\n      <div\n        class=\"label-wrapper\"\n        onclick=${onClickLabel}\n        contenteditable=\"false\"\n      >\n        ${config?.renderLabel(labelProps)}\n      </div>\n      <div class=\"children\" ref=${contentWrapperRef}></div>\n    </li>\n  </host>`\n}\n\nlistItemComponent.props = {\n  label: String,\n  checked: Boolean,\n  readonly: Boolean,\n  listType: String,\n  config: Object,\n  selected: Boolean,\n  setAttr: Function,\n  onMount: Function,\n}\n\nexport const ListItemElement = c(listItemComponent)\n","import { $ctx } from '@milkdown/utils'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\ninterface RenderLabelProps {\n  label: string\n  listType: string\n  readonly?: boolean\n  checked?: boolean\n}\n\nexport interface ListItemBlockConfig {\n  renderLabel: (props: RenderLabelProps) => void\n}\n\nexport const defaultListItemBlockConfig: ListItemBlockConfig = {\n  renderLabel: ({ label, listType, checked, readonly }: RenderLabelProps) => {\n    if (checked == null)\n      return html`<span class=\"label\"\n        >${listType === 'bullet' ? '⦿' : label}</span\n      >`\n\n    return html`<input\n      disabled=${readonly}\n      class=\"label\"\n      type=\"checkbox\"\n      checked=${checked}\n    />`\n  },\n}\n\nexport const listItemBlockConfig = $ctx(\n  defaultListItemBlockConfig,\n  'listItemBlockConfigCtx'\n)\n\nwithMeta(listItemBlockConfig, {\n  displayName: 'Config<list-item-block>',\n  group: 'ListItemBlock',\n})\n","import { $view } from '@milkdown/utils'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { Node } from '@milkdown/prose/model'\nimport { listItemSchema } from '@milkdown/preset-commonmark'\nimport { withMeta } from '../__internal__/meta'\nimport { defIfNotExists } from '../__internal__/helper'\nimport type { ListItemComponentProps } from './component'\nimport { ListItemElement } from './component'\nimport { listItemBlockConfig } from './config'\n\ndefIfNotExists('milkdown-list-item-block', ListItemElement)\nexport const listItemBlockView = $view(\n  listItemSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      const dom = document.createElement(\n        'milkdown-list-item-block'\n      ) as HTMLElement & ListItemComponentProps\n      const contentDOM = document.createElement('div')\n      contentDOM.setAttribute('data-content-dom', 'true')\n      contentDOM.classList.add('content-dom')\n      const config = ctx.get(listItemBlockConfig.key)\n      const bindAttrs = (node: Node) => {\n        dom.listType = node.attrs.listType\n        dom.label = node.attrs.label\n        dom.checked = node.attrs.checked\n\n        dom.readonly = !view.editable\n      }\n\n      bindAttrs(initialNode)\n      dom.appendChild(contentDOM)\n      dom.selected = false\n      dom.setAttr = (attr, value) => {\n        const pos = getPos()\n        if (pos == null) return\n\n        view.dispatch(view.state.tr.setNodeAttribute(pos, attr, value))\n      }\n      dom.onMount = () => {\n        const { anchor, head } = view.state.selection\n        if (view.hasFocus()) {\n          Promise.resolve().then(() => {\n            const anchorPos = view.state.doc.resolve(anchor)\n            const headPos = view.state.doc.resolve(head)\n            view.dispatch(\n              view.state.tr.setSelection(new TextSelection(anchorPos, headPos))\n            )\n          })\n        }\n      }\n      let node = initialNode\n      dom.config = config\n      return {\n        dom,\n        contentDOM,\n        update: (updatedNode) => {\n          if (updatedNode.type !== initialNode.type) return false\n\n          if (\n            updatedNode.sameMarkup(node) &&\n            updatedNode.content.eq(node.content)\n          )\n            return true\n\n          node = updatedNode\n          bindAttrs(updatedNode)\n          return true\n        },\n        ignoreMutation: (mutation) => {\n          if (!dom || !contentDOM) return true\n\n          if ((mutation.type as unknown) === 'selection') return false\n\n          if (contentDOM === mutation.target && mutation.type === 'attributes')\n            return true\n\n          if (contentDOM.contains(mutation.target)) return false\n\n          return true\n        },\n        selectNode: () => {\n          dom.selected = true\n        },\n        deselectNode: () => {\n          dom.selected = false\n        },\n        destroy: () => {\n          dom.remove()\n          contentDOM.remove()\n        },\n      }\n    }\n  }\n)\n\nwithMeta(listItemBlockView, {\n  displayName: 'NodeView<list-item-block>',\n  group: 'ListItemBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { listItemBlockView } from './view'\nimport { listItemBlockConfig } from './config'\n\nexport * from './component'\nexport * from './config'\nexport * from './view'\n\nexport const listItemBlockComponent: MilkdownPlugin[] = [\n  listItemBlockConfig,\n  listItemBlockView,\n]\n","import type { Ctx } from '@milkdown-nota/kit/ctx'\nimport {\n  listItemBlockComponent,\n  listItemBlockConfig,\n} from '@milkdown-nota/kit/component/list-item-block'\nimport { html } from 'atomico'\nimport clsx from 'clsx'\nimport type { DefineFeature, Icon } from '../shared'\nimport {\n  bulletIcon,\n  checkBoxCheckedIcon,\n  checkBoxUncheckedIcon,\n} from '../../icons'\n\nexport interface ListItemConfig {\n  bulletIcon: Icon\n  checkBoxCheckedIcon: Icon\n  checkBoxUncheckedIcon: Icon\n}\n\nexport type ListItemFeatureConfig = Partial<ListItemConfig>\n\nfunction configureListItem(ctx: Ctx, config?: ListItemFeatureConfig) {\n  ctx.set(listItemBlockConfig.key, {\n    renderLabel: ({ label, listType, checked, readonly }) => {\n      if (checked == null) {\n        if (listType === 'bullet')\n          return html`<span class=\"label\"\n            >${config?.bulletIcon?.() ?? bulletIcon}</span\n          >`\n\n        return html`<span class=\"label\">${label}</span>`\n      }\n\n      if (checked)\n        return html`<span\n          class=${clsx('label checkbox', readonly && 'readonly')}\n          >${config?.checkBoxCheckedIcon?.() ?? checkBoxCheckedIcon}</span\n        >`\n\n      return html`<span class=${clsx('label checkbox', readonly && 'readonly')}\n        >${config?.checkBoxUncheckedIcon?.() ?? checkBoxUncheckedIcon}</span\n      >`\n    },\n  })\n}\n\nexport const defineFeature: DefineFeature<ListItemFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => configureListItem(ctx, config))\n    .use(listItemBlockComponent)\n}\n","import { $ctx } from '@milkdown/utils'\nimport type { Mark } from '@milkdown/prose/model'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport interface LinkToolTipState {\n  mode: 'preview' | 'edit'\n}\n\nconst defaultState: LinkToolTipState = {\n  mode: 'preview',\n}\n\nexport const linkTooltipState = $ctx({ ...defaultState }, 'linkTooltipStateCtx')\n\nwithMeta(linkTooltipState, {\n  displayName: 'State<link-tooltip>',\n  group: 'LinkTooltip',\n})\n\nexport interface LinkTooltipAPI {\n  addLink: (from: number, to: number) => void\n  editLink: (mark: Mark, from: number, to: number) => void\n  removeLink: (from: number, to: number) => void\n}\n\nconst defaultAPI: LinkTooltipAPI = {\n  addLink: () => {},\n  editLink: () => {},\n  removeLink: () => {},\n}\n\nexport const linkTooltipAPI = $ctx({ ...defaultAPI }, 'linkTooltipAPICtx')\n\nwithMeta(linkTooltipState, {\n  displayName: 'API<link-tooltip>',\n  group: 'LinkTooltip',\n})\n\nexport interface LinkTooltipConfig {\n  linkIcon: () => ReturnType<typeof html>\n  editButton: () => ReturnType<typeof html>\n  confirmButton: () => ReturnType<typeof html>\n  removeButton: () => ReturnType<typeof html>\n  onCopyLink: (link: string) => void\n  inputPlaceholder: string\n  shouldOpenOutside: (src: string) => boolean\n  getActualSrc: (src: string) => string\n}\n\nconst defaultConfig: LinkTooltipConfig = {\n  linkIcon: () => '🔗',\n  editButton: () => '✎',\n  removeButton: () => '⌫',\n  confirmButton: () => html`Confirm ⏎`,\n  onCopyLink: () => {},\n  inputPlaceholder: 'Paste link...',\n  shouldOpenOutside: () => true,\n  getActualSrc: (src: string) => src,\n}\n\nexport const linkTooltipConfig = $ctx(\n  {\n    ...defaultConfig,\n  },\n  'linkTooltipConfigCtx'\n)\n\nwithMeta(linkTooltipState, {\n  displayName: 'Config<link-tooltip>',\n  group: 'LinkTooltip',\n})\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import type { EditorState } from '@milkdown/prose/state'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport debounce from 'lodash.debounce'\nimport type {\n  ComputePositionConfig,\n  Middleware,\n  VirtualElement,\n} from '@floating-ui/dom'\nimport { computePosition, flip, offset, shift } from '@floating-ui/dom'\nimport { posToDOMRect } from '@milkdown/prose'\n\n/// Options for tooltip provider.\nexport interface TooltipProviderOptions {\n  /// The tooltip content.\n  content: HTMLElement\n  /// The debounce time for updating tooltip, 200ms by default.\n  debounce?: number\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The offset to get the block. Default is 0.\n  offset?:\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n  /// Other middlewares for floating ui. This will be added after the internal middlewares.\n  middleware?: Middleware[]\n  /// Options for floating ui. If you pass `middleware` or `placement`, it will override the internal settings.\n  floatingUIOptions?: Partial<ComputePositionConfig>\n}\n\n/// A provider for creating tooltip.\nexport class TooltipProvider {\n  /// @internal\n  readonly #debounce: number\n\n  /// @internal\n  readonly #shouldShow: (view: EditorView, prevState?: EditorState) => boolean\n\n  /// @internal\n  readonly #middleware: Middleware[]\n\n  /// @internal\n  readonly #floatingUIOptions: Partial<ComputePositionConfig>\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #offset?:\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n\n  /// The root element of the tooltip.\n  element: HTMLElement\n\n  /// On show callback.\n  onShow = () => {}\n\n  /// On hide callback.\n  onHide = () => {}\n\n  constructor(options: TooltipProviderOptions) {\n    this.element = options.content\n    this.#debounce = options.debounce ?? 200\n    this.#shouldShow = options.shouldShow ?? this.#_shouldShow\n    this.#offset = options.offset\n    this.#middleware = options.middleware ?? []\n    this.#floatingUIOptions = options.floatingUIOptions ?? {}\n    this.element.dataset.show = 'false'\n  }\n\n  /// @internal\n  #onUpdate = (view: EditorView, prevState?: EditorState): void => {\n    const { state, composing } = view\n    const { selection, doc } = state\n    const { ranges } = selection\n    const from = Math.min(...ranges.map((range) => range.$from.pos))\n    const to = Math.max(...ranges.map((range) => range.$to.pos))\n    const isSame =\n      prevState && prevState.doc.eq(doc) && prevState.selection.eq(selection)\n\n    if (!this.#initialized) {\n      view.dom.parentElement?.appendChild(this.element)\n      this.#initialized = true\n    }\n\n    if (composing || isSame) return\n\n    if (!this.#shouldShow(view, prevState)) {\n      this.hide()\n      return\n    }\n\n    const virtualEl: VirtualElement = {\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    }\n    computePosition(virtualEl, this.element, {\n      placement: 'top',\n      middleware: [flip(), offset(this.#offset), shift(), ...this.#middleware],\n    }).then(({ x, y }) => {\n      Object.assign(this.element.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n    })\n\n    this.show()\n  }\n\n  /// Update provider state by editor view.\n  update = (view: EditorView, prevState?: EditorState): void => {\n    const updater = debounce(this.#onUpdate, this.#debounce)\n\n    updater(view, prevState)\n  }\n\n  /// @internal\n  #_shouldShow(view: EditorView): boolean {\n    const { doc, selection } = view.state\n    const { empty, from, to } = selection\n\n    const isEmptyTextBlock =\n      !doc.textBetween(from, to).length &&\n      view.state.selection instanceof TextSelection\n\n    const isTooltipChildren = this.element.contains(document.activeElement)\n\n    const notHasFocus = !view.hasFocus() && !isTooltipChildren\n\n    const isReadonly = !view.editable\n\n    if (notHasFocus || empty || isEmptyTextBlock || isReadonly) return false\n\n    return true\n  }\n\n  /// Destroy the tooltip.\n  destroy = () => {}\n\n  /// Show the tooltip.\n  show = (virtualElement?: VirtualElement) => {\n    this.element.dataset.show = 'true'\n\n    if (virtualElement) {\n      computePosition(virtualElement, this.element, {\n        placement: 'top',\n        middleware: [flip(), offset(this.#offset)],\n        ...this.#floatingUIOptions,\n      }).then(({ x, y }) => {\n        Object.assign(this.element.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        })\n      })\n    }\n\n    this.onShow()\n  }\n\n  /// Hide the tooltip.\n  hide = () => {\n    if (this.element.dataset.show === 'false') return\n    this.element.dataset.show = 'false'\n\n    this.onHide()\n  }\n}\n","import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport { $ctx, $prose } from '@milkdown/utils'\n\n/// @internal\nexport type TooltipSpecId<Id extends string> = `${Id}_TOOLTIP_SPEC`\n\n/// @internal\nexport type TooltipPlugin<Id extends string, State = any> = [\n  $Ctx<PluginSpec<State>, TooltipSpecId<Id>>,\n  $Prose,\n] & {\n  key: SliceType<PluginSpec<State>, TooltipSpecId<Id>>\n  pluginKey: $Prose['key']\n}\n\n/// Create a tooltip plugin with a unique id.\nexport function tooltipFactory<Id extends string, State = any>(id: Id) {\n  const tooltipSpec = $ctx<PluginSpec<State>, TooltipSpecId<Id>>(\n    {},\n    `${id}_TOOLTIP_SPEC`\n  )\n  const tooltipPlugin = $prose((ctx) => {\n    const spec = ctx.get(tooltipSpec.key)\n    return new Plugin({\n      key: new PluginKey(`${id}_TOOLTIP`),\n      ...spec,\n    })\n  })\n  const result = [tooltipSpec, tooltipPlugin] as TooltipPlugin<Id>\n  result.key = tooltipSpec.key\n  result.pluginKey = tooltipPlugin.key\n  tooltipSpec.meta = {\n    package: '@milkdown/plugin-tooltip',\n    displayName: `Ctx<tooltipSpec>|${id}`,\n  }\n  tooltipPlugin.meta = {\n    package: '@milkdown/plugin-tooltip',\n    displayName: `Prose<tooltip>|${id}`,\n  }\n\n  return result\n}\n","import { tooltipFactory } from '@milkdown/plugin-tooltip'\nimport { withMeta } from '../__internal__/meta'\n\nexport const linkPreviewTooltip = tooltipFactory('LINK_PREVIEW')\nwithMeta(linkPreviewTooltip[0], {\n  displayName: 'PreviewTooltipSpec<link-tooltip>',\n  group: 'LinkTooltip',\n})\nwithMeta(linkPreviewTooltip[1], {\n  displayName: 'PreviewTooltipPlugin<link-tooltip>',\n  group: 'LinkTooltip',\n})\nexport const linkEditTooltip = tooltipFactory('LINK_EDIT')\nwithMeta(linkEditTooltip[0], {\n  displayName: 'EditTooltipSpec<link-tooltip>',\n  group: 'LinkTooltip',\n})\nwithMeta(linkEditTooltip[1], {\n  displayName: 'EditTooltipPlugin<link-tooltip>',\n  group: 'LinkTooltip',\n})\n","import type { Mark, Node } from '@milkdown/prose/model'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { linkSchema } from '@milkdown/preset-commonmark'\nimport { linkPreviewTooltip } from './tooltips'\n\nexport function findMarkPosition(\n  mark: Mark,\n  node: Node,\n  doc: Node,\n  from: number,\n  to: number\n) {\n  let markPos = { start: -1, end: -1 }\n  doc.nodesBetween(from, to, (n, pos) => {\n    // stop recursive finding if result is found\n    if (markPos.start > -1) return false\n\n    if (markPos.start === -1 && mark.isInSet(n.marks) && node === n) {\n      markPos = {\n        start: pos,\n        end: pos + Math.max(n.textContent.length, 1),\n      }\n    }\n\n    return undefined\n  })\n\n  return markPos\n}\n\nexport function shouldShowPreviewWhenHover(\n  ctx: Ctx,\n  view: EditorView,\n  event: MouseEvent\n) {\n  const $pos = view.posAtCoords({ left: event.clientX, top: event.clientY })\n  if (!$pos) return\n\n  const { pos } = $pos\n  const node = view.state.doc.nodeAt(pos)\n\n  if (!node) return\n\n  const mark = node.marks.find(\n    (mark) => mark.type === linkSchema.mark.type(ctx)\n  )\n  if (!mark) return\n\n  const key = linkPreviewTooltip.pluginKey()\n  if (!key) return\n\n  return { show: true, pos, node, mark }\n}\n","import type { Component } from 'atomico'\nimport { c, html } from 'atomico'\nimport type { LinkTooltipConfig } from '../slices'\n\nexport interface LinkPreviewProps {\n  config: LinkTooltipConfig\n  src: string\n  onEdit: () => void\n  onRemove: () => void\n}\n\nexport const linkPreviewComponent: Component<LinkPreviewProps> = ({\n  config,\n  src,\n  onEdit,\n  onRemove,\n}) => {\n  const onClickEditButton = (e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    onEdit?.()\n  }\n\n  const onClickRemoveButton = (e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    onRemove?.()\n  }\n\n  const onClickPreview = (e: MouseEvent) => {\n    e.preventDefault()\n    if (navigator.clipboard && src) {\n      navigator.clipboard\n        .writeText(src)\n        .then(() => {\n          config?.onCopyLink(src)\n        })\n        .catch((e) => {\n          throw e\n        })\n    }\n  }\n\n  return html`\n    <host>\n      <div class=\"link-preview\" onmousedown=${onClickPreview}>\n        <span class=\"link-icon\"> ${config?.linkIcon()} </span>\n        <a\n          href=${config?.getActualSrc(src ?? '')}\n          target=${config?.shouldOpenOutside(src ?? '') ? '_blank' : '_self'}\n          class=\"link-display\"\n          >${src}</a\n        >\n        <span class=\"button link-edit-button\" onmousedown=${onClickEditButton}>\n          ${config?.editButton()}\n        </span>\n        <span\n          class=\"button link-remove-button\"\n          onmousedown=${onClickRemoveButton}\n        >\n          ${config?.removeButton()}\n        </span>\n      </div>\n    </host>\n  `\n}\n\nlinkPreviewComponent.props = {\n  config: Object,\n  src: String,\n  onEdit: Function,\n  onRemove: Function,\n}\n\nexport const LinkPreviewElement = c(linkPreviewComponent)\n","import type { PluginView } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport type { Mark } from '@milkdown/prose/model'\nimport { TooltipProvider } from '@milkdown/plugin-tooltip'\nimport type { Ctx, Slice } from '@milkdown/ctx'\nimport type { LinkToolTipState } from '../slices'\nimport { linkTooltipAPI, linkTooltipConfig, linkTooltipState } from '../slices'\nimport { LinkPreviewElement } from './preview-component'\n\nexport class LinkPreviewTooltip implements PluginView {\n  #content = new LinkPreviewElement()\n  #provider: TooltipProvider\n  #slice: Slice<LinkToolTipState>\n  // #slice: Slice<LinkToolTipState> = this.ctx.use(linkTooltipState.key)\n\n  #hovering = false\n\n  // get #instance() {\n  //   return this.#provider.getInstance()\n  // }\n\n  constructor(\n    readonly ctx: Ctx,\n    view: EditorView\n  ) {\n    this.#provider = new TooltipProvider({\n      debounce: 0,\n      content: this.#content,\n      shouldShow: () => false,\n    })\n    this.#provider.update(view)\n    this.#slice = ctx.use(linkTooltipState.key)\n    this.#slice.on(this.#onStateChange)\n  }\n\n  // setRect = (rect: DOMRect) => {\n  //   // this.#provider.getInstance()?.setProps({\n  //   //   getReferenceClientRect: () => rect,\n  //   // })\n  //   this.#provider.virtualElement = {\n  //     getBoundingClientRect: () => rect,\n  //   }\n  // }\n\n  #onStateChange = ({ mode }: LinkToolTipState) => {\n    if (mode === 'edit') this.#hide()\n  }\n\n  #onMouseEnter = () => {\n    this.#hovering = true\n  }\n\n  #onMouseLeave = () => {\n    this.#hovering = false\n  }\n\n  #hide = () => {\n    this.#provider.hide()\n    this.#provider.element.removeEventListener('mouseenter', this.#onMouseEnter)\n    this.#provider.element.removeEventListener('mouseleave', this.#onMouseLeave)\n  }\n\n  show = (mark: Mark, from: number, to: number, rect: DOMRect) => {\n    this.#content.config = this.ctx.get(linkTooltipConfig.key)\n    this.#content.src = mark.attrs.href\n    this.#content.onEdit = () => {\n      this.ctx.get(linkTooltipAPI.key).editLink(mark, from, to)\n    }\n    this.#content.onRemove = () => {\n      this.ctx.get(linkTooltipAPI.key).removeLink(from, to)\n      this.#hide()\n    }\n\n    this.#provider.show({\n      getBoundingClientRect: () => rect,\n    })\n    this.#provider.element.addEventListener('mouseenter', this.#onMouseEnter)\n    this.#provider.element.addEventListener('mouseleave', this.#onMouseLeave)\n  }\n\n  hide = () => {\n    if (this.#hovering) return\n\n    this.#hide()\n  }\n\n  update = () => {}\n\n  destroy = () => {\n    this.#slice.off(this.#onStateChange)\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport debounce from 'lodash.debounce'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { posToDOMRect } from '@milkdown/prose'\nimport { linkTooltipState } from '../slices'\nimport { findMarkPosition, shouldShowPreviewWhenHover } from '../utils'\nimport { linkPreviewTooltip } from '../tooltips'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { LinkPreviewTooltip } from './preview-view'\nimport { LinkPreviewElement } from './preview-component'\n\ndefIfNotExists('milkdown-link-preview', LinkPreviewElement)\nexport function configureLinkPreviewTooltip(ctx: Ctx) {\n  let linkPreviewTooltipView: LinkPreviewTooltip | null\n\n  const DELAY = 200\n  const onMouseMove = debounce((view: EditorView, event: MouseEvent) => {\n    if (!linkPreviewTooltipView) return\n    if (!view.hasFocus()) return\n\n    const state = ctx.get(linkTooltipState.key)\n    if (state.mode === 'edit') return\n\n    const result = shouldShowPreviewWhenHover(ctx, view, event)\n    if (result) {\n      const position = view.state.doc.resolve(result.pos)\n      const markPosition = findMarkPosition(\n        result.mark,\n        result.node,\n        view.state.doc,\n        position.before(),\n        position.after()\n      )\n      const from = markPosition.start\n      const to = markPosition.end\n      linkPreviewTooltipView.show(\n        result.mark,\n        from,\n        to,\n        posToDOMRect(view, from, to)\n      )\n      return\n    }\n\n    linkPreviewTooltipView.hide()\n  }, DELAY)\n\n  const onMouseLeave = () => {\n    setTimeout(() => {\n      linkPreviewTooltipView?.hide()\n    }, DELAY)\n  }\n\n  ctx.set(linkPreviewTooltip.key, {\n    props: {\n      handleDOMEvents: {\n        mousemove: onMouseMove,\n        mouseleave: onMouseLeave,\n      },\n    },\n    view: (view) => {\n      linkPreviewTooltipView = new LinkPreviewTooltip(ctx, view)\n      return linkPreviewTooltipView\n    },\n  })\n}\n","import type { Component } from 'atomico'\nimport { c, html, useEffect, useRef, useState } from 'atomico'\nimport clsx from 'clsx'\nimport type { LinkTooltipConfig } from '../slices'\n\nexport interface LinkEditProps {\n  config: LinkTooltipConfig\n  src: string\n  onConfirm: (href: string) => void\n  onCancel: () => void\n}\n\nexport const linkEditComponent: Component<LinkEditProps> = ({\n  src,\n  onConfirm,\n  onCancel,\n  config,\n}) => {\n  const linkInput = useRef<HTMLInputElement>()\n  const [link, setLink] = useState(src)\n\n  useEffect(() => {\n    setLink(src ?? '')\n  }, [src])\n\n  const onConfirmEdit = () => {\n    onConfirm?.(linkInput.current?.value ?? '')\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    e.stopPropagation()\n    if (e.key === 'Enter') {\n      onConfirm?.(linkInput.current?.value ?? '')\n      e.preventDefault()\n    }\n    if (e.key === 'Escape') {\n      onCancel?.()\n      e.preventDefault()\n    }\n  }\n\n  return html`\n    <host>\n      <div class=\"link-edit\">\n        <input\n          class=\"input-area\"\n          placeholder=${config?.inputPlaceholder}\n          ref=${linkInput}\n          onkeydown=${onKeydown}\n          oninput=${(e: InputEvent) =>\n            setLink((e.target as HTMLInputElement).value)}\n          value=${link}\n        />\n        <span\n          class=${clsx('button confirm', !link && 'hidden')}\n          onclick=${onConfirmEdit}\n        >\n          ${config?.confirmButton()}\n        </span>\n      </div>\n    </host>\n  `\n}\n\nlinkEditComponent.props = {\n  config: Object,\n  src: String,\n  onConfirm: Function,\n  onCancel: Function,\n}\n\nexport const LinkEditElement = c(linkEditComponent)\n","import type { Ctx } from '@milkdown/ctx'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { PluginView } from '@milkdown/prose/state'\nimport type { Mark } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { TooltipProvider } from '@milkdown/plugin-tooltip'\nimport { editorViewCtx } from '@milkdown/core'\nimport { linkSchema } from '@milkdown/preset-commonmark'\nimport { posToDOMRect } from '@milkdown/prose'\nimport { linkTooltipConfig, linkTooltipState } from '../slices'\nimport { LinkEditElement } from './edit-component'\n\ninterface Data {\n  from: number\n  to: number\n  mark: Mark | null\n}\n\nconst defaultData: Data = {\n  from: -1,\n  to: -1,\n  mark: null,\n}\n\nexport class LinkEditTooltip implements PluginView {\n  #content = new LinkEditElement()\n  #provider: TooltipProvider\n  #data: Data = { ...defaultData }\n\n  constructor(\n    readonly ctx: Ctx,\n    view: EditorView\n  ) {\n    this.#provider = new TooltipProvider({\n      content: this.#content,\n      debounce: 0,\n      shouldShow: () => false,\n    })\n    this.#provider.onHide = () => {\n      this.#content.update().catch((e) => {\n        throw e\n      })\n      view.dom.focus({ preventScroll: true })\n    }\n    this.#provider.update(view)\n    this.#content.onConfirm = this.#confirmEdit\n    this.#content.onCancel = this.#reset\n  }\n\n  #reset = () => {\n    this.#provider.hide()\n    this.ctx.update(linkTooltipState.key, (state) => ({\n      ...state,\n      mode: 'preview' as const,\n    }))\n    this.#data = { ...defaultData }\n  }\n\n  #confirmEdit = (href: string) => {\n    const view = this.ctx.get(editorViewCtx)\n    const { from, to, mark } = this.#data\n    const type = linkSchema.type(this.ctx)\n    if (mark && mark.attrs.href === href) {\n      this.#reset()\n      return\n    }\n\n    const tr = view.state.tr\n    if (mark) tr.removeMark(from, to, mark)\n\n    tr.addMark(from, to, type.create({ href }))\n    view.dispatch(tr)\n\n    this.#reset()\n  }\n\n  #enterEditMode = (value: string, from: number, to: number) => {\n    const config = this.ctx.get(linkTooltipConfig.key)\n    this.#content.config = config\n    this.#content.src = value\n    this.ctx.update(linkTooltipState.key, (state) => ({\n      ...state,\n      mode: 'edit' as const,\n    }))\n    const view = this.ctx.get(editorViewCtx)\n    // this.#setRect(posToDOMRect(view, from, to))\n    view.dispatch(\n      view.state.tr.setSelection(TextSelection.create(view.state.doc, from, to))\n    )\n    this.#provider.show({\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    })\n    requestAnimationFrame(() => {\n      this.#content.querySelector('input')?.focus()\n    })\n  }\n\n  update = (view: EditorView) => {\n    const { state } = view\n    const { selection } = state\n    if (!(selection instanceof TextSelection)) return\n    const { from, to } = selection\n    if (from === this.#data.from && to === this.#data.to) return\n\n    this.#reset()\n  }\n\n  destroy = () => {\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n\n  addLink = (from: number, to: number) => {\n    this.#data = {\n      from,\n      to,\n      mark: null,\n    }\n    this.#enterEditMode('', from, to)\n  }\n\n  editLink = (mark: Mark, from: number, to: number) => {\n    this.#data = {\n      from,\n      to,\n      mark,\n    }\n    this.#enterEditMode(mark.attrs.href, from, to)\n  }\n\n  removeLink = (from: number, to: number) => {\n    const view = this.ctx.get(editorViewCtx)\n\n    const tr = view.state.tr\n    tr.removeMark(from, to, linkSchema.type(this.ctx))\n    view.dispatch(tr)\n\n    this.#reset()\n  }\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport { linkTooltipAPI } from '../slices'\nimport { linkEditTooltip } from '../tooltips'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { LinkEditElement } from './edit-component'\nimport { LinkEditTooltip } from './edit-view'\n\ndefIfNotExists('milkdown-link-edit', LinkEditElement)\nexport function configureLinkEditTooltip(ctx: Ctx) {\n  let linkEditTooltipView: LinkEditTooltip | null\n\n  ctx.update(linkTooltipAPI.key, (api) => ({\n    ...api,\n    addLink: (from, to) => {\n      linkEditTooltipView?.addLink(from, to)\n    },\n    editLink: (mark, from, to) => {\n      linkEditTooltipView?.editLink(mark, from, to)\n    },\n    removeLink: (from, to) => {\n      linkEditTooltipView?.removeLink(from, to)\n    },\n  }))\n\n  ctx.set(linkEditTooltip.key, {\n    view: (view) => {\n      linkEditTooltipView = new LinkEditTooltip(ctx, view)\n      return linkEditTooltipView\n    },\n  })\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport { configureLinkPreviewTooltip } from './preview/preview-configure'\nimport { configureLinkEditTooltip } from './edit/edit-configure'\n\nexport function configureLinkTooltip(ctx: Ctx) {\n  configureLinkPreviewTooltip(ctx)\n  configureLinkEditTooltip(ctx)\n}\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { linkTooltipAPI, linkTooltipConfig, linkTooltipState } from './slices'\nimport { linkEditTooltip, linkPreviewTooltip } from './tooltips'\n\nexport * from './slices'\nexport * from './configure'\nexport * from './tooltips'\n\nexport const linkTooltipPlugin: MilkdownPlugin[] = [\n  linkTooltipState,\n  linkTooltipAPI,\n  linkTooltipConfig,\n  linkPreviewTooltip,\n  linkEditTooltip,\n].flat()\n","import {\n  configureLinkTooltip,\n  linkTooltipConfig,\n  linkTooltipPlugin,\n} from '@milkdown-nota/kit/component/link-tooltip'\nimport type { DefineFeature, Icon } from '../shared'\nimport { confirmIcon, copyIcon, editIcon, removeIcon } from '../../icons'\n\ninterface LinkTooltipConfig {\n  linkIcon: Icon\n  editButton: Icon\n  removeButton: Icon\n  confirmButton: Icon\n  inputPlaceholder: string\n  onCopyLink: (link: string) => void\n}\n\nexport type LinkTooltipFeatureConfig = Partial<LinkTooltipConfig>\n\nexport const defineFeature: DefineFeature<LinkTooltipFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config(configureLinkTooltip)\n    .config((ctx) => {\n      ctx.update(linkTooltipConfig.key, (prev) => ({\n        ...prev,\n        linkIcon: config?.linkIcon ?? (() => copyIcon),\n        editButton: config?.editButton ?? (() => editIcon),\n        removeButton: config?.removeButton ?? (() => removeIcon),\n        confirmButton: config?.confirmButton ?? (() => confirmIcon),\n        inputPlaceholder: config?.inputPlaceholder ?? 'Paste link...',\n        onCopyLink: config?.onCopyLink ?? (() => {}),\n      }))\n    })\n    .use(linkTooltipPlugin)\n}\n","import { $nodeSchema } from '@milkdown/utils'\nimport { expectDomTypeError } from '@milkdown/exception'\nimport { withMeta } from '../__internal__/meta'\n\nexport const IMAGE_DATA_TYPE = 'image-block'\n\nexport const imageBlockSchema = $nodeSchema('image-block', () => {\n  return {\n    inline: false,\n    group: 'block',\n    selectable: true,\n    draggable: true,\n    isolating: true,\n    marks: '',\n    atom: true,\n    priority: 100,\n    attrs: {\n      src: { default: '' },\n      caption: { default: '' },\n      ratio: { default: 1 },\n    },\n    parseDOM: [\n      {\n        tag: `img[data-type=\"${IMAGE_DATA_TYPE}\"]`,\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return {\n            src: dom.getAttribute('src') || '',\n            caption: dom.getAttribute('caption') || '',\n            ratio: Number(dom.getAttribute('ratio') ?? 1),\n          }\n        },\n      },\n    ],\n    toDOM: (node) => ['img', { 'data-type': IMAGE_DATA_TYPE, ...node.attrs }],\n    parseMarkdown: {\n      match: ({ type }) => type === 'image-block',\n      runner: (state, node, type) => {\n        const src = node.url as string\n        const caption = node.title as string\n        let ratio = Number((node.alt as string) || 1)\n        if (Number.isNaN(ratio) || ratio === 0) ratio = 1\n\n        state.addNode(type, {\n          src,\n          caption,\n          ratio,\n        })\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === 'image-block',\n      runner: (state, node) => {\n        state.openNode('paragraph')\n        state.addNode('image', undefined, undefined, {\n          title: node.attrs.caption,\n          url: node.attrs.src,\n          alt: `${Number.parseFloat(node.attrs.ratio).toFixed(2)}`,\n        })\n        state.closeNode()\n      },\n    },\n  }\n})\n\nwithMeta(imageBlockSchema.node, {\n  displayName: 'NodeSchema<image-block>',\n  group: 'ImageBlock',\n})\n","import type { Node } from '@milkdown/transformer'\nimport { visit } from 'unist-util-visit'\nimport { $remark } from '@milkdown/utils'\nimport { withMeta } from '../__internal__/meta'\n\nfunction visitImage(ast: Node) {\n  return visit(\n    ast,\n    'paragraph',\n    (\n      node: Node & { children?: Node[] },\n      index: number,\n      parent: Node & { children: Node[] }\n    ) => {\n      if (node.children?.length !== 1) return\n      const firstChild = node.children?.[0]\n      if (!firstChild || firstChild.type !== 'image') return\n\n      const { url, alt, title } = firstChild as Node & {\n        url: string\n        alt: string\n        title: string\n      }\n      const newNode = {\n        type: 'image-block',\n        url,\n        alt,\n        title,\n      }\n\n      parent.children.splice(index, 1, newNode)\n    }\n  )\n}\n\nexport const remarkImageBlockPlugin = $remark(\n  'remark-image-block',\n  () => () => visitImage\n)\n\nwithMeta(remarkImageBlockPlugin.plugin, {\n  displayName: 'Remark<remarkImageBlock>',\n  group: 'ImageBlock',\n})\n\nwithMeta(remarkImageBlockPlugin.options, {\n  displayName: 'RemarkConfig<remarkImageBlock>',\n  group: 'ImageBlock',\n})\n","import { $ctx } from '@milkdown/utils'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport interface ImageBlockConfig {\n  imageIcon: () => ReturnType<typeof html> | string | HTMLElement\n  captionIcon: () => ReturnType<typeof html> | string | HTMLElement\n  uploadButton: () => ReturnType<typeof html> | string | HTMLElement\n  confirmButton: () => ReturnType<typeof html> | string | HTMLElement\n  uploadPlaceholderText: string\n  captionPlaceholderText: string\n  onUpload: (file: File) => Promise<string>\n}\n\nexport const defaultImageBlockConfig: ImageBlockConfig = {\n  imageIcon: () => '🌌',\n  captionIcon: () => '💬',\n  uploadButton: () => html`Upload file`,\n  confirmButton: () => html`Confirm ⏎`,\n  uploadPlaceholderText: 'or paste the image link ...',\n  captionPlaceholderText: 'Image caption',\n  onUpload: (file) => Promise.resolve(URL.createObjectURL(file)),\n}\n\nexport const imageBlockConfig = $ctx(\n  defaultImageBlockConfig,\n  'imageBlockConfigCtx'\n)\n\nwithMeta(imageBlockConfig, {\n  displayName: 'Config<image-block>',\n  group: 'ImageBlock',\n})\n","import { type Ref, useEffect, useHost, useMemo } from 'atomico'\n\ninterface Options {\n  image: Ref<HTMLImageElement>\n  resizeHandle: Ref<HTMLDivElement>\n  ratio: number\n  setRatio: (ratio: number) => void\n  src: string\n}\n\nexport function useBlockEffect({\n  image,\n  resizeHandle,\n  ratio,\n  setRatio,\n  src,\n}: Options) {\n  const host = useHost()\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  useEffect(() => {\n    const imageRef = image.current\n    if (!imageRef) return\n\n    delete imageRef.dataset.origin\n    delete imageRef.dataset.height\n    imageRef.style.height = ''\n  }, [src])\n\n  useEffect(() => {\n    const resizeHandleRef = resizeHandle.current\n    const imageRef = image.current\n    if (!resizeHandleRef || !imageRef) return\n    const onMove = (e: PointerEvent) => {\n      e.preventDefault()\n      const top = imageRef.getBoundingClientRect().top\n      const height = e.clientY - top\n      const h = Number(height < 100 ? 100 : height).toFixed(2)\n      imageRef.dataset.height = h\n      imageRef.style.height = `${h}px`\n    }\n    const pointerUp = () => {\n      root.removeEventListener('pointermove', onMove)\n      root.removeEventListener('pointerup', pointerUp)\n      const originHeight = Number(imageRef.dataset.origin)\n      const currentHeight = Number(imageRef.dataset.height)\n      const ratio = Number.parseFloat(\n        Number(currentHeight / originHeight).toFixed(2)\n      )\n      if (Number.isNaN(ratio)) return\n\n      setRatio(ratio)\n    }\n\n    const pointerDown = (e: PointerEvent) => {\n      e.preventDefault()\n      root.addEventListener('pointermove', onMove)\n      root.addEventListener('pointerup', pointerUp)\n    }\n\n    const onLoad = (e: Event) => {\n      const maxWidth = host.current.getBoundingClientRect().width\n      if (!maxWidth) return\n\n      const target = e.target as HTMLImageElement\n      const height = target.height\n      const width = target.width\n      const transformedHeight =\n        width < maxWidth ? height : maxWidth * (height / width)\n      const h = (transformedHeight * ratio).toFixed(2)\n      imageRef.dataset.origin = transformedHeight.toFixed(2)\n      imageRef.dataset.height = h\n      imageRef.style.height = `${h}px`\n    }\n\n    imageRef.addEventListener('load', onLoad)\n    resizeHandleRef.addEventListener('pointerdown', pointerDown)\n    return () => {\n      imageRef.removeEventListener('load', onLoad)\n      resizeHandleRef.removeEventListener('pointerdown', pointerDown)\n    }\n  }, [])\n}\n","import type { Component } from 'atomico'\nimport { c, html, useEffect, useRef, useState } from 'atomico'\nimport clsx from 'clsx'\nimport type { ImageBlockConfig } from '../config'\nimport { IMAGE_DATA_TYPE } from '../schema'\nimport { useBlockEffect } from './event'\n\nexport interface Attrs {\n  src: string\n  caption: string\n  ratio: number\n}\n\nexport type ImageComponentProps = Attrs & {\n  config: ImageBlockConfig\n  selected: boolean\n  readonly: boolean\n  setAttr: <T extends keyof Attrs>(attr: T, value: Attrs[T]) => void\n}\n\nlet timer: number = 0\n\nexport const imageComponent: Component<ImageComponentProps> = ({\n  src = '',\n  caption = '',\n  ratio = 1,\n  selected = false,\n  readonly = false,\n  setAttr,\n  config,\n}) => {\n  const image = useRef<HTMLImageElement>()\n  const resizeHandle = useRef<HTMLDivElement>()\n  const linkInput = useRef<HTMLInputElement>()\n  const [showCaption, setShowCaption] = useState(caption.length > 0)\n  const [hidePlaceholder, setHidePlaceholder] = useState(src.length !== 0)\n  const [uuid] = useState(crypto.randomUUID())\n  const [focusLinkInput, setFocusLinkInput] = useState(false)\n  const [currentLink, setCurrentLink] = useState(src)\n\n  useBlockEffect({\n    image,\n    resizeHandle,\n    ratio,\n    setRatio: (r) => setAttr?.('ratio', r),\n    src,\n  })\n\n  useEffect(() => {\n    if (selected) return\n\n    setShowCaption(caption.length > 0)\n  }, [selected])\n\n  const onInput = (e: InputEvent) => {\n    const target = e.target as HTMLInputElement\n    const value = target.value\n    if (timer) window.clearTimeout(timer)\n\n    timer = window.setTimeout(() => {\n      setAttr?.('caption', value)\n    }, 1000)\n  }\n\n  const onBlurCaption = (e: InputEvent) => {\n    const target = e.target as HTMLInputElement\n    const value = target.value\n    if (timer) {\n      window.clearTimeout(timer)\n      timer = 0\n    }\n\n    setAttr?.('caption', value)\n  }\n\n  const onEditLink = (e: InputEvent) => {\n    const target = e.target as HTMLInputElement\n    const value = target.value\n    setHidePlaceholder(value.length !== 0)\n    setCurrentLink(value)\n  }\n\n  const onUpload = async (e: InputEvent) => {\n    const file = (e.target as HTMLInputElement).files?.[0]\n    if (!file) return\n\n    const url = await config?.onUpload(file)\n    if (!url) return\n\n    setAttr?.('src', url)\n    setHidePlaceholder(true)\n  }\n\n  const onToggleCaption = (e: Event) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (readonly) return\n    setShowCaption((x) => !x)\n  }\n\n  const onConfirmLinkInput = () => {\n    setAttr?.('src', linkInput.current?.value ?? '')\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') onConfirmLinkInput()\n  }\n\n  const preventDrag = (e: Event) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  const onClickUploader = (e: PointerEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  return html`<host class=${clsx(selected && 'selected')}>\n    <div class=${clsx('image-edit', src.length > 0 && 'hidden')}>\n      <div class=\"image-icon\">${config?.imageIcon()}</div>\n      <div class=${clsx('link-importer', focusLinkInput && 'focus')}>\n        <input\n          ref=${linkInput}\n          draggable=\"true\"\n          ondragstart=${preventDrag}\n          disabled=${readonly}\n          class=\"link-input-area\"\n          value=${currentLink}\n          oninput=${onEditLink}\n          onkeydown=${onKeydown}\n          onfocus=${() => setFocusLinkInput(true)}\n          onblur=${() => setFocusLinkInput(false)}\n        />\n        <div class=${clsx('placeholder', hidePlaceholder && 'hidden')}>\n          <input\n            disabled=${readonly}\n            class=\"hidden\"\n            id=${uuid}\n            type=\"file\"\n            accept=\"image/*\"\n            onchange=${onUpload}\n          />\n          <label onpointerdown=${onClickUploader} class=\"uploader\" for=${uuid}>\n            ${config?.uploadButton()}\n          </label>\n          <span class=\"text\" onclick=${() => linkInput.current?.focus()}>\n            ${config?.uploadPlaceholderText}\n          </span>\n        </div>\n      </div>\n      <div\n        class=${clsx('confirm', currentLink.length === 0 && 'hidden')}\n        onclick=${() => onConfirmLinkInput()}\n      >\n        ${config?.confirmButton()}\n      </div>\n    </div>\n    <div class=${clsx('image-wrapper', src.length === 0 && 'hidden')}>\n      <div class=\"operation\">\n        <div class=\"operation-item\" onpointerdown=${onToggleCaption}>\n          ${config?.captionIcon()}\n        </div>\n      </div>\n      <img\n        ref=${image}\n        data-type=${IMAGE_DATA_TYPE}\n        src=${src}\n        alt=${caption}\n        ratio=${ratio}\n      />\n      <div ref=${resizeHandle} class=\"image-resize-handle\"></div>\n    </div>\n    <input\n      draggable=\"true\"\n      ondragstart=${preventDrag}\n      class=${clsx('caption-input', !showCaption && 'hidden')}\n      placeholder=${config?.captionPlaceholderText}\n      oninput=${onInput}\n      onblur=${onBlurCaption}\n      value=${caption}\n    />\n  </host>`\n}\n\nimageComponent.props = {\n  src: String,\n  caption: String,\n  ratio: Number,\n  selected: Boolean,\n  readonly: Boolean,\n  setAttr: Function,\n  config: Object,\n}\n\nexport const ImageElement = c(imageComponent)\n","import { $view } from '@milkdown/utils'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\nimport type { Node } from '@milkdown/prose/model'\nimport { imageBlockSchema } from '../schema'\nimport { imageBlockConfig } from '../config'\nimport { withMeta } from '../../__internal__/meta'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport type { ImageComponentProps } from './component'\nimport { ImageElement } from './component'\n\ndefIfNotExists('milkdown-image-block', ImageElement)\nexport const imageBlockView = $view(\n  imageBlockSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      const dom = document.createElement(\n        'milkdown-image-block'\n      ) as HTMLElement & ImageComponentProps\n      const config = ctx.get(imageBlockConfig.key)\n      const bindAttrs = (node: Node) => {\n        dom.src = node.attrs.src\n        dom.ratio = node.attrs.ratio\n        dom.caption = node.attrs.caption\n\n        dom.readonly = !view.editable\n      }\n\n      bindAttrs(initialNode)\n      dom.selected = false\n      dom.setAttr = (attr, value) => {\n        const pos = getPos()\n        if (pos == null) return\n\n        view.dispatch(view.state.tr.setNodeAttribute(pos, attr, value))\n      }\n      dom.config = config\n      return {\n        dom,\n        update: (updatedNode) => {\n          if (updatedNode.type !== initialNode.type) return false\n\n          bindAttrs(updatedNode)\n          return true\n        },\n        stopEvent: (e) => {\n          if (e.target instanceof HTMLInputElement) return true\n\n          return false\n        },\n        selectNode: () => {\n          dom.selected = true\n        },\n        deselectNode: () => {\n          dom.selected = false\n        },\n        destroy: () => {\n          dom.remove()\n        },\n      }\n    }\n  }\n)\n\nwithMeta(imageBlockView, {\n  displayName: 'NodeView<image-block>',\n  group: 'ImageBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { imageBlockSchema } from './schema'\nimport { remarkImageBlockPlugin } from './remark-plugin'\nimport { imageBlockView } from './view'\nimport { imageBlockConfig } from './config'\n\nexport * from './schema'\nexport * from './remark-plugin'\nexport * from './config'\nexport * from './view'\n\nexport const imageBlockComponent: MilkdownPlugin[] = [\n  remarkImageBlockPlugin,\n  imageBlockSchema,\n  imageBlockView,\n  imageBlockConfig,\n].flat()\n","import { $ctx } from '@milkdown/utils'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport interface InlineImageConfig {\n  imageIcon: () => ReturnType<typeof html>\n  uploadButton: () => ReturnType<typeof html>\n  confirmButton: () => ReturnType<typeof html>\n  uploadPlaceholderText: string\n  onUpload: (file: File) => Promise<string>\n}\n\nexport const defaultInlineImageConfig: InlineImageConfig = {\n  imageIcon: () => '🌌',\n  uploadButton: () => html`Upload`,\n  confirmButton: () => html`⏎`,\n  uploadPlaceholderText: '/Paste',\n  onUpload: (file) => Promise.resolve(URL.createObjectURL(file)),\n}\n\nexport const inlineImageConfig = $ctx(\n  defaultInlineImageConfig,\n  'inlineImageConfigCtx'\n)\n\nwithMeta(inlineImageConfig, {\n  displayName: 'Config<image-inline>',\n  group: 'ImageInline',\n})\n","import { c, html, useRef, useState } from 'atomico'\nimport type { Component } from 'atomico'\nimport clsx from 'clsx'\nimport type { InlineImageConfig } from './config'\n\nexport interface Attrs {\n  src: string\n  alt: string\n  title: string\n}\n\nexport type InlineImageComponentProps = Attrs & {\n  setAttr: <T extends keyof Attrs>(attr: T, value: Attrs[T]) => void\n  selected: boolean\n  config: InlineImageConfig\n}\n\nexport const inlineImageComponent: Component<InlineImageComponentProps> = ({\n  src = '',\n  selected = false,\n  alt,\n  title,\n  setAttr,\n  config,\n}) => {\n  const linkInput = useRef<HTMLInputElement>()\n  const [uuid] = useState(crypto.randomUUID())\n  const [focusLinkInput, setFocusLinkInput] = useState(false)\n  const [hidePlaceholder, setHidePlaceholder] = useState(src.length !== 0)\n  const [currentLink, setCurrentLink] = useState(src)\n\n  const onEditLink = (e: InputEvent) => {\n    const target = e.target as HTMLInputElement\n    const value = target.value\n    setHidePlaceholder(value.length !== 0)\n    setCurrentLink(value)\n  }\n\n  const onUpload = async (e: InputEvent) => {\n    const file = (e.target as HTMLInputElement).files?.[0]\n    if (!file) return\n\n    const url = await config?.onUpload(file)\n    if (!url) return\n\n    setAttr?.('src', url)\n    setHidePlaceholder(true)\n  }\n\n  const onConfirmLinkInput = () => {\n    setAttr?.('src', linkInput.current?.value ?? '')\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') onConfirmLinkInput()\n  }\n\n  const preventDrag = (e: Event) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  const onClickUploader = (e: PointerEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n  }\n\n  return html`<host class=${clsx(selected && 'selected', !src && 'empty')}>\n    ${!src\n      ? html`<div class=\"empty-image-inline\">\n          <div class=\"image-icon\">${config?.imageIcon()}</div>\n          <div class=${clsx('link-importer', focusLinkInput && 'focus')}>\n            <input\n              draggable=\"true\"\n              ref=${linkInput}\n              ondragstart=${preventDrag}\n              class=\"link-input-area\"\n              value=${currentLink}\n              oninput=${onEditLink}\n              onkeydown=${onKeydown}\n              onfocus=${() => setFocusLinkInput(true)}\n              onblur=${() => setFocusLinkInput(false)}\n            />\n            <div class=${clsx('placeholder', hidePlaceholder && 'hidden')}>\n              <input\n                class=\"hidden\"\n                id=${uuid}\n                type=\"file\"\n                accept=\"image/*\"\n                onchange=${onUpload}\n              />\n              <label\n                onpointerdown=${onClickUploader}\n                class=\"uploader\"\n                for=${uuid}\n              >\n                ${config?.uploadButton()}\n              </label>\n              <span class=\"text\" onclick=${() => linkInput.current?.focus()}>\n                ${config?.uploadPlaceholderText}\n              </span>\n            </div>\n          </div>\n          <div\n            class=${clsx('confirm', currentLink.length === 0 && 'hidden')}\n            onclick=${() => onConfirmLinkInput()}\n          >\n            ${config?.confirmButton()}\n          </div>\n        </div>`\n      : html`<img class=\"image-inline\" src=${src} alt=${alt} title=${title} />`}\n  </host>`\n}\n\ninlineImageComponent.props = {\n  src: String,\n  alt: String,\n  title: String,\n  selected: Boolean,\n  setAttr: Function,\n  config: Object,\n}\n\nexport const InlineImageElement = c(inlineImageComponent)\n","import { $view } from '@milkdown/utils'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\nimport { imageSchema } from '@milkdown/preset-commonmark'\nimport type { Node } from '@milkdown/prose/model'\nimport { withMeta } from '../__internal__/meta'\nimport { defIfNotExists } from '../__internal__/helper'\nimport type { InlineImageComponentProps } from './component'\nimport { InlineImageElement } from './component'\nimport { inlineImageConfig } from './config'\n\ndefIfNotExists('milkdown-image-inline', InlineImageElement)\nexport const inlineImageView = $view(\n  imageSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      const dom = document.createElement(\n        'milkdown-image-inline'\n      ) as HTMLElement & InlineImageComponentProps\n      const config = ctx.get(inlineImageConfig.key)\n      const bindAttrs = (node: Node) => {\n        dom.src = node.attrs.src\n        dom.alt = node.attrs.alt\n        dom.title = node.attrs.title\n      }\n      bindAttrs(initialNode)\n      dom.selected = false\n      dom.setAttr = (attr, value) => {\n        const pos = getPos()\n        if (pos == null) return\n\n        view.dispatch(view.state.tr.setNodeAttribute(pos, attr, value))\n      }\n      dom.config = config\n      return {\n        dom,\n        update: (updatedNode) => {\n          if (updatedNode.type !== initialNode.type) return false\n\n          bindAttrs(updatedNode)\n          return true\n        },\n        stopEvent: (e) => {\n          if (dom.selected && e.target instanceof HTMLInputElement) return true\n\n          return false\n        },\n        selectNode: () => {\n          dom.selected = true\n        },\n        deselectNode: () => {\n          dom.selected = false\n        },\n        destroy: () => {\n          dom.remove()\n        },\n      }\n    }\n  }\n)\n\nwithMeta(inlineImageView, {\n  displayName: 'NodeView<image-inline>',\n  group: 'ImageInline',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { inlineImageConfig } from './config'\nimport { inlineImageView } from './view'\n\nexport * from './config'\nexport * from './view'\n\nexport const imageInlineComponent: MilkdownPlugin[] = [\n  inlineImageConfig,\n  inlineImageView,\n]\n","import {\n  imageBlockComponent,\n  imageBlockConfig,\n} from '@milkdown-nota/kit/component/image-block'\nimport {\n  imageInlineComponent,\n  inlineImageConfig,\n} from '@milkdown-nota/kit/component/image-inline'\nimport type { DefineFeature, Icon } from '../shared'\nimport { captionIcon, confirmIcon, imageIcon } from '../../icons'\n\ninterface ImageBlockConfig {\n  onUpload: (file: File) => Promise<string>\n\n  inlineImageIcon: Icon\n  inlineConfirmButton: Icon\n  inlineUploadButton: Icon\n  inlineUploadPlaceholderText: string\n  inlineOnUpload: (file: File) => Promise<string>\n\n  blockImageIcon: Icon\n  blockConfirmButton: Icon\n  blockCaptionIcon: Icon\n  blockUploadButton: Icon\n  blockCaptionPlaceholderText: string\n  blockUploadPlaceholderText: string\n  blockOnUpload: (file: File) => Promise<string>\n}\n\nexport type ImageBlockFeatureConfig = Partial<ImageBlockConfig>\n\nexport const defineFeature: DefineFeature<ImageBlockFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => {\n      ctx.update(inlineImageConfig.key, (value) => ({\n        uploadButton: config?.inlineUploadButton ?? (() => 'Upload'),\n        imageIcon: config?.inlineImageIcon ?? (() => imageIcon),\n        confirmButton: config?.inlineConfirmButton ?? (() => confirmIcon),\n        uploadPlaceholderText:\n          config?.inlineUploadPlaceholderText ?? 'or paste link',\n        onUpload: config?.inlineOnUpload ?? config?.onUpload ?? value.onUpload,\n      }))\n      ctx.update(imageBlockConfig.key, (value) => ({\n        uploadButton: config?.blockUploadButton ?? (() => 'Upload file'),\n        imageIcon: config?.blockImageIcon ?? (() => imageIcon),\n        captionIcon: config?.blockCaptionIcon ?? (() => captionIcon),\n        confirmButton: config?.blockConfirmButton ?? (() => 'Confirm'),\n        captionPlaceholderText:\n          config?.blockCaptionPlaceholderText ?? 'Write Image Caption',\n        uploadPlaceholderText:\n          config?.blockUploadPlaceholderText ?? 'or paste link',\n        onUpload: config?.blockOnUpload ?? config?.onUpload ?? value.onUpload,\n      }))\n    })\n    .use(imageBlockComponent)\n    .use(imageInlineComponent)\n}\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        var _a;\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n        this.color = options.color === false ? undefined : (options.color || \"black\");\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n            if (this.color) {\n                this.element.style.backgroundColor = this.color;\n            }\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (point != null)\n                    target = point;\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { keydownHandler } from 'prosemirror-keymap';\nimport { Selection, NodeSelection, TextSelection, Plugin } from 'prosemirror-state';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\n\n/**\nGap cursor selections are represented using this class. Its\n`$anchor` and `$head` properties both point at the cursor position.\n*/\nclass GapCursor extends Selection {\n    /**\n    Create a gap cursor.\n    */\n    constructor($pos) {\n        super($pos, $pos);\n    }\n    map(doc, mapping) {\n        let $pos = doc.resolve(mapping.map(this.head));\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n    content() { return Slice.empty; }\n    eq(other) {\n        return other instanceof GapCursor && other.head == this.head;\n    }\n    toJSON() {\n        return { type: \"gapcursor\", pos: this.head };\n    }\n    /**\n    @internal\n    */\n    static fromJSON(doc, json) {\n        if (typeof json.pos != \"number\")\n            throw new RangeError(\"Invalid input for GapCursor.fromJSON\");\n        return new GapCursor(doc.resolve(json.pos));\n    }\n    /**\n    @internal\n    */\n    getBookmark() { return new GapBookmark(this.anchor); }\n    /**\n    @internal\n    */\n    static valid($pos) {\n        let parent = $pos.parent;\n        if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos))\n            return false;\n        let override = parent.type.spec.allowGapCursor;\n        if (override != null)\n            return override;\n        let deflt = parent.contentMatchAt($pos.index()).defaultType;\n        return deflt && deflt.isTextblock;\n    }\n    /**\n    @internal\n    */\n    static findGapCursorFrom($pos, dir, mustMove = false) {\n        search: for (;;) {\n            if (!mustMove && GapCursor.valid($pos))\n                return $pos;\n            let pos = $pos.pos, next = null;\n            // Scan up from this position\n            for (let d = $pos.depth;; d--) {\n                let parent = $pos.node(d);\n                if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n                    next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1);\n                    break;\n                }\n                else if (d == 0) {\n                    return null;\n                }\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            // And then down into the next node\n            for (;;) {\n                let inside = dir > 0 ? next.firstChild : next.lastChild;\n                if (!inside) {\n                    if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n                        $pos = $pos.doc.resolve(pos + next.nodeSize * dir);\n                        mustMove = false;\n                        continue search;\n                    }\n                    break;\n                }\n                next = inside;\n                pos += dir;\n                let $cur = $pos.doc.resolve(pos);\n                if (GapCursor.valid($cur))\n                    return $cur;\n            }\n            return null;\n        }\n    }\n}\nGapCursor.prototype.visible = false;\nGapCursor.findFrom = GapCursor.findGapCursorFrom;\nSelection.jsonID(\"gapcursor\", GapCursor);\nclass GapBookmark {\n    constructor(pos) {\n        this.pos = pos;\n    }\n    map(mapping) {\n        return new GapBookmark(mapping.map(this.pos));\n    }\n    resolve(doc) {\n        let $pos = doc.resolve(this.pos);\n        return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos);\n    }\n}\nfunction closedBefore($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.index(d), parent = $pos.node(d);\n        // At the start of this parent, look at next one\n        if (index == 0) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        // See if the node before (or its first ancestor) is closed\n        for (let before = parent.child(index - 1);; before = before.lastChild) {\n            if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating)\n                return true;\n            if (before.inlineContent)\n                return false;\n        }\n    }\n    // Hit start of document\n    return true;\n}\nfunction closedAfter($pos) {\n    for (let d = $pos.depth; d >= 0; d--) {\n        let index = $pos.indexAfter(d), parent = $pos.node(d);\n        if (index == parent.childCount) {\n            if (parent.type.spec.isolating)\n                return true;\n            continue;\n        }\n        for (let after = parent.child(index);; after = after.firstChild) {\n            if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating)\n                return true;\n            if (after.inlineContent)\n                return false;\n        }\n    }\n    return true;\n}\n\n/**\nCreate a gap cursor plugin. When enabled, this will capture clicks\nnear and arrow-key-motion past places that don't have a normally\nselectable position nearby, and create a gap cursor selection for\nthem. The cursor is drawn as an element with class\n`ProseMirror-gapcursor`. You can either include\n`style/gapcursor.css` from the package's directory or add your own\nstyles to make it visible.\n*/\nfunction gapCursor() {\n    return new Plugin({\n        props: {\n            decorations: drawGapCursor,\n            createSelectionBetween(_view, $anchor, $head) {\n                return $anchor.pos == $head.pos && GapCursor.valid($head) ? new GapCursor($head) : null;\n            },\n            handleClick,\n            handleKeyDown,\n            handleDOMEvents: { beforeinput: beforeinput }\n        }\n    });\n}\nconst handleKeyDown = keydownHandler({\n    \"ArrowLeft\": arrow(\"horiz\", -1),\n    \"ArrowRight\": arrow(\"horiz\", 1),\n    \"ArrowUp\": arrow(\"vert\", -1),\n    \"ArrowDown\": arrow(\"vert\", 1)\n});\nfunction arrow(axis, dir) {\n    const dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\");\n    return function (state, dispatch, view) {\n        let sel = state.selection;\n        let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty;\n        if (sel instanceof TextSelection) {\n            if (!view.endOfTextblock(dirStr) || $start.depth == 0)\n                return false;\n            mustMove = false;\n            $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before());\n        }\n        let $found = GapCursor.findGapCursorFrom($start, dir, mustMove);\n        if (!$found)\n            return false;\n        if (dispatch)\n            dispatch(state.tr.setSelection(new GapCursor($found)));\n        return true;\n    };\n}\nfunction handleClick(view, pos, event) {\n    if (!view || !view.editable)\n        return false;\n    let $pos = view.state.doc.resolve(pos);\n    if (!GapCursor.valid($pos))\n        return false;\n    let clickPos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    if (clickPos && clickPos.inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(clickPos.inside)))\n        return false;\n    view.dispatch(view.state.tr.setSelection(new GapCursor($pos)));\n    return true;\n}\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n    if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor))\n        return false;\n    let { $from } = view.state.selection;\n    let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text);\n    if (!insert)\n        return false;\n    let frag = Fragment.empty;\n    for (let i = insert.length - 1; i >= 0; i--)\n        frag = Fragment.from(insert[i].createAndFill(null, frag));\n    let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0));\n    tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)));\n    view.dispatch(tr);\n    return false;\n}\nfunction drawGapCursor(state) {\n    if (!(state.selection instanceof GapCursor))\n        return null;\n    let node = document.createElement(\"div\");\n    node.className = \"ProseMirror-gapcursor\";\n    return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, { key: \"gapcursor\" })]);\n}\n\nexport { GapCursor, gapCursor };\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\nimport { dropCursor } from '@milkdown/prose/dropcursor'\nimport { gapCursor } from '@milkdown/prose/gapcursor'\nimport { $ctx, $prose } from '@milkdown/utils'\n\nfunction withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/plugin-cursor',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n\n/// @internal\nexport interface DropCursorOptions {\n  /**\n    The color of the cursor. Defaults to `black`.\n   */\n  color?: string | false\n  /**\n    The precise width of the cursor in pixels. Defaults to 1.\n   */\n  width?: number\n  /**\n    A CSS class name to add to the cursor element.\n   */\n  class?: string\n}\n\n/// A slice that contains [options for drop cursor](https://github.com/ProseMirror/prosemirror-dropcursor#documentation).\nexport const dropCursorConfig = $ctx<DropCursorOptions, 'dropCursorConfig'>(\n  {},\n  'dropCursorConfig'\n)\n\nwithMeta(dropCursorConfig, {\n  displayName: 'Ctx<dropCursor>',\n})\n\n/// This plugin wraps [drop cursor](https://github.com/ProseMirror/prosemirror-dropcursor).\nexport const dropCursorPlugin = $prose((ctx) =>\n  dropCursor(ctx.get(dropCursorConfig.key))\n)\n\nwithMeta(dropCursorPlugin, {\n  displayName: 'Prose<dropCursor>',\n})\n\n/// This plugin wraps [gap cursor](https://github.com/ProseMirror/prosemirror-gapcursor).\nexport const gapCursorPlugin = $prose(() => gapCursor())\n\nwithMeta(gapCursorPlugin, {\n  displayName: 'Prose<gapCursor>',\n})\n\n/// All plugins exported by this package.\nexport const cursor: MilkdownPlugin[] = [\n  dropCursorConfig,\n  dropCursorPlugin,\n  gapCursorPlugin,\n]\n","import { cursor, dropCursorConfig } from '@milkdown-nota/kit/plugin/cursor'\n\nimport type { DefineFeature } from '../shared'\n\ninterface CursorConfig {\n  color: string | false\n  width: number\n}\nexport type CursorFeatureConfig = Partial<CursorConfig>\n\nexport const defineFeature: DefineFeature<CursorFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => {\n      ctx.update(dropCursorConfig.key, () => ({\n        class: 'crepe-drop-cursor',\n        width: config?.width ?? 4,\n        color: config?.color ?? false,\n      }))\n    })\n    .use(cursor)\n}\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/plugin-block',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import type { Node, ResolvedPos } from '@milkdown/prose/model'\nimport { $ctx } from '@milkdown/utils'\n\nimport { findParent } from '@milkdown/prose'\nimport { withMeta } from './__internal__/with-meta'\n\n/// @internal\nexport type FilterNodes = (pos: ResolvedPos, node: Node) => boolean\n\n/// @internal\nexport const defaultNodeFilter: FilterNodes = (pos) => {\n  const table = findParent((node) => node.type.name === 'table')(pos)\n  if (table) return false\n\n  return true\n}\n\n/// A slice contains the block config.\n/// Possible properties:\n/// - `filterNodes`: A function to filter nodes that can be dragged.\nexport const blockConfig = $ctx<{ filterNodes: FilterNodes }, 'blockConfig'>(\n  { filterNodes: defaultNodeFilter },\n  'blockConfig'\n)\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockConfig>',\n})\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","import type { EditorView } from '@milkdown/prose/view'\n\nimport type { FilterNodes } from '../block-config'\nimport type { ActiveNode } from '../types'\n\nexport function selectRootNodeByDom(\n  view: EditorView,\n  coords: { x: number; y: number },\n  filterNodes: FilterNodes\n): ActiveNode | null {\n  const root = view.dom.parentElement\n  if (!root) return null\n\n  try {\n    const pos = view.posAtCoords({\n      left: coords.x,\n      top: coords.y,\n    })?.inside\n    if (pos == null || pos < 0) return null\n\n    let $pos = view.state.doc.resolve(pos)\n    let node = view.state.doc.nodeAt(pos)\n    let element = view.nodeDOM(pos) as HTMLElement | null\n\n    const filter = (needLookup: boolean) => {\n      const checkDepth = $pos.depth >= 1 && $pos.index($pos.depth) === 0\n      const shouldLookUp = needLookup || checkDepth\n\n      if (!shouldLookUp) return\n\n      const ancestorPos = $pos.before($pos.depth)\n      node = view.state.doc.nodeAt(ancestorPos)\n      element = view.nodeDOM(ancestorPos) as HTMLElement | null\n      $pos = view.state.doc.resolve(ancestorPos)\n\n      if (!filterNodes($pos, node!)) filter(true)\n    }\n\n    // If filterNodes returns false, we should look up the parent node.\n    const filterResult = filterNodes($pos, node!)\n    filter(!filterResult)\n\n    if (!element || !node) return null\n\n    return { node, $pos, el: element }\n  } catch {\n    return null\n  }\n}\n","/**\n * Copy pasted from https://github.com/ProseMirror/prosemirror-view/blob/master/src/clipboard.ts\n */\n\nimport type { NodeType, Slice } from '@milkdown/prose/model'\nimport { DOMSerializer } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\n\nlet _detachedDoc: Document | null = null\nfunction detachedDoc() {\n  return (\n    _detachedDoc ||\n    (_detachedDoc = document.implementation.createHTMLDocument('title'))\n  )\n}\n\nconst wrapMap: { [node: string]: string[] } = {\n  thead: ['table'],\n  tbody: ['table'],\n  tfoot: ['table'],\n  caption: ['table'],\n  colgroup: ['table'],\n  col: ['table', 'colgroup'],\n  tr: ['table', 'tbody'],\n  td: ['table', 'tbody', 'tr'],\n  th: ['table', 'tbody', 'tr'],\n}\n\nexport function serializeForClipboard(view: EditorView, slice: Slice) {\n  const context = []\n  let { openStart, openEnd, content } = slice\n  while (\n    openStart > 1 &&\n    openEnd > 1 &&\n    content.childCount === 1 &&\n    content.firstChild!.childCount === 1\n  ) {\n    openStart -= 1\n    openEnd -= 1\n    const node = content.firstChild!\n    context.push(\n      node.type.name,\n      node.attrs !==\n        (node.type as NodeType & { defaultAttrs: unknown }).defaultAttrs\n        ? node.attrs\n        : null\n    )\n    content = node.content\n  }\n\n  const serializer =\n    view.someProp('clipboardSerializer') ||\n    DOMSerializer.fromSchema(view.state.schema)\n  const doc = detachedDoc()\n  const wrap = doc.createElement('div')\n  wrap.appendChild(serializer.serializeFragment(content, { document: doc }))\n\n  let firstChild = wrap.firstChild\n  let needsWrap\n  let wrappers = 0\n  while (\n    firstChild &&\n    firstChild.nodeType === 1 &&\n    (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])\n  ) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      const wrapper = doc.createElement(needsWrap[i] as string)\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n      wrappers++\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType === 1) {\n    ;(firstChild as HTMLElement).setAttribute(\n      'data-pm-slice',\n      `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : ''} ${JSON.stringify(context)}`\n    )\n  }\n\n  const text =\n    view.someProp('clipboardTextSerializer', (f) => f(slice, view)) ||\n    slice.content.textBetween(0, slice.content.size, '\\n\\n')\n\n  return { dom: wrap, text }\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport { editorViewCtx } from '@milkdown/core'\nimport { browser } from '@milkdown/prose'\nimport type { Selection } from '@milkdown/prose/state'\nimport { NodeSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport throttle from 'lodash.throttle'\n\nimport type { FilterNodes } from './block-config'\nimport { blockConfig } from './block-config'\nimport { selectRootNodeByDom } from './__internal__/select-node-by-dom'\nimport { serializeForClipboard } from './__internal__/serialize-for-clipboard'\nimport type { ActiveNode } from './types'\n\nconst brokenClipboardAPI =\n  (browser.ie && <number>browser.ie_version < 15) ||\n  (browser.ios && browser.webkit_version < 604)\n\nconst buffer = 20\n\n/// @internal\nexport type BlockServiceMessageType =\n  | {\n      type: 'hide'\n    }\n  | {\n      type: 'show'\n      active: ActiveNode\n    }\n\n/// @internal\nexport type BlockServiceMessage = (message: BlockServiceMessageType) => void\n\n/// @internal\n/// The block service, provide events and methods for block plugin.\n/// Generally you don't need to use this class directly.\nexport class BlockService {\n  /// @internal\n  #ctx?: Ctx\n\n  /// @internal\n  #createSelection: () => null | Selection = () => {\n    if (!this.#active) return null\n    const result = this.#active\n    const view = this.#view\n\n    if (view && NodeSelection.isSelectable(result.node)) {\n      const nodeSelection = NodeSelection.create(\n        view.state.doc,\n        result.$pos.pos\n      )\n      view.dispatch(view.state.tr.setSelection(nodeSelection))\n      view.focus()\n      this.#activeSelection = nodeSelection\n      return nodeSelection\n    }\n    return null\n  }\n\n  /// @internal\n  #activeSelection: null | Selection = null\n  /// @internal\n  #active: null | ActiveNode = null\n  /// @internal\n  #activeDOMRect: undefined | DOMRect = undefined\n\n  /// @internal\n  #dragging = false\n\n  /// @internal\n  get #filterNodes(): FilterNodes | undefined {\n    return this.#ctx?.get(blockConfig.key).filterNodes\n  }\n\n  /// @internal\n  get #view() {\n    return this.#ctx?.get(editorViewCtx)\n  }\n\n  /// @internal\n  #notify?: BlockServiceMessage\n\n  /// @internal\n  #hide = () => {\n    this.#notify?.({ type: 'hide' })\n    this.#active = null\n  }\n\n  /// @internal\n  #show = (active: ActiveNode) => {\n    this.#active = active\n    this.#notify?.({ type: 'show', active })\n  }\n\n  /// Bind editor context and notify function to the service.\n  bind = (ctx: Ctx, notify: BlockServiceMessage) => {\n    this.#ctx = ctx\n    this.#notify = notify\n  }\n\n  /// Add mouse event to the dom.\n  addEvent = (dom: HTMLElement) => {\n    dom.addEventListener('mousedown', this.#handleMouseDown)\n    dom.addEventListener('mouseup', this.#handleMouseUp)\n    dom.addEventListener('dragstart', this.#handleDragStart)\n  }\n\n  /// Remove mouse event to the dom.\n  removeEvent = (dom: HTMLElement) => {\n    dom.removeEventListener('mousedown', this.#handleMouseDown)\n    dom.removeEventListener('mouseup', this.#handleMouseUp)\n    dom.removeEventListener('dragstart', this.#handleDragStart)\n  }\n\n  /// Unbind the notify function.\n  unBind = () => {\n    this.#notify = undefined\n  }\n\n  /// @internal\n  #handleMouseDown = () => {\n    this.#activeDOMRect = this.#active?.el.getBoundingClientRect()\n    this.#createSelection()\n  }\n\n  /// @internal\n  #handleMouseUp = () => {\n    if (!this.#dragging) {\n      requestAnimationFrame(() => {\n        if (!this.#activeDOMRect) return\n        this.#view?.focus()\n      })\n\n      return\n    }\n    this.#dragging = false\n    this.#activeSelection = null\n  }\n\n  /// @internal\n  #handleDragStart = (event: DragEvent) => {\n    this.#dragging = true\n\n    const view = this.#view\n    if (!view) return\n    view.dom.dataset.dragging = 'true'\n\n    const selection = this.#activeSelection\n    if (event.dataTransfer && selection) {\n      const slice = selection.content()\n      event.dataTransfer.effectAllowed = 'copyMove'\n      const { dom, text } = serializeForClipboard(view, slice)\n      event.dataTransfer.clearData()\n      event.dataTransfer.setData(\n        brokenClipboardAPI ? 'Text' : 'text/html',\n        dom.innerHTML\n      )\n      if (!brokenClipboardAPI) event.dataTransfer.setData('text/plain', text)\n      const activeEl = this.#active?.el\n      if (activeEl) event.dataTransfer.setDragImage(activeEl, 0, 0)\n\n      view.dragging = {\n        slice,\n        move: true,\n      }\n    }\n  }\n\n  /// @internal\n  keydownCallback = (view: EditorView) => {\n    this.#hide()\n\n    this.#dragging = false\n    view.dom.dataset.dragging = 'false'\n    return false\n  }\n\n  /// @internal\n  #mousemoveCallback = throttle((view: EditorView, event: MouseEvent) => {\n    if (!view.editable) return\n\n    const rect = view.dom.getBoundingClientRect()\n    const x = rect.left + rect.width / 2\n    const dom = view.root.elementFromPoint(x, event.clientY)\n    if (!(dom instanceof Element)) {\n      this.#hide()\n      return\n    }\n\n    const filterNodes = this.#filterNodes\n    if (!filterNodes) return\n\n    const result = selectRootNodeByDom(\n      view,\n      { x, y: event.clientY },\n      filterNodes\n    )\n\n    if (!result) {\n      this.#hide()\n      return\n    }\n    this.#show(result)\n  }, 200)\n\n  /// @internal\n  mousemoveCallback = (view: EditorView, event: MouseEvent) => {\n    if (view.composing || !view.editable) return false\n\n    this.#mousemoveCallback(view, event)\n\n    return false\n  }\n\n  /// @internal\n  dragoverCallback = (view: EditorView, event: DragEvent) => {\n    if (this.#dragging) {\n      const root = this.#view?.dom.parentElement\n      if (!root) return false\n\n      const hasHorizontalScrollbar = root.scrollHeight > root.clientHeight\n\n      const rootRect = root.getBoundingClientRect()\n      if (hasHorizontalScrollbar) {\n        if (root.scrollTop > 0 && Math.abs(event.y - rootRect.y) < buffer) {\n          const top = root.scrollTop > 10 ? root.scrollTop - 10 : 0\n          root.scrollTop = top\n          return false\n        }\n        const totalHeight = Math.round(view.dom.getBoundingClientRect().height)\n        const scrollBottom = Math.round(root.scrollTop + rootRect.height)\n        if (\n          scrollBottom < totalHeight &&\n          Math.abs(event.y - (rootRect.height + rootRect.y)) < buffer\n        ) {\n          const top = root.scrollTop + 10\n          root.scrollTop = top\n          return false\n        }\n      }\n    }\n    return false\n  }\n\n  /// @internal\n  dragenterCallback = (view: EditorView) => {\n    if (!view.dragging) return\n\n    this.#dragging = true\n    view.dom.dataset.dragging = 'true'\n  }\n\n  /// @internal\n  dragleaveCallback = (view: EditorView, event: DragEvent) => {\n    const x = event.clientX\n    const y = event.clientY\n    // if cursor out of the editor\n    if (x < 0 || y < 0 || x > window.innerWidth || y > window.innerHeight) {\n      this.#active = null\n      this.#dragEnd(view)\n    }\n  }\n\n  /// @internal\n  dropCallback = (view: EditorView) => {\n    this.#dragEnd(view)\n\n    return false\n  }\n\n  /// @internal\n  dragendCallback = (view: EditorView) => {\n    this.#dragEnd(view)\n  }\n\n  /// @internal\n  #dragEnd = (view: EditorView) => {\n    this.#dragging = false\n    view.dom.dataset.dragging = 'false'\n  }\n}\n","import type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { $ctx, $prose } from '@milkdown/utils'\n\nimport { BlockService } from './block-service'\nimport { withMeta } from './__internal__/with-meta'\nimport { blockConfig } from './block-config'\n\n/// @internal\nexport const blockService = $ctx(new BlockService(), 'blockService')\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockService>',\n})\n\n/// A slice contains a factory that will return a plugin spec.\n/// Users can use this slice to customize the plugin.\nexport const blockSpec = $ctx<PluginSpec<any>, 'blockSpec'>({}, 'blockSpec')\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockSpec>',\n})\n\n/// The block prosemirror plugin.\nexport const blockPlugin = $prose((ctx) => {\n  const milkdownPluginBlockKey = new PluginKey('MILKDOWN_BLOCK')\n  const service = ctx.get(blockService.key)\n  const spec = ctx.get(blockSpec.key)\n\n  return new Plugin({\n    key: milkdownPluginBlockKey,\n    ...spec,\n    props: {\n      ...spec.props,\n      handleDOMEvents: {\n        drop: (view) => {\n          return service.dropCallback(view)\n        },\n        pointermove: (view, event) => {\n          return service.mousemoveCallback(view, event)\n        },\n        keydown: (view) => {\n          return service.keydownCallback(view)\n        },\n        dragover: (view, event) => {\n          return service.dragoverCallback(view, event)\n        },\n        dragleave: (view, event) => {\n          return service.dragleaveCallback(view, event)\n        },\n        dragenter: (view) => {\n          return service.dragenterCallback(view)\n        },\n        dragend: (view) => {\n          return service.dragendCallback(view)\n        },\n      },\n    },\n  })\n})\n\nwithMeta(blockPlugin, {\n  displayName: 'Prose<block>',\n})\n","import type { Ctx } from '@milkdown/ctx'\nimport type { EditorState } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport type {\n  ComputePositionConfig,\n  Middleware,\n  Placement,\n  VirtualElement,\n} from '@floating-ui/dom'\nimport { computePosition, flip, offset } from '@floating-ui/dom'\n\nimport { editorViewCtx } from '@milkdown/core'\nimport type { BlockService } from './block-service'\nimport { blockService } from './block-plugin'\nimport type { ActiveNode } from './types'\n\n/// The context of the block provider.\nexport interface DeriveContext {\n  ctx: Ctx\n  active: ActiveNode\n  editorDom: HTMLElement\n  blockDom: HTMLElement\n}\n\n/// Options for creating block provider.\nexport interface BlockProviderOptions {\n  /// The context of the editor.\n  ctx: Ctx\n  /// The content of the block.\n  content: HTMLElement\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The offset to get the block. Default is 0.\n  getOffset?: (deriveContext: DeriveContext) =>\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n  /// The function to get the position of the block. Default is the position of the active node.\n  getPosition?: (deriveContext: DeriveContext) => Omit<DOMRect, 'toJSON'>\n  /// The function to get the placement of the block. Default is 'left'.\n  getPlacement?: (deriveContext: DeriveContext) => Placement\n  /// Other middlewares for floating ui. This will be added after the internal middlewares.\n  middleware?: Middleware[]\n  /// Options for floating ui. If you pass `middleware` or `placement`, it will override the internal settings.\n  floatingUIOptions?: Partial<ComputePositionConfig>\n}\n\n/// A provider for creating block.\nexport class BlockProvider {\n  /// @internal\n  readonly #element: HTMLElement\n\n  /// @internal\n  readonly #ctx: Ctx\n\n  /// @internal\n  #service?: BlockService\n\n  /// @internal\n  #activeNode: ActiveNode | null = null\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #middleware: Middleware[]\n\n  /// @internal\n  readonly #floatingUIOptions: Partial<ComputePositionConfig>\n\n  /// @internal\n  readonly #getOffset?: (deriveContext: DeriveContext) =>\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n\n  /// @internal\n  readonly #getPosition?: (\n    deriveContext: DeriveContext\n  ) => Omit<DOMRect, 'toJSON'>\n\n  /// @internal\n  readonly #getPlacement?: (deriveContext: DeriveContext) => Placement\n\n  /// The context of current active node.\n  get active() {\n    return this.#activeNode\n  }\n\n  constructor(options: BlockProviderOptions) {\n    this.#ctx = options.ctx\n    this.#element = options.content\n    this.#getOffset = options.getOffset\n    this.#getPosition = options.getPosition\n    this.#getPlacement = options.getPlacement\n    this.#middleware = options.middleware ?? []\n    this.#floatingUIOptions = options.floatingUIOptions ?? {}\n    this.hide()\n  }\n\n  /// @internal\n  #init() {\n    const view = this.#ctx.get(editorViewCtx)\n    view.dom.parentElement?.appendChild(this.#element)\n\n    const service = this.#ctx.get(blockService.key)\n    service.bind(this.#ctx, (message) => {\n      if (message.type === 'hide') {\n        this.hide()\n        this.#activeNode = null\n      } else if (message.type === 'show') {\n        this.show(message.active)\n        this.#activeNode = message.active\n      }\n    })\n\n    this.#service = service\n    this.#service.addEvent(this.#element)\n    this.#element.draggable = true\n  }\n\n  /// Update provider state by editor view.\n  update = (): void => {\n    requestAnimationFrame(() => {\n      if (!this.#initialized) {\n        try {\n          this.#init()\n          this.#initialized = true\n        } catch {\n          // ignore\n        }\n      }\n    })\n  }\n\n  /// Destroy the block.\n  destroy = () => {\n    this.#service?.unBind()\n    this.#service?.removeEvent(this.#element)\n    this.#element.remove()\n  }\n\n  /// Show the block.\n  show = (active: ActiveNode) => {\n    const dom = active.el\n    const editorDom = this.#ctx.get(editorViewCtx).dom\n    const deriveContext: DeriveContext = {\n      ctx: this.#ctx,\n      active,\n      editorDom,\n      blockDom: this.#element,\n    }\n    const virtualEl: VirtualElement = {\n      contextElement: dom,\n      getBoundingClientRect: () => {\n        if (this.#getPosition) return this.#getPosition(deriveContext)\n\n        return dom.getBoundingClientRect()\n      },\n    }\n    const middleware = [flip()]\n    if (this.#getOffset) {\n      const offsetOption = this.#getOffset(deriveContext)\n      const offsetExt = offset(offsetOption)\n      middleware.push(offsetExt)\n    }\n\n    computePosition(virtualEl, this.#element, {\n      placement: this.#getPlacement\n        ? this.#getPlacement(deriveContext)\n        : 'left',\n      middleware: [...middleware, ...this.#middleware],\n      ...this.#floatingUIOptions,\n    }).then(({ x, y }) => {\n      Object.assign(this.#element.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n      this.#element.dataset.show = 'true'\n    })\n  }\n\n  /// Hide the block.\n  hide = () => {\n    this.#element.dataset.show = 'false'\n  }\n}\n","import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport type { FilterNodes } from './block-config'\nimport { blockConfig } from './block-config'\nimport { blockPlugin, blockService, blockSpec } from './block-plugin'\nimport type { BlockService } from './block-service'\n\nexport * from './block-plugin'\nexport * from './block-provider'\nexport * from './block-service'\nexport * from './block-config'\nexport * from './types'\n\n/// @internal\nexport type BlockPlugin = [\n  $Ctx<PluginSpec<any>, 'blockSpec'>,\n  $Ctx<{ filterNodes: FilterNodes }, 'blockConfig'>,\n  $Ctx<BlockService, 'blockService'>,\n  $Prose,\n] & {\n  key: SliceType<PluginSpec<any>, 'blockSpec'>\n  pluginKey: $Prose['key']\n}\n\n/// All plugins exported by this package.\nexport const block = [\n  blockSpec,\n  blockConfig,\n  blockService,\n  blockPlugin,\n] as BlockPlugin\nblock.key = blockSpec.key\nblock.pluginKey = blockPlugin.key\n","import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport { $ctx, $prose } from '@milkdown/utils'\n\n/// @internal\nexport type SlashPluginSpecId<Id extends string> = `${Id}_SLASH_SPEC`\n\n/// @internal\nexport type SlashPlugin<Id extends string, State = any> = [\n  $Ctx<PluginSpec<State>, SlashPluginSpecId<Id>>,\n  $Prose,\n] & {\n  key: SliceType<PluginSpec<State>, SlashPluginSpecId<Id>>\n  pluginKey: $Prose['key']\n}\n\n/// Create a slash plugin with a unique id.\nexport function slashFactory<Id extends string, State = any>(id: Id) {\n  const slashSpec = $ctx<PluginSpec<State>, SlashPluginSpecId<Id>>(\n    {},\n    `${id}_SLASH_SPEC`\n  )\n  const slashPlugin = $prose((ctx) => {\n    const spec = ctx.get(slashSpec.key)\n    return new Plugin({\n      key: new PluginKey(`${id}_SLASH`),\n      ...spec,\n    })\n  })\n  const result = [slashSpec, slashPlugin] as SlashPlugin<Id>\n  result.key = slashSpec.key\n  result.pluginKey = slashPlugin.key\n  slashSpec.meta = {\n    package: '@milkdown/plugin-slash',\n    displayName: `Ctx<slashSpec>|${id}`,\n  }\n  slashPlugin.meta = {\n    package: '@milkdown/plugin-slash',\n    displayName: `Prose<slash>|${id}`,\n  }\n\n  return result\n}\n","import { findParentNode, posToDOMRect } from '@milkdown/prose'\nimport type { EditorState } from '@milkdown/prose/state'\nimport type { Node } from '@milkdown/prose/model'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport debounce from 'lodash.debounce'\nimport type {\n  ComputePositionConfig,\n  Middleware,\n  VirtualElement,\n} from '@floating-ui/dom'\nimport { computePosition, flip, offset } from '@floating-ui/dom'\n\n/// Options for slash provider.\nexport interface SlashProviderOptions {\n  /// The slash content.\n  content: HTMLElement\n  /// The debounce time for updating slash, 200ms by default.\n  debounce?: number\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The key trigger for shouldShow, '/' by default.\n  trigger?: string | string[]\n  /// The offset to get the block. Default is 0.\n  offset?:\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n  /// Other middlewares for floating ui. This will be added after the internal middlewares.\n  middleware?: Middleware[]\n  /// Options for floating ui. If you pass `middleware` or `placement`, it will override the internal settings.\n  floatingUIOptions?: Partial<ComputePositionConfig>\n}\n\n/// A provider for creating slash.\nexport class SlashProvider {\n  /// The root element of the slash.\n  element: HTMLElement\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #middleware: Middleware[]\n\n  /// @internal\n  readonly #floatingUIOptions: Partial<ComputePositionConfig>\n\n  /// @internal\n  readonly #debounce: number\n\n  /// @internal\n  readonly #trigger: string | string[]\n\n  /// @internal\n  readonly #shouldShow: (view: EditorView, prevState?: EditorState) => boolean\n\n  /// The offset to get the block. Default is 0.\n  readonly #offset?:\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n\n  /// On show callback.\n  onShow = () => {}\n\n  /// On hide callback.\n  onHide = () => {}\n\n  constructor(options: SlashProviderOptions) {\n    this.element = options.content\n    this.#debounce = options.debounce ?? 200\n    this.#shouldShow = options.shouldShow ?? this.#_shouldShow\n    this.#trigger = options.trigger ?? '/'\n    this.#offset = options.offset\n    this.#middleware = options.middleware ?? []\n    this.#floatingUIOptions = options.floatingUIOptions ?? {}\n  }\n\n  /// @internal\n  #onUpdate = (view: EditorView, prevState?: EditorState): void => {\n    const { state, composing } = view\n    const { selection, doc } = state\n    const { ranges } = selection\n    const from = Math.min(...ranges.map((range) => range.$from.pos))\n    const to = Math.max(...ranges.map((range) => range.$to.pos))\n    const isSame =\n      prevState && prevState.doc.eq(doc) && prevState.selection.eq(selection)\n\n    if (!this.#initialized) {\n      view.dom.parentElement?.appendChild(this.element)\n      this.#initialized = true\n    }\n\n    if (composing || isSame) return\n\n    if (!this.#shouldShow(view, prevState)) {\n      this.hide()\n      return\n    }\n\n    const virtualEl: VirtualElement = {\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    }\n    computePosition(virtualEl, this.element, {\n      placement: 'bottom-start',\n      middleware: [flip(), offset(this.#offset), ...this.#middleware],\n      ...this.#floatingUIOptions,\n    }).then(({ x, y }) => {\n      Object.assign(this.element.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n    })\n\n    this.show()\n  }\n\n  /// @internal\n  #_shouldShow(view: EditorView): boolean {\n    const currentTextBlockContent = this.getContent(view)\n\n    if (!currentTextBlockContent) return false\n\n    const target = currentTextBlockContent.at(-1)\n\n    if (!target) return false\n\n    return Array.isArray(this.#trigger)\n      ? this.#trigger.includes(target)\n      : this.#trigger === target\n  }\n\n  /// Update provider state by editor view.\n  update = (view: EditorView, prevState?: EditorState): void => {\n    const updater = debounce(this.#onUpdate, this.#debounce)\n\n    updater(view, prevState)\n  }\n\n  /// Get the content of the current text block.\n  /// Pass the `matchNode` function to determine whether the current node should be matched, by default, it will match the paragraph node.\n  getContent = (\n    view: EditorView,\n    matchNode: (node: Node) => boolean = (node) =>\n      node.type.name === 'paragraph'\n  ): string | undefined => {\n    const { selection } = view.state\n    const { empty, $from } = selection\n    const isTextBlock = view.state.selection instanceof TextSelection\n\n    const isSlashChildren = this.element.contains(document.activeElement)\n\n    const notHasFocus = !view.hasFocus() && !isSlashChildren\n\n    const isReadonly = !view.editable\n\n    const paragraph = findParentNode(matchNode)(view.state.selection)\n\n    const isNotInParagraph = !paragraph\n\n    if (notHasFocus || isReadonly || !empty || !isTextBlock || isNotInParagraph)\n      return\n\n    return $from.parent.textBetween(\n      Math.max(0, $from.parentOffset - 500),\n      $from.parentOffset,\n      undefined,\n      '\\uFFFC'\n    )\n  }\n\n  /// Destroy the slash.\n  destroy = () => {}\n\n  /// Show the slash.\n  show = () => {\n    this.element.dataset.show = 'true'\n    this.onShow()\n  }\n\n  /// Hide the slash.\n  hide = () => {\n    this.element.dataset.show = 'false'\n    this.onHide()\n  }\n}\n","import type { Selection } from '@milkdown-nota/kit/prose/state'\n\nexport function isInCodeBlock(selection: Selection) {\n  const type = selection.$from.parent.type\n  return type.name === 'code_block'\n}\n\nexport function isInList(selection: Selection) {\n  const type = selection.$from.node(selection.$from.depth - 1)?.type\n  return type?.name === 'list_item'\n}\n\nexport function defIfNotExists(\n  tagName: string,\n  element: CustomElementConstructor\n) {\n  if (customElements.get(tagName) == null)\n    customElements.define(tagName, element)\n}\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/preset-gfm',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { commandsCtx } from '@milkdown/core'\nimport {\n  $command,\n  $inputRule,\n  $markAttr,\n  $markSchema,\n  $useKeymap,\n} from '@milkdown/utils'\nimport { toggleMark } from '@milkdown/prose/commands'\nimport { markRule } from '@milkdown/prose'\nimport { withMeta } from '../__internal__'\n\n/// HTML attributes for the strikethrough mark.\nexport const strikethroughAttr = $markAttr('strike_through')\n\nwithMeta(strikethroughAttr, {\n  displayName: 'Attr<strikethrough>',\n  group: 'Strikethrough',\n})\n\n/// Strikethrough mark schema.\nexport const strikethroughSchema = $markSchema('strike_through', (ctx) => ({\n  parseDOM: [\n    { tag: 'del' },\n    {\n      style: 'text-decoration',\n      getAttrs: (value) => (value === 'line-through') as false,\n    },\n  ],\n  toDOM: (mark) => ['del', ctx.get(strikethroughAttr.key)(mark)],\n  parseMarkdown: {\n    match: (node) => node.type === 'delete',\n    runner: (state, node, markType) => {\n      state.openMark(markType)\n      state.next(node.children)\n      state.closeMark(markType)\n    },\n  },\n  toMarkdown: {\n    match: (mark) => mark.type.name === 'strike_through',\n    runner: (state, mark) => {\n      state.withMark(mark, 'delete')\n    },\n  },\n}))\n\nwithMeta(strikethroughSchema.mark, {\n  displayName: 'MarkSchema<strikethrough>',\n  group: 'Strikethrough',\n})\n\nwithMeta(strikethroughSchema.ctx, {\n  displayName: 'MarkSchemaCtx<strikethrough>',\n  group: 'Strikethrough',\n})\n\n/// A command to toggle the strikethrough mark.\nexport const toggleStrikethroughCommand = $command(\n  'ToggleStrikeThrough',\n  (ctx) => () => {\n    return toggleMark(strikethroughSchema.type(ctx))\n  }\n)\n\nwithMeta(toggleStrikethroughCommand, {\n  displayName: 'Command<ToggleStrikethrough>',\n  group: 'Strikethrough',\n})\n\n/// Input rule to create the strikethrough mark.\nexport const strikethroughInputRule = $inputRule((ctx) => {\n  return markRule(/~([^~]+)~$/, strikethroughSchema.type(ctx))\n})\n\nwithMeta(strikethroughInputRule, {\n  displayName: 'InputRule<strikethrough>',\n  group: 'Strikethrough',\n})\n\n/// Keymap for the strikethrough mark.\n/// - `Mod-Alt-x` - Toggle the strikethrough mark.\nexport const strikethroughKeymap = $useKeymap('strikeThroughKeymap', {\n  ToggleStrikethrough: {\n    shortcuts: 'Mod-Alt-x',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(toggleStrikethroughCommand.key)\n    },\n  },\n})\n\nwithMeta(strikethroughKeymap.ctx, {\n  displayName: 'KeymapCtx<strikethrough>',\n  group: 'Strikethrough',\n})\n\nwithMeta(strikethroughKeymap.shortcuts, {\n  displayName: 'Keymap<strikethrough>',\n  group: 'Strikethrough',\n})\n","// src/index.ts\nimport { Plugin as Plugin2 } from \"prosemirror-state\";\n\n// src/cellselection.ts\nimport { Fragment, Slice } from \"prosemirror-model\";\nimport {\n  NodeSelection as NodeSelection2,\n  Selection,\n  SelectionRange,\n  TextSelection\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/tablemap.ts\nvar readFromCache;\nvar addToCache;\nif (typeof WeakMap != \"undefined\") {\n  let cache = /* @__PURE__ */ new WeakMap();\n  readFromCache = (key) => cache.get(key);\n  addToCache = (key, value) => {\n    cache.set(key, value);\n    return value;\n  };\n} else {\n  const cache = [];\n  const cacheSize = 10;\n  let cachePos = 0;\n  readFromCache = (key) => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key)\n        return cache[i + 1];\n  };\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize)\n      cachePos = 0;\n    cache[cachePos++] = key;\n    return cache[cachePos++] = value;\n  };\n}\nvar TableMap = class {\n  constructor(width, height, map, problems) {\n    this.width = width;\n    this.height = height;\n    this.map = map;\n    this.problems = problems;\n  }\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      const curPos = this.map[i];\n      if (curPos != pos)\n        continue;\n      const left = i % this.width;\n      const top = i / this.width | 0;\n      let right = left + 1;\n      let bottom = top + 1;\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) {\n        right++;\n      }\n      for (let j = 1; bottom < this.height && this.map[i + this.width * j] == curPos; j++) {\n        bottom++;\n      }\n      return { left, top, right, bottom };\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      if (this.map[i] == pos) {\n        return i % this.width;\n      }\n    }\n    throw new RangeError(`No cell with offset ${pos} found`);\n  }\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    const { left, right, top, bottom } = this.findCell(pos);\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width)\n        return null;\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)];\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height)\n        return null;\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)];\n    }\n  }\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    const {\n      left: leftA,\n      right: rightA,\n      top: topA,\n      bottom: bottomA\n    } = this.findCell(a);\n    const {\n      left: leftB,\n      right: rightB,\n      top: topB,\n      bottom: bottomB\n    } = this.findCell(b);\n    return {\n      left: Math.min(leftA, leftB),\n      top: Math.min(topA, topB),\n      right: Math.max(rightA, rightB),\n      bottom: Math.max(bottomA, bottomB)\n    };\n  }\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    const result = [];\n    const seen = {};\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const index = row * this.width + col;\n        const pos = this.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        if (col == rect.left && col && this.map[index - 1] == pos || row == rect.top && row && this.map[index - this.width] == pos) {\n          continue;\n        }\n        result.push(pos);\n      }\n    }\n    return result;\n  }\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0; ; i++) {\n      const rowEnd = rowStart + table.child(i).nodeSize;\n      if (i == row) {\n        let index = col + row * this.width;\n        const rowEndIndex = (row + 1) * this.width;\n        while (index < rowEndIndex && this.map[index] < rowStart)\n          index++;\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index];\n      }\n      rowStart = rowEnd;\n    }\n  }\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table));\n  }\n};\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\")\n    throw new RangeError(\"Not a table node: \" + table.type.name);\n  const width = findWidth(table), height = table.childCount;\n  const map = [];\n  let mapPos = 0;\n  let problems = null;\n  const colWidths = [];\n  for (let i = 0, e = width * height; i < e; i++)\n    map[i] = 0;\n  for (let row = 0, pos = 0; row < height; row++) {\n    const rowNode = table.child(row);\n    pos++;\n    for (let i = 0; ; i++) {\n      while (mapPos < map.length && map[mapPos] != 0)\n        mapPos++;\n      if (i == rowNode.childCount)\n        break;\n      const cellNode = rowNode.child(i);\n      const { colspan, rowspan, colwidth } = cellNode.attrs;\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({\n            type: \"overlong_rowspan\",\n            pos,\n            n: rowspan - h\n          });\n          break;\n        }\n        const start = mapPos + h * width;\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos;\n          else\n            (problems || (problems = [])).push({\n              type: \"collision\",\n              row,\n              pos,\n              n: colspan - w\n            });\n          const colW = colwidth && colwidth[w];\n          if (colW) {\n            const widthIndex = (start + w) % width * 2, prev = colWidths[widthIndex];\n            if (prev == null || prev != colW && colWidths[widthIndex + 1] == 1) {\n              colWidths[widthIndex] = colW;\n              colWidths[widthIndex + 1] = 1;\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++;\n            }\n          }\n        }\n      }\n      mapPos += colspan;\n      pos += cellNode.nodeSize;\n    }\n    const expectedPos = (row + 1) * width;\n    let missing = 0;\n    while (mapPos < expectedPos)\n      if (map[mapPos++] == 0)\n        missing++;\n    if (missing)\n      (problems || (problems = [])).push({ type: \"missing\", row, n: missing });\n    pos++;\n  }\n  const tableMap = new TableMap(width, height, map, problems);\n  let badWidths = false;\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height)\n      badWidths = true;\n  if (badWidths)\n    findBadColWidths(tableMap, colWidths, table);\n  return tableMap;\n}\nfunction findWidth(table) {\n  let width = -1;\n  let hasRowSpan = false;\n  for (let row = 0; row < table.childCount; row++) {\n    const rowNode = table.child(row);\n    let rowWidth = 0;\n    if (hasRowSpan)\n      for (let j = 0; j < row; j++) {\n        const prevRow = table.child(j);\n        for (let i = 0; i < prevRow.childCount; i++) {\n          const cell = prevRow.child(i);\n          if (j + cell.attrs.rowspan > row)\n            rowWidth += cell.attrs.colspan;\n        }\n      }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      const cell = rowNode.child(i);\n      rowWidth += cell.attrs.colspan;\n      if (cell.attrs.rowspan > 1)\n        hasRowSpan = true;\n    }\n    if (width == -1)\n      width = rowWidth;\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth);\n  }\n  return width;\n}\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems)\n    map.problems = [];\n  const seen = {};\n  for (let i = 0; i < map.map.length; i++) {\n    const pos = map.map[i];\n    if (seen[pos])\n      continue;\n    seen[pos] = true;\n    const node = table.nodeAt(pos);\n    if (!node) {\n      throw new RangeError(`No cell with offset ${pos} found`);\n    }\n    let updated = null;\n    const attrs = node.attrs;\n    for (let j = 0; j < attrs.colspan; j++) {\n      const col = (i + j) % map.width;\n      const colWidth = colWidths[col * 2];\n      if (colWidth != null && (!attrs.colwidth || attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(attrs)))[j] = colWidth;\n    }\n    if (updated)\n      map.problems.unshift({\n        type: \"colwidth mismatch\",\n        pos,\n        colwidth: updated\n      });\n  }\n}\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth)\n    return attrs.colwidth.slice();\n  const result = [];\n  for (let i = 0; i < attrs.colspan; i++)\n    result.push(0);\n  return result;\n}\n\n// src/util.ts\nimport { PluginKey } from \"prosemirror-state\";\n\n// src/schema.ts\nfunction getCellAttrs(dom, extraAttrs) {\n  if (typeof dom === \"string\") {\n    return {};\n  }\n  const widthAttr = dom.getAttribute(\"data-colwidth\");\n  const widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map((s) => Number(s)) : null;\n  const colspan = Number(dom.getAttribute(\"colspan\") || 1);\n  const result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  };\n  for (const prop in extraAttrs) {\n    const getter = extraAttrs[prop].getFromDOM;\n    const value = getter && getter(dom);\n    if (value != null) {\n      result[prop] = value;\n    }\n  }\n  return result;\n}\nfunction setCellAttrs(node, extraAttrs) {\n  const attrs = {};\n  if (node.attrs.colspan != 1)\n    attrs.colspan = node.attrs.colspan;\n  if (node.attrs.rowspan != 1)\n    attrs.rowspan = node.attrs.rowspan;\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\");\n  for (const prop in extraAttrs) {\n    const setter = extraAttrs[prop].setDOMAttr;\n    if (setter)\n      setter(node.attrs[prop], attrs);\n  }\n  return attrs;\n}\nfunction tableNodes(options) {\n  const extraAttrs = options.cellAttributes || {};\n  const cellAttrs = {\n    colspan: { default: 1 },\n    rowspan: { default: 1 },\n    colwidth: { default: null }\n  };\n  for (const prop in extraAttrs)\n    cellAttrs[prop] = { default: extraAttrs[prop].default };\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{ tag: \"table\" }],\n      toDOM() {\n        return [\"table\", [\"tbody\", 0]];\n      }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{ tag: \"tr\" }],\n      toDOM() {\n        return [\"tr\", 0];\n      }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"td\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"td\", setCellAttrs(node, extraAttrs), 0];\n      }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [\n        { tag: \"th\", getAttrs: (dom) => getCellAttrs(dom, extraAttrs) }\n      ],\n      toDOM(node) {\n        return [\"th\", setCellAttrs(node, extraAttrs), 0];\n      }\n    }\n  };\n}\nfunction tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes;\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {};\n    for (const name in schema.nodes) {\n      const type = schema.nodes[name], role = type.spec.tableRole;\n      if (role)\n        result[role] = type;\n    }\n  }\n  return result;\n}\n\n// src/util.ts\nvar tableEditingKey = new PluginKey(\"selectingCells\");\nfunction cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\")\n      return $pos.node(0).resolve($pos.before(d + 1));\n  return null;\n}\nfunction cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) {\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === \"header_cell\")\n      return $pos.node(d);\n  }\n  return null;\n}\nfunction isInTable(state) {\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--)\n    if ($head.node(d).type.spec.tableRole == \"row\")\n      return true;\n  return false;\n}\nfunction selectionCell(state) {\n  const sel = state.selection;\n  if (\"$anchorCell\" in sel && sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (\"node\" in sel && sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor;\n  }\n  const $cell = cellAround(sel.$head) || cellNear(sel.$head);\n  if ($cell) {\n    return $cell;\n  }\n  throw new RangeError(`No cell found around position ${sel.head}`);\n}\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    const role = after.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos);\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    const role = before.type.spec.tableRole;\n    if (role == \"cell\" || role == \"header_cell\")\n      return $pos.doc.resolve(pos - before.nodeSize);\n  }\n}\nfunction pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && !!$pos.nodeAfter;\n}\nfunction moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize);\n}\nfunction inSameTable($cellA, $cellB) {\n  return $cellA.depth == $cellB.depth && $cellA.pos >= $cellB.start(-1) && $cellA.pos <= $cellB.end(-1);\n}\nfunction findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1));\n}\nfunction colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1));\n}\nfunction nextCell($pos, axis, dir) {\n  const table = $pos.node(-1);\n  const map = TableMap.get(table);\n  const tableStart = $pos.start(-1);\n  const moved = map.nextCell($pos.pos - tableStart, axis, dir);\n  return moved == null ? null : $pos.node(0).resolve(tableStart + moved);\n}\nfunction removeColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan - n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    result.colwidth.splice(pos, n);\n    if (!result.colwidth.some((w) => w > 0))\n      result.colwidth = null;\n  }\n  return result;\n}\nfunction addColSpan(attrs, pos, n = 1) {\n  const result = { ...attrs, colspan: attrs.colspan + n };\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice();\n    for (let i = 0; i < n; i++)\n      result.colwidth.splice(pos, 0, 0);\n  }\n  return result;\n}\nfunction columnIsHeader(map, table, col) {\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false;\n  return true;\n}\n\n// src/cellselection.ts\nvar CellSelection = class _CellSelection extends Selection {\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const rect = map.rectBetween(\n      $anchorCell.pos - tableStart,\n      $headCell.pos - tableStart\n    );\n    const doc = $anchorCell.node(0);\n    const cells = map.cellsInRect(rect).filter((p) => p != $headCell.pos - tableStart);\n    cells.unshift($headCell.pos - tableStart);\n    const ranges = cells.map((pos) => {\n      const cell = table.nodeAt(pos);\n      if (!cell) {\n        throw RangeError(`No cell with offset ${pos} found`);\n      }\n      const from = tableStart + pos + 1;\n      return new SelectionRange(\n        doc.resolve(from),\n        doc.resolve(from + cell.content.size)\n      );\n    });\n    super(ranges[0].$from, ranges[0].$to, ranges);\n    this.$anchorCell = $anchorCell;\n    this.$headCell = $headCell;\n  }\n  map(doc, mapping) {\n    const $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos));\n    const $headCell = doc.resolve(mapping.map(this.$headCell.pos));\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      const tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1);\n      if (tableChanged && this.isRowSelection())\n        return _CellSelection.rowSelection($anchorCell, $headCell);\n      else if (tableChanged && this.isColSelection())\n        return _CellSelection.colSelection($anchorCell, $headCell);\n      else\n        return new _CellSelection($anchorCell, $headCell);\n    }\n    return TextSelection.between($anchorCell, $headCell);\n  }\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const rect = map.rectBetween(\n      this.$anchorCell.pos - tableStart,\n      this.$headCell.pos - tableStart\n    );\n    const seen = {};\n    const rows = [];\n    for (let row = rect.top; row < rect.bottom; row++) {\n      const rowContent = [];\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        const pos = map.map[index];\n        if (seen[pos])\n          continue;\n        seen[pos] = true;\n        const cellRect = map.findCell(pos);\n        let cell = table.nodeAt(pos);\n        if (!cell) {\n          throw RangeError(`No cell with offset ${pos} found`);\n        }\n        const extraLeft = rect.left - cellRect.left;\n        const extraRight = cellRect.right - rect.right;\n        if (extraLeft > 0 || extraRight > 0) {\n          let attrs = cell.attrs;\n          if (extraLeft > 0) {\n            attrs = removeColSpan(attrs, 0, extraLeft);\n          }\n          if (extraRight > 0) {\n            attrs = removeColSpan(\n              attrs,\n              attrs.colspan - extraRight,\n              extraRight\n            );\n          }\n          if (cellRect.left < rect.left) {\n            cell = cell.type.createAndFill(attrs);\n            if (!cell) {\n              throw RangeError(\n                `Could not create cell with attrs ${JSON.stringify(attrs)}`\n              );\n            }\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n          const attrs = {\n            ...cell.attrs,\n            rowspan: Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top)\n          };\n          if (cellRect.top < rect.top) {\n            cell = cell.type.createAndFill(attrs);\n          } else {\n            cell = cell.type.create(attrs, cell.content);\n          }\n        }\n        rowContent.push(cell);\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)));\n    }\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1);\n  }\n  replace(tr, content = Slice.empty) {\n    const mapFrom = tr.steps.length, ranges = this.ranges;\n    for (let i = 0; i < ranges.length; i++) {\n      const { $from, $to } = ranges[i], mapping = tr.mapping.slice(mapFrom);\n      tr.replace(\n        mapping.map($from.pos),\n        mapping.map($to.pos),\n        i ? Slice.empty : content\n      );\n    }\n    const sel = Selection.findFrom(\n      tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)),\n      -1\n    );\n    if (sel)\n      tr.setSelection(sel);\n  }\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0));\n  }\n  forEachCell(f) {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const cells = map.cellsInRect(\n      map.rectBetween(\n        this.$anchorCell.pos - tableStart,\n        this.$headCell.pos - tableStart\n      )\n    );\n    for (let i = 0; i < cells.length; i++) {\n      f(table.nodeAt(cells[i]), tableStart + cells[i]);\n    }\n  }\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    const anchorTop = this.$anchorCell.index(-1);\n    const headTop = this.$headCell.index(-1);\n    if (Math.min(anchorTop, headTop) > 0)\n      return false;\n    const anchorBottom = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan;\n    const headBottom = headTop + this.$headCell.nodeAfter.attrs.rowspan;\n    return Math.max(anchorBottom, headBottom) == this.$headCell.node(-1).childCount;\n  }\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(tableStart + map.map[anchorRect.left]);\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + headRect.right - 1]\n        );\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.left]);\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (map.height - 1) + anchorRect.right - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    const table = this.$anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = this.$anchorCell.start(-1);\n    const anchorLeft = map.colCount(this.$anchorCell.pos - tableStart);\n    const headLeft = map.colCount(this.$headCell.pos - tableStart);\n    if (Math.min(anchorLeft, headLeft) > 0)\n      return false;\n    const anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan;\n    const headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan;\n    return Math.max(anchorRight, headRight) == map.width;\n  }\n  eq(other) {\n    return other instanceof _CellSelection && other.$anchorCell.pos == this.$anchorCell.pos && other.$headCell.pos == this.$headCell.pos;\n  }\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    const table = $anchorCell.node(-1);\n    const map = TableMap.get(table);\n    const tableStart = $anchorCell.start(-1);\n    const anchorRect = map.findCell($anchorCell.pos - tableStart);\n    const headRect = map.findCell($headCell.pos - tableStart);\n    const doc = $anchorCell.node(0);\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[anchorRect.top * map.width]\n        );\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(\n          tableStart + map.map[map.width * (headRect.top + 1) - 1]\n        );\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(tableStart + map.map[headRect.top * map.width]);\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(\n          tableStart + map.map[map.width * (anchorRect.top + 1) - 1]\n        );\n    }\n    return new _CellSelection($anchorCell, $headCell);\n  }\n  toJSON() {\n    return {\n      type: \"cell\",\n      anchor: this.$anchorCell.pos,\n      head: this.$headCell.pos\n    };\n  }\n  static fromJSON(doc, json) {\n    return new _CellSelection(doc.resolve(json.anchor), doc.resolve(json.head));\n  }\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new _CellSelection(doc.resolve(anchorCell), doc.resolve(headCell));\n  }\n  getBookmark() {\n    return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos);\n  }\n};\nCellSelection.prototype.visible = false;\nSelection.jsonID(\"cell\", CellSelection);\nvar CellBookmark = class _CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor;\n    this.head = head;\n  }\n  map(mapping) {\n    return new _CellBookmark(mapping.map(this.anchor), mapping.map(this.head));\n  }\n  resolve(doc) {\n    const $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head);\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" && $headCell.parent.type.spec.tableRole == \"row\" && $anchorCell.index() < $anchorCell.parent.childCount && $headCell.index() < $headCell.parent.childCount && inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell);\n    else\n      return Selection.near($headCell, 1);\n  }\n};\nfunction drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection))\n    return null;\n  const cells = [];\n  state.selection.forEachCell((node, pos) => {\n    cells.push(\n      Decoration.node(pos, pos + node.nodeSize, { class: \"selectedCell\" })\n    );\n  });\n  return DecorationSet.create(state.doc, cells);\n}\nfunction isCellBoundarySelection({ $from, $to }) {\n  if ($from.pos == $to.pos || $from.pos < $to.pos - 6)\n    return false;\n  let afterFrom = $from.pos;\n  let beforeTo = $to.pos;\n  let depth = $from.depth;\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth))\n      break;\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d))\n      break;\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole);\n}\nfunction isTextSelectionAcrossCells({ $from, $to }) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n  for (let i = $from.depth; i > 0; i--) {\n    const node = $from.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n  for (let i = $to.depth; i > 0; i--) {\n    const node = $to.node(i);\n    if (node.type.spec.tableRole === \"cell\" || node.type.spec.tableRole === \"header_cell\") {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0;\n}\nfunction normalizeSelection(state, tr, allowTableNodeSelection) {\n  const sel = (tr || state).selection;\n  const doc = (tr || state).doc;\n  let normalize;\n  let role;\n  if (sel instanceof NodeSelection2 && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from);\n    } else if (role == \"row\") {\n      const $cell = doc.resolve(sel.from + 1);\n      normalize = CellSelection.rowSelection($cell, $cell);\n    } else if (!allowTableNodeSelection) {\n      const map = TableMap.get(sel.node);\n      const start = sel.from + 1;\n      const lastCell = start + map.map[map.width * map.height - 1];\n      normalize = CellSelection.create(doc, start + 1, lastCell);\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from);\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize);\n  return tr;\n}\n\n// src/fixtables.ts\nimport { PluginKey as PluginKey2 } from \"prosemirror-state\";\nvar fixTablesKey = new PluginKey2(\"fix-tables\");\nfunction changedDescendants(old, cur, offset, f) {\n  const oldSize = old.childCount, curSize = cur.childCount;\n  outer:\n    for (let i = 0, j = 0; i < curSize; i++) {\n      const child = cur.child(i);\n      for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n        if (old.child(scan) == child) {\n          j = scan + 1;\n          offset += child.nodeSize;\n          continue outer;\n        }\n      }\n      f(child, offset);\n      if (j < oldSize && old.child(j).sameMarkup(child))\n        changedDescendants(old.child(j), child, offset + 1, f);\n      else\n        child.nodesBetween(0, child.content.size, f, offset + 1);\n      offset += child.nodeSize;\n    }\n}\nfunction fixTables(state, oldState) {\n  let tr;\n  const check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\")\n      tr = fixTable(state, node, pos, tr);\n  };\n  if (!oldState)\n    state.doc.descendants(check);\n  else if (oldState.doc != state.doc)\n    changedDescendants(oldState.doc, state.doc, 0, check);\n  return tr;\n}\nfunction fixTable(state, table, tablePos, tr) {\n  const map = TableMap.get(table);\n  if (!map.problems)\n    return tr;\n  if (!tr)\n    tr = state.tr;\n  const mustAdd = [];\n  for (let i = 0; i < map.height; i++)\n    mustAdd.push(0);\n  for (let i = 0; i < map.problems.length; i++) {\n    const prob = map.problems[i];\n    if (prob.type == \"collision\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      const attrs = cell.attrs;\n      for (let j = 0; j < attrs.rowspan; j++)\n        mustAdd[prob.row + j] += prob.n;\n      tr.setNodeMarkup(\n        tr.mapping.map(tablePos + 1 + prob.pos),\n        null,\n        removeColSpan(attrs, attrs.colspan - prob.n, prob.n)\n      );\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n;\n    } else if (prob.type == \"overlong_rowspan\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        rowspan: cell.attrs.rowspan - prob.n\n      });\n    } else if (prob.type == \"colwidth mismatch\") {\n      const cell = table.nodeAt(prob.pos);\n      if (!cell)\n        continue;\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, {\n        ...cell.attrs,\n        colwidth: prob.colwidth\n      });\n    }\n  }\n  let first, last;\n  for (let i = 0; i < mustAdd.length; i++)\n    if (mustAdd[i]) {\n      if (first == null)\n        first = i;\n      last = i;\n    }\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    const row = table.child(i);\n    const end = pos + row.nodeSize;\n    const add = mustAdd[i];\n    if (add > 0) {\n      let role = \"cell\";\n      if (row.firstChild) {\n        role = row.firstChild.type.spec.tableRole;\n      }\n      const nodes = [];\n      for (let j = 0; j < add; j++) {\n        const node = tableNodeTypes(state.schema)[role].createAndFill();\n        if (node)\n          nodes.push(node);\n      }\n      const side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1;\n      tr.insert(tr.mapping.map(side), nodes);\n    }\n    pos = end;\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true });\n}\n\n// src/input.ts\nimport { keydownHandler } from \"prosemirror-keymap\";\nimport { Fragment as Fragment4 } from \"prosemirror-model\";\nimport {\n  Selection as Selection2,\n  TextSelection as TextSelection3\n} from \"prosemirror-state\";\n\n// src/commands.ts\nimport {\n  Fragment as Fragment2,\n  Slice as Slice2\n} from \"prosemirror-model\";\nimport {\n  TextSelection as TextSelection2\n} from \"prosemirror-state\";\nfunction selectedRect(state) {\n  const sel = state.selection;\n  const $pos = selectionCell(state);\n  const table = $pos.node(-1);\n  const tableStart = $pos.start(-1);\n  const map = TableMap.get(table);\n  const rect = sel instanceof CellSelection ? map.rectBetween(\n    sel.$anchorCell.pos - tableStart,\n    sel.$headCell.pos - tableStart\n  ) : map.findCell($pos.pos - tableStart);\n  return { ...rect, tableStart, map, table };\n}\nfunction addColumn(tr, { map, tableStart, table }, col) {\n  let refColumn = col > 0 ? -1 : 0;\n  if (columnIsHeader(map, table, col + refColumn)) {\n    refColumn = col == 0 || col == map.width ? null : 0;\n  }\n  for (let row = 0; row < map.height; row++) {\n    const index = row * map.width + col;\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      const pos = map.map[index];\n      const cell = table.nodeAt(pos);\n      tr.setNodeMarkup(\n        tr.mapping.map(tableStart + pos),\n        null,\n        addColSpan(cell.attrs, col - map.colCount(pos))\n      );\n      row += cell.attrs.rowspan - 1;\n    } else {\n      const type = refColumn == null ? tableNodeTypes(table.type.schema).cell : table.nodeAt(map.map[index + refColumn]).type;\n      const pos = map.positionAt(row, col, table);\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill());\n    }\n  }\n  return tr;\n}\nfunction addColumnBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.left));\n  }\n  return true;\n}\nfunction addColumnAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addColumn(state.tr, rect, rect.right));\n  }\n  return true;\n}\nfunction removeColumn(tr, { map, table, tableStart }, col) {\n  const mapStart = tr.mapping.maps.length;\n  for (let row = 0; row < map.height; ) {\n    const index = row * map.width + col;\n    const pos = map.map[index];\n    const cell = table.nodeAt(pos);\n    const attrs = cell.attrs;\n    if (col > 0 && map.map[index - 1] == pos || col < map.width - 1 && map.map[index + 1] == pos) {\n      tr.setNodeMarkup(\n        tr.mapping.slice(mapStart).map(tableStart + pos),\n        null,\n        removeColSpan(attrs, col - map.colCount(pos))\n      );\n    } else {\n      const start = tr.mapping.slice(mapStart).map(tableStart + pos);\n      tr.delete(start, start + cell.nodeSize);\n    }\n    row += attrs.rowspan;\n  }\n}\nfunction deleteColumn(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    const tr = state.tr;\n    if (rect.left == 0 && rect.right == rect.map.width)\n      return false;\n    for (let i = rect.right - 1; ; i--) {\n      removeColumn(tr, rect, i);\n      if (i == rect.left)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction rowIsHeader(map, table, row) {\n  var _a;\n  const headerCell = tableNodeTypes(table.type.schema).header_cell;\n  for (let col = 0; col < map.width; col++)\n    if (((_a = table.nodeAt(map.map[col + row * map.width])) == null ? void 0 : _a.type) != headerCell)\n      return false;\n  return true;\n}\nfunction addRow(tr, { map, tableStart, table }, row) {\n  var _a;\n  let rowPos = tableStart;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const cells = [];\n  let refRow = row > 0 ? -1 : 0;\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0;\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      const pos = map.map[index];\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tableStart + pos, null, {\n        ...attrs,\n        rowspan: attrs.rowspan + 1\n      });\n      col += attrs.colspan - 1;\n    } else {\n      const type = refRow == null ? tableNodeTypes(table.type.schema).cell : (_a = table.nodeAt(map.map[index + refRow * map.width])) == null ? void 0 : _a.type;\n      const node = type == null ? void 0 : type.createAndFill();\n      if (node)\n        cells.push(node);\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells));\n  return tr;\n}\nfunction addRowBefore(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.top));\n  }\n  return true;\n}\nfunction addRowAfter(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state);\n    dispatch(addRow(state.tr, rect, rect.bottom));\n  }\n  return true;\n}\nfunction removeRow(tr, { map, table, tableStart }, row) {\n  let rowPos = 0;\n  for (let i = 0; i < row; i++)\n    rowPos += table.child(i).nodeSize;\n  const nextRow = rowPos + table.child(row).nodeSize;\n  const mapFrom = tr.mapping.maps.length;\n  tr.delete(rowPos + tableStart, nextRow + tableStart);\n  const seen = /* @__PURE__ */ new Set();\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    const pos = map.map[index];\n    if (seen.has(pos))\n      continue;\n    seen.add(pos);\n    if (row > 0 && pos == map.map[index - map.width]) {\n      const attrs = table.nodeAt(pos).attrs;\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, {\n        ...attrs,\n        rowspan: attrs.rowspan - 1\n      });\n      col += attrs.colspan - 1;\n    } else if (row < map.height && pos == map.map[index + map.width]) {\n      const cell = table.nodeAt(pos);\n      const attrs = cell.attrs;\n      const copy = cell.type.create(\n        { ...attrs, rowspan: cell.attrs.rowspan - 1 },\n        cell.content\n      );\n      const newPos = map.positionAt(row + 1, col, table);\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy);\n      col += attrs.colspan - 1;\n    }\n  }\n}\nfunction deleteRow(state, dispatch) {\n  if (!isInTable(state))\n    return false;\n  if (dispatch) {\n    const rect = selectedRect(state), tr = state.tr;\n    if (rect.top == 0 && rect.bottom == rect.map.height)\n      return false;\n    for (let i = rect.bottom - 1; ; i--) {\n      removeRow(tr, rect, i);\n      if (i == rect.top)\n        break;\n      const table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc;\n      if (!table) {\n        throw RangeError(\"No table found\");\n      }\n      rect.table = table;\n      rect.map = TableMap.get(rect.table);\n    }\n    dispatch(tr);\n  }\n  return true;\n}\nfunction isEmpty(cell) {\n  const c = cell.content;\n  return c.childCount == 1 && c.child(0).isTextblock && c.child(0).childCount == 0;\n}\nfunction cellsOverlapRectangle({ width, height, map }, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop;\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1);\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] || rect.right < width && map[indexRight] == map[indexRight + 1])\n      return true;\n    indexLeft += width;\n    indexRight += width;\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] || rect.bottom < height && map[indexBottom] == map[indexBottom + width])\n      return true;\n    indexTop++;\n    indexBottom++;\n  }\n  return false;\n}\nfunction mergeCells(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos)\n    return false;\n  const rect = selectedRect(state), { map } = rect;\n  if (cellsOverlapRectangle(map, rect))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const seen = {};\n    let content = Fragment2.empty;\n    let mergedPos;\n    let mergedCell;\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        const cellPos = map.map[row * map.width + col];\n        const cell = rect.table.nodeAt(cellPos);\n        if (seen[cellPos] || !cell)\n          continue;\n        seen[cellPos] = true;\n        if (mergedPos == null) {\n          mergedPos = cellPos;\n          mergedCell = cell;\n        } else {\n          if (!isEmpty(cell))\n            content = content.append(cell.content);\n          const mapped = tr.mapping.map(cellPos + rect.tableStart);\n          tr.delete(mapped, mapped + cell.nodeSize);\n        }\n      }\n    }\n    if (mergedPos == null || mergedCell == null) {\n      return true;\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null, {\n      ...addColSpan(\n        mergedCell.attrs,\n        mergedCell.attrs.colspan,\n        rect.right - rect.left - mergedCell.attrs.colspan\n      ),\n      rowspan: rect.bottom - rect.top\n    });\n    if (content.size) {\n      const end = mergedPos + 1 + mergedCell.content.size;\n      const start = isEmpty(mergedCell) ? mergedPos + 1 : end;\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content);\n    }\n    tr.setSelection(\n      new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart))\n    );\n    dispatch(tr);\n  }\n  return true;\n}\nfunction splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({ node }) => {\n    return nodeTypes[node.type.spec.tableRole];\n  })(state, dispatch);\n}\nfunction splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    var _a;\n    const sel = state.selection;\n    let cellNode;\n    let cellPos;\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from);\n      if (!cellNode)\n        return false;\n      cellPos = (_a = cellAround(sel.$from)) == null ? void 0 : _a.pos;\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos)\n        return false;\n      cellNode = sel.$anchorCell.nodeAfter;\n      cellPos = sel.$anchorCell.pos;\n    }\n    if (cellNode == null || cellPos == null) {\n      return false;\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {\n      return false;\n    }\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs;\n      const attrs = [];\n      const colwidth = baseAttrs.colwidth;\n      if (baseAttrs.rowspan > 1)\n        baseAttrs = { ...baseAttrs, rowspan: 1 };\n      if (baseAttrs.colspan > 1)\n        baseAttrs = { ...baseAttrs, colspan: 1 };\n      const rect = selectedRect(state), tr = state.tr;\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(\n          colwidth ? {\n            ...baseAttrs,\n            colwidth: colwidth && colwidth[i] ? [colwidth[i]] : null\n          } : baseAttrs\n        );\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table);\n        if (row == rect.top)\n          pos += cellNode.nodeSize;\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top)\n            continue;\n          tr.insert(\n            lastCell = tr.mapping.map(pos + rect.tableStart, 1),\n            getCellType({ node: cellNode, row, col }).createAndFill(attrs[i])\n          );\n        }\n      }\n      tr.setNodeMarkup(\n        cellPos,\n        getCellType({ node: cellNode, row: rect.top, col: rect.left }),\n        attrs[0]\n      );\n      if (sel instanceof CellSelection)\n        tr.setSelection(\n          new CellSelection(\n            tr.doc.resolve(sel.$anchorCell.pos),\n            lastCell ? tr.doc.resolve(lastCell) : void 0\n          )\n        );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const $cell = selectionCell(state);\n    if ($cell.nodeAfter.attrs[name] === value)\n      return false;\n    if (dispatch) {\n      const tr = state.tr;\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, {\n              ...node.attrs,\n              [name]: value\n            });\n        });\n      else\n        tr.setNodeMarkup($cell.pos, null, {\n          ...$cell.nodeAfter.attrs,\n          [name]: value\n        });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const cells = rect.map.cellsInRect(\n        type == \"column\" ? {\n          left: rect.left,\n          top: 0,\n          right: rect.right,\n          bottom: rect.map.height\n        } : type == \"row\" ? {\n          left: 0,\n          top: rect.top,\n          right: rect.map.width,\n          bottom: rect.bottom\n        } : rect\n      );\n      const nodes = cells.map((pos) => rect.table.nodeAt(pos));\n      for (let i = 0; i < cells.length; i++)\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.cell,\n            nodes[i].attrs\n          );\n      if (tr.steps.length == 0)\n        for (let i = 0; i < cells.length; i++)\n          tr.setNodeMarkup(\n            rect.tableStart + cells[i],\n            types.header_cell,\n            nodes[i].attrs\n          );\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nfunction isHeaderEnabledByType(type, rect, types) {\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1\n  });\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i]);\n    if (cell && cell.type !== types.header_cell) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false };\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type);\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    if (dispatch) {\n      const types = tableNodeTypes(state.schema);\n      const rect = selectedRect(state), tr = state.tr;\n      const isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types);\n      const isHeaderColumnEnabled = isHeaderEnabledByType(\n        \"column\",\n        rect,\n        types\n      );\n      const isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled : type === \"row\" ? isHeaderColumnEnabled : false;\n      const selectionStartsAt = isHeaderEnabled ? 1 : 0;\n      const cellsRect = type == \"column\" ? {\n        left: 0,\n        top: selectionStartsAt,\n        right: 1,\n        bottom: rect.map.height\n      } : type == \"row\" ? {\n        left: selectionStartsAt,\n        top: 0,\n        right: rect.map.width,\n        bottom: 1\n      } : rect;\n      const newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell : type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell;\n      rect.map.cellsInRect(cellsRect).forEach((relativeCellPos) => {\n        const cellPos = relativeCellPos + rect.tableStart;\n        const cell = tr.doc.nodeAt(cellPos);\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs);\n        }\n      });\n      dispatch(tr);\n    }\n    return true;\n  };\n}\nvar toggleHeaderRow = toggleHeader(\"row\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderColumn = toggleHeader(\"column\", {\n  useDeprecatedLogic: true\n});\nvar toggleHeaderCell = toggleHeader(\"cell\", {\n  useDeprecatedLogic: true\n});\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    const before = $cell.nodeBefore;\n    if (before)\n      return $cell.pos - before.nodeSize;\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      const rowNode = $cell.node(-1).child(row);\n      const lastChild = rowNode.lastChild;\n      if (lastChild) {\n        return rowEnd - 1 - lastChild.nodeSize;\n      }\n      rowEnd -= rowNode.nodeSize;\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) {\n      return $cell.pos + $cell.nodeAfter.nodeSize;\n    }\n    const table = $cell.node(-1);\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      const rowNode = table.child(row);\n      if (rowNode.childCount)\n        return rowStart + 1;\n      rowStart += rowNode.nodeSize;\n    }\n  }\n  return null;\n}\nfunction goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state))\n      return false;\n    const cell = findNextCell(selectionCell(state), direction);\n    if (cell == null)\n      return false;\n    if (dispatch) {\n      const $cell = state.doc.resolve(cell);\n      dispatch(\n        state.tr.setSelection(TextSelection2.between($cell, moveCellForward($cell))).scrollIntoView()\n      );\n    }\n    return true;\n  };\n}\nfunction deleteTable(state, dispatch) {\n  const $pos = state.selection.$anchor;\n  for (let d = $pos.depth; d > 0; d--) {\n    const node = $pos.node(d);\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch)\n        dispatch(\n          state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView()\n        );\n      return true;\n    }\n  }\n  return false;\n}\nfunction deleteCellSelection(state, dispatch) {\n  const sel = state.selection;\n  if (!(sel instanceof CellSelection))\n    return false;\n  if (dispatch) {\n    const tr = state.tr;\n    const baseContent = tableNodeTypes(state.schema).cell.createAndFill().content;\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(\n          tr.mapping.map(pos + 1),\n          tr.mapping.map(pos + cell.nodeSize - 1),\n          new Slice2(baseContent, 0, 0)\n        );\n    });\n    if (tr.docChanged)\n      dispatch(tr);\n  }\n  return true;\n}\n\n// src/copypaste.ts\nimport { Fragment as Fragment3, Slice as Slice3 } from \"prosemirror-model\";\nimport { Transform } from \"prosemirror-transform\";\nfunction pastedCells(slice) {\n  if (!slice.size)\n    return null;\n  let { content, openStart, openEnd } = slice;\n  while (content.childCount == 1 && (openStart > 0 && openEnd > 0 || content.child(0).type.spec.tableRole == \"table\")) {\n    openStart--;\n    openEnd--;\n    content = content.child(0).content;\n  }\n  const first = content.child(0);\n  const role = first.type.spec.tableRole;\n  const schema = first.type.schema, rows = [];\n  if (role == \"row\") {\n    for (let i = 0; i < content.childCount; i++) {\n      let cells = content.child(i).content;\n      const left = i ? 0 : Math.max(0, openStart - 1);\n      const right = i < content.childCount - 1 ? 0 : Math.max(0, openEnd - 1);\n      if (left || right)\n        cells = fitSlice(\n          tableNodeTypes(schema).row,\n          new Slice3(cells, left, right)\n        ).content;\n      rows.push(cells);\n    }\n  } else if (role == \"cell\" || role == \"header_cell\") {\n    rows.push(\n      openStart || openEnd ? fitSlice(\n        tableNodeTypes(schema).row,\n        new Slice3(content, openStart, openEnd)\n      ).content : content\n    );\n  } else {\n    return null;\n  }\n  return ensureRectangular(schema, rows);\n}\nfunction ensureRectangular(schema, rows) {\n  const widths = [];\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = row.childCount - 1; j >= 0; j--) {\n      const { rowspan, colspan } = row.child(j).attrs;\n      for (let r = i; r < i + rowspan; r++)\n        widths[r] = (widths[r] || 0) + colspan;\n    }\n  }\n  let width = 0;\n  for (let r = 0; r < widths.length; r++)\n    width = Math.max(width, widths[r]);\n  for (let r = 0; r < widths.length; r++) {\n    if (r >= rows.length)\n      rows.push(Fragment3.empty);\n    if (widths[r] < width) {\n      const empty = tableNodeTypes(schema).cell.createAndFill();\n      const cells = [];\n      for (let i = widths[r]; i < width; i++) {\n        cells.push(empty);\n      }\n      rows[r] = rows[r].append(Fragment3.from(cells));\n    }\n  }\n  return { height: rows.length, width, rows };\n}\nfunction fitSlice(nodeType, slice) {\n  const node = nodeType.createAndFill();\n  const tr = new Transform(node).replace(0, node.content.size, slice);\n  return tr.doc;\n}\nfunction clipCells({ width, height, rows }, newWidth, newHeight) {\n  if (width != newWidth) {\n    const added = [];\n    const newRows = [];\n    for (let row = 0; row < rows.length; row++) {\n      const frag = rows[row], cells = [];\n      for (let col = added[row] || 0, i = 0; col < newWidth; i++) {\n        let cell = frag.child(i % frag.childCount);\n        if (col + cell.attrs.colspan > newWidth)\n          cell = cell.type.createChecked(\n            removeColSpan(\n              cell.attrs,\n              cell.attrs.colspan,\n              col + cell.attrs.colspan - newWidth\n            ),\n            cell.content\n          );\n        cells.push(cell);\n        col += cell.attrs.colspan;\n        for (let j = 1; j < cell.attrs.rowspan; j++)\n          added[row + j] = (added[row + j] || 0) + cell.attrs.colspan;\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    width = newWidth;\n  }\n  if (height != newHeight) {\n    const newRows = [];\n    for (let row = 0, i = 0; row < newHeight; row++, i++) {\n      const cells = [], source = rows[i % height];\n      for (let j = 0; j < source.childCount; j++) {\n        let cell = source.child(j);\n        if (row + cell.attrs.rowspan > newHeight)\n          cell = cell.type.create(\n            {\n              ...cell.attrs,\n              rowspan: Math.max(1, newHeight - cell.attrs.rowspan)\n            },\n            cell.content\n          );\n        cells.push(cell);\n      }\n      newRows.push(Fragment3.from(cells));\n    }\n    rows = newRows;\n    height = newHeight;\n  }\n  return { width, height, rows };\n}\nfunction growTable(tr, map, table, start, width, height, mapFrom) {\n  const schema = tr.doc.type.schema;\n  const types = tableNodeTypes(schema);\n  let empty;\n  let emptyHead;\n  if (width > map.width) {\n    for (let row = 0, rowEnd = 0; row < map.height; row++) {\n      const rowNode = table.child(row);\n      rowEnd += rowNode.nodeSize;\n      const cells = [];\n      let add;\n      if (rowNode.lastChild == null || rowNode.lastChild.type == types.cell)\n        add = empty || (empty = types.cell.createAndFill());\n      else\n        add = emptyHead || (emptyHead = types.header_cell.createAndFill());\n      for (let i = map.width; i < width; i++)\n        cells.push(add);\n      tr.insert(tr.mapping.slice(mapFrom).map(rowEnd - 1 + start), cells);\n    }\n  }\n  if (height > map.height) {\n    const cells = [];\n    for (let i = 0, start2 = (map.height - 1) * map.width; i < Math.max(map.width, width); i++) {\n      const header = i >= map.width ? false : table.nodeAt(map.map[start2 + i]).type == types.header_cell;\n      cells.push(\n        header ? emptyHead || (emptyHead = types.header_cell.createAndFill()) : empty || (empty = types.cell.createAndFill())\n      );\n    }\n    const emptyRow = types.row.create(null, Fragment3.from(cells)), rows = [];\n    for (let i = map.height; i < height; i++)\n      rows.push(emptyRow);\n    tr.insert(tr.mapping.slice(mapFrom).map(start + table.nodeSize - 2), rows);\n  }\n  return !!(empty || emptyHead);\n}\nfunction isolateHorizontal(tr, map, table, start, left, right, top, mapFrom) {\n  if (top == 0 || top == map.height)\n    return false;\n  let found = false;\n  for (let col = left; col < right; col++) {\n    const index = top * map.width + col, pos = map.map[index];\n    if (map.map[index - map.width] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const { top: cellTop, left: cellLeft } = map.findCell(pos);\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + start), null, {\n        ...cell.attrs,\n        rowspan: top - cellTop\n      });\n      tr.insert(\n        tr.mapping.slice(mapFrom).map(map.positionAt(top, cellLeft, table)),\n        cell.type.createAndFill({\n          ...cell.attrs,\n          rowspan: cellTop + cell.attrs.rowspan - top\n        })\n      );\n      col += cell.attrs.colspan - 1;\n    }\n  }\n  return found;\n}\nfunction isolateVertical(tr, map, table, start, top, bottom, left, mapFrom) {\n  if (left == 0 || left == map.width)\n    return false;\n  let found = false;\n  for (let row = top; row < bottom; row++) {\n    const index = row * map.width + left, pos = map.map[index];\n    if (map.map[index - 1] == pos) {\n      found = true;\n      const cell = table.nodeAt(pos);\n      const cellLeft = map.colCount(pos);\n      const updatePos = tr.mapping.slice(mapFrom).map(pos + start);\n      tr.setNodeMarkup(\n        updatePos,\n        null,\n        removeColSpan(\n          cell.attrs,\n          left - cellLeft,\n          cell.attrs.colspan - (left - cellLeft)\n        )\n      );\n      tr.insert(\n        updatePos + cell.nodeSize,\n        cell.type.createAndFill(\n          removeColSpan(cell.attrs, 0, left - cellLeft)\n        )\n      );\n      row += cell.attrs.rowspan - 1;\n    }\n  }\n  return found;\n}\nfunction insertCells(state, dispatch, tableStart, rect, cells) {\n  let table = tableStart ? state.doc.nodeAt(tableStart - 1) : state.doc;\n  if (!table) {\n    throw new Error(\"No table found\");\n  }\n  let map = TableMap.get(table);\n  const { top, left } = rect;\n  const right = left + cells.width, bottom = top + cells.height;\n  const tr = state.tr;\n  let mapFrom = 0;\n  function recomp() {\n    table = tableStart ? tr.doc.nodeAt(tableStart - 1) : tr.doc;\n    if (!table) {\n      throw new Error(\"No table found\");\n    }\n    map = TableMap.get(table);\n    mapFrom = tr.mapping.maps.length;\n  }\n  if (growTable(tr, map, table, tableStart, right, bottom, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, top, mapFrom))\n    recomp();\n  if (isolateHorizontal(tr, map, table, tableStart, left, right, bottom, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, left, mapFrom))\n    recomp();\n  if (isolateVertical(tr, map, table, tableStart, top, bottom, right, mapFrom))\n    recomp();\n  for (let row = top; row < bottom; row++) {\n    const from = map.positionAt(row, left, table), to = map.positionAt(row, right, table);\n    tr.replace(\n      tr.mapping.slice(mapFrom).map(from + tableStart),\n      tr.mapping.slice(mapFrom).map(to + tableStart),\n      new Slice3(cells.rows[row - top], 0, 0)\n    );\n  }\n  recomp();\n  tr.setSelection(\n    new CellSelection(\n      tr.doc.resolve(tableStart + map.positionAt(top, left, table)),\n      tr.doc.resolve(tableStart + map.positionAt(bottom - 1, right - 1, table))\n    )\n  );\n  dispatch(tr);\n}\n\n// src/input.ts\nvar handleKeyDown = keydownHandler({\n  ArrowLeft: arrow(\"horiz\", -1),\n  ArrowRight: arrow(\"horiz\", 1),\n  ArrowUp: arrow(\"vert\", -1),\n  ArrowDown: arrow(\"vert\", 1),\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n  Backspace: deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  Delete: deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n});\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection))\n    return false;\n  if (dispatch)\n    dispatch(state.tr.setSelection(selection).scrollIntoView());\n  return true;\n}\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(sel.$headCell, dir)\n      );\n    }\n    if (axis != \"horiz\" && !sel.empty)\n      return false;\n    const end = atEndOfCell(view, axis, dir);\n    if (end == null)\n      return false;\n    if (axis == \"horiz\") {\n      return maybeSetSelection(\n        state,\n        dispatch,\n        Selection2.near(state.doc.resolve(sel.head + dir), dir)\n      );\n    } else {\n      const $cell = state.doc.resolve(end);\n      const $next = nextCell($cell, axis, dir);\n      let newSel;\n      if ($next)\n        newSel = Selection2.near($next, 1);\n      else if (dir < 0)\n        newSel = Selection2.near(state.doc.resolve($cell.before(-1)), -1);\n      else\n        newSel = Selection2.near(state.doc.resolve($cell.after(-1)), 1);\n      return maybeSetSelection(state, dispatch, newSel);\n    }\n  };\n}\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    if (!view)\n      return false;\n    const sel = state.selection;\n    let cellSel;\n    if (sel instanceof CellSelection) {\n      cellSel = sel;\n    } else {\n      const end = atEndOfCell(view, axis, dir);\n      if (end == null)\n        return false;\n      cellSel = new CellSelection(state.doc.resolve(end));\n    }\n    const $head = nextCell(cellSel.$headCell, axis, dir);\n    if (!$head)\n      return false;\n    return maybeSetSelection(\n      state,\n      dispatch,\n      new CellSelection(cellSel.$anchorCell, $head)\n    );\n  };\n}\nfunction handleTripleClick(view, pos) {\n  const doc = view.state.doc, $cell = cellAround(doc.resolve(pos));\n  if (!$cell)\n    return false;\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)));\n  return true;\n}\nfunction handlePaste(view, _, slice) {\n  if (!isInTable(view.state))\n    return false;\n  let cells = pastedCells(slice);\n  const sel = view.state.selection;\n  if (sel instanceof CellSelection) {\n    if (!cells)\n      cells = {\n        width: 1,\n        height: 1,\n        rows: [\n          Fragment4.from(\n            fitSlice(tableNodeTypes(view.state.schema).cell, slice)\n          )\n        ]\n      };\n    const table = sel.$anchorCell.node(-1);\n    const start = sel.$anchorCell.start(-1);\n    const rect = TableMap.get(table).rectBetween(\n      sel.$anchorCell.pos - start,\n      sel.$headCell.pos - start\n    );\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top);\n    insertCells(view.state, view.dispatch, start, rect, cells);\n    return true;\n  } else if (cells) {\n    const $cell = selectionCell(view.state);\n    const start = $cell.start(-1);\n    insertCells(\n      view.state,\n      view.dispatch,\n      start,\n      TableMap.get($cell.node(-1)).findCell($cell.pos - start),\n      cells\n    );\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction handleMouseDown(view, startEvent) {\n  var _a;\n  if (startEvent.ctrlKey || startEvent.metaKey)\n    return;\n  const startDOMCell = domInCell(view, startEvent.target);\n  let $anchor;\n  if (startEvent.shiftKey && view.state.selection instanceof CellSelection) {\n    setCellSelection(view.state.selection.$anchorCell, startEvent);\n    startEvent.preventDefault();\n  } else if (startEvent.shiftKey && startDOMCell && ($anchor = cellAround(view.state.selection.$anchor)) != null && ((_a = cellUnderMouse(view, startEvent)) == null ? void 0 : _a.pos) != $anchor.pos) {\n    setCellSelection($anchor, startEvent);\n    startEvent.preventDefault();\n  } else if (!startDOMCell) {\n    return;\n  }\n  function setCellSelection($anchor2, event) {\n    let $head = cellUnderMouse(view, event);\n    const starting = tableEditingKey.getState(view.state) == null;\n    if (!$head || !inSameTable($anchor2, $head)) {\n      if (starting)\n        $head = $anchor2;\n      else\n        return;\n    }\n    const selection = new CellSelection($anchor2, $head);\n    if (starting || !view.state.selection.eq(selection)) {\n      const tr = view.state.tr.setSelection(selection);\n      if (starting)\n        tr.setMeta(tableEditingKey, $anchor2.pos);\n      view.dispatch(tr);\n    }\n  }\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop);\n    view.root.removeEventListener(\"dragstart\", stop);\n    view.root.removeEventListener(\"mousemove\", move);\n    if (tableEditingKey.getState(view.state) != null)\n      view.dispatch(view.state.tr.setMeta(tableEditingKey, -1));\n  }\n  function move(_event) {\n    const event = _event;\n    const anchor = tableEditingKey.getState(view.state);\n    let $anchor2;\n    if (anchor != null) {\n      $anchor2 = view.state.doc.resolve(anchor);\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      $anchor2 = cellUnderMouse(view, startEvent);\n      if (!$anchor2)\n        return stop();\n    }\n    if ($anchor2)\n      setCellSelection($anchor2, event);\n  }\n  view.root.addEventListener(\"mouseup\", stop);\n  view.root.addEventListener(\"dragstart\", stop);\n  view.root.addEventListener(\"mousemove\", move);\n}\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection3))\n    return null;\n  const { $head } = view.state.selection;\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    const parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d);\n    if (index != (dir < 0 ? 0 : parent.childCount))\n      return null;\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      const cellPos = $head.before(d);\n      const dirStr = axis == \"vert\" ? dir > 0 ? \"down\" : \"up\" : dir > 0 ? \"right\" : \"left\";\n      return view.endOfTextblock(dirStr) ? cellPos : null;\n    }\n  }\n  return null;\n}\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode) {\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") {\n      return dom;\n    }\n  }\n  return null;\n}\nfunction cellUnderMouse(view, event) {\n  const mousePos = view.posAtCoords({\n    left: event.clientX,\n    top: event.clientY\n  });\n  if (!mousePos)\n    return null;\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null;\n}\n\n// src/columnresizing.ts\nimport { Plugin, PluginKey as PluginKey3 } from \"prosemirror-state\";\nimport {\n  Decoration as Decoration2,\n  DecorationSet as DecorationSet2\n} from \"prosemirror-view\";\n\n// src/tableview.ts\nvar TableView = class {\n  constructor(node, defaultCellMinWidth) {\n    this.node = node;\n    this.defaultCellMinWidth = defaultCellMinWidth;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"tableWrapper\";\n    this.table = this.dom.appendChild(document.createElement(\"table\"));\n    this.table.style.setProperty(\n      \"--default-cell-min-width\",\n      `${defaultCellMinWidth}px`\n    );\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"));\n    updateColumnsOnResize(node, this.colgroup, this.table, defaultCellMinWidth);\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"));\n  }\n  update(node) {\n    if (node.type != this.node.type)\n      return false;\n    this.node = node;\n    updateColumnsOnResize(\n      node,\n      this.colgroup,\n      this.table,\n      this.defaultCellMinWidth\n    );\n    return true;\n  }\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target));\n  }\n};\nfunction updateColumnsOnResize(node, colgroup, table, defaultCellMinWidth, overrideCol, overrideValue) {\n  var _a;\n  let totalWidth = 0;\n  let fixedWidth = true;\n  let nextDOM = colgroup.firstChild;\n  const row = node.firstChild;\n  if (!row)\n    return;\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    const { colspan, colwidth } = row.child(i).attrs;\n    for (let j = 0; j < colspan; j++, col++) {\n      const hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j];\n      const cssWidth = hasWidth ? hasWidth + \"px\" : \"\";\n      totalWidth += hasWidth || defaultCellMinWidth;\n      if (!hasWidth)\n        fixedWidth = false;\n      if (!nextDOM) {\n        const col2 = document.createElement(\"col\");\n        col2.style.width = cssWidth;\n        colgroup.appendChild(col2);\n      } else {\n        if (nextDOM.style.width != cssWidth) {\n          nextDOM.style.width = cssWidth;\n        }\n        nextDOM = nextDOM.nextSibling;\n      }\n    }\n  }\n  while (nextDOM) {\n    const after = nextDOM.nextSibling;\n    (_a = nextDOM.parentNode) == null ? void 0 : _a.removeChild(nextDOM);\n    nextDOM = after;\n  }\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\";\n    table.style.minWidth = \"\";\n  } else {\n    table.style.width = \"\";\n    table.style.minWidth = totalWidth + \"px\";\n  }\n}\n\n// src/columnresizing.ts\nvar columnResizingPluginKey = new PluginKey3(\n  \"tableColumnResizing\"\n);\nfunction columnResizing({\n  handleWidth = 5,\n  cellMinWidth = 25,\n  defaultCellMinWidth = 100,\n  View = TableView,\n  lastColumnResizable = true\n} = {}) {\n  const plugin = new Plugin({\n    key: columnResizingPluginKey,\n    state: {\n      init(_, state) {\n        var _a, _b;\n        const nodeViews = (_b = (_a = plugin.spec) == null ? void 0 : _a.props) == null ? void 0 : _b.nodeViews;\n        const tableName = tableNodeTypes(state.schema).table.name;\n        if (View && nodeViews) {\n          nodeViews[tableName] = (node, view) => {\n            return new View(node, defaultCellMinWidth, view);\n          };\n        }\n        return new ResizeState(-1, false);\n      },\n      apply(tr, prev) {\n        return prev.apply(tr);\n      }\n    },\n    props: {\n      attributes: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        return pluginState && pluginState.activeHandle > -1 ? { class: \"resize-cursor\" } : {};\n      },\n      handleDOMEvents: {\n        mousemove: (view, event) => {\n          handleMouseMove(view, event, handleWidth, lastColumnResizable);\n        },\n        mouseleave: (view) => {\n          handleMouseLeave(view);\n        },\n        mousedown: (view, event) => {\n          handleMouseDown2(view, event, cellMinWidth, defaultCellMinWidth);\n        }\n      },\n      decorations: (state) => {\n        const pluginState = columnResizingPluginKey.getState(state);\n        if (pluginState && pluginState.activeHandle > -1) {\n          return handleDecorations(state, pluginState.activeHandle);\n        }\n      },\n      nodeViews: {}\n    }\n  });\n  return plugin;\n}\nvar ResizeState = class _ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle;\n    this.dragging = dragging;\n  }\n  apply(tr) {\n    const state = this;\n    const action = tr.getMeta(columnResizingPluginKey);\n    if (action && action.setHandle != null)\n      return new _ResizeState(action.setHandle, false);\n    if (action && action.setDragging !== void 0)\n      return new _ResizeState(state.activeHandle, action.setDragging);\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1);\n      if (!pointsAtCell(tr.doc.resolve(handle))) {\n        handle = -1;\n      }\n      return new _ResizeState(handle, state.dragging);\n    }\n    return state;\n  }\n};\nfunction handleMouseMove(view, event, handleWidth, lastColumnResizable) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState)\n    return;\n  if (!pluginState.dragging) {\n    const target = domCellAround(event.target);\n    let cell = -1;\n    if (target) {\n      const { left, right } = target.getBoundingClientRect();\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\", handleWidth);\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\", handleWidth);\n    }\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        const $cell = view.state.doc.resolve(cell);\n        const table = $cell.node(-1);\n        const map = TableMap.get(table);\n        const tableStart = $cell.start(-1);\n        const col = map.colCount($cell.pos - tableStart) + $cell.nodeAfter.attrs.colspan - 1;\n        if (col == map.width - 1) {\n          return;\n        }\n      }\n      updateHandle(view, cell);\n    }\n  }\n}\nfunction handleMouseLeave(view) {\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (pluginState && pluginState.activeHandle > -1 && !pluginState.dragging)\n    updateHandle(view, -1);\n}\nfunction handleMouseDown2(view, event, cellMinWidth, defaultCellMinWidth) {\n  var _a;\n  const win = (_a = view.dom.ownerDocument.defaultView) != null ? _a : window;\n  const pluginState = columnResizingPluginKey.getState(view.state);\n  if (!pluginState || pluginState.activeHandle == -1 || pluginState.dragging)\n    return false;\n  const cell = view.state.doc.nodeAt(pluginState.activeHandle);\n  const width = currentColWidth(view, pluginState.activeHandle, cell.attrs);\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, {\n      setDragging: { startX: event.clientX, startWidth: width }\n    })\n  );\n  function finish(event2) {\n    win.removeEventListener(\"mouseup\", finish);\n    win.removeEventListener(\"mousemove\", move);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (pluginState2 == null ? void 0 : pluginState2.dragging) {\n      updateColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        draggedWidth(pluginState2.dragging, event2, cellMinWidth)\n      );\n      view.dispatch(\n        view.state.tr.setMeta(columnResizingPluginKey, { setDragging: null })\n      );\n    }\n  }\n  function move(event2) {\n    if (!event2.which)\n      return finish(event2);\n    const pluginState2 = columnResizingPluginKey.getState(view.state);\n    if (!pluginState2)\n      return;\n    if (pluginState2.dragging) {\n      const dragged = draggedWidth(pluginState2.dragging, event2, cellMinWidth);\n      displayColumnWidth(\n        view,\n        pluginState2.activeHandle,\n        dragged,\n        defaultCellMinWidth\n      );\n    }\n  }\n  displayColumnWidth(\n    view,\n    pluginState.activeHandle,\n    width,\n    defaultCellMinWidth\n  );\n  win.addEventListener(\"mouseup\", finish);\n  win.addEventListener(\"mousemove\", move);\n  event.preventDefault();\n  return true;\n}\nfunction currentColWidth(view, cellPos, { colspan, colwidth }) {\n  const width = colwidth && colwidth[colwidth.length - 1];\n  if (width)\n    return width;\n  const dom = view.domAtPos(cellPos);\n  const node = dom.node.childNodes[dom.offset];\n  let domWidth = node.offsetWidth, parts = colspan;\n  if (colwidth) {\n    for (let i = 0; i < colspan; i++)\n      if (colwidth[i]) {\n        domWidth -= colwidth[i];\n        parts--;\n      }\n  }\n  return domWidth / parts;\n}\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList && target.classList.contains(\"ProseMirror\") ? null : target.parentNode;\n  return target;\n}\nfunction edgeCell(view, event, side, handleWidth) {\n  const offset = side == \"right\" ? -handleWidth : handleWidth;\n  const found = view.posAtCoords({\n    left: event.clientX + offset,\n    top: event.clientY\n  });\n  if (!found)\n    return -1;\n  const { pos } = found;\n  const $cell = cellAround(view.state.doc.resolve(pos));\n  if (!$cell)\n    return -1;\n  if (side == \"right\")\n    return $cell.pos;\n  const map = TableMap.get($cell.node(-1)), start = $cell.start(-1);\n  const index = map.map.indexOf($cell.pos - start);\n  return index % map.width == 0 ? -1 : start + map.map[index - 1];\n}\nfunction draggedWidth(dragging, event, resizeMinWidth) {\n  const offset = event.clientX - dragging.startX;\n  return Math.max(resizeMinWidth, dragging.startWidth + offset);\n}\nfunction updateHandle(view, value) {\n  view.dispatch(\n    view.state.tr.setMeta(columnResizingPluginKey, { setHandle: value })\n  );\n}\nfunction updateColumnWidth(view, cell, width) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  const tr = view.state.tr;\n  for (let row = 0; row < map.height; row++) {\n    const mapIndex = row * map.width + col;\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width])\n      continue;\n    const pos = map.map[mapIndex];\n    const attrs = table.nodeAt(pos).attrs;\n    const index = attrs.colspan == 1 ? 0 : col - map.colCount(pos);\n    if (attrs.colwidth && attrs.colwidth[index] == width)\n      continue;\n    const colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan);\n    colwidth[index] = width;\n    tr.setNodeMarkup(start + pos, null, { ...attrs, colwidth });\n  }\n  if (tr.docChanged)\n    view.dispatch(tr);\n}\nfunction displayColumnWidth(view, cell, width, defaultCellMinWidth) {\n  const $cell = view.state.doc.resolve(cell);\n  const table = $cell.node(-1), start = $cell.start(-1);\n  const col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  let dom = view.domAtPos($cell.start(-1)).node;\n  while (dom && dom.nodeName != \"TABLE\") {\n    dom = dom.parentNode;\n  }\n  if (!dom)\n    return;\n  updateColumnsOnResize(\n    table,\n    dom.firstChild,\n    dom,\n    defaultCellMinWidth,\n    col,\n    width\n  );\n}\nfunction zeroes(n) {\n  return Array(n).fill(0);\n}\nfunction handleDecorations(state, cell) {\n  var _a;\n  const decorations = [];\n  const $cell = state.doc.resolve(cell);\n  const table = $cell.node(-1);\n  if (!table) {\n    return DecorationSet2.empty;\n  }\n  const map = TableMap.get(table);\n  const start = $cell.start(-1);\n  const col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1;\n  for (let row = 0; row < map.height; row++) {\n    const index = col + row * map.width;\n    if ((col == map.width - 1 || map.map[index] != map.map[index + 1]) && (row == 0 || map.map[index] != map.map[index - map.width])) {\n      const cellPos = map.map[index];\n      const pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1;\n      const dom = document.createElement(\"div\");\n      dom.className = \"column-resize-handle\";\n      if ((_a = columnResizingPluginKey.getState(state)) == null ? void 0 : _a.dragging) {\n        decorations.push(\n          Decoration2.node(\n            start + cellPos,\n            start + cellPos + table.nodeAt(cellPos).nodeSize,\n            {\n              class: \"column-resize-dragging\"\n            }\n          )\n        );\n      }\n      decorations.push(Decoration2.widget(pos, dom));\n    }\n  }\n  return DecorationSet2.create(state.doc, decorations);\n}\n\n// src/index.ts\nfunction tableEditing({\n  allowTableNodeSelection = false\n} = {}) {\n  return new Plugin2({\n    key: tableEditingKey,\n    // This piece of state is used to remember when a mouse-drag\n    // cell-selection is happening, so that it can continue even as\n    // transactions (which might move its anchor cell) come in.\n    state: {\n      init() {\n        return null;\n      },\n      apply(tr, cur) {\n        const set = tr.getMeta(tableEditingKey);\n        if (set != null)\n          return set == -1 ? null : set;\n        if (cur == null || !tr.docChanged)\n          return cur;\n        const { deleted, pos } = tr.mapping.mapResult(cur);\n        return deleted ? null : pos;\n      }\n    },\n    props: {\n      decorations: drawCellSelection,\n      handleDOMEvents: {\n        mousedown: handleMouseDown\n      },\n      createSelectionBetween(view) {\n        return tableEditingKey.getState(view.state) != null ? view.state.selection : null;\n      },\n      handleTripleClick,\n      handleKeyDown,\n      handlePaste\n    },\n    appendTransaction(_, oldState, state) {\n      return normalizeSelection(\n        state,\n        fixTables(state, oldState),\n        allowTableNodeSelection\n      );\n    }\n  });\n}\nexport {\n  CellBookmark,\n  CellSelection,\n  ResizeState,\n  TableMap,\n  TableView,\n  clipCells as __clipCells,\n  insertCells as __insertCells,\n  pastedCells as __pastedCells,\n  addColSpan,\n  addColumn,\n  addColumnAfter,\n  addColumnBefore,\n  addRow,\n  addRowAfter,\n  addRowBefore,\n  cellAround,\n  cellNear,\n  colCount,\n  columnIsHeader,\n  columnResizing,\n  columnResizingPluginKey,\n  deleteCellSelection,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  findCell,\n  fixTables,\n  fixTablesKey,\n  goToNextCell,\n  handlePaste,\n  inSameTable,\n  isInTable,\n  mergeCells,\n  moveCellForward,\n  nextCell,\n  pointsAtCell,\n  removeColSpan,\n  removeColumn,\n  removeRow,\n  rowIsHeader,\n  selectedRect,\n  selectionCell,\n  setCellAttr,\n  splitCell,\n  splitCellWithType,\n  tableEditing,\n  tableEditingKey,\n  tableNodeTypes,\n  tableNodes,\n  toggleHeader,\n  toggleHeaderCell,\n  toggleHeaderColumn,\n  toggleHeaderRow,\n  updateColumnsOnResize\n};\n","import { tableNodes } from '@milkdown/prose/tables'\nimport { $nodeSchema } from '@milkdown/utils'\nimport type { MarkdownNode } from '@milkdown/transformer'\nimport type { NodeType } from '@milkdown/prose/model'\nimport { withMeta } from '../../__internal__'\n\nconst originalSchema = tableNodes({\n  tableGroup: 'block',\n  cellContent: 'paragraph',\n  cellAttributes: {\n    alignment: {\n      default: 'left',\n      getFromDOM: (dom) => dom.style.textAlign || 'left',\n      setDOMAttr: (value, attrs) => {\n        attrs.style = `text-align: ${value || 'left'}`\n      },\n    },\n  },\n})\n\n/// Schema for table node.\nexport const tableSchema = $nodeSchema('table', () => ({\n  ...originalSchema.table,\n  content: 'table_header_row table_row+',\n  disableDropCursor: true,\n  parseMarkdown: {\n    match: (node) => node.type === 'table',\n    runner: (state, node, type) => {\n      const align = node.align as (string | null)[]\n      const children = (node.children as MarkdownNode[]).map((x, i) => ({\n        ...x,\n        align,\n        isHeader: i === 0,\n      }))\n      state.openNode(type)\n      state.next(children)\n      state.closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'table',\n    runner: (state, node) => {\n      const firstLine = node.content.firstChild?.content\n      if (!firstLine) return\n\n      const align: (string | null)[] = []\n      firstLine.forEach((cell) => {\n        align.push(cell.attrs.alignment)\n      })\n      state.openNode('table', undefined, { align })\n      state.next(node.content)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(tableSchema.node, {\n  displayName: 'NodeSchema<table>',\n  group: 'Table',\n})\n\nwithMeta(tableSchema.ctx, {\n  displayName: 'NodeSchemaCtx<table>',\n  group: 'Table',\n})\n\n/// Schema for table header row node.\nexport const tableHeaderRowSchema = $nodeSchema('table_header_row', () => ({\n  ...originalSchema.table_row,\n  disableDropCursor: true,\n  content: '(table_header)*',\n  parseDOM: [{ tag: 'tr[data-is-header]' }],\n  toDOM() {\n    return ['tr', { 'data-is-header': true }, 0]\n  },\n  parseMarkdown: {\n    match: (node) => Boolean(node.type === 'tableRow' && node.isHeader),\n    runner: (state, node, type) => {\n      const align = node.align as (string | null)[]\n      const children = (node.children as MarkdownNode[]).map((x, i) => ({\n        ...x,\n        align: align[i],\n        isHeader: node.isHeader,\n      }))\n      state.openNode(type)\n      state.next(children)\n      state.closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'table_header_row',\n    runner: (state, node) => {\n      state.openNode('tableRow', undefined, { isHeader: true })\n      state.next(node.content)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(tableHeaderRowSchema.node, {\n  displayName: 'NodeSchema<tableHeaderRow>',\n  group: 'Table',\n})\n\nwithMeta(tableHeaderRowSchema.ctx, {\n  displayName: 'NodeSchemaCtx<tableHeaderRow>',\n  group: 'Table',\n})\n\n/// Schema for table row node.\nexport const tableRowSchema = $nodeSchema('table_row', () => ({\n  ...originalSchema.table_row,\n  disableDropCursor: true,\n  content: '(table_cell)*',\n  parseMarkdown: {\n    match: (node) => node.type === 'tableRow',\n    runner: (state, node, type) => {\n      const align = node.align as (string | null)[]\n      const children = (node.children as MarkdownNode[]).map((x, i) => ({\n        ...x,\n        align: align[i],\n      }))\n      state.openNode(type)\n      state.next(children)\n      state.closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'table_row',\n    runner: (state, node) => {\n      state.openNode('tableRow')\n      state.next(node.content)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(tableRowSchema.node, {\n  displayName: 'NodeSchema<tableRow>',\n  group: 'Table',\n})\n\nwithMeta(tableRowSchema.ctx, {\n  displayName: 'NodeSchemaCtx<tableRow>',\n  group: 'Table',\n})\n\n/// Schema for table cell node.\nexport const tableCellSchema = $nodeSchema('table_cell', () => ({\n  ...originalSchema.table_cell,\n  disableDropCursor: true,\n  parseMarkdown: {\n    match: (node) => node.type === 'tableCell' && !node.isHeader,\n    runner: (state, node, type) => {\n      const align = node.align as string\n      state\n        .openNode(type, { alignment: align })\n        .openNode(state.schema.nodes.paragraph as NodeType)\n        .next(node.children)\n        .closeNode()\n        .closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'table_cell',\n    runner: (state, node) => {\n      state.openNode('tableCell').next(node.content).closeNode()\n    },\n  },\n}))\n\nwithMeta(tableCellSchema.node, {\n  displayName: 'NodeSchema<tableCell>',\n  group: 'Table',\n})\n\nwithMeta(tableCellSchema.ctx, {\n  displayName: 'NodeSchemaCtx<tableCell>',\n  group: 'Table',\n})\n\n/// Schema for table header node.\nexport const tableHeaderSchema = $nodeSchema('table_header', () => ({\n  ...originalSchema.table_header,\n  disableDropCursor: true,\n  parseMarkdown: {\n    match: (node) => node.type === 'tableCell' && !!node.isHeader,\n    runner: (state, node, type) => {\n      const align = node.align as string\n      state.openNode(type, { alignment: align })\n      state.openNode(state.schema.nodes.paragraph as NodeType)\n      state.next(node.children)\n      state.closeNode()\n      state.closeNode()\n    },\n  },\n  toMarkdown: {\n    match: (node) => node.type.name === 'table_header',\n    runner: (state, node) => {\n      state.openNode('tableCell')\n      state.next(node.content)\n      state.closeNode()\n    },\n  },\n}))\n\nwithMeta(tableHeaderSchema.node, {\n  displayName: 'NodeSchema<tableHeader>',\n  group: 'Table',\n})\n\nwithMeta(tableHeaderSchema.ctx, {\n  displayName: 'NodeSchemaCtx<tableHeader>',\n  group: 'Table',\n})\n","import type { ContentNodeWithPos } from '@milkdown/prose'\nimport { cloneTr, findParentNodeClosestToPos } from '@milkdown/prose'\nimport type { Node, ResolvedPos } from '@milkdown/prose/model'\nimport type { Selection, Transaction } from '@milkdown/prose/state'\nimport type { TableRect } from '@milkdown/prose/tables'\nimport { CellSelection, TableMap } from '@milkdown/prose/tables'\n\nimport type { Ctx } from '@milkdown/ctx'\nimport {\n  tableCellSchema,\n  tableHeaderRowSchema,\n  tableHeaderSchema,\n  tableRowSchema,\n  tableSchema,\n} from './schema'\n\n/// @internal\nexport interface CellPos {\n  pos: number\n  start: number\n  node: Node\n}\n\n/// @internal\nexport function createTable(ctx: Ctx, rowsCount = 3, colsCount = 3): Node {\n  const cells = Array(colsCount)\n    .fill(0)\n    .map(() => tableCellSchema.type(ctx).createAndFill()!)\n\n  const headerCells = Array(colsCount)\n    .fill(0)\n    .map(() => tableHeaderSchema.type(ctx).createAndFill()!)\n\n  const rows = Array(rowsCount)\n    .fill(0)\n    .map((_, i) =>\n      i === 0\n        ? tableHeaderRowSchema.type(ctx).create(null, headerCells)\n        : tableRowSchema.type(ctx).create(null, cells)\n    )\n\n  return tableSchema.type(ctx).create(null, rows)\n}\n\n/// Find the table node with position information for target pos.\nexport function findTable($pos: ResolvedPos) {\n  return findParentNodeClosestToPos(\n    (node) => node.type.spec.tableRole === 'table'\n  )($pos)\n}\n\n/// Get cells in a column of a table.\nexport function getCellsInCol(\n  columnIndex: number,\n  selection: Selection\n): CellPos[] | undefined {\n  const table = findTable(selection.$from)\n  if (!table) return undefined\n  const map = TableMap.get(table.node)\n  if (columnIndex < 0 || columnIndex >= map.width) return undefined\n\n  return map\n    .cellsInRect({\n      left: columnIndex,\n      right: columnIndex + 1,\n      top: 0,\n      bottom: map.height,\n    })\n    .map((pos) => {\n      const node = table.node.nodeAt(pos)\n      if (!node) return undefined\n      const start = pos + table.start\n      return {\n        pos: start,\n        start: start + 1,\n        node,\n      }\n    })\n    .filter((x): x is CellPos => x != null)\n}\n\n/// Get cells in a row of a table.\nexport function getCellsInRow(\n  rowIndex: number,\n  selection: Selection\n): CellPos[] | undefined {\n  const table = findTable(selection.$from)\n  if (!table) return undefined\n  const map = TableMap.get(table.node)\n  if (rowIndex < 0 || rowIndex >= map.height) return undefined\n\n  return map\n    .cellsInRect({\n      left: 0,\n      right: map.width,\n      top: rowIndex,\n      bottom: rowIndex + 1,\n    })\n    .map((pos) => {\n      const node = table.node.nodeAt(pos)\n      if (!node) return undefined\n      const start = pos + table.start\n      return {\n        pos: start,\n        start: start + 1,\n        node,\n      }\n    })\n    .filter((x): x is CellPos => x != null)\n}\n\n/// Get all cells in a table.\nexport function getAllCellsInTable(selection: Selection) {\n  const table = findTable(selection.$from)\n  if (!table) return\n\n  const map = TableMap.get(table.node)\n  const cells = map.cellsInRect({\n    left: 0,\n    right: map.width,\n    top: 0,\n    bottom: map.height,\n  })\n  return cells.map((nodePos) => {\n    const node = table.node.nodeAt(nodePos)\n    const pos = nodePos + table.start\n    return { pos, start: pos + 1, node }\n  })\n}\n\n/// Select a possible table in current selection.\nexport function selectTable(tr: Transaction) {\n  const cells = getAllCellsInTable(tr.selection)\n  if (cells && cells[0]) {\n    const $firstCell = tr.doc.resolve(cells[0].pos)\n    const last = cells[cells.length - 1]\n    if (last) {\n      const $lastCell = tr.doc.resolve(last.pos)\n      return cloneTr(tr.setSelection(new CellSelection($lastCell, $firstCell)))\n    }\n  }\n  return tr\n}\n\n/// @internal\nexport function addRowWithAlignment(\n  ctx: Ctx,\n  tr: Transaction,\n  { map, tableStart, table }: TableRect,\n  row: number\n) {\n  const rowPos = Array(row)\n    .fill(0)\n    .reduce((acc, _, i) => {\n      return acc + table.child(i).nodeSize\n    }, tableStart)\n\n  const cells = Array(map.width)\n    .fill(0)\n    .map((_, col) => {\n      const headerCol = table.nodeAt(map.map[col] as number)\n      return tableCellSchema\n        .type(ctx)\n        .createAndFill({ alignment: headerCol?.attrs.alignment }) as Node\n    })\n\n  tr.insert(rowPos, tableRowSchema.type(ctx).create(null, cells))\n  return tr\n}\n\n/// @internal\nexport function selectLine(type: 'row' | 'col') {\n  return (index: number, pos?: number) => (tr: Transaction) => {\n    pos = pos ?? tr.selection.from\n    const $pos = tr.doc.resolve(pos)\n    const $node = findParentNodeClosestToPos(\n      (node) => node.type.name === 'table'\n    )($pos)\n    const table = $node\n      ? {\n          node: $node.node,\n          from: $node.start,\n        }\n      : undefined\n\n    const isRowSelection = type === 'row'\n    if (table) {\n      const map = TableMap.get(table.node)\n\n      // Check if the index is valid\n      if (index >= 0 && index < (isRowSelection ? map.height : map.width)) {\n        const lastCell = map.positionAt(\n          isRowSelection ? index : map.height - 1,\n          isRowSelection ? map.width - 1 : index,\n          table.node\n        )\n        const $lastCell = tr.doc.resolve(table.from + lastCell)\n\n        const createCellSelection = isRowSelection\n          ? CellSelection.rowSelection\n          : CellSelection.colSelection\n\n        const firstCell = map.positionAt(\n          isRowSelection ? index : 0,\n          isRowSelection ? 0 : index,\n          table.node\n        )\n        const $firstCell = tr.doc.resolve(table.from + firstCell)\n        return cloneTr(\n          tr.setSelection(\n            createCellSelection($lastCell, $firstCell) as unknown as Selection\n          )\n        )\n      }\n    }\n    return tr\n  }\n}\n\n/// If the selection is in a table,\n/// select the {index} row.\nexport const selectRow = selectLine('row')\n\n/// If the selection is in a table,\n/// select the {index} column.\nexport const selectCol = selectLine('col')\n\nfunction transpose<T>(array: T[][]) {\n  return array[0]!.map((_, i) => {\n    return array.map((column) => column[i])\n  }) as T[][]\n}\n\nfunction convertArrayOfRowsToTableNode(\n  tableNode: Node,\n  arrayOfNodes: (Node | null)[][]\n) {\n  const rowsPM = []\n  const map = TableMap.get(tableNode)\n  for (let rowIndex = 0; rowIndex < map.height; rowIndex++) {\n    const row = tableNode.child(rowIndex)\n    const rowCells = []\n\n    for (let colIndex = 0; colIndex < map.width; colIndex++) {\n      if (!arrayOfNodes[rowIndex]![colIndex]) continue\n\n      const cellPos = map.map[rowIndex * map.width + colIndex]!\n\n      const cell = arrayOfNodes[rowIndex]![colIndex]!\n      const oldCell = tableNode.nodeAt(cellPos)!\n      const newCell = oldCell.type.createChecked(\n        Object.assign({}, cell.attrs),\n        cell.content,\n        cell.marks\n      )\n      rowCells.push(newCell)\n    }\n\n    rowsPM.push(row.type.createChecked(row.attrs, rowCells, row.marks))\n  }\n\n  const newTable = tableNode.type.createChecked(\n    tableNode.attrs,\n    rowsPM,\n    tableNode.marks\n  )\n\n  return newTable\n}\n\nfunction convertTableNodeToArrayOfRows(tableNode: Node) {\n  const map = TableMap.get(tableNode)\n  const rows: (Node | null)[][] = []\n  for (let rowIndex = 0; rowIndex < map.height; rowIndex++) {\n    const rowCells: (Node | null)[] = []\n    const seen: Record<number, boolean> = {}\n\n    for (let colIndex = 0; colIndex < map.width; colIndex++) {\n      const cellPos = map.map[rowIndex * map.width + colIndex]!\n      const cell = tableNode.nodeAt(cellPos)\n      const rect = map.findCell(cellPos)\n      if (seen[cellPos] || rect.top !== rowIndex) {\n        rowCells.push(null)\n        continue\n      }\n      seen[cellPos] = true\n\n      rowCells.push(cell)\n    }\n\n    rows.push(rowCells)\n  }\n\n  return rows\n}\n\nfunction moveRowInArrayOfRows(\n  rows: (Node | null)[][],\n  indexesOrigin: number[],\n  indexesTarget: number[],\n  directionOverride: -1 | 1 | 0\n) {\n  const direction = indexesOrigin[0]! > indexesTarget[0]! ? -1 : 1\n\n  const rowsExtracted = rows.splice(indexesOrigin[0]!, indexesOrigin.length)\n  const positionOffset = rowsExtracted.length % 2 === 0 ? 1 : 0\n  let target: number\n\n  if (directionOverride === -1 && direction === 1) {\n    target = indexesTarget[0]! - 1\n  } else if (directionOverride === 1 && direction === -1) {\n    target = indexesTarget[indexesTarget.length - 1]! - positionOffset + 1\n  } else {\n    target =\n      direction === -1\n        ? indexesTarget[0]!\n        : indexesTarget[indexesTarget.length - 1]! - positionOffset\n  }\n\n  rows.splice(target, 0, ...rowsExtracted)\n  return rows\n}\n\nfunction moveTableColumn(\n  table: ContentNodeWithPos,\n  indexesOrigin: number[],\n  indexesTarget: number[],\n  direction: -1 | 1 | 0\n) {\n  let rows = transpose(convertTableNodeToArrayOfRows(table.node))\n\n  rows = moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, direction)\n  rows = transpose(rows)\n\n  return convertArrayOfRowsToTableNode(table.node, rows)\n}\n\nfunction moveTableRow(\n  table: ContentNodeWithPos,\n  indexesOrigin: number[],\n  indexesTarget: number[],\n  direction: -1 | 1 | 0\n) {\n  let rows = convertTableNodeToArrayOfRows(table.node)\n\n  rows = moveRowInArrayOfRows(rows, indexesOrigin, indexesTarget, direction)\n\n  return convertArrayOfRowsToTableNode(table.node, rows)\n}\n\nfunction getSelectionRangeInColumn(columnIndex: number, tr: Transaction) {\n  let startIndex = columnIndex\n  let endIndex = columnIndex\n\n  // looking for selection start column (startIndex)\n  for (let i = columnIndex; i >= 0; i--) {\n    const cells = getCellsInCol(i, tr.selection)\n    if (cells) {\n      cells.forEach((cell) => {\n        const maybeEndIndex = cell.node.attrs.colspan + i - 1\n        if (maybeEndIndex >= startIndex) startIndex = i\n\n        if (maybeEndIndex > endIndex) endIndex = maybeEndIndex\n      })\n    }\n  }\n  // looking for selection end column (endIndex)\n  for (let i = columnIndex; i <= endIndex; i++) {\n    const cells = getCellsInCol(i, tr.selection)\n    if (cells) {\n      cells.forEach((cell) => {\n        const maybeEndIndex = cell.node.attrs.colspan + i - 1\n        if (cell.node.attrs.colspan > 1 && maybeEndIndex > endIndex)\n          endIndex = maybeEndIndex\n      })\n    }\n  }\n\n  // filter out columns without cells (where all rows have colspan > 1 in the same column)\n  const indexes = []\n  for (let i = startIndex; i <= endIndex; i++) {\n    const maybeCells = getCellsInCol(i, tr.selection)\n    if (maybeCells && maybeCells.length) indexes.push(i)\n  }\n  startIndex = indexes[0]!\n  endIndex = indexes[indexes.length - 1]!\n\n  const firstSelectedColumnCells = getCellsInCol(startIndex, tr.selection)!\n  const firstRowCells = getCellsInRow(0, tr.selection)!\n  const $anchor = tr.doc.resolve(\n    firstSelectedColumnCells[firstSelectedColumnCells.length - 1]!.pos\n  )\n\n  let headCell: CellPos | undefined\n  for (let i = endIndex; i >= startIndex; i--) {\n    const columnCells = getCellsInCol(i, tr.selection)\n    if (columnCells && columnCells.length) {\n      for (let j = firstRowCells.length - 1; j >= 0; j--) {\n        if (firstRowCells[j]!.pos === columnCells[0]!.pos) {\n          headCell = columnCells[0]\n          break\n        }\n      }\n      if (headCell) break\n    }\n  }\n\n  const $head = tr.doc.resolve(headCell!.pos)\n  return { $anchor, $head, indexes }\n}\n\nfunction getSelectionRangeInRow(rowIndex: number, tr: Transaction) {\n  let startIndex = rowIndex\n  let endIndex = rowIndex\n  // looking for selection start row (startIndex)\n  for (let i = rowIndex; i >= 0; i--) {\n    const cells = getCellsInRow(i, tr.selection)\n    cells!.forEach((cell) => {\n      const maybeEndIndex = cell.node.attrs.rowspan + i - 1\n      if (maybeEndIndex >= startIndex) startIndex = i\n\n      if (maybeEndIndex > endIndex) endIndex = maybeEndIndex\n    })\n  }\n  // looking for selection end row (endIndex)\n  for (let i = rowIndex; i <= endIndex; i++) {\n    const cells = getCellsInRow(i, tr.selection)\n    cells!.forEach((cell) => {\n      const maybeEndIndex = cell.node.attrs.rowspan + i - 1\n      if (cell.node.attrs.rowspan > 1 && maybeEndIndex > endIndex)\n        endIndex = maybeEndIndex\n    })\n  }\n\n  // filter out rows without cells (where all columns have rowspan > 1 in the same row)\n  const indexes = []\n  for (let i = startIndex; i <= endIndex; i++) {\n    const maybeCells = getCellsInRow(i, tr.selection)\n    if (maybeCells && maybeCells.length) indexes.push(i)\n  }\n  startIndex = indexes[0]!\n  endIndex = indexes[indexes.length - 1]!\n\n  const firstSelectedRowCells = getCellsInRow(startIndex, tr.selection)!\n  const firstColumnCells = getCellsInCol(0, tr.selection)!\n  const $anchor = tr.doc.resolve(\n    firstSelectedRowCells[firstSelectedRowCells.length - 1]!.pos\n  )\n\n  let headCell: CellPos | undefined\n  for (let i = endIndex; i >= startIndex; i--) {\n    const rowCells = getCellsInRow(i, tr.selection)\n    if (rowCells && rowCells.length) {\n      for (let j = firstColumnCells.length - 1; j >= 0; j--) {\n        if (firstColumnCells[j]!.pos === rowCells[0]!.pos) {\n          headCell = rowCells[0]!\n          break\n        }\n      }\n      if (headCell) break\n    }\n  }\n\n  const $head = tr.doc.resolve(headCell!.pos)\n  return { $anchor, $head, indexes }\n}\n\nexport interface MoveColParams {\n  tr: Transaction\n  origin: number\n  target: number\n  select?: boolean\n  pos?: number\n}\n\n/// If the selection is in a table,\n/// Move the columns at `origin` to `target` in current table.\n/// The `select` is true by default, which means the selection will be set to the moved column.\nexport function moveCol(moveColParams: MoveColParams) {\n  const { tr, origin, target, select = true, pos } = moveColParams\n  const $pos = pos != null ? tr.doc.resolve(pos) : tr.selection.$from\n  const table = findTable($pos)\n  if (!table) return tr\n\n  const { indexes: indexesOriginColumn } = getSelectionRangeInColumn(origin, tr)\n  const { indexes: indexesTargetColumn } = getSelectionRangeInColumn(target, tr)\n\n  if (indexesOriginColumn.includes(target)) return tr\n\n  const newTable = moveTableColumn(\n    table,\n    indexesOriginColumn,\n    indexesTargetColumn,\n    0\n  )\n\n  const _tr = cloneTr(tr).replaceWith(\n    table.pos,\n    table.pos + table.node.nodeSize,\n    newTable\n  )\n\n  if (!select) return _tr\n\n  const map = TableMap.get(newTable)\n  const start = table.start\n  const index = target\n  const lastCell = map.positionAt(map.height - 1, index, newTable)\n  const $lastCell = _tr.doc.resolve(start + lastCell)\n\n  const createCellSelection = CellSelection.colSelection\n\n  const firstCell = map.positionAt(0, index, newTable)\n  const $firstCell = _tr.doc.resolve(start + firstCell)\n\n  return _tr.setSelection(createCellSelection($lastCell, $firstCell))\n}\n\nexport interface MoveRowParams {\n  tr: Transaction\n  origin: number\n  target: number\n  select?: boolean\n  pos?: number\n}\n\n/// If the selection is in a table,\n/// Move the rows at `origin` and `target` in current table.\n/// The `select` is true by default, which means the selection will be set to the moved row.\nexport function moveRow(moveRowParams: MoveRowParams) {\n  const { tr, origin, target, select = true, pos } = moveRowParams\n  const $pos = pos != null ? tr.doc.resolve(pos) : tr.selection.$from\n  const table = findTable($pos)\n  if (!table) return tr\n\n  const { indexes: indexesOriginRow } = getSelectionRangeInRow(origin, tr)\n  const { indexes: indexesTargetRow } = getSelectionRangeInRow(target, tr)\n\n  if (indexesOriginRow.includes(target)) return tr\n\n  const newTable = moveTableRow(table, indexesOriginRow, indexesTargetRow, 0)\n\n  const _tr = cloneTr(tr).replaceWith(\n    table.pos,\n    table.pos + table.node.nodeSize,\n    newTable\n  )\n\n  if (!select) return _tr\n\n  const map = TableMap.get(newTable)\n  const start = table.start\n  const index = target\n  const lastCell = map.positionAt(index, map.width - 1, newTable)\n  const $lastCell = _tr.doc.resolve(start + lastCell)\n\n  const createCellSelection = CellSelection.rowSelection\n\n  const firstCell = map.positionAt(index, 0, newTable)\n  const $firstCell = _tr.doc.resolve(start + firstCell)\n\n  return _tr.setSelection(createCellSelection($lastCell, $firstCell))\n}\n","import { paragraphSchema } from '@milkdown/preset-commonmark'\nimport { Selection } from '@milkdown/prose/state'\nimport {\n  CellSelection,\n  addColumnAfter,\n  addColumnBefore,\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  goToNextCell,\n  isInTable,\n  selectedRect,\n  setCellAttr,\n} from '@milkdown/prose/tables'\nimport { $command } from '@milkdown/utils'\nimport { findParentNodeType } from '@milkdown/prose'\nimport { withMeta } from '../../__internal__'\nimport {\n  addRowWithAlignment,\n  createTable,\n  moveCol,\n  moveRow,\n  selectCol,\n  selectRow,\n  selectTable,\n} from './utils'\nimport { tableSchema } from './schema'\n\n/// A command for moving cursor to previous cell.\nexport const goToPrevTableCellCommand = $command(\n  'GoToPrevTableCell',\n  () => () => goToNextCell(-1)\n)\n\nwithMeta(goToPrevTableCellCommand, {\n  displayName: 'Command<goToPrevTableCellCommand>',\n  group: 'Table',\n})\n\n/// A command for moving cursor to next cell.\nexport const goToNextTableCellCommand = $command(\n  'GoToNextTableCell',\n  () => () => goToNextCell(1)\n)\n\nwithMeta(goToNextTableCellCommand, {\n  displayName: 'Command<goToNextTableCellCommand>',\n  group: 'Table',\n})\n\n/// A command for quitting current table and insert a new paragraph node.\nexport const exitTable = $command(\n  'ExitTable',\n  (ctx) => () => (state, dispatch) => {\n    if (!isInTable(state)) return false\n\n    const { $head } = state.selection\n    const table = findParentNodeType($head, tableSchema.type(ctx))\n    if (!table) return false\n\n    const { to } = table\n\n    const tr = state.tr.replaceWith(\n      to,\n      to,\n      paragraphSchema.type(ctx).createAndFill()!\n    )\n\n    tr.setSelection(Selection.near(tr.doc.resolve(to), 1)).scrollIntoView()\n    dispatch?.(tr)\n    return true\n  }\n)\n\nwithMeta(exitTable, {\n  displayName: 'Command<breakTableCommand>',\n  group: 'Table',\n})\n\n/// A command for inserting a table.\n/// You can specify the number of rows and columns.\n/// By default, it will insert a 3x3 table.\nexport const insertTableCommand = $command(\n  'InsertTable',\n  (ctx) =>\n    ({ row, col }: { row?: number; col?: number } = {}) =>\n    (state, dispatch) => {\n      const { selection, tr } = state\n      const { from } = selection\n      const table = createTable(ctx, row, col)\n      const _tr = tr.replaceSelectionWith(table)\n      const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true)\n      if (sel) _tr.setSelection(sel)\n\n      dispatch?.(_tr)\n\n      return true\n    }\n)\n\nwithMeta(insertTableCommand, {\n  displayName: 'Command<insertTableCommand>',\n  group: 'Table',\n})\n\n/// A command for moving a row in a table.\n/// You should specify the `from` and `to` index.\nexport const moveRowCommand = $command(\n  'MoveRow',\n  () =>\n    ({ from, to, pos }: { from?: number; to?: number; pos?: number } = {}) =>\n    (state, dispatch) => {\n      const { tr } = state\n      const result = dispatch?.(\n        moveRow({ tr, origin: from ?? 0, target: to ?? 0, pos, select: true })\n      )\n\n      return Boolean(result)\n    }\n)\n\nwithMeta(moveRowCommand, {\n  displayName: 'Command<moveRowCommand>',\n  group: 'Table',\n})\n\n/// A command for moving a column in a table.\n/// You should specify the `from` and `to` index.\nexport const moveColCommand = $command(\n  'MoveCol',\n  () =>\n    ({ from, to, pos }: { from?: number; to?: number; pos?: number } = {}) =>\n    (state, dispatch) => {\n      const { tr } = state\n      const result = dispatch?.(\n        moveCol({ tr, origin: from ?? 0, target: to ?? 0, pos, select: true })\n      )\n\n      return Boolean(result)\n    }\n)\n\nwithMeta(moveColCommand, {\n  displayName: 'Command<moveColCommand>',\n  group: 'Table',\n})\n\n/// A command for selecting a row.\nexport const selectRowCommand = $command<\n  { index: number; pos?: number },\n  'SelectRow'\n>(\n  'SelectRow',\n  () =>\n    (payload: { index: number; pos?: number } = { index: 0 }) =>\n    (state, dispatch) => {\n      const { tr } = state\n      const result = dispatch?.(selectRow(payload.index, payload.pos)(tr))\n\n      return Boolean(result)\n    }\n)\n\nwithMeta(selectRowCommand, {\n  displayName: 'Command<selectRowCommand>',\n  group: 'Table',\n})\n\n/// A command for selecting a column.\nexport const selectColCommand = $command<\n  { index: number; pos?: number },\n  'SelectCol'\n>(\n  'SelectCol',\n  () =>\n    (payload: { index: number; pos?: number } = { index: 0 }) =>\n    (state, dispatch) => {\n      const { tr } = state\n      const result = dispatch?.(selectCol(payload.index, payload.pos)(tr))\n\n      return Boolean(result)\n    }\n)\n\nwithMeta(selectColCommand, {\n  displayName: 'Command<selectColCommand>',\n  group: 'Table',\n})\n\n/// A command for selecting a table.\nexport const selectTableCommand = $command(\n  'SelectTable',\n  () => () => (state, dispatch) => {\n    const { tr } = state\n    const result = dispatch?.(selectTable(tr))\n\n    return Boolean(result)\n  }\n)\n\nwithMeta(selectTableCommand, {\n  displayName: 'Command<selectTableCommand>',\n  group: 'Table',\n})\n\n/// A command for deleting selected cells.\n/// If the selection is a row or column, the row or column will be deleted.\n/// If all cells are selected, the table will be deleted.\nexport const deleteSelectedCellsCommand = $command(\n  'DeleteSelectedCells',\n  () => () => (state, dispatch) => {\n    const { selection } = state\n    if (!(selection instanceof CellSelection)) return false\n\n    const isRow = selection.isRowSelection()\n    const isCol = selection.isColSelection()\n\n    if (isRow && isCol) return deleteTable(state, dispatch)\n\n    if (isCol) return deleteColumn(state, dispatch)\n    else return deleteRow(state, dispatch)\n  }\n)\n\nwithMeta(deleteSelectedCellsCommand, {\n  displayName: 'Command<deleteSelectedCellsCommand>',\n  group: 'Table',\n})\n\n/// A command for adding a column before the current column.\nexport const addColBeforeCommand = $command(\n  'AddColBefore',\n  () => () => addColumnBefore\n)\n\nwithMeta(addColBeforeCommand, {\n  displayName: 'Command<addColBeforeCommand>',\n  group: 'Table',\n})\n\n/// A command for adding a column after the current column.\nexport const addColAfterCommand = $command(\n  'AddColAfter',\n  () => () => addColumnAfter\n)\n\nwithMeta(addColAfterCommand, {\n  displayName: 'Command<addColAfterCommand>',\n  group: 'Table',\n})\n\n/// A command for adding a row before the current row.\nexport const addRowBeforeCommand = $command(\n  'AddRowBefore',\n  (ctx) => () => (state, dispatch) => {\n    if (!isInTable(state)) return false\n    if (dispatch) {\n      const rect = selectedRect(state)\n      dispatch(addRowWithAlignment(ctx, state.tr, rect, rect.top))\n    }\n    return true\n  }\n)\n\nwithMeta(addRowBeforeCommand, {\n  displayName: 'Command<addRowBeforeCommand>',\n  group: 'Table',\n})\n\n/// A command for adding a row after the current row.\nexport const addRowAfterCommand = $command(\n  'AddRowAfter',\n  (ctx) => () => (state, dispatch) => {\n    if (!isInTable(state)) return false\n    if (dispatch) {\n      const rect = selectedRect(state)\n      dispatch(addRowWithAlignment(ctx, state.tr, rect, rect.bottom))\n    }\n    return true\n  }\n)\n\nwithMeta(addRowAfterCommand, {\n  displayName: 'Command<addRowAfterCommand>',\n  group: 'Table',\n})\n\n/// A command for setting alignment property for selected cells.\n/// You can specify the alignment as `left`, `center`, or `right`.\n/// It's `left` by default.\nexport const setAlignCommand = $command<\n  'left' | 'center' | 'right',\n  'SetAlign'\n>(\n  'SetAlign',\n  () =>\n    (alignment = 'left') =>\n      setCellAttr('alignment', alignment)\n)\n\nwithMeta(setAlignCommand, {\n  displayName: 'Command<setAlignCommand>',\n  group: 'Table',\n})\n","import { commandsCtx } from '@milkdown/core'\nimport { InputRule } from '@milkdown/prose/inputrules'\nimport { TextSelection } from '@milkdown/prose/state'\nimport { $inputRule, $useKeymap } from '@milkdown/utils'\nimport { withMeta } from '../../__internal__'\nimport { createTable } from './utils'\nimport { tableSchema } from './schema'\nimport {\n  exitTable,\n  goToNextTableCellCommand,\n  goToPrevTableCellCommand,\n} from './command'\n\n/// A input rule for creating table.\n/// For example, `|2x2|` will create a 2x2 table.\nexport const insertTableInputRule = $inputRule(\n  (ctx) =>\n    new InputRule(\n      /^\\|(?<col>\\d+)[xX](?<row>\\d+)\\|\\s$/,\n      (state, match, start, end) => {\n        const $start = state.doc.resolve(start)\n        if (\n          !$start\n            .node(-1)\n            .canReplaceWith(\n              $start.index(-1),\n              $start.indexAfter(-1),\n              tableSchema.type(ctx)\n            )\n        )\n          return null\n\n        const tableNode = createTable(\n          ctx,\n          Number(match.groups?.row),\n          Number(match.groups?.col)\n        )\n        const tr = state.tr.replaceRangeWith(start, end, tableNode)\n        return tr\n          .setSelection(TextSelection.create(tr.doc, start + 3))\n          .scrollIntoView()\n      }\n    )\n)\n\nwithMeta(insertTableInputRule, {\n  displayName: 'InputRule<insertTableInputRule>',\n  group: 'Table',\n})\n\n/// Keymap for table commands.\n/// - `<Mod-]>`/`<Tab>`: Move to the next cell.\n/// - `<Mod-[>`/`<Shift-Tab>`: Move to the previous cell.\n/// - `<Mod-Enter>`: Exit the table, and break it if possible.\nexport const tableKeymap = $useKeymap('tableKeymap', {\n  NextCell: {\n    shortcuts: ['Mod-]', 'Tab'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n\n      return () => commands.call(goToNextTableCellCommand.key)\n    },\n  },\n  PrevCell: {\n    shortcuts: ['Mod-[', 'Shift-Tab'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n\n      return () => commands.call(goToPrevTableCellCommand.key)\n    },\n  },\n  ExitTable: {\n    shortcuts: ['Mod-Enter'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n\n      return () => commands.call(exitTable.key)\n    },\n  },\n})\n\nwithMeta(tableKeymap.ctx, {\n  displayName: 'KeymapCtx<table>',\n  group: 'Table',\n})\n\nwithMeta(tableKeymap.shortcuts, {\n  displayName: 'Keymap<table>',\n  group: 'Table',\n})\n","import { expectDomTypeError } from '@milkdown/exception'\nimport { $nodeSchema } from '@milkdown/utils'\nimport { withMeta } from '../../__internal__'\n\nconst id = 'footnote_definition'\nconst markdownId = 'footnoteDefinition'\n\n/// Footnote definition node schema.\nexport const footnoteDefinitionSchema = $nodeSchema(\n  'footnote_definition',\n  () => ({\n    group: 'block',\n    content: 'block+',\n    defining: true,\n    attrs: {\n      label: {\n        default: '',\n      },\n    },\n    parseDOM: [\n      {\n        tag: `dl[data-type=\"${id}\"]`,\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return {\n            label: dom.dataset.label,\n          }\n        },\n        contentElement: 'dd',\n      },\n    ],\n    toDOM: (node) => {\n      const label = node.attrs.label\n\n      return [\n        'dl',\n        {\n          // TODO: add a prosemirror plugin to sync label on change\n          'data-label': label,\n          'data-type': id,\n        },\n        ['dt', label],\n        ['dd', 0],\n      ]\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === markdownId,\n      runner: (state, node, type) => {\n        state\n          .openNode(type, {\n            label: node.label as string,\n          })\n          .next(node.children)\n          .closeNode()\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === id,\n      runner: (state, node) => {\n        state\n          .openNode(markdownId, undefined, {\n            label: node.attrs.label,\n            identifier: node.attrs.label,\n          })\n          .next(node.content)\n          .closeNode()\n      },\n    },\n  })\n)\n\nwithMeta(footnoteDefinitionSchema.ctx, {\n  displayName: 'NodeSchemaCtx<footnodeDef>',\n  group: 'footnote',\n})\n\nwithMeta(footnoteDefinitionSchema.node, {\n  displayName: 'NodeSchema<footnodeDef>',\n  group: 'footnote',\n})\n","import { expectDomTypeError } from '@milkdown/exception'\nimport { $nodeSchema } from '@milkdown/utils'\nimport { withMeta } from '../../__internal__'\n\nconst id = 'footnote_reference'\n\n/// Footnote reference node schema.\nexport const footnoteReferenceSchema = $nodeSchema(\n  'footnote_reference',\n  () => ({\n    group: 'inline',\n    inline: true,\n    atom: true,\n    attrs: {\n      label: {\n        default: '',\n      },\n    },\n    parseDOM: [\n      {\n        tag: `sup[data-type=\"${id}\"]`,\n        getAttrs: (dom) => {\n          if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n          return {\n            label: dom.dataset.label,\n          }\n        },\n      },\n    ],\n    toDOM: (node) => {\n      const label = node.attrs.label\n      return [\n        'sup',\n        {\n          // TODO: add a prosemirror plugin to sync label on change\n          'data-label': label,\n          'data-type': id,\n        },\n        label,\n      ]\n    },\n    parseMarkdown: {\n      match: ({ type }) => type === 'footnoteReference',\n      runner: (state, node, type) => {\n        state.addNode(type, {\n          label: node.label as string,\n        })\n      },\n    },\n    toMarkdown: {\n      match: (node) => node.type.name === id,\n      runner: (state, node) => {\n        state.addNode('footnoteReference', undefined, undefined, {\n          label: node.attrs.label,\n          identifier: node.attrs.label,\n        })\n      },\n    },\n  })\n)\n\nwithMeta(footnoteReferenceSchema.ctx, {\n  displayName: 'NodeSchemaCtx<footnodeRef>',\n  group: 'footnote',\n})\n\nwithMeta(footnoteReferenceSchema.node, {\n  displayName: 'NodeSchema<footnodeRef>',\n  group: 'footnote',\n})\n","import { expectDomTypeError } from '@milkdown/exception'\nimport { listItemSchema } from '@milkdown/preset-commonmark'\nimport { InputRule } from '@milkdown/prose/inputrules'\nimport { $inputRule } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// This schema extends the [list item](/preset-commonmark#list-item) schema and add task list support for it.\nexport const extendListItemSchemaForTask = listItemSchema.extendSchema(\n  (prev) => {\n    return (ctx) => {\n      const baseSchema = prev(ctx)\n      return {\n        ...baseSchema,\n        attrs: {\n          ...baseSchema.attrs,\n          checked: {\n            default: null,\n          },\n        },\n        parseDOM: [\n          {\n            tag: 'li[data-item-type=\"task\"]',\n            getAttrs: (dom) => {\n              if (!(dom instanceof HTMLElement)) throw expectDomTypeError(dom)\n\n              return {\n                label: dom.dataset.label,\n                listType: dom.dataset.listType,\n                spread: dom.dataset.spread,\n                checked: dom.dataset.checked\n                  ? dom.dataset.checked === 'true'\n                  : null,\n              }\n            },\n          },\n          ...(baseSchema?.parseDOM || []),\n        ],\n        toDOM: (node) => {\n          if (baseSchema.toDOM && node.attrs.checked == null)\n            return baseSchema.toDOM(node)\n\n          return [\n            'li',\n            {\n              'data-item-type': 'task',\n              'data-label': node.attrs.label,\n              'data-list-type': node.attrs.listType,\n              'data-spread': node.attrs.spread,\n              'data-checked': node.attrs.checked,\n            },\n            0,\n          ]\n        },\n        parseMarkdown: {\n          match: ({ type }) => type === 'listItem',\n          runner: (state, node, type) => {\n            if (node.checked == null) {\n              baseSchema.parseMarkdown.runner(state, node, type)\n              return\n            }\n\n            const label = node.label != null ? `${node.label}.` : '•'\n            const checked = node.checked != null ? Boolean(node.checked) : null\n            const listType = node.label != null ? 'ordered' : 'bullet'\n            const spread = node.spread != null ? `${node.spread}` : 'true'\n\n            state.openNode(type, { label, listType, spread, checked })\n            state.next(node.children)\n            state.closeNode()\n          },\n        },\n        toMarkdown: {\n          match: (node) => node.type.name === 'list_item',\n          runner: (state, node) => {\n            if (node.attrs.checked == null) {\n              baseSchema.toMarkdown.runner(state, node)\n              return\n            }\n\n            const label = node.attrs.label\n            const listType = node.attrs.listType\n            const spread = node.attrs.spread === 'true'\n            const checked = node.attrs.checked\n\n            state.openNode('listItem', undefined, {\n              label,\n              listType,\n              spread,\n              checked,\n            })\n            state.next(node.content)\n            state.closeNode()\n          },\n        },\n      }\n    }\n  }\n)\n\nwithMeta(extendListItemSchemaForTask, {\n  displayName: 'NodeSchema<listItem>',\n  group: 'ListItem',\n})\n\n/// Input rule for wrapping a block in task list node.\n/// Users can type `[ ] ` or `[x] ` to wrap the block in task list node with checked status.\nexport const wrapInTaskListInputRule = $inputRule(() => {\n  return new InputRule(\n    /^\\[(?<checked>\\s|x)\\]\\s$/,\n    (state, match, start, end) => {\n      const pos = state.doc.resolve(start)\n      let depth = 0\n      let node = pos.node(depth)\n      while (node && node.type.name !== 'list_item') {\n        depth--\n        node = pos.node(depth)\n      }\n\n      if (!node || node.attrs.checked != null) return null\n\n      const checked = Boolean(match.groups?.checked === 'x')\n\n      const finPos = pos.before(depth)\n      const tr = state.tr\n\n      tr.deleteRange(start, end).setNodeMarkup(finPos, undefined, {\n        ...node.attrs,\n        checked,\n      })\n\n      return tr\n    }\n  )\n})\n\nwithMeta(wrapInTaskListInputRule, {\n  displayName: 'InputRule<wrapInTaskListInputRule>',\n  group: 'ListItem',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { strikethroughKeymap } from '../mark'\nimport { tableKeymap } from '../node'\n\n/// @internal\nexport const keymap: MilkdownPlugin[] = [\n  strikethroughKeymap,\n  tableKeymap,\n].flat()\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { insertTableInputRule, wrapInTaskListInputRule } from '../node'\nimport { strikethroughInputRule } from '../mark'\n\n/// @internal\nexport const inputRules: MilkdownPlugin[] = [\n  insertTableInputRule,\n  wrapInTaskListInputRule,\n]\n\nexport const markInputRules: MilkdownPlugin[] = [strikethroughInputRule]\n","// src/index.ts\nimport {\n  Plugin,\n  PluginKey\n} from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\n\n// src/browser.ts\nvar nav = typeof navigator != \"undefined\" ? navigator : null;\nvar agent = nav && nav.userAgent || \"\";\nvar ie_edge = /Edge\\/(\\d+)/.exec(agent);\nvar ie_upto10 = /MSIE \\d/.exec(agent);\nvar ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent);\nvar ie = !!(ie_upto10 || ie_11up || ie_edge);\nvar safari = !ie && !!nav && /Apple Computer/.test(nav.vendor);\n\n// src/index.ts\nvar key = new PluginKey(\"safari-ime-span\");\nvar isComposing = false;\nvar spec = {\n  key,\n  props: {\n    decorations: createDecorations,\n    handleDOMEvents: {\n      compositionstart: () => {\n        isComposing = true;\n      },\n      compositionend: () => {\n        isComposing = false;\n      }\n    }\n  }\n};\nfunction createDecorations(state) {\n  const { $from, $to, to } = state.selection;\n  if (isComposing && $from.sameParent($to)) {\n    const deco = Decoration.widget(to, createSpan, {\n      ignoreSelection: true,\n      key: \"safari-ime-span\"\n    });\n    return DecorationSet.create(state.doc, [deco]);\n  }\n}\nfunction createSpan(view) {\n  const span = view.dom.ownerDocument.createElement(\"span\");\n  span.className = \"ProseMirror-safari-ime-span\";\n  return span;\n}\nvar imeSpan = new Plugin(safari ? spec : { key });\nexport {\n  imeSpan\n};\n","import { $prose } from '@milkdown/utils'\nimport { imeSpan } from 'prosemirror-safari-ime-span'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is used to fix the bug of IME composing in table in Safari browser.\n/// original discussion in https://discuss.prosemirror.net/t/ime-composing-problems-on-td-or-th-element-in-safari-browser/4501\nexport const autoInsertSpanPlugin = $prose(() => imeSpan)\n\nwithMeta(autoInsertSpanPlugin, {\n  displayName: 'Prose<autoInsertSpanPlugin>',\n  group: 'Prose',\n})\n","import { columnResizing } from '@milkdown/prose/tables'\nimport { $prose } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is wrapping the `columnResizing` plugin from [prosemirror-tables](https://github.com/ProseMirror/prosemirror-tables).\nexport const columnResizingPlugin = $prose(() => columnResizing({}))\n\nwithMeta(columnResizingPlugin, {\n  displayName: 'Prose<columnResizingPlugin>',\n  group: 'Prose',\n})\n","import { tableEditing } from '@milkdown/prose/tables'\nimport { $prose } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is wrapping the `tableEditing` plugin from [prosemirror-tables](https://github.com/ProseMirror/prosemirror-tables).\nexport const tableEditingPlugin = $prose(() =>\n  tableEditing({ allowTableNodeSelection: true })\n)\n\nwithMeta(tableEditingPlugin, {\n  displayName: 'Prose<tableEditingPlugin>',\n  group: 'Prose',\n})\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push([...events]);\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      events.push(...slice);\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","import type { $Remark } from '@milkdown/utils'\nimport { $remark } from '@milkdown/utils'\nimport type { Options } from 'remark-gfm'\nimport remarkGFM from 'remark-gfm'\nimport { withMeta } from '../__internal__'\n\n/// This plugin is wrapping the [remark-gfm](https://github.com/remarkjs/remark-gfm).\nexport const remarkGFMPlugin: $Remark<'remarkGFM', Options | null | undefined> =\n  $remark('remarkGFM', () => remarkGFM)\n\nwithMeta(remarkGFMPlugin.plugin, {\n  displayName: 'Remark<remarkGFMPlugin>',\n  group: 'Remark',\n})\n\nwithMeta(remarkGFMPlugin.options, {\n  displayName: 'RemarkConfig<remarkGFMPlugin>',\n  group: 'Remark',\n})\n","import type { Transaction } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { Node } from '@milkdown/prose/model'\nimport { $prose } from '@milkdown/utils'\nimport { withMeta } from '../__internal__'\n\nconst pluginKey = new PluginKey('MILKDOWN_KEEP_TABLE_ALIGN_PLUGIN')\n\nfunction getChildIndex(node: Node, parent: Node) {\n  let index = 0\n  parent.forEach((child, _offset, i) => {\n    if (child === node) index = i\n  })\n  return index\n}\n\nexport const keepTableAlignPlugin = $prose(() => {\n  return new Plugin({\n    key: pluginKey,\n    appendTransaction: (_tr, oldState, state) => {\n      let tr: Transaction | undefined\n      const check = (node: Node, pos: number) => {\n        if (!tr) tr = state.tr\n\n        if (node.type.name !== 'table_cell') return\n\n        const $pos = state.doc.resolve(pos)\n        const tableRow = $pos.node($pos.depth)\n        const table = $pos.node($pos.depth - 1)\n        const tableHeaderRow = table.firstChild\n        // TODO: maybe consider add a header row\n        if (!tableHeaderRow) return\n\n        const index = getChildIndex(node, tableRow)\n        const headerCell = tableHeaderRow.maybeChild(index)\n        if (!headerCell) return\n        const align = headerCell.attrs.alignment\n        const currentAlign = node.attrs.alignment\n        if (align === currentAlign) return\n\n        tr.setNodeMarkup(pos, undefined, { ...node.attrs, alignment: align })\n      }\n      if (oldState.doc !== state.doc) state.doc.descendants(check)\n\n      return tr\n    },\n  })\n})\n\nwithMeta(keepTableAlignPlugin, {\n  displayName: 'Prose<keepTableAlignPlugin>',\n  group: 'Prose',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport {\n  autoInsertSpanPlugin,\n  keepTableAlignPlugin,\n  remarkGFMPlugin,\n  tableEditingPlugin,\n} from '../plugin'\n\n/// @internal\nexport const plugins: MilkdownPlugin[] = [\n  keepTableAlignPlugin,\n  autoInsertSpanPlugin,\n  remarkGFMPlugin,\n  tableEditingPlugin,\n].flat()\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { strikethroughAttr, strikethroughSchema } from '../mark'\nimport {\n  extendListItemSchemaForTask,\n  footnoteDefinitionSchema,\n  footnoteReferenceSchema,\n  tableCellSchema,\n  tableHeaderRowSchema,\n  tableHeaderSchema,\n  tableRowSchema,\n  tableSchema,\n} from '../node'\n\n/// @internal\nexport const schema: MilkdownPlugin[] = [\n  extendListItemSchemaForTask,\n\n  tableSchema,\n  tableHeaderRowSchema,\n  tableRowSchema,\n  tableHeaderSchema,\n  tableCellSchema,\n\n  footnoteDefinitionSchema,\n  footnoteReferenceSchema,\n\n  strikethroughAttr,\n  strikethroughSchema,\n].flat()\n","import { toggleStrikethroughCommand } from '../mark'\nimport {\n  addColAfterCommand,\n  addColBeforeCommand,\n  addRowAfterCommand,\n  addRowBeforeCommand,\n  deleteSelectedCellsCommand,\n  exitTable,\n  goToNextTableCellCommand,\n  goToPrevTableCellCommand,\n  insertTableCommand,\n  moveColCommand,\n  moveRowCommand,\n  selectColCommand,\n  selectRowCommand,\n  selectTableCommand,\n  setAlignCommand,\n} from '../node'\n\n/// @internal\nexport const commands = [\n  goToNextTableCellCommand,\n  goToPrevTableCellCommand,\n  exitTable,\n  insertTableCommand,\n  moveRowCommand,\n  moveColCommand,\n  selectRowCommand,\n  selectColCommand,\n  selectTableCommand,\n  deleteSelectedCellsCommand,\n  addRowBeforeCommand,\n  addRowAfterCommand,\n  addColBeforeCommand,\n  addColAfterCommand,\n  setAlignCommand,\n\n  toggleStrikethroughCommand,\n]\n","import {\n  commands,\n  inputRules,\n  keymap,\n  markInputRules,\n  plugins,\n  schema,\n} from './composed'\n\nexport * from './node'\nexport * from './mark'\nexport * from './plugin'\nexport * from './composed'\n\n/// The GFM preset, includes all the plugins.\nexport const gfm = [\n  schema,\n  inputRules,\n  markInputRules,\n  keymap,\n  commands,\n  plugins,\n].flat()\n","import type { html } from 'atomico'\nimport type { Ctx } from '@milkdown-nota/kit/ctx'\nimport type { Command, Transaction } from '@milkdown-nota/kit/prose/state'\nimport type { Attrs, NodeType } from '@milkdown-nota/kit/prose/model'\nimport { findWrapping } from '@milkdown-nota/kit/prose/transform'\n\nexport interface MenuItem {\n  index: number\n  key: string\n  label: string\n  icon: ReturnType<typeof html>\n  onRun: (ctx: Ctx) => void\n}\n\ntype WithRange<T, HasIndex extends true | false = true> = HasIndex extends true\n  ? T & { range: [start: number, end: number] }\n  : T\n\nexport type MenuItemGroup<HasIndex extends true | false = true> = WithRange<\n  {\n    key: string\n    label: string\n    items: HasIndex extends true ? MenuItem[] : Omit<MenuItem, 'index'>[]\n  },\n  HasIndex\n>\n\nexport function clearRange(tr: Transaction) {\n  const { $from, $to } = tr.selection\n  const { pos: from } = $from\n  const { pos: to } = $to\n  tr = tr.deleteRange(from - $from.node().content.size, to)\n  return tr\n}\n\nexport function setBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const { from, to } = tr.selection\n  return tr.setBlockType(from, to, nodeType, attrs)\n}\n\nexport function wrapInBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const { $from, $to } = tr.selection\n\n  const range = $from.blockRange($to)\n  const wrapping = range && findWrapping(range, nodeType, attrs)\n  if (!wrapping) return null\n\n  return tr.wrap(range, wrapping)\n}\n\nexport function addBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const node = nodeType.createAndFill(attrs)\n  if (!node) return null\n\n  return tr.replaceSelectionWith(node)\n}\n\nexport function clearContentAndSetBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    if (dispatch) {\n      const tr = setBlockType(clearRange(state.tr), nodeType, attrs)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n}\n\nexport function clearContentAndWrapInBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    const tr = wrapInBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr) return false\n\n    if (dispatch) dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n\nexport function clearContentAndAddBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    const tr = addBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr) return false\n\n    if (dispatch) dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n","import type { MenuItem, MenuItemGroup } from './utils'\n\nexport class GroupBuilder {\n  #groups: MenuItemGroup<false>[] = []\n\n  clear = () => {\n    this.#groups = []\n    return this\n  }\n\n  #getGroupInstance = (group: MenuItemGroup<false>) => {\n    const groupInstance = {\n      group,\n      addItem: (key: string, item: Omit<MenuItem, 'key' | 'index'>) => {\n        const data = { key, ...item }\n        group.items.push(data)\n        return groupInstance\n      },\n      clear: () => {\n        group.items = []\n        return groupInstance\n      },\n    }\n    return groupInstance\n  }\n\n  addGroup = (key: string, label: string) => {\n    const items: Omit<MenuItem, 'index'>[] = []\n    const group: MenuItemGroup<false> = {\n      key,\n      label,\n      items,\n    }\n    this.#groups.push(group)\n\n    return this.#getGroupInstance(group)\n  }\n\n  getGroup = (key: string) => {\n    const group = this.#groups.find((group) => group.key === key)\n    if (!group) throw new Error(`Group with key ${key} not found`)\n\n    return this.#getGroupInstance(group)\n  }\n\n  build = () => {\n    return this.#groups\n  }\n}\n","import { editorViewCtx } from '@milkdown-nota/kit/core'\nimport {\n  blockquoteSchema,\n  bulletListSchema,\n  codeBlockSchema,\n  headingSchema,\n  hrSchema,\n  listItemSchema,\n  orderedListSchema,\n  paragraphSchema,\n} from '@milkdown-nota/kit/preset/commonmark'\nimport { NodeSelection } from '@milkdown-nota/kit/prose/state'\nimport { imageBlockSchema } from '@milkdown-nota/kit/component/image-block'\nimport { createTable } from '@milkdown-nota/kit/preset/gfm'\nimport {\n  bulletListIcon,\n  codeIcon,\n  dividerIcon,\n  h1Icon,\n  h2Icon,\n  h3Icon,\n  h4Icon,\n  h5Icon,\n  h6Icon,\n  imageIcon,\n  orderedListIcon,\n  quoteIcon,\n  tableIcon,\n  textIcon,\n  todoListIcon,\n} from '../../../icons'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { MenuItemGroup } from './utils'\nimport {\n  clearContentAndAddBlockType,\n  clearContentAndSetBlockType,\n  clearContentAndWrapInBlockType,\n  clearRange,\n} from './utils'\nimport { GroupBuilder } from './group-builder'\n\nexport function getGroups(filter?: string, config?: BlockEditFeatureConfig) {\n  const groupBuilder = new GroupBuilder()\n  groupBuilder\n    .addGroup('text', config?.slashMenuTextGroupLabel ?? 'Text')\n    .addItem('text', {\n      label: config?.slashMenuTextGroupLabel ?? 'Text',\n      icon: config?.slashMenuTextIcon?.() ?? textIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(paragraphSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('h1', {\n      label: config?.slashMenuH1Label ?? 'Heading 1',\n      icon: config?.slashMenuH1Icon?.() ?? h1Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 1,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h2', {\n      label: config?.slashMenuH2Label ?? 'Heading 2',\n      icon: config?.slashMenuH2Icon?.() ?? h2Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 2,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h3', {\n      label: config?.slashMenuH3Label ?? 'Heading 3',\n      icon: config?.slashMenuH3Icon?.() ?? h3Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 3,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h4', {\n      label: config?.slashMenuH4Label ?? 'Heading 4',\n      icon: config?.slashMenuH4Icon?.() ?? h4Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 4,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h5', {\n      label: config?.slashMenuH5Label ?? 'Heading 5',\n      icon: config?.slashMenuH5Icon?.() ?? h5Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 5,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h6', {\n      label: config?.slashMenuH6Label ?? 'Heading 6',\n      icon: config?.slashMenuH6Icon?.() ?? h6Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 6,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('quote', {\n      label: config?.slashMenuQuoteLabel ?? 'Quote',\n      icon: config?.slashMenuQuoteIcon?.() ?? quoteIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          blockquoteSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('divider', {\n      label: config?.slashMenuDividerLabel ?? 'Divider',\n      icon: config?.slashMenuDividerIcon?.() ?? dividerIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(hrSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n\n  groupBuilder\n    .addGroup('list', config?.slashMenuListGroupLabel ?? 'List')\n    .addItem('bullet-list', {\n      label: config?.slashMenuBulletListLabel ?? 'Bullet List',\n      icon: config?.slashMenuBulletListIcon?.() ?? bulletListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          bulletListSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('ordered-list', {\n      label: config?.slashMenuOrderedListLabel ?? 'Ordered List',\n      icon: config?.slashMenuOrderedListIcon?.() ?? orderedListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          orderedListSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('todo-list', {\n      label: config?.slashMenuTaskListLabel ?? 'Todo List',\n      icon: config?.slashMenuTaskListIcon?.() ?? todoListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          listItemSchema.type(ctx),\n          { checked: false }\n        )\n        command(state, dispatch)\n      },\n    })\n\n  groupBuilder\n    .addGroup('advanced', config?.slashMenuAdvancedGroupLabel ?? 'Advanced')\n    .addItem('image', {\n      label: config?.slashMenuImageLabel ?? 'Image',\n      icon: config?.slashMenuImageIcon?.() ?? imageIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(imageBlockSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('code', {\n      label: config?.slashMenuCodeBlockLabel ?? 'Code',\n      icon: config?.slashMenuCodeBlockIcon?.() ?? codeIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(codeBlockSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('table', {\n      label: config?.slashMenuTableLabel ?? 'Table',\n      icon: config?.slashMenuTableIcon?.() ?? tableIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n        const tr = clearRange(state.tr)\n        const table = createTable(ctx, 3, 3)\n        tr.replaceSelectionWith(table)\n        const { from } = tr.selection\n        const pos = from - table.nodeSize + 2\n        dispatch(tr)\n        requestAnimationFrame(() => {\n          const selection = NodeSelection.create(view.state.tr.doc, pos)\n          dispatch(view.state.tr.setSelection(selection).scrollIntoView())\n        })\n      },\n    })\n\n  config?.buildMenu?.(groupBuilder)\n\n  let groups = groupBuilder.build()\n\n  if (filter) {\n    groups = groups\n      .map((group) => {\n        const items = group.items.filter((item) =>\n          item.label.toLowerCase().includes(filter.toLowerCase())\n        )\n\n        return {\n          ...group,\n          items,\n        }\n      })\n      .filter((group) => group.items.length > 0)\n  }\n\n  const items = groups.flatMap((groups) => groups.items)\n  items.forEach((item, index) => {\n    Object.assign(item, { index })\n  })\n\n  groups.reduce((acc, group) => {\n    const end = acc + group.items.length\n    Object.assign(group, {\n      range: [acc, end],\n    })\n    return end\n  }, 0)\n\n  return {\n    groups: groups as MenuItemGroup[],\n    size: items.length,\n  }\n}\n","import type { Component } from 'atomico'\nimport {\n  c,\n  html,\n  useCallback,\n  useEffect,\n  useHost,\n  useMemo,\n  useRef,\n  useState,\n} from 'atomico'\nimport type { Ctx } from '@milkdown-nota/kit/ctx'\nimport type { BlockEditFeatureConfig } from '../index'\nimport { getGroups } from './config'\n\nexport interface MenuProps {\n  ctx: Ctx\n  show: boolean\n  filter: string\n  hide: () => void\n  config?: BlockEditFeatureConfig\n}\n\nexport const menuComponent: Component<MenuProps> = ({\n  show,\n  hide,\n  ctx,\n  filter,\n  config,\n}) => {\n  const { groups, size } = useMemo(() => getGroups(filter, config), [filter])\n\n  const host = useHost()\n  const [hoverIndex, setHoverIndex] = useState(0)\n\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  const prevMousePosition = useRef({ x: -999, y: -999 })\n\n  const onMouseMove = useCallback((e: MouseEvent) => {\n    const prevPos = prevMousePosition.current\n    if (!prevPos) return\n\n    const { x, y } = e\n    prevPos.x = x\n    prevPos.y = y\n  }, [])\n\n  useEffect(() => {\n    if (size === 0 && show) hide?.()\n    else if (hoverIndex >= size) setHoverIndex(0)\n  }, [size, show])\n\n  const onHover = useCallback(\n    (\n      index: number | ((prev: number) => number),\n      after?: (index: number) => void\n    ) => {\n      setHoverIndex((prev) => {\n        const next = typeof index === 'function' ? index(prev) : index\n\n        after?.(next)\n        return next\n      })\n    },\n    []\n  )\n\n  const scrollToIndex = useCallback((index: number) => {\n    const target = host.current.querySelector<HTMLElement>(\n      `[data-index=\"${index}\"]`\n    )\n    const scrollRoot = host.current.querySelector<HTMLElement>('.menu-groups')\n\n    if (!target || !scrollRoot) return\n\n    scrollRoot.scrollTop = target.offsetTop - scrollRoot.offsetTop\n  }, [])\n\n  const runByIndex = useCallback(\n    (index: number) => {\n      const item = groups.flatMap((group) => group.items).at(index)\n      if (item && ctx) item.onRun(ctx)\n\n      hide?.()\n    },\n    [groups]\n  )\n\n  const onKeydown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        e.preventDefault()\n        hide?.()\n        return\n      }\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault()\n        return onHover(\n          (index) => (index < size - 1 ? index + 1 : index),\n          scrollToIndex\n        )\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault()\n        return onHover(\n          (index) => (index <= 0 ? index : index - 1),\n          scrollToIndex\n        )\n      }\n\n      if (e.key === 'ArrowLeft') {\n        e.preventDefault()\n        return onHover((index) => {\n          const group = groups.find(\n            (group) => group.range[0] <= index && group.range[1] > index\n          )\n          if (!group) return index\n\n          const prevGroup = groups[groups.indexOf(group) - 1]\n          if (!prevGroup) return index\n\n          return prevGroup.range[1] - 1\n        }, scrollToIndex)\n      }\n\n      if (e.key === 'ArrowRight') {\n        e.preventDefault()\n        return onHover((index) => {\n          const group = groups.find(\n            (group) => group.range[0] <= index && group.range[1] > index\n          )\n          if (!group) return index\n\n          const nextGroup = groups[groups.indexOf(group) + 1]\n          if (!nextGroup) return index\n\n          return nextGroup.range[0]\n        }, scrollToIndex)\n      }\n\n      if (e.key === 'Enter') {\n        e.preventDefault()\n        runByIndex(hoverIndex)\n      }\n    },\n    [hide, groups, hoverIndex]\n  )\n\n  const onMouseEnter = useCallback((index: number) => {\n    return (e: MouseEvent) => {\n      const prevPos = prevMousePosition.current\n      if (!prevPos) return\n\n      const { x, y } = e\n      if (x === prevPos.x && y === prevPos.y) return\n\n      onHover(index)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (show) root.addEventListener('keydown', onKeydown, { capture: true })\n    else root.removeEventListener('keydown', onKeydown, { capture: true })\n\n    return () => {\n      root.removeEventListener('keydown', onKeydown, { capture: true })\n    }\n  }, [show, onKeydown])\n\n  return html`\n    <host onmousedown=${(e: MouseEvent) => e.preventDefault()}>\n      <nav class=\"tab-group\">\n        <ul>\n          ${groups.map(\n            (group) =>\n              html`<li\n                key=${group.key}\n                onmousedown=${() => onHover(group.range[0], scrollToIndex)}\n                class=${hoverIndex >= group.range[0] &&\n                hoverIndex < group.range[1]\n                  ? 'selected'\n                  : ''}\n              >\n                ${group.label}\n              </li>`\n          )}\n        </ul>\n      </nav>\n      <div class=\"menu-groups\" onmousemove=${onMouseMove}>\n        ${groups.map((group) => {\n          return html`\n            <div key=${group.key} class=\"menu-group\">\n              <h6>${group.label}</h6>\n              <ul>\n                ${group.items.map(\n                  (item) =>\n                    html`<li\n                      key=${item.key}\n                      data-index=${item.index}\n                      class=${hoverIndex === item.index ? 'hover' : ''}\n                      onmouseenter=${onMouseEnter(item.index)}\n                      onmousedown=${() => {\n                        host.current\n                          .querySelector(`[data-index=\"${item.index}\"]`)\n                          ?.classList.add('active')\n                      }}\n                      onmouseup=${() => {\n                        host.current\n                          .querySelector(`[data-index=\"${item.index}\"]`)\n                          ?.classList.remove('active')\n                        runByIndex(item.index)\n                      }}\n                    >\n                      ${item.icon}\n                      <span>${item.label}</span>\n                    </li>`\n                )}\n              </ul>\n            </div>\n          `\n        })}\n      </div>\n    </host>\n  `\n}\n\nmenuComponent.props = {\n  ctx: Object,\n  config: Object,\n  show: Boolean,\n  filter: String,\n  hide: Function,\n}\n\nexport const MenuElement = c(menuComponent)\n","import type { PluginView } from '@milkdown-nota/kit/prose/state'\nimport type { EditorView } from '@milkdown-nota/kit/prose/view'\nimport { SlashProvider, slashFactory } from '@milkdown-nota/kit/plugin/slash'\nimport type { Ctx } from '@milkdown-nota/kit/ctx'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport { $ctx } from '@milkdown-nota/kit/utils'\nimport { defIfNotExists, isInCodeBlock, isInList } from '../../../utils'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { MenuProps } from './component'\nimport { MenuElement } from './component'\n\nexport const menu = slashFactory('CREPE_MENU')\n\nexport interface MenuAPI {\n  show: (pos: number) => void\n  hide: () => void\n}\n\nexport const menuAPI = $ctx(\n  {\n    show: () => {},\n    hide: () => {},\n  } as MenuAPI,\n  'menuAPICtx'\n)\n\ndefIfNotExists('milkdown-slash-menu', MenuElement)\nexport function configureMenu(ctx: Ctx, config?: BlockEditFeatureConfig) {\n  ctx.set(menu.key, {\n    view: (view) => new MenuView(ctx, view, config),\n  })\n}\n\nclass MenuView implements PluginView {\n  readonly #content: AtomicoThis<MenuProps, HTMLElement>\n  readonly #slashProvider: SlashProvider\n  #programmaticallyPos: number | null = null\n\n  constructor(ctx: Ctx, view: EditorView, config?: BlockEditFeatureConfig) {\n    this.#content = new MenuElement()\n    this.#content.hide = this.hide\n    this.#content.ctx = ctx\n    this.#content.config = config\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this\n    this.#slashProvider = new SlashProvider({\n      content: this.#content,\n      debounce: 20,\n      shouldShow(this: SlashProvider, view: EditorView) {\n        if (\n          isInCodeBlock(view.state.selection) ||\n          isInList(view.state.selection)\n        )\n          return false\n\n        const currentText = this.getContent(view, (node) =>\n          ['paragraph', 'heading'].includes(node.type.name)\n        )\n\n        if (currentText == null) return false\n\n        const pos = self.#programmaticallyPos\n\n        self.#content.filter = currentText.startsWith('/')\n          ? currentText.slice(1)\n          : currentText\n\n        if (typeof pos === 'number') {\n          if (\n            view.state.doc.resolve(pos).node() !==\n            view.state.doc.resolve(view.state.selection.from).node()\n          ) {\n            self.#programmaticallyPos = null\n\n            return false\n          }\n\n          return true\n        }\n\n        if (!currentText.startsWith('/')) return false\n\n        return true\n      },\n      offset: 10,\n    })\n\n    this.#slashProvider.onShow = () => {\n      this.#content.show = true\n    }\n    this.#slashProvider.onHide = () => {\n      this.#content.show = false\n    }\n    this.update(view)\n\n    ctx.set(menuAPI.key, {\n      show: (pos) => this.show(pos),\n      hide: () => this.hide(),\n    })\n  }\n\n  update = (view: EditorView) => {\n    this.#slashProvider.update(view)\n  }\n\n  show = (pos: number) => {\n    this.#programmaticallyPos = pos\n    this.#content.filter = ''\n    this.#slashProvider.show()\n  }\n\n  hide = () => {\n    this.#programmaticallyPos = null\n    this.#slashProvider.hide()\n  }\n\n  destroy = () => {\n    this.#slashProvider.destroy()\n    this.#content.remove()\n  }\n}\n","import { type Component, c, html, useEffect, useRef } from 'atomico'\nimport { menuIcon, plusIcon } from '../../../icons'\nimport type { Icon } from '../../shared'\n\nexport interface BlockHandleProps {\n  show: boolean\n  onAdd: () => void\n  addIcon: Icon\n  handleIcon: Icon\n}\n\nconst blockHandleComponent: Component<BlockHandleProps> = ({\n  onAdd,\n  addIcon,\n  handleIcon,\n}) => {\n  const ref = useRef<HTMLDivElement>()\n  useEffect(() => {\n    ref.current?.classList.remove('active')\n  })\n  const onMouseDown = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    ref.current?.classList.add('active')\n  }\n  const onMouseUp = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onAdd?.()\n    ref.current?.classList.remove('active')\n  }\n  return html`\n    <host>\n      <div\n        ref=${ref}\n        onmousedown=${onMouseDown}\n        onmouseup=${onMouseUp}\n        class=\"operation-item\"\n      >\n        ${addIcon?.() || plusIcon}\n      </div>\n      <div class=\"operation-item\">${handleIcon?.() || menuIcon}</div>\n    </host>\n  `\n}\n\nblockHandleComponent.props = {\n  show: Boolean,\n  onAdd: Function,\n  addIcon: Function,\n  handleIcon: Function,\n}\n\nexport const BlockHandleElement = c(blockHandleComponent)\n","import type { PluginView } from '@milkdown-nota/kit/prose/state'\nimport { TextSelection } from '@milkdown-nota/kit/prose/state'\nimport { BlockProvider, block, blockConfig } from '@milkdown-nota/kit/plugin/block'\nimport type { Ctx } from '@milkdown-nota/kit/ctx'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport { editorViewCtx } from '@milkdown-nota/kit/core'\nimport { paragraphSchema } from '@milkdown-nota/kit/preset/commonmark'\nimport { findParent } from '@milkdown-nota/kit/prose'\nimport { menuAPI } from '../menu'\nimport { defIfNotExists } from '../../../utils'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { BlockHandleProps } from './component'\nimport { BlockHandleElement } from './component'\n\nexport class BlockHandleView implements PluginView {\n  #content: AtomicoThis<BlockHandleProps>\n  #provider: BlockProvider\n  readonly #ctx: Ctx\n\n  constructor(ctx: Ctx, config?: BlockEditFeatureConfig) {\n    this.#ctx = ctx\n    const content = new BlockHandleElement()\n    this.#content = content\n    this.#content.onAdd = this.onAdd\n    if (config?.handleAddIcon) {\n      this.#content.addIcon = config?.handleAddIcon\n    }\n    if (config?.handleDragIcon) {\n      this.#content.handleIcon = config?.handleDragIcon\n    }\n    this.#provider = new BlockProvider({\n      ctx,\n      content,\n      getOffset: () => 16,\n      getPlacement: ({ active, blockDom }) => {\n        if (active.node.type.name === 'heading') return 'left'\n\n        let totalDescendant = 0\n        active.node.descendants((node) => {\n          totalDescendant += node.childCount\n        })\n        const dom = active.el\n        const domRect = dom.getBoundingClientRect()\n        const handleRect = blockDom.getBoundingClientRect()\n        const style = window.getComputedStyle(dom)\n        const paddingTop = Number.parseInt(style.paddingTop, 10) || 0\n        const paddingBottom = Number.parseInt(style.paddingBottom, 10) || 0\n        const height = domRect.height - paddingTop - paddingBottom\n        const handleHeight = handleRect.height\n        return totalDescendant > 2 || handleHeight < height\n          ? 'left-start'\n          : 'left'\n      },\n    })\n    this.update()\n  }\n\n  update = () => {\n    this.#provider.update()\n  }\n\n  destroy = () => {\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n\n  onAdd = () => {\n    const ctx = this.#ctx\n    const view = ctx.get(editorViewCtx)\n    if (!view.hasFocus()) view.focus()\n\n    const { state, dispatch } = view\n    const active = this.#provider.active\n    if (!active) return\n\n    const $pos = active.$pos\n    const pos = $pos.pos + active.node.nodeSize\n    let tr = state.tr.insert(pos, paragraphSchema.type(ctx).create())\n    tr = tr.setSelection(TextSelection.near(tr.doc.resolve(pos)))\n    dispatch(tr.scrollIntoView())\n\n    this.#provider.hide()\n    ctx.get(menuAPI.key).show(tr.selection.from)\n  }\n}\n\ndefIfNotExists('milkdown-block-handle', BlockHandleElement)\nexport function configureBlockHandle(\n  ctx: Ctx,\n  config?: BlockEditFeatureConfig\n) {\n  ctx.set(blockConfig.key, {\n    filterNodes: (pos) => {\n      const filter = findParent((node) =>\n        ['table', 'blockquote'].includes(node.type.name)\n      )(pos)\n      if (filter) return false\n\n      return true\n    },\n  })\n  ctx.set(block.key, {\n    view: () => new BlockHandleView(ctx, config),\n  })\n}\n","import { block } from '@milkdown-nota/kit/plugin/block'\nimport type { DefineFeature, Icon } from '../shared'\nimport { configureBlockHandle } from './handle'\nimport { configureMenu, menu, menuAPI } from './menu'\nimport type { GroupBuilder } from './menu/group-builder'\n\ninterface BlockEditConfig {\n  handleAddIcon: Icon\n  handleDragIcon: Icon\n  buildMenu: (builder: GroupBuilder) => void\n\n  slashMenuTextGroupLabel: string\n  slashMenuTextIcon: Icon\n  slashMenuTextLabel: string\n  slashMenuH1Icon: Icon\n  slashMenuH1Label: string\n  slashMenuH2Icon: Icon\n  slashMenuH2Label: string\n  slashMenuH3Icon: Icon\n  slashMenuH3Label: string\n  slashMenuH4Icon: Icon\n  slashMenuH4Label: string\n  slashMenuH5Icon: Icon\n  slashMenuH5Label: string\n  slashMenuH6Icon: Icon\n  slashMenuH6Label: string\n  slashMenuQuoteIcon: Icon\n  slashMenuQuoteLabel: string\n  slashMenuDividerIcon: Icon\n  slashMenuDividerLabel: string\n\n  slashMenuListGroupLabel: string\n  slashMenuBulletListIcon: Icon\n  slashMenuBulletListLabel: string\n  slashMenuOrderedListIcon: Icon\n  slashMenuOrderedListLabel: string\n  slashMenuTaskListIcon: Icon\n  slashMenuTaskListLabel: string\n\n  slashMenuAdvancedGroupLabel: string\n  slashMenuImageIcon: Icon\n  slashMenuImageLabel: string\n  slashMenuCodeBlockIcon: Icon\n  slashMenuCodeBlockLabel: string\n  slashMenuTableIcon: Icon\n  slashMenuTableLabel: string\n}\n\nexport type BlockEditFeatureConfig = Partial<BlockEditConfig>\n\nexport const defineFeature: DefineFeature<BlockEditFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => configureBlockHandle(ctx, config))\n    .config((ctx) => configureMenu(ctx, config))\n    .use(menuAPI)\n    .use(block)\n    .use(menu)\n}\n","import { $ctx, $prose } from '@milkdown-nota/kit/utils'\nimport type { EditorState } from '@milkdown-nota/kit/prose/state'\nimport { Plugin, PluginKey } from '@milkdown-nota/kit/prose/state'\nimport type { Node } from '@milkdown-nota/kit/prose/model'\nimport { Decoration, DecorationSet } from '@milkdown-nota/kit/prose/view'\nimport { findParent } from '@milkdown-nota/kit/prose'\nimport type { DefineFeature } from '../shared'\nimport { isInCodeBlock, isInList } from '../../utils'\n\nfunction isDocEmpty(doc: Node) {\n  return doc.childCount <= 1 && !doc.firstChild?.content.size\n}\n\nfunction createPlaceholderDecoration(\n  state: EditorState,\n  placeholderText: string\n): Decoration | null {\n  const { selection } = state\n  if (!selection.empty) return null\n\n  const $pos = selection.$anchor\n  const node = $pos.parent\n  if (node.content.size > 0) return null\n\n  const inTable = findParent((node) => node.type.name === 'table')($pos)\n  if (inTable) return null\n\n  const before = $pos.before()\n\n  return Decoration.node(before, before + node.nodeSize, {\n    class: 'crepe-placeholder',\n    'data-placeholder': placeholderText,\n  })\n}\n\ninterface PlaceholderConfig {\n  text: string\n  mode: 'doc' | 'block'\n}\n\nexport type PlaceHolderFeatureConfig = Partial<PlaceholderConfig>\n\nexport const placeholderConfig = $ctx(\n  {\n    text: 'Please enter...',\n    mode: 'block',\n  } as PlaceholderConfig,\n  'placeholderConfigCtx'\n)\n\nexport const placeholderPlugin = $prose((ctx) => {\n  return new Plugin({\n    key: new PluginKey('CREPE_PLACEHOLDER'),\n    props: {\n      decorations: (state) => {\n        const config = ctx.get(placeholderConfig.key)\n        if (config.mode === 'doc' && !isDocEmpty(state.doc)) return null\n\n        if (isInCodeBlock(state.selection) || isInList(state.selection))\n          return null\n\n        const placeholderText = config.text ?? 'Please enter...'\n        const deco = createPlaceholderDecoration(state, placeholderText)\n        if (!deco) return null\n\n        return DecorationSet.create(state.doc, [deco])\n      },\n    },\n  })\n})\n\nexport const defineFeature: DefineFeature<PlaceHolderFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => {\n      if (config) {\n        ctx.update(placeholderConfig.key, (prev) => {\n          return {\n            ...prev,\n            ...config,\n          }\n        })\n      }\n    })\n    .use(placeholderPlugin)\n    .use(placeholderConfig)\n}\n","import type { Component } from 'atomico'\nimport { c, html, useEffect, useUpdate } from 'atomico'\nimport type { Ctx } from '@milkdown-nota/kit/ctx'\nimport { commandsCtx, editorViewCtx } from '@milkdown-nota/kit/core'\nimport {\n  emphasisSchema,\n  inlineCodeSchema,\n  linkSchema,\n  strongSchema,\n  toggleEmphasisCommand,\n  toggleInlineCodeCommand,\n  toggleStrongCommand,\n} from '@milkdown-nota/kit/preset/commonmark'\nimport type { MarkType } from '@milkdown-nota/kit/prose/model'\nimport clsx from 'clsx'\nimport { linkTooltipAPI } from '@milkdown-nota/kit/component/link-tooltip'\nimport {\n  strikethroughSchema,\n  toggleStrikethroughCommand,\n} from '@milkdown-nota/kit/preset/gfm'\nimport {\n  boldIcon,\n  codeIcon,\n  italicIcon,\n  linkIcon,\n  strikethroughIcon,\n} from '../../icons'\nimport type { ToolbarFeatureConfig } from './index'\n\nexport interface ToolbarProps {\n  ctx: Ctx\n  hide: () => void\n  show: boolean\n  config?: ToolbarFeatureConfig\n}\n\nexport const toolbarComponent: Component<ToolbarProps> = ({\n  ctx,\n  hide,\n  show,\n  config,\n}) => {\n  const update = useUpdate()\n  useEffect(() => {\n    update()\n  }, [show])\n\n  const onClick = (fn: (ctx: Ctx) => void) => (e: MouseEvent) => {\n    e.preventDefault()\n    ctx && fn(ctx)\n    update()\n  }\n\n  const isActive = (mark: MarkType) => {\n    if (!ctx) return false\n    const view = ctx.get(editorViewCtx)\n    const {\n      state: { doc, selection },\n    } = view\n    return doc.rangeHasMark(selection.from, selection.to, mark)\n  }\n\n  return html`<host>\n    <button\n      type=\"button\"\n      class=${clsx(\n        'toolbar-item',\n        ctx && isActive(strongSchema.type(ctx)) && 'active'\n      )}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleStrongCommand.key)\n      })}\n    >\n      ${config?.boldIcon?.() ?? boldIcon}\n    </button>\n    <button\n      type=\"button\"\n      class=${clsx(\n        'toolbar-item',\n        ctx && isActive(emphasisSchema.type(ctx)) && 'active'\n      )}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleEmphasisCommand.key)\n      })}\n    >\n      ${config?.italicIcon?.() ?? italicIcon}\n    </button>\n    <button\n      type=\"button\"\n      class=${clsx(\n        'toolbar-item',\n        ctx && isActive(strikethroughSchema.type(ctx)) && 'active'\n      )}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleStrikethroughCommand.key)\n      })}\n    >\n      ${config?.strikethroughIcon?.() ?? strikethroughIcon}\n    </button>\n    <div class=\"divider\"></div>\n    <button\n      type=\"button\"\n      class=${clsx(\n        'toolbar-item',\n        ctx && isActive(inlineCodeSchema.type(ctx)) && 'active'\n      )}\n      onmousedown=${onClick((ctx) => {\n        const commands = ctx.get(commandsCtx)\n        commands.call(toggleInlineCodeCommand.key)\n      })}\n    >\n      ${config?.codeIcon?.() ?? codeIcon}\n    </button>\n    <button\n      type=\"button\"\n      class=${clsx(\n        'toolbar-item',\n        ctx && isActive(linkSchema.type(ctx)) && 'active'\n      )}\n      onmousedown=${onClick((ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { selection } = view.state\n\n        if (isActive(linkSchema.type(ctx))) {\n          ctx.get(linkTooltipAPI.key).removeLink(selection.from, selection.to)\n          return\n        }\n\n        ctx.get(linkTooltipAPI.key).addLink(selection.from, selection.to)\n        hide?.()\n      })}\n    >\n      ${config?.linkIcon?.() ?? linkIcon}\n    </button>\n  </host>`\n}\n\ntoolbarComponent.props = {\n  ctx: Object,\n  hide: Function,\n  show: Boolean,\n  config: Object,\n}\n\nexport const ToolbarElement = c(toolbarComponent)\n","import { TooltipProvider, tooltipFactory } from '@milkdown-nota/kit/plugin/tooltip'\nimport type { EditorState, PluginView } from '@milkdown-nota/kit/prose/state'\nimport { TextSelection } from '@milkdown-nota/kit/prose/state'\nimport type { Ctx } from '@milkdown-nota/kit/ctx'\nimport type { EditorView } from '@milkdown-nota/kit/prose/view'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport type { DefineFeature, Icon } from '../shared'\nimport { defIfNotExists } from '../../utils'\nimport type { ToolbarProps } from './component'\nimport { ToolbarElement } from './component'\n\ninterface ToolbarConfig {\n  boldIcon: Icon\n  codeIcon: Icon\n  italicIcon: Icon\n  linkIcon: Icon\n  strikethroughIcon: Icon\n}\n\nexport type ToolbarFeatureConfig = Partial<ToolbarConfig>\n\nconst toolbar = tooltipFactory('CREPE_TOOLBAR')\n\nclass ToolbarView implements PluginView {\n  #tooltipProvider: TooltipProvider\n  #content: AtomicoThis<ToolbarProps>\n  constructor(ctx: Ctx, view: EditorView, config?: ToolbarFeatureConfig) {\n    const content = new ToolbarElement()\n    this.#content = content\n    this.#content.ctx = ctx\n    this.#content.hide = this.hide\n    this.#content.config = config\n\n    this.#tooltipProvider = new TooltipProvider({\n      content: this.#content,\n      debounce: 20,\n      offset: 10,\n      shouldShow(view: EditorView) {\n        const { doc, selection } = view.state\n        const { empty, from, to } = selection\n\n        const isEmptyTextBlock =\n          !doc.textBetween(from, to).length &&\n          selection instanceof TextSelection\n\n        const isNotTextBlock = !(selection instanceof TextSelection)\n\n        const activeElement = (view.dom.getRootNode() as ShadowRoot | Document)\n          .activeElement\n        const isTooltipChildren = content.contains(activeElement)\n\n        const notHasFocus = !view.hasFocus() && !isTooltipChildren\n\n        const isReadonly = !view.editable\n\n        if (\n          notHasFocus ||\n          isNotTextBlock ||\n          empty ||\n          isEmptyTextBlock ||\n          isReadonly\n        )\n          return false\n\n        return true\n      },\n    })\n    this.#tooltipProvider.onShow = () => {\n      this.#content.show = true\n    }\n    this.#tooltipProvider.onHide = () => {\n      this.#content.show = false\n    }\n    this.update(view)\n  }\n\n  update = (view: EditorView, prevState?: EditorState) => {\n    this.#tooltipProvider.update(view, prevState)\n  }\n\n  destroy = () => {\n    this.#tooltipProvider.destroy()\n    this.#content.remove()\n  }\n\n  hide = () => {\n    this.#tooltipProvider.hide()\n  }\n}\n\ndefIfNotExists('milkdown-toolbar', ToolbarElement)\nexport const defineFeature: DefineFeature<ToolbarFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => {\n      ctx.set(toolbar.key, {\n        view: (view) => new ToolbarView(ctx, view, config),\n      })\n    })\n    .use(toolbar)\n}\n","import { $ctx } from '@milkdown/utils'\nimport type { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport type RenderType =\n  | 'add_row'\n  | 'add_col'\n  | 'delete_row'\n  | 'delete_col'\n  | 'align_col_left'\n  | 'align_col_center'\n  | 'align_col_right'\n  | 'col_drag_handle'\n  | 'row_drag_handle'\n\nexport interface TableBlockConfig {\n  renderButton: (\n    renderType: RenderType\n  ) => HTMLElement | ReturnType<typeof html> | string\n}\n\nconst defaultTableBlockConfig: TableBlockConfig = {\n  renderButton: (renderType) => {\n    switch (renderType) {\n      case 'add_row':\n        return '+'\n      case 'add_col':\n        return '+'\n      case 'delete_row':\n        return '-'\n      case 'delete_col':\n        return '-'\n      case 'align_col_left':\n        return 'left'\n      case 'align_col_center':\n        return 'center'\n      case 'align_col_right':\n        return 'right'\n      case 'col_drag_handle':\n        return '='\n      case 'row_drag_handle':\n        return '='\n    }\n  },\n}\n\nexport const tableBlockConfig = $ctx(\n  { ...defaultTableBlockConfig },\n  'tableBlockConfigCtx'\n)\n\nwithMeta(tableBlockConfig, {\n  displayName: 'Config<table-block>',\n  group: 'TableBlock',\n})\n","import type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { findParent } from '@milkdown/prose'\nimport type { Ref } from 'atomico'\nimport { editorViewCtx } from '@milkdown/core'\nimport { CellSelection } from '@milkdown/prose/tables'\nimport { findTable } from '@milkdown/preset-gfm'\nimport { computePosition } from '@floating-ui/dom'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { CellIndex, Refs } from './types'\n\nexport function findNodeIndex(parent: Node, child: Node) {\n  for (let i = 0; i < parent.childCount; i++) {\n    if (parent.child(i) === child) return i\n  }\n  return -1\n}\n\nexport function findPointerIndex(\n  event: PointerEvent,\n  view?: EditorView\n): CellIndex | undefined {\n  if (!view) return\n\n  try {\n    const posAtCoords = view.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    })\n    if (!posAtCoords) return\n    const pos = posAtCoords?.inside\n    if (pos == null || pos < 0) return\n\n    const $pos = view.state.doc.resolve(pos)\n    const node = view.state.doc.nodeAt(pos)\n    if (!node) return\n\n    const cellType = ['table_cell', 'table_header']\n    const rowType = ['table_row', 'table_header_row']\n\n    const cell = cellType.includes(node.type.name)\n      ? node\n      : findParent((node) => cellType.includes(node.type.name))($pos)?.node\n    const row = findParent((node) => rowType.includes(node.type.name))(\n      $pos\n    )?.node\n    const table = findParent((node) => node.type.name === 'table')($pos)?.node\n    if (!cell || !row || !table) return\n\n    const columnIndex = findNodeIndex(row, cell)\n    const rowIndex = findNodeIndex(table, row)\n\n    return [rowIndex, columnIndex]\n  } catch {\n    return undefined\n  }\n}\n\nexport function getRelatedDOM(\n  contentWrapperRef: Ref<HTMLDivElement>,\n  [rowIndex, columnIndex]: CellIndex\n) {\n  const content = contentWrapperRef.current\n  if (!content) return\n  const rows = content.querySelectorAll('tr')\n  const row = rows[rowIndex]\n  if (!row) return\n\n  const firstRow = rows[0]\n  if (!firstRow) return\n\n  const headerCol = firstRow.children[columnIndex]\n  if (!headerCol) return\n\n  const col = row.children[columnIndex]\n  if (!col) return\n\n  return {\n    row,\n    col,\n    headerCol,\n  }\n}\n\nexport function recoveryStateBetweenUpdate(refs: Refs, ctx?: Ctx, node?: Node) {\n  if (!ctx) return\n  if (!node) return\n  const { selection } = ctx.get(editorViewCtx).state\n  if (!(selection instanceof CellSelection)) return\n\n  const { $from } = selection\n  const table = findTable($from)\n  if (!table || table.node !== node) return\n\n  if (selection.isColSelection()) {\n    const { $head } = selection\n    const colIndex = $head.index($head.depth - 1)\n    computeColHandlePositionByIndex({\n      refs,\n      index: [0, colIndex],\n      before: (handleDOM) => {\n        handleDOM\n          .querySelector('.button-group')\n          ?.setAttribute('data-show', 'true')\n      },\n    })\n    return\n  }\n  if (selection.isRowSelection()) {\n    const { $head } = selection\n    const rowNode = findParent(\n      (node) =>\n        node.type.name === 'table_row' || node.type.name === 'table_header_row'\n    )($head)\n    if (!rowNode) return\n    const rowIndex = findNodeIndex(table.node, rowNode.node)\n    computeRowHandlePositionByIndex({\n      refs,\n      index: [rowIndex, 0],\n      before: (handleDOM) => {\n        if (rowIndex > 0)\n          handleDOM\n            .querySelector('.button-group')\n            ?.setAttribute('data-show', 'true')\n      },\n    })\n  }\n}\n\ninterface ComputeHandlePositionByIndexProps {\n  refs: Refs\n  index: CellIndex\n  before?: (handleDOM: HTMLDivElement) => void\n  after?: (handleDOM: HTMLDivElement) => void\n}\n\nexport function computeColHandlePositionByIndex({\n  refs,\n  index,\n  before,\n  after,\n}: ComputeHandlePositionByIndexProps) {\n  const { contentWrapperRef, colHandleRef, hoverIndex } = refs\n  const colHandle = colHandleRef.current\n  if (!colHandle) return\n\n  hoverIndex.current = index\n  const dom = getRelatedDOM(contentWrapperRef, index)\n  if (!dom) return\n  const { headerCol: col } = dom\n  colHandle.dataset.show = 'true'\n  if (before) before(colHandle)\n  computePosition(col, colHandle, { placement: 'top' }).then(({ x, y }) => {\n    Object.assign(colHandle.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n    })\n    if (after) after(colHandle)\n  })\n}\n\nexport function computeRowHandlePositionByIndex({\n  refs,\n  index,\n  before,\n  after,\n}: ComputeHandlePositionByIndexProps) {\n  const { contentWrapperRef, rowHandleRef, hoverIndex } = refs\n  const rowHandle = rowHandleRef.current\n  if (!rowHandle) return\n\n  hoverIndex.current = index\n  const dom = getRelatedDOM(contentWrapperRef, index)\n  if (!dom) return\n  const { row } = dom\n  rowHandle.dataset.show = 'true'\n  if (before) before(rowHandle)\n  computePosition(row, rowHandle, { placement: 'left' }).then(({ x, y }) => {\n    Object.assign(rowHandle.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n    })\n    if (after) after(rowHandle)\n  })\n}\n","import throttle from 'lodash.throttle'\nimport { computePosition, offset } from '@floating-ui/dom'\nimport { useEffect, useHost, useMemo } from 'atomico'\nimport { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport {\n  moveColCommand,\n  moveRowCommand,\n  selectColCommand,\n  selectRowCommand,\n} from '@milkdown/preset-gfm'\nimport type { Ctx } from '@milkdown/ctx'\nimport {\n  computeColHandlePositionByIndex,\n  computeRowHandlePositionByIndex,\n  getRelatedDOM,\n} from './utils'\nimport type { CellIndex, DragContext, Refs } from './types'\n\nfunction prepareDndContext(refs: Refs): DragContext | undefined {\n  const {\n    dragPreviewRef,\n    tableWrapperRef,\n    contentWrapperRef,\n    yLineHandleRef,\n    xLineHandleRef,\n    colHandleRef,\n    rowHandleRef,\n  } = refs\n\n  const preview = dragPreviewRef.current\n  if (!preview) return\n  const wrapper = tableWrapperRef.current\n  if (!wrapper) return\n  const content = contentWrapperRef.current\n  if (!content) return\n  const contentRoot = content.querySelector('tbody')\n  if (!contentRoot) return\n  const previewRoot = preview.querySelector('tbody')\n  if (!previewRoot) return\n  const yHandle = yLineHandleRef.current\n  if (!yHandle) return\n  const xHandle = xLineHandleRef.current\n  if (!xHandle) return\n  const colHandle = colHandleRef.current\n  if (!colHandle) return\n  const rowHandle = rowHandleRef.current\n  if (!rowHandle) return\n\n  const context = {\n    preview,\n    wrapper,\n    content,\n    contentRoot,\n    previewRoot,\n    yHandle,\n    xHandle,\n    colHandle,\n    rowHandle,\n  }\n\n  return context\n}\n\nfunction handleDrag(\n  refs: Refs,\n  event: DragEvent,\n  ctx: Ctx | undefined,\n  fn: (context: DragContext) => void\n) {\n  const view = ctx?.get(editorViewCtx)\n  if (!view?.editable) return\n\n  event.stopPropagation()\n  if (event.dataTransfer) event.dataTransfer.effectAllowed = 'move'\n\n  const context = prepareDndContext(refs)\n\n  if (!context) return\n\n  // This is to avoid a chrome bug:\n  // https://stackoverflow.com/questions/14203734/dragend-dragenter-and-dragleave-firing-off-immediately-when-i-drag\n  requestAnimationFrame(() => {\n    fn(context)\n  })\n}\n\nexport function createDragRowHandler(refs: Refs, ctx?: Ctx) {\n  return (event: DragEvent) => {\n    handleDrag(\n      refs,\n      event,\n      ctx,\n      ({\n        preview,\n        content,\n        previewRoot,\n        yHandle,\n        xHandle,\n        colHandle,\n        rowHandle,\n      }) => {\n        const { hoverIndex, dragInfo } = refs\n        xHandle.dataset.displayType = 'indicator'\n        yHandle.dataset.show = 'false'\n        colHandle.dataset.show = 'false'\n        rowHandle\n          .querySelector('.button-group')\n          ?.setAttribute('data-show', 'false')\n\n        const [rowIndex] = hoverIndex.current!\n\n        dragInfo.current = {\n          startCoords: [event.clientX, event.clientY],\n          startIndex: rowIndex,\n          endIndex: rowIndex,\n          type: 'row',\n        }\n        preview.dataset.direction = 'vertical'\n\n        const rows = content.querySelectorAll('tr')\n        while (previewRoot.firstChild)\n          previewRoot.removeChild(previewRoot.firstChild)\n\n        const row = rows[rowIndex]\n        if (!row) return\n\n        previewRoot.appendChild(row.cloneNode(true))\n        const height = row.getBoundingClientRect().height\n\n        const { width } = content\n          .querySelector('tbody')!\n          .getBoundingClientRect()\n        Object.assign(preview.style, {\n          width: `${width}px`,\n          height: `${height}px`,\n        })\n\n        preview.dataset.show = 'true'\n      }\n    )\n  }\n}\n\nexport function createDragColHandler(refs: Refs, ctx?: Ctx) {\n  return (event: DragEvent) => {\n    handleDrag(\n      refs,\n      event,\n      ctx,\n      ({\n        preview,\n        content,\n        previewRoot,\n        yHandle,\n        xHandle,\n        colHandle,\n        rowHandle,\n      }) => {\n        const { hoverIndex, dragInfo } = refs\n        xHandle.dataset.show = 'false'\n        yHandle.dataset.displayType = 'indicator'\n        rowHandle.dataset.show = 'false'\n        colHandle\n          .querySelector('.button-group')\n          ?.setAttribute('data-show', 'false')\n\n        const [_, colIndex] = hoverIndex.current!\n\n        dragInfo.current = {\n          startCoords: [event.clientX, event.clientY],\n          startIndex: colIndex,\n          endIndex: colIndex,\n          type: 'col',\n        }\n        preview.dataset.direction = 'horizontal'\n\n        const rows = content.querySelectorAll('tr')\n        while (previewRoot.firstChild)\n          previewRoot.removeChild(previewRoot.firstChild)\n\n        let width: number | undefined\n\n        Array.from(rows).forEach((row) => {\n          const col = row.children[colIndex]\n          if (!col) return\n\n          if (width === undefined) width = col.getBoundingClientRect().width\n\n          const tr = col.parentElement!.cloneNode(false)\n          const clone = col.cloneNode(true)\n          tr.appendChild(clone)\n          previewRoot.appendChild(tr)\n        })\n\n        const { height } = content\n          .querySelector('tbody')!\n          .getBoundingClientRect()\n        Object.assign(preview.style, {\n          width: `${width}px`,\n          height: `${height}px`,\n        })\n\n        preview.dataset.show = 'true'\n      }\n    )\n  }\n}\n\nexport function createDragOverHandler(refs: Refs): (e: DragEvent) => void {\n  return throttle((e: DragEvent) => {\n    const context = prepareDndContext(refs)\n    if (!context) return\n    const { preview, content, contentRoot, xHandle, yHandle } = context\n    const { dragInfo, hoverIndex } = refs\n\n    if (preview.dataset.show === 'false') return\n    const dom = getRelatedDOM(refs.contentWrapperRef, hoverIndex.current!)\n    if (!dom) return\n    const firstRow = contentRoot.querySelector('tr')\n    if (!firstRow) return\n    const info = dragInfo.current\n    if (!info) return\n\n    const wrapperOffsetTop = (contentRoot.offsetParent as HTMLElement).offsetTop\n    const wrapperOffsetLeft = (contentRoot.offsetParent as HTMLElement)\n      .offsetLeft\n\n    if (info.type === 'col') {\n      const width = dom.col.getBoundingClientRect().width\n      const { left, width: fullWidth } = contentRoot.getBoundingClientRect()\n      const leftGap = wrapperOffsetLeft - left\n      const previewLeft = e.clientX + leftGap - width / 2\n      const previewRight = e.clientX + leftGap + width / 2\n\n      const [startX] = info.startCoords\n      const direction = startX < e.clientX ? 'right' : 'left'\n\n      preview.style.top = `${wrapperOffsetTop}px`\n      const previewLeftOffset =\n        previewLeft < left + leftGap - 20\n          ? left + leftGap - 20\n          : previewLeft > left + fullWidth + leftGap - width + 20\n            ? left + fullWidth + leftGap - width + 20\n            : previewLeft\n\n      preview.style.left = `${previewLeftOffset}px`\n\n      const children = Array.from(firstRow.children)\n      const col = children.find((col, index) => {\n        const boundary = col.getBoundingClientRect()\n        let boundaryLeft = boundary.left + wrapperOffsetLeft - left\n        let boundaryRight = boundary.right + wrapperOffsetLeft - left\n        if (direction === 'right') {\n          boundaryLeft = boundaryLeft + boundary.width / 2\n          boundaryRight = boundaryRight + boundary.width / 2\n          if (boundaryLeft <= previewRight && boundaryRight >= previewRight)\n            return true\n          if (\n            index === firstRow.children.length - 1 &&\n            previewRight > boundaryRight\n          )\n            return true\n        } else {\n          boundaryLeft = boundaryLeft - boundary.width / 2\n          boundaryRight = boundaryRight - boundary.width / 2\n          if (boundaryLeft <= previewLeft && boundaryRight >= previewLeft)\n            return true\n          if (index === 0 && previewLeft < boundaryLeft) return true\n        }\n\n        return false\n      })\n      if (col) {\n        const yHandleWidth = yHandle.getBoundingClientRect().width\n        const contentBoundary = content.getBoundingClientRect()\n        const index = children.indexOf(col)\n        info.endIndex = index\n\n        computePosition(col, yHandle, {\n          placement: direction === 'left' ? 'left' : 'right',\n          middleware: [offset(direction === 'left' ? -1 * yHandleWidth : 0)],\n        }).then(({ x }) => {\n          yHandle.dataset.show = 'true'\n          Object.assign(yHandle.style, {\n            height: `${contentBoundary.height}px`,\n            left: `${x}px`,\n            top: `${wrapperOffsetTop}px`,\n          })\n        })\n      }\n    } else if (info.type === 'row') {\n      const height = dom.row.getBoundingClientRect().height\n      const { top, height: fullHeight } = contentRoot.getBoundingClientRect()\n\n      const topGap = wrapperOffsetTop - top\n      const previewTop = e.clientY + topGap - height / 2\n      const previewBottom = e.clientY + topGap + height / 2\n\n      const [_, startY] = info.startCoords\n      const direction = startY < e.clientY ? 'down' : 'up'\n\n      const previewTopOffset =\n        previewTop < top + topGap - 20\n          ? top + topGap - 20\n          : previewTop > top + fullHeight + topGap - height + 20\n            ? top + fullHeight + topGap - height + 20\n            : previewTop\n\n      preview.style.top = `${previewTopOffset}px`\n      preview.style.left = `${wrapperOffsetLeft}px`\n\n      const rows = Array.from(contentRoot.querySelectorAll('tr'))\n      const row = rows.find((row, index) => {\n        const boundary = row.getBoundingClientRect()\n        let boundaryTop = boundary.top + wrapperOffsetTop - top\n        let boundaryBottom = boundary.bottom + wrapperOffsetTop - top\n        if (direction === 'down') {\n          boundaryTop = boundaryTop + boundary.height / 2\n          boundaryBottom = boundaryBottom + boundary.height / 2\n          if (boundaryTop <= previewBottom && boundaryBottom >= previewBottom)\n            return true\n          if (index === rows.length - 1 && previewBottom > boundaryBottom)\n            return true\n        } else {\n          boundaryTop = boundaryTop - boundary.height / 2\n          boundaryBottom = boundaryBottom - boundary.height / 2\n          if (boundaryTop <= previewTop && boundaryBottom >= previewTop)\n            return true\n          if (index === 0 && previewTop < boundaryTop) return true\n        }\n        return false\n      })\n      if (row) {\n        const xHandleHeight = xHandle.getBoundingClientRect().height\n        const contentBoundary = content.getBoundingClientRect()\n        const index = rows.indexOf(row)\n        info.endIndex = index\n\n        computePosition(row, xHandle, {\n          placement: direction === 'up' ? 'top' : 'bottom',\n          middleware: [offset(direction === 'up' ? -1 * xHandleHeight : 0)],\n        }).then(({ y }) => {\n          xHandle.dataset.show = 'true'\n          Object.assign(xHandle.style, {\n            width: `${contentBoundary.width}px`,\n            top: `${y}px`,\n          })\n        })\n      }\n    }\n  }, 20)\n}\n\nexport function useDragHandlers(\n  refs: Refs,\n  ctx?: Ctx,\n  getPos?: () => number | undefined\n) {\n  const { dragPreviewRef, yLineHandleRef, xLineHandleRef, dragInfo } = refs\n  const host = useHost()\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  const dragRow = useMemo(() => createDragRowHandler(refs, ctx), [refs])\n  const dragCol = useMemo(() => createDragColHandler(refs, ctx), [refs])\n\n  useEffect(() => {\n    const onDragEnd = () => {\n      const preview = dragPreviewRef.current\n      if (!preview) return\n\n      if (preview.dataset.show === 'false') return\n\n      const previewRoot = preview?.querySelector('tbody')\n\n      while (previewRoot?.firstChild)\n        previewRoot?.removeChild(previewRoot.firstChild)\n\n      if (preview) preview.dataset.show = 'false'\n    }\n\n    const onDrop = () => {\n      const preview = dragPreviewRef.current\n      if (!preview) return\n      const yHandle = yLineHandleRef.current\n      if (!yHandle) return\n      const xHandle = xLineHandleRef.current\n      if (!xHandle) return\n      const info = dragInfo.current\n      if (!info) return\n      if (!ctx) return\n      if (preview.dataset.show === 'false') return\n      const colHandle = refs.colHandleRef.current\n      if (!colHandle) return\n      const rowHandle = refs.rowHandleRef.current\n      if (!rowHandle) return\n\n      yHandle.dataset.show = 'false'\n      xHandle.dataset.show = 'false'\n\n      if (info.startIndex === info.endIndex) return\n\n      const commands = ctx.get(commandsCtx)\n      const payload = {\n        from: info.startIndex,\n        to: info.endIndex,\n        pos: (getPos?.() ?? 0) + 1,\n      }\n      if (info.type === 'col') {\n        commands.call(selectColCommand.key, {\n          pos: payload.pos,\n          index: info.startIndex,\n        })\n        commands.call(moveColCommand.key, payload)\n        const index: CellIndex = [0, info.endIndex]\n        computeColHandlePositionByIndex({\n          refs,\n          index,\n        })\n      } else {\n        commands.call(selectRowCommand.key, {\n          pos: payload.pos,\n          index: info.startIndex,\n        })\n        commands.call(moveRowCommand.key, payload)\n        const index: CellIndex = [info.endIndex, 0]\n        computeRowHandlePositionByIndex({\n          refs,\n          index,\n        })\n      }\n\n      requestAnimationFrame(() => {\n        ctx.get(editorViewCtx).focus()\n      })\n    }\n    const onDragOver = createDragOverHandler(refs)\n\n    root.addEventListener('dragover', onDragOver)\n    root.addEventListener('dragend', onDragEnd)\n    root.addEventListener('drop', onDrop)\n    return () => {\n      root.removeEventListener('dragover', onDragOver)\n      root.removeEventListener('dragend', onDragEnd)\n      root.removeEventListener('drop', onDrop)\n    }\n  }, [])\n\n  return {\n    dragRow,\n    dragCol,\n  }\n}\n","import { computePosition, offset } from '@floating-ui/dom'\nimport type { EditorView } from '@milkdown/prose/view'\nimport throttle from 'lodash.throttle'\nimport { useMemo } from 'atomico'\nimport type { Refs } from './types'\nimport {\n  computeColHandlePositionByIndex,\n  computeRowHandlePositionByIndex,\n  findPointerIndex,\n  getRelatedDOM,\n} from './utils'\n\nexport function createPointerMoveHandler(\n  refs: Refs,\n  view?: EditorView\n): (e: PointerEvent) => void {\n  return throttle((e: PointerEvent) => {\n    if (!view?.editable) return\n    const {\n      contentWrapperRef,\n      yLineHandleRef,\n      xLineHandleRef,\n      colHandleRef,\n      rowHandleRef,\n      hoverIndex,\n      lineHoverIndex,\n    } = refs\n    const yHandle = yLineHandleRef.current\n    if (!yHandle) return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle) return\n    const content = contentWrapperRef.current\n    if (!content) return\n    const rowHandle = rowHandleRef.current\n    if (!rowHandle) return\n    const colHandle = colHandleRef.current\n    if (!colHandle) return\n\n    const index = findPointerIndex(e, view)\n    if (!index) return\n\n    const dom = getRelatedDOM(contentWrapperRef, index)\n    if (!dom) return\n\n    const [rowIndex, colIndex] = index\n    const boundary = dom.col.getBoundingClientRect()\n    const closeToBoundaryLeft = Math.abs(e.clientX - boundary.left) < 8\n    const closeToBoundaryRight = Math.abs(boundary.right - e.clientX) < 8\n    const closeToBoundaryTop = Math.abs(e.clientY - boundary.top) < 8\n    const closeToBoundaryBottom = Math.abs(boundary.bottom - e.clientY) < 8\n\n    const closeToBoundary =\n      closeToBoundaryLeft ||\n      closeToBoundaryRight ||\n      closeToBoundaryTop ||\n      closeToBoundaryBottom\n\n    const rowButtonGroup = rowHandle.querySelector<HTMLElement>('.button-group')\n    const colButtonGroup = colHandle.querySelector<HTMLElement>('.button-group')\n    if (rowButtonGroup) rowButtonGroup.dataset.show = 'false'\n    if (colButtonGroup) colButtonGroup.dataset.show = 'false'\n\n    if (closeToBoundary) {\n      const contentBoundary = content.getBoundingClientRect()\n      rowHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      xHandle.dataset.displayType = 'tool'\n      yHandle.dataset.displayType = 'tool'\n\n      const yHandleWidth = yHandle.getBoundingClientRect().width\n      const xHandleHeight = xHandle.getBoundingClientRect().height\n\n      // display vertical line handle\n      if (closeToBoundaryLeft || closeToBoundaryRight) {\n        lineHoverIndex.current![1] = closeToBoundaryLeft\n          ? colIndex\n          : colIndex + 1\n        computePosition(dom.col, yHandle, {\n          placement: closeToBoundaryLeft ? 'left' : 'right',\n          middleware: [offset(closeToBoundaryLeft ? -1 * yHandleWidth : 0)],\n        }).then(({ x }) => {\n          yHandle.dataset.show = 'true'\n          Object.assign(yHandle.style, {\n            height: `${contentBoundary.height}px`,\n            left: `${x}px`,\n          })\n        })\n      } else {\n        yHandle.dataset.show = 'false'\n      }\n\n      // display horizontal line handle\n      // won't display if the row is the header row\n      if (index[0] !== 0 && (closeToBoundaryTop || closeToBoundaryBottom)) {\n        lineHoverIndex.current![0] = closeToBoundaryTop\n          ? rowIndex\n          : rowIndex + 1\n        computePosition(dom.row, xHandle, {\n          placement: closeToBoundaryTop ? 'top' : 'bottom',\n          middleware: [offset(closeToBoundaryTop ? -1 * xHandleHeight : 0)],\n        }).then(({ y }) => {\n          xHandle.dataset.show = 'true'\n          Object.assign(xHandle.style, {\n            width: `${contentBoundary.width}px`,\n            top: `${y}px`,\n          })\n        })\n      } else {\n        xHandle.dataset.show = 'false'\n      }\n\n      return\n    }\n\n    lineHoverIndex.current = [-1, -1]\n\n    yHandle.dataset.show = 'false'\n    xHandle.dataset.show = 'false'\n    rowHandle.dataset.show = 'true'\n    colHandle.dataset.show = 'true'\n\n    computeRowHandlePositionByIndex({\n      refs,\n      index,\n    })\n    computeColHandlePositionByIndex({\n      refs,\n      index,\n    })\n    hoverIndex.current = index\n  }, 20)\n}\n\nexport function createPointerLeaveHandler(refs: Refs): () => void {\n  return () => {\n    const { rowHandleRef, colHandleRef, yLineHandleRef, xLineHandleRef } = refs\n    setTimeout(() => {\n      const rowHandle = rowHandleRef.current\n      if (!rowHandle) return\n      const colHandle = colHandleRef.current\n      if (!colHandle) return\n      const yHandle = yLineHandleRef.current\n      if (!yHandle) return\n      const xHandle = xLineHandleRef.current\n      if (!xHandle) return\n\n      rowHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      yHandle.dataset.show = 'false'\n      xHandle.dataset.show = 'false'\n    }, 200)\n  }\n}\n\nexport function usePointerHandlers(refs: Refs, view?: EditorView) {\n  const pointerMove = useMemo(() => createPointerMoveHandler(refs, view), [])\n  const pointerLeave = useMemo(() => createPointerLeaveHandler(refs), [])\n\n  return {\n    pointerMove,\n    pointerLeave,\n  }\n}\n","import { useCallback } from 'atomico'\nimport { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport {\n  addColAfterCommand,\n  addColBeforeCommand,\n  addRowAfterCommand,\n  addRowBeforeCommand,\n  deleteSelectedCellsCommand,\n  selectColCommand,\n  selectRowCommand,\n  setAlignCommand,\n} from '@milkdown/preset-gfm'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { Refs } from './types'\n\nexport function useOperation(\n  refs: Refs,\n  ctx?: Ctx,\n  getPos?: () => number | undefined\n) {\n  const {\n    xLineHandleRef,\n    contentWrapperRef,\n    colHandleRef,\n    rowHandleRef,\n    hoverIndex,\n    lineHoverIndex,\n  } = refs\n\n  const onAddRow = useCallback(() => {\n    if (!ctx) return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle) return\n\n    const [rowIndex] = lineHoverIndex.current!\n    if (rowIndex < 0) return\n\n    if (!ctx.get(editorViewCtx).editable) return\n\n    const rows = Array.from(\n      contentWrapperRef.current?.querySelectorAll('tr') ?? []\n    )\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    if (rows.length === rowIndex) {\n      commands.call(selectRowCommand.key, { pos, index: rowIndex - 1 })\n      commands.call(addRowAfterCommand.key)\n    } else {\n      commands.call(selectRowCommand.key, { pos, index: rowIndex })\n      commands.call(addRowBeforeCommand.key)\n    }\n\n    commands.call(selectRowCommand.key, { pos, index: rowIndex })\n    xHandle.dataset.show = 'false'\n  }, [])\n\n  const onAddCol = useCallback(() => {\n    if (!ctx) return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle) return\n\n    const [_, colIndex] = lineHoverIndex.current!\n    if (colIndex < 0) return\n\n    if (!ctx.get(editorViewCtx).editable) return\n\n    const cols = Array.from(\n      contentWrapperRef.current?.querySelector('tr')?.children ?? []\n    )\n    const commands = ctx.get(commandsCtx)\n\n    const pos = (getPos?.() ?? 0) + 1\n    if (cols.length === colIndex) {\n      commands.call(selectColCommand.key, { pos, index: colIndex - 1 })\n      commands.call(addColAfterCommand.key)\n    } else {\n      commands.call(selectColCommand.key, { pos, index: colIndex })\n      commands.call(addColBeforeCommand.key)\n    }\n\n    commands.call(selectColCommand.key, { pos, index: colIndex })\n  }, [])\n\n  const selectCol = useCallback(() => {\n    if (!ctx) return\n    const [_, colIndex] = hoverIndex.current!\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    commands.call(selectColCommand.key, { pos, index: colIndex })\n    const buttonGroup =\n      colHandleRef.current?.querySelector<HTMLElement>('.button-group')\n    if (buttonGroup)\n      buttonGroup.dataset.show =\n        buttonGroup.dataset.show === 'true' ? 'false' : 'true'\n  }, [])\n\n  const selectRow = useCallback(() => {\n    if (!ctx) return\n    const [rowIndex, _] = hoverIndex.current!\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    commands.call(selectRowCommand.key, { pos, index: rowIndex })\n    const buttonGroup =\n      rowHandleRef.current?.querySelector<HTMLElement>('.button-group')\n    if (buttonGroup && rowIndex > 0)\n      buttonGroup.dataset.show =\n        buttonGroup.dataset.show === 'true' ? 'false' : 'true'\n  }, [])\n\n  const deleteSelected = useCallback((e: PointerEvent) => {\n    if (!ctx) return\n\n    if (!ctx.get(editorViewCtx).editable) return\n\n    e.preventDefault()\n    e.stopPropagation()\n    const commands = ctx.get(commandsCtx)\n    commands.call(deleteSelectedCellsCommand.key)\n    requestAnimationFrame(() => {\n      ctx.get(editorViewCtx).focus()\n    })\n  }, [])\n\n  const onAlign = useCallback(\n    (direction: 'left' | 'center' | 'right') => (e: PointerEvent) => {\n      if (!ctx) return\n\n      if (!ctx.get(editorViewCtx).editable) return\n\n      e.preventDefault()\n      e.stopPropagation()\n      const commands = ctx.get(commandsCtx)\n      commands.call(setAlignCommand.key, direction)\n      requestAnimationFrame(() => {\n        ctx.get(editorViewCtx).focus()\n      })\n    },\n    []\n  )\n\n  return {\n    onAddRow,\n    onAddCol,\n    selectCol,\n    selectRow,\n    deleteSelected,\n    onAlign,\n  }\n}\n","import type { Component } from 'atomico'\nimport { c, html, useHost, useLayoutEffect, useMemo, useRef } from 'atomico'\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport type { Ctx } from '@milkdown/ctx'\n\nimport clsx from 'clsx'\nimport type { TableBlockConfig } from '../config'\nimport { useDragHandlers } from './drag'\nimport type { CellIndex, DragInfo, Refs } from './types'\nimport { recoveryStateBetweenUpdate } from './utils'\nimport { usePointerHandlers } from './pointer'\nimport { useOperation } from './operation'\n\nexport interface TableComponentProps {\n  view: EditorView\n  ctx: Ctx\n  getPos: () => number | undefined\n  node: Node\n  config: TableBlockConfig\n}\n\nexport const tableComponent: Component<TableComponentProps> = ({\n  view,\n  ctx,\n  getPos,\n  node,\n  config,\n}) => {\n  const host = useHost()\n  const contentWrapperRef = useRef<HTMLDivElement>()\n  const colHandleRef = useRef<HTMLDivElement>()\n  const rowHandleRef = useRef<HTMLDivElement>()\n  const xLineHandleRef = useRef<HTMLDivElement>()\n  const yLineHandleRef = useRef<HTMLDivElement>()\n  const tableWrapperRef = useRef<HTMLDivElement>()\n  const dragPreviewRef = useRef<HTMLDivElement>()\n  const hoverIndex = useRef<CellIndex>([0, 0])\n  const lineHoverIndex = useRef<CellIndex>([-1, -1])\n  const dragInfo = useRef<DragInfo>()\n  const refs: Refs = useMemo(() => {\n    return {\n      dragPreviewRef,\n      tableWrapperRef,\n      contentWrapperRef,\n      yLineHandleRef,\n      xLineHandleRef,\n      colHandleRef,\n      rowHandleRef,\n      hoverIndex,\n      lineHoverIndex,\n      dragInfo,\n    }\n  }, [])\n\n  useLayoutEffect(() => {\n    const current = contentWrapperRef.current\n    if (!current) return\n\n    const contentDOM = host.current.querySelector('[data-content-dom]')\n\n    if (contentDOM) current.appendChild(contentDOM)\n\n    if (view?.editable) recoveryStateBetweenUpdate(refs, ctx, node)\n  }, [])\n\n  const { pointerLeave, pointerMove } = usePointerHandlers(refs, view)\n  const { dragRow, dragCol } = useDragHandlers(refs, ctx, getPos)\n  const { onAddRow, onAddCol, selectCol, selectRow, deleteSelected, onAlign } =\n    useOperation(refs, ctx, getPos)\n\n  return html`\n    <host\n      class=${clsx(!view?.editable && 'readonly')}\n      ondragstart=${(e: DragEvent) => e.preventDefault()}\n      ondragover=${(e: DragEvent) => e.preventDefault()}\n      ondragleave=${(e: DragEvent) => e.preventDefault()}\n      onpointermove=${pointerMove}\n      onpointerleave=${pointerLeave}\n    >\n      <button\n        type=\"button\"\n        data-show=\"false\"\n        contenteditable=\"false\"\n        draggable=\"true\"\n        data-role=\"col-drag-handle\"\n        class=\"handle cell-handle\"\n        ondragstart=${dragCol}\n        onclick=${selectCol}\n        onpointerdown=${(e: PointerEvent) => e.stopPropagation()}\n        onpointermove=${(e: PointerEvent) => e.stopPropagation()}\n        ref=${colHandleRef}\n      >\n        ${config?.renderButton('col_drag_handle')}\n        <div\n          data-show=\"false\"\n          class=\"button-group\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n        >\n          <button type=\"button\" onpointerdown=${onAlign('left')}>\n            ${config?.renderButton('align_col_left')}\n          </button>\n          <button type=\"button\" onpointerdown=${onAlign('center')}>\n            ${config?.renderButton('align_col_center')}\n          </button>\n          <button type=\"button\" onpointerdown=${onAlign('right')}>\n            ${config?.renderButton('align_col_right')}\n          </button>\n          <button type=\"button\" onpointerdown=${deleteSelected}>\n            ${config?.renderButton('delete_col')}\n          </button>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        data-show=\"false\"\n        contenteditable=\"false\"\n        draggable=\"true\"\n        data-role=\"row-drag-handle\"\n        class=\"handle cell-handle\"\n        ondragstart=${dragRow}\n        onclick=${selectRow}\n        onpointerdown=${(e: PointerEvent) => e.stopPropagation()}\n        onpointermove=${(e: PointerEvent) => e.stopPropagation()}\n        ref=${rowHandleRef}\n      >\n        ${config?.renderButton('row_drag_handle')}\n        <div\n          data-show=\"false\"\n          class=\"button-group\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n        >\n          <button type=\"button\" onpointerdown=${deleteSelected}>\n            ${config?.renderButton('delete_row')}\n          </button>\n        </div>\n      </button>\n      <div class=\"table-wrapper\" ref=${tableWrapperRef}>\n        <div\n          data-show=\"false\"\n          class=\"drag-preview\"\n          data-direction=\"vertical\"\n          ref=${dragPreviewRef}\n        >\n          <table>\n            <tbody></tbody>\n          </table>\n        </div>\n        <div\n          data-show=\"false\"\n          contenteditable=\"false\"\n          data-display-type=\"tool\"\n          data-role=\"x-line-drag-handle\"\n          class=\"handle line-handle\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n          ref=${xLineHandleRef}\n        >\n          <button type=\"button\" onclick=${onAddRow} class=\"add-button\">\n            ${config?.renderButton('add_row')}\n          </button>\n        </div>\n        <div\n          data-show=\"false\"\n          contenteditable=\"false\"\n          data-display-type=\"tool\"\n          data-role=\"y-line-drag-handle\"\n          class=\"handle line-handle\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n          ref=${yLineHandleRef}\n        >\n          <button type=\"button\" onclick=${onAddCol} class=\"add-button\">\n            ${config?.renderButton('add_col')}\n          </button>\n        </div>\n        <table ref=${contentWrapperRef} class=\"children\"></table>\n      </div>\n    </host>\n  `\n}\n\ntableComponent.props = {\n  getPos: Function,\n  view: Object,\n  ctx: Object,\n  node: Object,\n  config: Object,\n}\n\nexport const TableElement = c(tableComponent)\n","import { $view } from '@milkdown/utils'\nimport { tableSchema } from '@milkdown/preset-gfm'\nimport type { Node } from '@milkdown/prose/model'\nimport type {\n  EditorView,\n  NodeView,\n  NodeViewConstructor,\n} from '@milkdown/prose/view'\nimport type { Ctx } from '@milkdown/ctx'\nimport { NodeSelection } from '@milkdown/prose/state'\nimport { findParent } from '@milkdown/prose'\nimport { CellSelection } from '@milkdown/prose/tables'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { tableBlockConfig } from '../config'\nimport { withMeta } from '../../__internal__/meta'\nimport type { TableComponentProps } from './component'\nimport { TableElement } from './component'\n\nexport class TableNodeView implements NodeView {\n  dom: HTMLElement & TableComponentProps\n  contentDOM: HTMLElement\n  constructor(\n    public ctx: Ctx,\n    public node: Node,\n    public view: EditorView,\n    public getPos: () => number | undefined\n  ) {\n    const dom = document.createElement('milkdown-table-block') as HTMLElement &\n      TableComponentProps\n    this.dom = dom\n    dom.view = view\n    dom.ctx = ctx\n    dom.getPos = getPos\n    dom.node = node\n    dom.config = ctx.get(tableBlockConfig.key)\n\n    const contentDOM = document.createElement('tbody')\n    this.contentDOM = contentDOM\n    contentDOM.setAttribute('data-content-dom', 'true')\n    contentDOM.classList.add('content-dom')\n\n    dom.appendChild(contentDOM)\n  }\n\n  update(node: Node) {\n    if (node.type !== this.node.type) return false\n\n    if (node.sameMarkup(this.node) && node.content.eq(this.node.content))\n      return false\n\n    this.node = node\n    this.dom.node = node\n\n    return true\n  }\n\n  #handleClick(event: PointerEvent) {\n    const view = this.view\n    if (!view.editable) return false\n\n    const { state, dispatch } = view\n    const pos = view.posAtCoords({ left: event.clientX, top: event.clientY })\n\n    if (!pos) return false\n\n    const $pos = state.doc.resolve(pos.inside)\n    const node = findParent(\n      (node) =>\n        node.type.name === 'table_cell' || node.type.name === 'table_header'\n    )($pos)\n    if (!node) return false\n\n    const { from } = node\n\n    const selection = NodeSelection.create(state.doc, from + 1)\n    if (state.selection.eq(selection)) return false\n\n    if (state.selection instanceof CellSelection) {\n      setTimeout(() => {\n        dispatch(state.tr.setSelection(selection).scrollIntoView())\n      }, 20)\n    } else {\n      requestAnimationFrame(() => {\n        dispatch(state.tr.setSelection(selection).scrollIntoView())\n      })\n    }\n    return true\n  }\n\n  stopEvent(e: Event) {\n    if (e.type === 'drop' || e.type.startsWith('drag')) return true\n\n    if (e.type === 'mousedown') {\n      if (e.target instanceof HTMLButtonElement) return true\n\n      const target = e.target\n      if (\n        target instanceof HTMLElement &&\n        (target.closest('th') || target.closest('td'))\n      ) {\n        const event = e as PointerEvent\n        return this.#handleClick(event)\n      }\n    }\n\n    return false\n  }\n\n  ignoreMutation(mutation: MutationRecord) {\n    if (!this.dom || !this.contentDOM) return true\n\n    if ((mutation.type as unknown) === 'selection') return false\n\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes')\n      return true\n\n    if (this.contentDOM.contains(mutation.target)) return false\n\n    return true\n  }\n}\n\ndefIfNotExists('milkdown-table-block', TableElement)\nexport const tableBlockView = $view(\n  tableSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      return new TableNodeView(ctx, initialNode, view, getPos)\n    }\n  }\n)\n\nwithMeta(tableBlockView, {\n  displayName: 'NodeView<table-block>',\n  group: 'TableBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { tableBlockView } from './view'\nimport { tableBlockConfig } from './config'\n\nexport * from './view'\nexport * from './config'\n\nexport const tableBlock: MilkdownPlugin[] = [tableBlockConfig, tableBlockView]\n","import {\n  tableBlock,\n  tableBlockConfig,\n} from '@milkdown-nota/kit/component/table-block'\nimport type { DefineFeature, Icon } from '../shared'\nimport {\n  alignCenterIcon,\n  alignLeftIcon,\n  alignRightIcon,\n  dragHandleIcon,\n  plusIcon,\n  removeIcon,\n} from '../../icons'\n\ninterface TableConfig {\n  addRowIcon: Icon\n  addColIcon: Icon\n  deleteRowIcon: Icon\n  deleteColIcon: Icon\n  alignLeftIcon: Icon\n  alignCenterIcon: Icon\n  alignRightIcon: Icon\n  colDragHandleIcon: Icon\n  rowDragHandleIcon: Icon\n}\n\nexport type TableFeatureConfig = Partial<TableConfig>\n\nexport const defineFeature: DefineFeature<TableFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => {\n      ctx.update(tableBlockConfig.key, (defaultConfig) => ({\n        ...defaultConfig,\n        renderButton: (renderType) => {\n          switch (renderType) {\n            case 'add_row':\n              return config?.addRowIcon?.() ?? plusIcon\n            case 'add_col':\n              return config?.addColIcon?.() ?? plusIcon\n            case 'delete_row':\n              return config?.deleteRowIcon?.() ?? removeIcon\n            case 'delete_col':\n              return config?.deleteColIcon?.() ?? removeIcon\n            case 'align_col_left':\n              return config?.alignLeftIcon?.() ?? alignLeftIcon\n            case 'align_col_center':\n              return config?.alignCenterIcon?.() ?? alignCenterIcon\n            case 'align_col_right':\n              return config?.alignRightIcon?.() ?? alignRightIcon\n            case 'col_drag_handle':\n              return config?.colDragHandleIcon?.() ?? dragHandleIcon\n            case 'row_drag_handle':\n              return config?.rowDragHandleIcon?.() ?? dragHandleIcon\n          }\n        },\n      }))\n    })\n    .use(tableBlock)\n}\n","import type { Editor } from '@milkdown-nota/kit/core'\nimport type { PlaceHolderFeatureConfig } from './placeholder'\nimport type { CodeMirrorFeatureConfig } from './code-mirror'\nimport type { BlockEditFeatureConfig } from './block-edit'\nimport type { CursorFeatureConfig } from './cursor'\nimport type { ImageBlockFeatureConfig } from './image-block'\nimport type { LinkTooltipFeatureConfig } from './link-tooltip'\nimport type { ListItemFeatureConfig } from './list-item'\nimport type { ToolbarFeatureConfig } from './toolbar'\nimport type { TableFeatureConfig } from './table'\n\nimport { defineFeature as codeMirrorDefineFeature } from './code-mirror'\nimport { defineFeature as listItemDefineFeature } from './list-item'\nimport { defineFeature as linkTooltipDefineFeature } from './link-tooltip'\nimport { defineFeature as imageBlockDefineFeature } from './image-block'\nimport { defineFeature as cursorDefineFeature } from './cursor'\nimport { defineFeature as blockEditDefineFeature } from './block-edit'\nimport { defineFeature as placeholderDefineFeature } from './placeholder'\nimport { defineFeature as toolbarDefineFeature } from './toolbar'\nimport { defineFeature as tableDefineFeature } from './table'\n\nexport enum CrepeFeature {\n  CodeMirror = 'code-mirror',\n  ListItem = 'list-item',\n  LinkTooltip = 'link-tooltip',\n  Cursor = 'cursor',\n  ImageBlock = 'image-block',\n  BlockEdit = 'block-edit',\n  Toolbar = 'toolbar',\n  Placeholder = 'placeholder',\n  Table = 'table',\n}\n\nexport interface CrepeFeatureConfig {\n  [CrepeFeature.Cursor]?: CursorFeatureConfig\n  [CrepeFeature.ListItem]?: ListItemFeatureConfig\n  [CrepeFeature.LinkTooltip]?: LinkTooltipFeatureConfig\n  [CrepeFeature.ImageBlock]?: ImageBlockFeatureConfig\n  [CrepeFeature.BlockEdit]?: BlockEditFeatureConfig\n  [CrepeFeature.Placeholder]?: PlaceHolderFeatureConfig\n  [CrepeFeature.Toolbar]?: ToolbarFeatureConfig\n  [CrepeFeature.CodeMirror]?: CodeMirrorFeatureConfig\n  [CrepeFeature.Table]?: TableFeatureConfig\n}\n\nexport const defaultFeatures: Record<CrepeFeature, boolean> = {\n  [CrepeFeature.Cursor]: true,\n  [CrepeFeature.ListItem]: true,\n  [CrepeFeature.LinkTooltip]: true,\n  [CrepeFeature.ImageBlock]: true,\n  [CrepeFeature.BlockEdit]: true,\n  [CrepeFeature.Placeholder]: true,\n  [CrepeFeature.Toolbar]: true,\n  [CrepeFeature.CodeMirror]: true,\n  [CrepeFeature.Table]: true,\n}\n\nexport function loadFeature(\n  feature: CrepeFeature,\n  editor: Editor,\n  config?: never\n) {\n  switch (feature) {\n    case CrepeFeature.CodeMirror: {\n      return codeMirrorDefineFeature(editor, config)\n    }\n    case CrepeFeature.ListItem: {\n      return listItemDefineFeature(editor, config)\n    }\n    case CrepeFeature.LinkTooltip: {\n      return linkTooltipDefineFeature(editor, config)\n    }\n    case CrepeFeature.ImageBlock: {\n      return imageBlockDefineFeature(editor, config)\n    }\n    case CrepeFeature.Cursor: {\n      return cursorDefineFeature(editor, config)\n    }\n    case CrepeFeature.BlockEdit: {\n      return blockEditDefineFeature(editor, config)\n    }\n    case CrepeFeature.Placeholder: {\n      return placeholderDefineFeature(editor, config)\n    }\n    case CrepeFeature.Toolbar: {\n      return toolbarDefineFeature(editor, config)\n    }\n    case CrepeFeature.Table: {\n      return tableDefineFeature(editor, config)\n    }\n  }\n}\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\nimport { commandsCtx } from '@milkdown/core'\nimport {\n  history as prosemirrorHistory,\n  redo,\n  undo,\n} from '@milkdown/prose/history'\nimport { $command, $ctx, $prose, $useKeymap } from '@milkdown/utils'\n\nfunction withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/plugin-history',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n\n/// The milkdown command wrapper of [undo API](https://prosemirror.net/docs/ref/#history.undo) in [prosemirror-history](https://prosemirror.net/docs/ref/#history).\nexport const undoCommand = $command('Undo', () => () => undo)\n\nwithMeta(undoCommand, {\n  displayName: 'Command<undo>',\n})\n\n/// The milkdown command wrapper of [redo API](https://prosemirror.net/docs/ref/#history.redo) in [prosemirror-history](https://prosemirror.net/docs/ref/#history).\nexport const redoCommand = $command('Redo', () => () => redo)\n\nwithMeta(redoCommand, {\n  displayName: 'Command<redo>',\n})\n\n/// The [config](https://prosemirror.net/docs/ref/#history.history%5Econfig) of prosemirror history plugin.\nexport const historyProviderConfig = $ctx<\n  { depth?: number; newGroupDelay?: number },\n  'historyProviderConfig'\n>({}, 'historyProviderConfig')\n\nwithMeta(historyProviderConfig, {\n  displayName: 'Ctx<historyProviderConfig>',\n})\n\n/// The milkdown wrapper of [history API](https://prosemirror.net/docs/ref/#history.history) in [prosemirror-history](https://prosemirror.net/docs/ref/#history).\nexport const historyProviderPlugin = $prose((ctx) =>\n  prosemirrorHistory(ctx.get(historyProviderConfig.key))\n)\n\nwithMeta(historyProviderPlugin, {\n  displayName: 'Ctx<historyProviderPlugin>',\n})\n\n/// The keymap of history plugin, it's `mod-z` for undo and `mod-y`/`shift-mod-z` for redo.\nexport const historyKeymap = $useKeymap('historyKeymap', {\n  Undo: {\n    shortcuts: 'Mod-z',\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(undoCommand.key)\n    },\n  },\n  Redo: {\n    shortcuts: ['Mod-y', 'Shift-Mod-z'],\n    command: (ctx) => {\n      const commands = ctx.get(commandsCtx)\n      return () => commands.call(redoCommand.key)\n    },\n  },\n})\n\nwithMeta(historyKeymap.ctx, {\n  displayName: 'KeymapCtx<history>',\n})\nwithMeta(historyKeymap.shortcuts, {\n  displayName: 'Keymap<history>',\n})\n\n/// The milkdown history plugin.\nexport const history: MilkdownPlugin[] = [\n  historyProviderConfig,\n  historyProviderPlugin,\n  historyKeymap,\n  undoCommand,\n  redoCommand,\n].flat()\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport type { Transaction } from '@milkdown/prose/state'\nimport { AllSelection, TextSelection } from '@milkdown/prose/state'\nimport { $ctx, $shortcut } from '@milkdown/utils'\n\n/// Add indent config.\nexport interface IndentConfigOptions {\n  /// The type of indent, `space` or `tab`. By default, it's `space`.\n  type: 'space' | 'tab'\n  /// The size of indent. By default, it's `2`.\n  size: number\n}\n\nfunction updateIndent(\n  tr: Transaction,\n  options: IndentConfigOptions\n): Transaction {\n  const { doc, selection } = tr\n\n  if (!doc || !selection) return tr\n\n  if (\n    !(selection instanceof TextSelection || selection instanceof AllSelection)\n  )\n    return tr\n\n  const { to } = selection\n\n  const text =\n    options.type === 'space' ? Array(options.size).fill(' ').join('') : '\\t'\n\n  return tr.insertText(text, to)\n}\n\n/// A slice contains the indent config.\n/// You can use [IndentConfigOptions](#IndentConfigOptions) to customize the behavior of the plugin.\n///\n/// ```ts\n/// import { indent, indentConfig } from '@milkdown/plugin-indent'\n///\n/// Editor\n///   .make()\n///   .config((ctx) => {\n///     ctx.set(indentConfig.key, {\n///       type: 'space',\n///       size: 4,\n///     })\n///   })\n/// ```\nexport const indentConfig = $ctx<IndentConfigOptions, 'indentConfig'>(\n  { type: 'space', size: 2 },\n  'indentConfig'\n)\n\nindentConfig.meta = {\n  package: '@milkdown/plugin-indent',\n  displayName: 'Ctx<indentConfig>',\n}\n\n/// Add indent shortcut, when users press `Tab`, the plugin will insert indent text.\nexport const indentPlugin = $shortcut((ctx) => ({\n  Tab: (state, dispatch) => {\n    const config = ctx.get(indentConfig.key)\n    const { tr } = state\n    const _tr = updateIndent(tr, config)\n\n    if (_tr.docChanged) {\n      dispatch?.(_tr)\n      return true\n    }\n\n    return false\n  },\n}))\n\nindentPlugin.meta = {\n  package: '@milkdown/plugin-indent',\n  displayName: 'Shortcut<indent>',\n}\n\n/// The plugin of indent.\nexport const indent: MilkdownPlugin[] = [indentConfig, indentPlugin]\n","import {\n  editorViewOptionsCtx,\n  parserCtx,\n  schemaCtx,\n  serializerCtx,\n} from '@milkdown/core'\nimport { getNodeFromSchema } from '@milkdown/prose'\nimport type { Node, Slice } from '@milkdown/prose/model'\nimport { DOMParser, DOMSerializer } from '@milkdown/prose/model'\nimport { Plugin, PluginKey, TextSelection } from '@milkdown/prose/state'\nimport { $prose } from '@milkdown/utils'\n\ntype UnknownRecord = Record<string, unknown>\nfunction isPureText(\n  content: UnknownRecord | UnknownRecord[] | undefined | null\n): boolean {\n  if (!content) return false\n  if (Array.isArray(content)) {\n    if (content.length > 1) return false\n    return isPureText(content[0])\n  }\n\n  const child = content.content\n  if (child) return isPureText(child as UnknownRecord[])\n\n  return content.type === 'text'\n}\n\nfunction isTextOnlySlice(slice: Slice): Node | false {\n  if (slice.content.childCount === 1) {\n    const node = slice.content.firstChild\n    if (node?.type.name === 'text' && node.marks.length === 0) return node\n\n    if (node?.type.name === 'paragraph' && node.childCount === 1) {\n      const _node = node.firstChild\n      if (_node?.type.name === 'text' && _node.marks.length === 0) return _node\n    }\n  }\n\n  return false\n}\n\n/// The prosemirror plugin for clipboard.\nexport const clipboard = $prose((ctx) => {\n  const schema = ctx.get(schemaCtx)\n\n  // Set editable props for https://github.com/Milkdown/milkdown/issues/190\n  ctx.update(editorViewOptionsCtx, (prev) => ({\n    ...prev,\n    editable: prev.editable ?? (() => true),\n  }))\n\n  const key = new PluginKey('MILKDOWN_CLIPBOARD')\n  const plugin = new Plugin({\n    key,\n    props: {\n      handlePaste: (view, event) => {\n        const parser = ctx.get(parserCtx)\n        const editable = view.props.editable?.(view.state)\n        const { clipboardData } = event\n        if (!editable || !clipboardData) return false\n\n        const currentNode = view.state.selection.$from.node()\n        if (currentNode.type.spec.code) return false\n\n        const text = clipboardData.getData('text/plain')\n\n        // if is copied from vscode, try to create a code block\n        const vscodeData = clipboardData.getData('vscode-editor-data')\n        if (vscodeData) {\n          const data = JSON.parse(vscodeData)\n          const language = data?.mode\n          if (text && language) {\n            const { tr } = view.state\n            const codeBlock = getNodeFromSchema('code_block', schema)\n\n            tr.replaceSelectionWith(codeBlock.create({ language }))\n              .setSelection(\n                TextSelection.near(\n                  tr.doc.resolve(Math.max(0, tr.selection.from - 2))\n                )\n              )\n              .insertText(text.replace(/\\r\\n?/g, '\\n'))\n\n            view.dispatch(tr)\n            return true\n          }\n        }\n\n        const html = clipboardData.getData('text/html')\n        if (html.length === 0 && text.length === 0) return false\n\n        const domParser = DOMParser.fromSchema(schema)\n        let dom\n        if (html.length === 0) {\n          const slice = parser(text)\n          if (!slice || typeof slice === 'string') return false\n\n          dom = DOMSerializer.fromSchema(schema).serializeFragment(\n            slice.content\n          )\n        } else {\n          const template = document.createElement('template')\n          template.innerHTML = html\n          dom = template.content.cloneNode(true)\n          template.remove()\n        }\n\n        const slice = domParser.parseSlice(dom)\n        const node = isTextOnlySlice(slice)\n        if (node) {\n          view.dispatch(view.state.tr.replaceSelectionWith(node, true))\n          return true\n        }\n\n        view.dispatch(view.state.tr.replaceSelection(slice))\n        return true\n      },\n      clipboardTextSerializer: (slice) => {\n        const serializer = ctx.get(serializerCtx)\n        const isText = isPureText(slice.content.toJSON())\n        if (isText)\n          return (slice.content as unknown as Node).textBetween(\n            0,\n            slice.content.size,\n            '\\n\\n'\n          )\n\n        const doc = schema.topNodeType.createAndFill(undefined, slice.content)\n        if (!doc) return ''\n        const value = serializer(doc)\n        return value\n      },\n    },\n  })\n\n  return plugin\n})\n\nclipboard.meta = {\n  displayName: 'Prose<clipboard>',\n  package: '@milkdown/plugin-clipboard',\n}\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorState } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { $ctx, $prose } from '@milkdown/utils'\n\n/// Options for trailing config.\nexport interface TrailingConfigOptions {\n  /// A function that returns a boolean value.\n  /// If it returns `true`, the plugin will append a node at the end of the document.\n  /// By default, it returns `false` if the last node is a heading or a paragraph.\n  shouldAppend: (lastNode: Node | null, state: EditorState) => boolean\n  /// A function that returns a node.\n  /// By default, it returns a paragraph node.\n  getNode: (state: EditorState) => Node\n}\n\n/// A slice contains the trailing config.\n/// You can use [TrailingConfigOptions](#TrailingConfigOptions) to customize the behavior of the plugin.\nexport const trailingConfig = $ctx<TrailingConfigOptions, 'trailingConfig'>(\n  {\n    shouldAppend: (lastNode) => {\n      if (!lastNode) return false\n\n      if (['heading', 'paragraph'].includes(lastNode.type.name)) return false\n\n      return true\n    },\n    getNode: (state) => state.schema.nodes.paragraph!.create(),\n  },\n  'trailingConfig'\n)\n\ntrailingConfig.meta = {\n  package: '@milkdown/plugin-trailing',\n  displayName: 'Ctx<trailingConfig>',\n}\n\n/// The prosemirror plugin for trailing.\nexport const trailingPlugin = $prose((ctx) => {\n  const trailingPluginKey = new PluginKey('MILKDOWN_TRAILING')\n  const { shouldAppend, getNode } = ctx.get(trailingConfig.key)\n  const plugin = new Plugin({\n    key: trailingPluginKey,\n    state: {\n      init: (_, state) => {\n        const lastNode = state.tr.doc.lastChild\n\n        return shouldAppend(lastNode, state)\n      },\n      apply: (tr, value, _, state) => {\n        if (!tr.docChanged) return value\n\n        const lastNode = tr.doc.lastChild\n\n        return shouldAppend(lastNode, state)\n      },\n    },\n    appendTransaction: (_, __, state) => {\n      const { doc, tr } = state\n      const nodeType = getNode?.(state)\n      const shouldInsertNodeAtEnd = plugin.getState(state)\n      const endPosition = doc.content.size\n\n      if (!shouldInsertNodeAtEnd || !nodeType) return\n\n      return tr.insert(endPosition, nodeType)\n    },\n  })\n\n  return plugin\n})\n\ntrailingPlugin.meta = {\n  package: '@milkdown/plugin-trailing',\n  displayName: 'Prose<trailing>',\n}\n\n/// All plugins exported by this package.\nexport const trailing: MilkdownPlugin[] = [trailingConfig, trailingPlugin]\n","import type { Ctx } from '@milkdown-nota/kit/ctx'\nimport { createSlice } from '@milkdown-nota/kit/ctx'\nimport type { CrepeFeature } from '../feature'\n\nexport const FeaturesCtx = createSlice([] as CrepeFeature[], 'FeaturesCtx')\n\nexport function configureFeatures(features: CrepeFeature[]) {\n  return (ctx: Ctx) => {\n    ctx.inject(FeaturesCtx, features)\n  }\n}\n","import type { DefaultValue } from '@milkdown-nota/kit/core'\nimport {\n  Editor,\n  defaultValueCtx,\n  editorViewOptionsCtx,\n  rootCtx,\n} from '@milkdown-nota/kit/core'\n\nimport { commonmark } from '@milkdown-nota/kit/preset/commonmark'\nimport { gfm } from '@milkdown-nota/kit/preset/gfm'\nimport { history } from '@milkdown-nota/kit/plugin/history'\nimport { indent, indentConfig } from '@milkdown-nota/kit/plugin/indent'\nimport { getMarkdown } from '@milkdown-nota/kit/utils'\nimport { clipboard } from '@milkdown-nota/kit/plugin/clipboard'\nimport { trailing } from '@milkdown-nota/kit/plugin/trailing'\n\nimport type { CrepeFeatureConfig } from '../feature'\nimport { CrepeFeature, defaultFeatures, loadFeature } from '../feature'\nimport { configureFeatures } from './slice'\n\nexport interface CrepeConfig {\n  features?: Partial<Record<CrepeFeature, boolean>>\n  featureConfigs?: CrepeFeatureConfig\n  root?: Node | string | null\n  defaultValue?: DefaultValue\n}\n\nexport class Crepe {\n  static Feature = CrepeFeature\n  readonly #editor: Editor\n  // readonly #initPromise: Promise<unknown>\n  readonly #rootElement: Node\n  #editable = true\n\n  constructor({\n    root,\n    features = {},\n    featureConfigs = {},\n    defaultValue = '',\n  }: CrepeConfig) {\n    const enabledFeatures = Object.entries({\n      ...defaultFeatures,\n      ...features,\n    })\n      .filter(([, enabled]) => enabled)\n      .map(([feature]) => feature as CrepeFeature)\n\n    this.#rootElement =\n      (typeof root === 'string' ? document.querySelector(root) : root) ??\n      document.body\n    this.#editor = Editor.make()\n      .config(configureFeatures(enabledFeatures))\n      .config((ctx) => {\n        ctx.set(rootCtx, this.#rootElement)\n        ctx.set(defaultValueCtx, defaultValue)\n        ctx.set(editorViewOptionsCtx, {\n          editable: () => this.#editable,\n        })\n        ctx.update(indentConfig.key, (value) => ({\n          ...value,\n          size: 4,\n        }))\n      })\n      .use(commonmark)\n      .use(history)\n      .use(indent)\n      .use(trailing)\n      .use(clipboard)\n      .use(gfm)\n\n    // const promiseList: Promise<unknown>[] = []\n\n    enabledFeatures.forEach((feature) => {\n      const config = (featureConfigs as Partial<Record<CrepeFeature, never>>)[\n        feature\n      ]\n      // promiseList.push(\n      loadFeature(feature, this.#editor, config)\n      // )\n    })\n\n    // this.#initPromise = Promise.all(promiseList)\n  }\n\n  async create() {\n    // await this.#initPromise\n    return this.#editor.create()\n  }\n\n  async destroy() {\n    // await this.#initPromise\n    return this.#editor.destroy()\n  }\n\n  get editor(): Editor {\n    return this.#editor\n  }\n\n  setReadonly(value: boolean) {\n    this.#editable = !value\n    return this\n  }\n\n  getMarkdown() {\n    return this.#editor.action(getMarkdown())\n  }\n}\n"],"names":["ErrorCode","__privateAdd","__privateGet","__privateSet","Slice","_meta","_container","_clock","_status","emptyOptions","content","document","exit","previous","definition","thematicBreak","list","tokenizeIndent","flow","string","text","resolveText","point","own","configure","map","code","ok","empty","join","handlers","extend","wrap","assertPath","normalize","isUint8Array","isPlainObj","withMeta","replace","joinable","Node","NodeType","doc","schema","_ctx","commands","nav","agent","ie_edge","ie_upto10","ie_11up","ie","ie_version","gecko","_chrome","safari","ios","webkit","webkit_version","setBlockType","mac","shift","keymap","_marks","_matchTarget","_runNode","_closeNodeAndPush","_addNodeAndPush","node","_a","outOfScope","key","createInputRules","createKeymap","getSide","serializeForClipboard","detachedDoc","wrapMap","_detachedDoc","dispatchEvent","handleTripleClick","brokenClipboardAPI","editorView","customAlphabet","nodeSchema","markSchema","shortcuts","builtinReplacements","builtinOverridableReplacements","inputRules","markInputRules","inlineNodesCursorPlugin","view","pos","index","plugins","defaultConfig","html","defIfNotExists","history","Compartment","CodeMirror","EditorState","cmKeymap","computePosition","flip","offset","getComputedStyle","useHost","useRef","useState","useMemo","useEffect","useLayoutEffect","selected","h","c","defineFeature","langList","oneDark","defaultKeymap","indentWithTab","basicSetup","global","_debounce","_shouldShow","_middleware","_floatingUIOptions","_initialized","_offset","_onUpdate","_shouldShow_fn","__privateMethod","mark","e","_content","_provider","_hide","ratio","handleKeyDown","arrow","browser.ie","browser.ie_version","browser.ios","browser.webkit_version","NodeSelection2","PluginKey2","TextSelection2","Slice2","Slice3","Fragment3","Selection2","Fragment4","TextSelection3","PluginKey3","DecorationSet2","Decoration2","Plugin2","exitTable","id","escape","assert","defaultHandlers","indent","gfm","remarkGFM","group","items","groups","useCallback","useUpdate","ctx","col","row","CrepeFeature","codeMirrorDefineFeature","listItemDefineFeature","linkTooltipDefineFeature","imageBlockDefineFeature","cursorDefineFeature","blockEditDefineFeature","placeholderDefineFeature","toolbarDefineFeature","tableDefineFeature","prosemirrorHistory","slice"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,UAAU,CAAC,qBAAqB,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,IAAI,EAAE;AACnC,EAAE;AACF;AACA;AACA,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,EAAE,IAAI,IAAI,KAAK,GAAG;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,UAAU,CAAC,YAAY,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,gBAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,IAAI,EAAE;AACzC,EAAE,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,yBAAyB,CAAC,IAAI,EAAE;AAChD,EAAE,OAAO,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,IAAI,EAAE;AACpC,EAAE,OAAO,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE;AAClD;;AAEA;AACA;AACA;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AAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,OAAO,IAAI,CAAC,IAAI,KAAK;AAChC,QAAQ,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO;AAChD,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;AACjB,IAAI,cAAc,CAAC,IAAI,EAAE,MAAM;AAC/B,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM;AAC3B,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,aAAa,EAAE,sBAAsB,EAAE,MAAM,EAAE;AACtD;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,sBAAsB,EAAE,MAAM;;AAE9E,IAAI,OAAO,CAAC,KAAK,GAAG;;AAEpB,IAAI,MAAM;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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UAAU,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS;AAC7C;;AAEA,QAAQ,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,OAAO;AACf;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAyVA;;AAEA;AACA;AACA;;AAEA,MAAM,GAAG,GAAG,EAAE,CAAC;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAChD;AACA;AACA;AACA,EAAE,WAAW,GAAG;AAChB;AACA,IAAI,KAAK,CAAC,MAAM;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,GAAG;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,MAAM,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,GAAG;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,MAAM,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,MAAM,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,YAAY,GAAG,MAAM;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,GAAG;AACT;AACA,IAAI,MAAM,WAAW;AACrB;AACA,QAAQ,IAAI,SAAS;AACrB;AACA,IAAI,IAAI,KAAK,GAAG,CAAC;;AAEjB,IAAI,OAAO,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AAC5C,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;AAC3C,MAAM,WAAW,CAAC,GAAG,CAAC,GAAG,QAAQ;AACjC;;AAEA,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC;;AAErD,IAAI,OAAO;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE;AACnB,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACjC;AACA,MAAM,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,QAAQ,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM;AAC1C,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG;AAC9B,QAAQ,OAAO;AACf;;AAEA;AACA,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK;AACvE;;AAEA;AACA,IAAI,IAAI,GAAG,EAAE;AACb,MAAM,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM;AACxC,MAAM,IAAI,CAAC,SAAS,GAAG;AACvB,MAAM,OAAO;AACb;;AAEA;AACA,IAAI,OAAO,IAAI,CAAC;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,GAAG;AACX,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,MAAM,OAAO;AACb;;AAEA;AACA;AACA;AACA,IAAI,MAAM,IAAI,qDAAqD,IAAI;;AAEvE,IAAI,OAAO,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACvD,MAAM,MAAM,CAAC,QAAQ,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW;;AAEpE,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AAChC,QAAQ;AACR;;AAEA,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC/B,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG;AACrB;;AAEA,MAAM,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,OAAO;;AAExD,MAAM,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;AAC7C,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW;AACzC;AACA;;AAEA,IAAI,IAAI,CAAC,MAAM,GAAG;AAClB,IAAI,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;;AAE9B,IAAI,OAAO;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK,CAAC,IAAI,EAAE;AACd,IAAI,IAAI,CAAC,MAAM;AACf,IAAI,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI;AAC/B,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AACvC,IAAI,YAAY,CAAC,OAAO,EAAE,MAAM;AAChC,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,QAAQ;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE;AACtB,IAAI,MAAM,IAAI,GAAG;;AAEjB,IAAI,IAAI,CAAC,MAAM;AACf,IAAI,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;AACtD,IAAI,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;;AAE5D,IAAI,OAAO,IAAI,GAAG,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE;AACvC,MAAM,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI;AACjC;AACA;AACA,MAAM,MAAM,SAAS;AACrB;AACA,kCAAkC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AACtD;;AAEA,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;AACjE,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;AACrC,UAAU,OAAO,QAAQ,CAAC,KAAK;AAC/B;;AAEA;AACA;AACA,QAAQ,MAAM,WAAW;AACzB;AACA,oCAAoC,IAAI;AACxC;;AAEA,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI;;AAE9D,QAAQ,IAAI,eAAe,CAAC,aAAa,CAAC,EAAE;AAC5C,UAAU,IAAI,CAAC,KAAK,GAAG;AACvB,SAAS,MAAM;AACf,UAAU,IAAI,CAAC,MAAM,GAAG;AACxB;;AAEA,QAAQ,QAAQ,CAAC,KAAK,iDAAiD,IAAI;AAC3E,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;AACrC,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;AAC5B,UAAU,MAAM,CAAC,KAAK;AACtB,SAAS,MAAM,IAAI,OAAO,EAAE;AAC5B,UAAU,OAAO,CAAC,IAAI;AACtB,SAAS,MAAM;AAEf,UAAU,IAAI,CAAC,SAAS,EAAE,IAAI;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,IAAI,EAAE;AACpB;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB;AACA,IAAI,IAAI;;AAER,IAAI,IAAI,CAAC,MAAM;AACf,IAAI,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;AAC1D,IAAI,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;;AAEhE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ;AAC/B,IAAI,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,QAAQ;;AAGjD,IAAI,OAAO;;AAEX;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;AACnC,MAAM,QAAQ,GAAG;AACjB,MAAM,IAAI,CAAC,KAAK;AAChB,MAAM,MAAM,GAAG;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AACxB,IAAI,UAAU,CAAC,IAAI;AACnB,IAAI,IAAI,CAAC,MAAM;;AAEf,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC;;AAE9B,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;AAC7C,MAAM,IAAI,GAAG;AACb,MAAM,IAAI,GAAG;AACb;;AAEA,IAAI,OAAO,IAAI,GAAG,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE;AAKvC,MAAM,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI;AACjC,MAAM,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,QAAQ,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;AACjD,QAAQ,MAAM,aAAa;AAC3B;AACA,YAAY,UAAU,IAAI;AAC1B;;AAEA,QAAQ,IAAI,KAAK,EAAE;AACnB,UAAU,MAAM,CAAC,KAAK;AACtB,SAAS,MAAM,IAAI,OAAO,EAAE;AAC5B,UAAU,OAAO,CAAC,aAAa;AAC/B,SAAS,MAAM;AAEf,UAAU,IAAI,CAAC,SAAS,EAAE,aAAa,EAAE,IAAI;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE;AACtB;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB;AACA,IAAI,IAAI;;AAER,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ;;AAEjC,IAAI,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ;AAEzC,IAAI,OAAO;;AAEX;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;AACnC,MAAM,IAAI,CAAC,KAAK;AAChB,MAAM,MAAM,GAAG;AACf,MAAM,QAAQ,GAAG;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE;AACxB,IAAI,IAAI,CAAC,MAAM;AACf,IAAI,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI;AAC/B,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;AAC3C,IAAI,cAAc,CAAC,WAAW,EAAE,QAAQ;AACxC,IAAI,UAAU,CAAC,IAAI;;AAEnB,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE,QAAQ;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,UAAU,EAAE;AAC5B,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC;AAC3B,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC;;AAE3B,IAAI,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;;AAErC,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE,CAE1C,MAAM,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AAC5C,MAAM,SAAS,CAAC,KAAK,EAAE,UAAU;AACjC,KAAK,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC1C,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAChC,QAAQ,OAAO,CAAC,KAAK;AACrB,OAAO,MAAM;AACb,QAAQ,SAAS,CAAC,KAAK;AACvB;AACA,KAAK,MAAM;AACX,MAAM,MAAM,IAAI,SAAS,CAAC,8BAA8B,GAAG,KAAK,GAAG,GAAG;AACtE;;AAEA,IAAI,OAAO;;AAEX;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,CAAC,KAAK,EAAE;AACxB,MAAM,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AACvC,QAAQ,SAAS,CAAC,KAAK,EAAE,EAAE;AAC3B,OAAO,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC5C,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAClC,UAAU,MAAM,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC;AACvC,wDAAwD,KAAK;AAC7D,UAAU,SAAS,CAAC,MAAM,EAAE,UAAU;AACtC,SAAS,MAAM;AACf,UAAU,SAAS,CAAC,KAAK;AACzB;AACA,OAAO,MAAM;AACb,QAAQ,MAAM,IAAI,SAAS,CAAC,8BAA8B,GAAG,KAAK,GAAG,GAAG;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE;AAC/B,MAAM,IAAI,EAAE,SAAS,IAAI,MAAM,CAAC,IAAI,EAAE,UAAU,IAAI,MAAM,CAAC,EAAE;AAC7D,QAAQ,MAAM,IAAI,KAAK;AACvB,UAAU;AACV;AACA;;AAEA,MAAM,OAAO,CAAC,MAAM,CAAC,OAAO;;AAE5B,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC3B,QAAQ,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ;AAC7E;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,SAAS,OAAO,CAAC,OAAO,EAAE;AAC9B,MAAM,IAAI,KAAK,GAAG,CAAC;;AAEnB,MAAM,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE,CAE9C,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACzC,QAAQ,OAAO,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE;AACzC,UAAU,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;AACrC,UAAU,GAAG,CAAC,KAAK;AACnB;AACA,OAAO,MAAM;AACb,QAAQ,MAAM,IAAI,SAAS,CAAC,mCAAmC,GAAG,OAAO,GAAG,GAAG;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE;AAC3C,MAAM,IAAI,KAAK,GAAG,CAAC;AACnB,MAAM,IAAI,UAAU,GAAG,CAAC;;AAExB,MAAM,OAAO,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE;AACzC,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;AAC5C,UAAU,UAAU,GAAG;AACvB,UAAU;AACV;AACA;;AAEA,MAAM,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;AAC7B,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC;AAC9C;AACA;AACA;AACA,WAAW,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACtC,QAAQ,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG;AACjC,QAAQ,MAAM,cAAc,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;AACtD,QAAQ,IAAIC,aAAU,CAAC,cAAc,CAAC,IAAIA,aAAU,CAAC,OAAO,CAAC,EAAE;AAC/D,UAAU,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO;AACxD;;AAEA,QAAQ,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,IAAI,SAAS,EAAE,CAAC,MAAM;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;AACnC,EAAE,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AACnC,IAAI,MAAM,IAAI,SAAS,CAAC,UAAU,GAAG,IAAI,GAAG,oBAAoB;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;AACrC,EAAE,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AACnC,IAAI,MAAM,IAAI,SAAS,CAAC,UAAU,GAAG,IAAI,GAAG,sBAAsB;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AACtC,EAAE,IAAI,MAAM,EAAE;AACd,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM,eAAe;AACrB,QAAQ,IAAI;AACZ,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B;AACA;AACA,EAAE,IAAI,CAACA,aAAU,CAAC,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC1D,IAAI,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,IAAI,GAAG,GAAG;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE;AAC/C,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM,GAAG,GAAG,IAAI,GAAG,yBAAyB,GAAG,SAAS,GAAG;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,KAAK,EAAE;AACtB,EAAE,OAAO,eAAe,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK;AACzD;;AAEA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,KAAK,EAAE;AAChC,EAAE,OAAO,OAAO;AAChB,IAAI,KAAK;AACT,MAAM,OAAO,KAAK,KAAK,QAAQ;AAC/B,MAAM,SAAS,IAAI,KAAK;AACxB,MAAM,UAAU,IAAI;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,KAAK,EAAE;AAChC,EAAE,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,YAAY,CAAC,KAAK;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,EAAE,OAAO,OAAO;AAChB,IAAI,KAAK;AACT,MAAM,OAAO,KAAK,KAAK,QAAQ;AAC/B,MAAM,YAAY,IAAI,KAAK;AAC3B,MAAM,YAAY,IAAI;AACtB;AACA;;ACxyCgB,SAAAC,UAAA,CACd,QACA,IACG,EAAA;AACH,EAAA,MAAA,CAAO,IAAO,GAAA;AAAA,IACZ,OAAS,EAAA,gBAAA;AAAA,IACT,KAAO,EAAA,QAAA;AAAA,IACP,GAAG;AAAA,GACL;AAEA,EAAO,OAAA,MAAA;AACT;;ACXO,MAAM,cAAgD,GAAA;AAAA,EAC3D,MAAQ,EAAA,CAAC,IAAM,EAAA,CAAA,EAAG,OAAO,IAAS,KAAA;AAChC,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,MAAU,IAAA,KAAA,CAAM,QAAQ,MAAU,IAAA,GAAA;AACtD,IAAM,MAAA,IAAA,GAAO,KAAM,CAAA,KAAA,CAAM,QAAQ,CAAA;AACjC,IAAM,MAAA,OAAA,GAAU,KAAM,CAAA,aAAA,CAAc,IAAI,CAAA;AACxC,IAAA,IAAI,KAAQ,GAAA,OAAA,CAAQ,IAAK,CAAA,MAAA,GAAS,MAAM,CAAA;AACxC,IAAA,KAAA,IAAS,OAAQ,CAAA,IAAA;AAAA,MACf,KAAA,CAAM,kBAAkB,IAAM,EAAA;AAAA,QAC5B,MAAQ,EAAA,KAAA;AAAA,QACR,KAAO,EAAA,MAAA;AAAA,QACP,GAAG,QAAQ,OAAQ;AAAA,OACpB;AAAA,KACH;AACA,IAAS,KAAA,IAAA,OAAA,CAAQ,IAAK,CAAA,MAAA,GAAS,MAAM,CAAA;AACrC,IAAK,IAAA,EAAA;AACL,IAAO,OAAA,KAAA;AAAA,GACT;AAAA,EACA,QAAU,EAAA,CAAC,IAAM,EAAA,CAAA,EAAG,OAAO,IAAS,KAAA;AAClC,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,MAAU,IAAA,KAAA,CAAM,QAAQ,QAAY,IAAA,GAAA;AACxD,IAAM,MAAA,IAAA,GAAO,KAAM,CAAA,KAAA,CAAM,UAAU,CAAA;AACnC,IAAM,MAAA,OAAA,GAAU,KAAM,CAAA,aAAA,CAAc,IAAI,CAAA;AACxC,IAAI,IAAA,KAAA,GAAQ,OAAQ,CAAA,IAAA,CAAK,MAAM,CAAA;AAC/B,IAAA,KAAA,IAAS,OAAQ,CAAA,IAAA;AAAA,MACf,KAAA,CAAM,kBAAkB,IAAM,EAAA;AAAA,QAC5B,MAAQ,EAAA,KAAA;AAAA,QACR,KAAO,EAAA,MAAA;AAAA,QACP,GAAG,QAAQ,OAAQ;AAAA,OACpB;AAAA,KACH;AACA,IAAS,KAAA,IAAA,OAAA,CAAQ,KAAK,MAAM,CAAA;AAC5B,IAAK,IAAA,EAAA;AACL,IAAO,OAAA,KAAA;AAAA;AAEX,CAAA;;ACjBO,MAAM,aAAgB,GAAA,WAAA,CAAY,EAAC,EAAiB,YAAY,CAAA;AAGhE,MAAM,cAAiB,GAAA,WAAA,CAAY,EAAC,EAAkB,aAAa,CAAA;AAInE,MAAM,YAAe,GAAA,WAAA,CAAY,EAAC,EAAkB,WAAW,CAAA;AAG/D,MAAM,SAAY,GAAA,WAAA,CAAY,EAAC,EAAa,QAAQ,CAAA;AAGpD,MAAM,aAAgB,GAAA,WAAA,CAAY,EAAC,EAAkB,YAAY,CAAA;AAGjE,MAAM,eAAkB,GAAA,WAAA,CAAY,EAAC,EAAe,cAAc,CAAA;AAGlE,MAAM,gBAAmB,GAAA,WAAA;AAAA,EAC9B,EAAC;AAAA,EACD;AACF,CAAA;AAKO,MAAM,WAAc,GAAA,WAAA,CAAY,EAAC,EAAiB,UAAU,CAAA;AAK5D,MAAM,WAAc,GAAA,WAAA,CAAY,EAAC,EAAiB,UAAU,CAAA;AAG5D,MAAM,SAA+C,GAAA,WAAA;AAAA,EAC1D,SAAU,CAAA,GAAA,CAAI,WAAW,CAAA,CAAE,IAAI,eAAe,CAAA;AAAA,EAC9C;AACF,CAAA;AAGO,MAAM,yBAA4B,GAAA,WAAA;AAAA,EACvC;AAAA,IACE,QAAU,EAAA;AAAA,GACZ;AAAA,EACA;AACF,CAAA;;AChEA;AACA;AACA,SAAS,UAAU,CAAC,OAAO,EAAE;AAC7B,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO;AACxB;;AAEA,UAAU,CAAC,SAAS,GAAG;AACvB,EAAE,WAAW,EAAE,UAAU;;AAEzB,EAAE,IAAI,EAAE,SAAS,GAAG,EAAE;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACnD,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO;AAC1C,IAAI,OAAO,CAAC;AACZ,GAAG;;AAEH;AACA;AACA;AACA,EAAE,GAAG,EAAE,SAAS,GAAG,EAAE;AACrB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,IAAI,OAAO,KAAK,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC;AAC3D,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE;AACvC,IAAI,IAAI,IAAI,GAAG,MAAM,IAAI,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI;AACnE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AAC9D,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;AACrB,MAAM,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE,KAAK,CAAC;AACxC,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK;AAChC,MAAM,IAAI,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM;AACzC;AACA,IAAI,OAAO,IAAI,UAAU,CAAC,OAAO;AACjC,GAAG;;AAEH;AACA;AACA,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AACxB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE,OAAO;AAC5B,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACtC,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAC5B,IAAI,OAAO,IAAI,UAAU,CAAC,OAAO;AACjC,GAAG;;AAEH;AACA;AACA,EAAE,UAAU,EAAE,SAAS,GAAG,EAAE,KAAK,EAAE;AACnC,IAAI,OAAO,IAAI,UAAU,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;AACvE,GAAG;;AAEH;AACA;AACA,EAAE,QAAQ,EAAE,SAAS,GAAG,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE;AAClD,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC;AAC5B,IAAI,OAAO,IAAI,UAAU,CAAC,OAAO;AACjC,GAAG;;AAEH;AACA;AACA;AACA,EAAE,SAAS,EAAE,SAAS,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE;AACzC,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE;AACrE,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AACnC,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC;AACvE,IAAI,OAAO,IAAI,UAAU,CAAC,OAAO;AACjC,GAAG;;AAEH;AACA;AACA;AACA,EAAE,OAAO,EAAE,SAAS,CAAC,EAAE;AACvB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACnD,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,GAAG;;AAEH;AACA;AACA;AACA,EAAE,OAAO,EAAE,SAAS,GAAG,EAAE;AACzB,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO;AAC1B,IAAI,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;AACxE,GAAG;;AAEH;AACA;AACA;AACA,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AACxB,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO;AAC1B,IAAI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;AACxE,GAAG;;AAEH;AACA;AACA;AACA,EAAE,QAAQ,EAAE,SAAS,GAAG,EAAE;AAC1B,IAAI,IAAI,MAAM,GAAG,IAAI;AACrB,IAAI,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AAClD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,OAAO;AACX,GAAG;;AAEH;AACA;AACA,EAAE,QAAQ,EAAE,WAAW;AACvB,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;AAC/D,IAAI,OAAO;AACX,GAAG;;AAEH;AACA;AACA,EAAE,IAAI,IAAI,GAAG;AACb,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI;AAClC;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,UAAU,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE;AAClC,EAAE,IAAI,KAAK,YAAY,UAAU,EAAE,OAAO;AAC1C,EAAE,IAAI,OAAO,GAAG,EAAE;AAClB,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACpE,EAAE,OAAO,IAAI,UAAU,CAAC,OAAO;AAC/B,CAAC;;ACpID,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;AAClC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU;AAClD,YAAY,OAAO,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,GAAG,IAAI,GAAG,GAAG;AAC5D,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACpD,QAAQ,IAAI,MAAM,IAAI,MAAM,EAAE;AAC9B,YAAY,GAAG,IAAI,MAAM,CAAC,QAAQ;AAClC,YAAY;AACZ;AACA,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;AACtC,YAAY,OAAO,GAAG;AACtB,QAAQ,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACzD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AACjE,gBAAgB,GAAG,EAAE;AACrB,YAAY,OAAO,GAAG;AACtB;AACA,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;AACxD,YAAY,IAAI,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC;AAC9E,YAAY,IAAI,KAAK,IAAI,IAAI;AAC7B,gBAAgB,OAAO,KAAK;AAC5B;AACA,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ;AAC9B;AACA;AACA,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;AACvC,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,GAAG,CAAC,CAAC,UAAU,IAAI;AACrD,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AAC9B,YAAY,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;AACzD,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,QAAQ;AAClF,QAAQ,IAAI,MAAM,IAAI,MAAM,EAAE;AAC9B,YAAY,IAAI,IAAI,IAAI;AACxB,YAAY,IAAI,IAAI,IAAI;AACxB,YAAY;AACZ;AACA,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;AACtC,YAAY,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;AACvC,QAAQ,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACzD,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;AACpF,YAAY,OAAO,IAAI,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE;AAC/H,gBAAgB,IAAI,EAAE;AACtB,gBAAgB,IAAI,EAAE;AACtB,gBAAgB,IAAI,EAAE;AACtB;AACA,YAAY,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE;AACvC;AACA,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;AACxD,YAAY,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;AACvF,YAAY,IAAI,KAAK;AACrB,gBAAgB,OAAO,KAAK;AAC5B;AACA,QAAQ,IAAI,IAAI,IAAI;AACpB,QAAQ,IAAI,IAAI,IAAI;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,QAAQ,CAAC;AACf;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,OAAO,EAAE,IAAI,EAAE;AACnB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC;AAC7B,QAAQ,IAAI,IAAI,IAAI,IAAI;AACxB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AACnD,gBAAgB,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,MAAM,EAAE;AACrD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,QAAQ;AACnE,YAAY,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,SAAS,GAAG,GAAG,EAAE,MAAM,IAAI,IAAI,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE;AAC5G,gBAAgB,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC;AACnC,gBAAgB,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,CAAC;AAC7H;AACA,YAAY,GAAG,GAAG,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,CAAC,EAAE;AACnB,QAAQ,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,cAAc,EAAE,QAAQ,EAAE;AACpD,QAAQ,IAAI,IAAI,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI;AACnC,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK;AACnD,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG;AAC5F,kBAAkB,CAAC,IAAI,CAAC,MAAM,GAAG;AACjC,sBAAsB,QAAQ,IAAI,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ;AAC5F,0BAA0B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;AAChF,8BAA8B,EAAE;AAChC,YAAY,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,cAAc,EAAE;AACjG,gBAAgB,IAAI,KAAK;AACzB,oBAAoB,KAAK,GAAG,KAAK;AACjC;AACA,oBAAoB,IAAI,IAAI,cAAc;AAC1C;AACA,YAAY,IAAI,IAAI,QAAQ;AAC5B,SAAS,EAAE,CAAC,CAAC;AACb,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI;AACvB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;AACtB,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,KAAK,GAAG,KAAK,CAAC,UAAU,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC;AAClG,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;AACnD,YAAY,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAC/E,YAAY,CAAC,GAAG,CAAC;AACjB;AACA,QAAQ,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AAC5C,YAAY,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1C,QAAQ,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAC5D;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;AAC9B,QAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI;AACxC,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,MAAM,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC;AACjC,QAAQ,IAAI,EAAE,GAAG,IAAI;AACrB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACpD,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,QAAQ;AACvE,gBAAgB,IAAI,GAAG,GAAG,IAAI,EAAE;AAChC,oBAAoB,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE;AAChD,wBAAwB,IAAI,KAAK,CAAC,MAAM;AACxC,4BAA4B,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC;AAC7G;AACA,4BAA4B,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACtH;AACA,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC,oBAAoB,IAAI,IAAI,KAAK,CAAC,QAAQ;AAC1C;AACA,gBAAgB,GAAG,GAAG,GAAG;AACzB;AACA,QAAQ,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AACzC;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE;AACzB,QAAQ,IAAI,IAAI,IAAI,EAAE;AACtB,YAAY,OAAO,QAAQ,CAAC,KAAK;AACjC,QAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;AAClD,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE;AAC9B,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AACzC,QAAQ,IAAI,OAAO,IAAI,IAAI;AAC3B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACvC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;AAC/D,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI;AAC1B,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE;AACrB,QAAQ,OAAO,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;AACjF;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM;AACvD,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AACpD,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACrD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC3E;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AAChG;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AAClD;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AACvC,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,MAAM,IAAI,UAAU,CAAC,QAAQ,GAAG,KAAK,GAAG,oBAAoB,GAAG,IAAI,CAAC;AAChF,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,CAAC,EAAE;AACf,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7D,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AACvC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAC1B,YAAY,CAAC,IAAI,KAAK,CAAC,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,EAAE;AAClC,QAAQ,OAAO,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE;AAC/D,QAAQ,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE;AAC/B,QAAQ,IAAI,GAAG,IAAI,CAAC;AACpB,YAAY,OAAO,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACnC,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI;AAC5B,YAAY,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AACrD,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC;AACtC,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACjF,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;AAC1C,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,QAAQ;AAChE,YAAY,IAAI,GAAG,IAAI,GAAG,EAAE;AAC5B,gBAAgB,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,CAAC;AAC3C,oBAAoB,OAAO,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;AAC/C,gBAAgB,OAAO,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;AAC1C;AACA,YAAY,MAAM,GAAG,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG,EAAE,OAAO,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC;AACzD;AACA;AACA;AACA,IAAI,aAAa,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrD;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;AAC7E;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE;AACnC,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,OAAO,QAAQ,CAAC,KAAK;AACjC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AACjC,YAAY,MAAM,IAAI,UAAU,CAAC,qCAAqC,CAAC;AACvE,QAAQ,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,SAAS,CAAC,KAAK,EAAE;AAC5B,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;AACzB,YAAY,OAAO,QAAQ,CAAC,KAAK;AACjC,QAAQ,IAAI,MAAM,EAAE,IAAI,GAAG,CAAC;AAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAC/B,YAAY,IAAI,IAAI,IAAI,CAAC,QAAQ;AACjC,YAAY,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AACnE,gBAAgB,IAAI,CAAC,MAAM;AAC3B,oBAAoB,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9C,gBAAgB,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG;AAC5C,qBAAqB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzE;AACA,iBAAiB,IAAI,MAAM,EAAE;AAC7B,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACjC;AACA;AACA,QAAQ,OAAO,IAAI,QAAQ,CAAC,MAAM,IAAI,KAAK,EAAE,IAAI,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,OAAO,QAAQ,CAAC,KAAK;AACjC,QAAQ,IAAI,KAAK,YAAY,QAAQ;AACrC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAChC,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,KAAK,CAAC,KAAK;AACvB,YAAY,OAAO,IAAI,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC;AACxD,QAAQ,MAAM,IAAI,UAAU,CAAC,kBAAkB,GAAG,KAAK,GAAG,gBAAgB;AAC1E,aAAa,KAAK,CAAC,YAAY,GAAG,kEAAkE,GAAG,EAAE,CAAC,CAAC;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;AACrC,SAAS,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE;AACjC,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK;AACvB,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM;AACzB,IAAI,OAAO,KAAK;AAChB;;AAEA,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B,IAAI,IAAI,CAAC,KAAK,CAAC;AACf,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,EAAE,CAAC,IAAI,OAAO,CAAC,IAAI,QAAQ,CAAC;AACpC,QAAQ,EAAE,CAAC,IAAI,OAAO,CAAC,IAAI,QAAQ,CAAC;AACpC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAChC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AACjC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM;AAChC,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,YAAY,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,gBAAgB,OAAO,KAAK;AAC5B;AACA,SAAS;AACT,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC;AACvB,YAAY,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC;AACvB,YAAY,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AACzB,gBAAgB,OAAO,KAAK;AAC5B;AACA,IAAI,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC;AACX;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE;AAClB,QAAQ,IAAI,IAAI,EAAE,MAAM,GAAG,KAAK;AAChC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;AAC9B,YAAY,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AAC9B,gBAAgB,OAAO,GAAG;AAC1B,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAChD,gBAAgB,IAAI,CAAC,IAAI;AACzB,oBAAoB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1C;AACA,iBAAiB,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrD,gBAAgB,OAAO,GAAG;AAC1B;AACA,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACjE,oBAAoB,IAAI,CAAC,IAAI;AAC7B,wBAAwB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9C,oBAAoB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACnC,oBAAoB,MAAM,GAAG,IAAI;AACjC;AACA,gBAAgB,IAAI,IAAI;AACxB,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACpC;AACA;AACA,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE;AAC9B,QAAQ,IAAI,CAAC,MAAM;AACnB,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,GAAG,EAAE;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;AAC3C,YAAY,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,gBAAgB,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;AAC3C,YAAY,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,gBAAgB,OAAO,IAAI;AAC3B,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,IAAI,KAAK;AAC5B,aAAa,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7E;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AAC1C,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;AAClC,YAAY,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AAClC,YAAY;AACZ;AACA,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,MAAM,IAAI,UAAU,CAAC,iCAAiC,CAAC;AACnE,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACrF,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1C,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AACnC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AACzB,QAAQ,IAAI,CAAC,IAAI,CAAC;AAClB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM;AAChC,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,KAAK,EAAE;AAC1B,QAAQ,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;AAC/D,YAAY,OAAO,IAAI,CAAC,IAAI;AAC5B,QAAQ,IAAI,KAAK,YAAY,IAAI;AACjC,YAAY,OAAO,CAAC,KAAK,CAAC;AAC1B,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;AAChC,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACtD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC,IAAI,GAAG,EAAE;;AAEd;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,KAAK,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAK,CAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO;AAChE;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC5B,QAAQ,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC;AAC9E,QAAQ,OAAO,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC;AAC1E;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,IAAI,EAAE,EAAE,EAAE;AAC5B,QAAQ,OAAO,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC;AAC7H;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO;AACnH;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG;AAC7E;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;AAC9B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;AACrD,QAAQ,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC;AAC9B,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;AAC3C,QAAQ,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;AAC5B,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;AACvC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,KAAK,CAAC,KAAK;AAC9B,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,CAAC;AACxE,QAAQ,IAAI,OAAO,SAAS,IAAI,QAAQ,IAAI,OAAO,OAAO,IAAI,QAAQ;AACtE,YAAY,MAAM,IAAI,UAAU,CAAC,kCAAkC,CAAC;AACpE,QAAQ,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC;AACrF;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,QAAQ,EAAE,aAAa,GAAG,IAAI,EAAE;AACnD,QAAQ,IAAI,SAAS,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AACtC,QAAQ,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,aAAa,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU;AACvH,YAAY,SAAS,EAAE;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,aAAa,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS;AACrH,YAAY,OAAO,EAAE;AACrB,QAAQ,OAAO,IAAI,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7C,SAAS,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE;AACxC,IAAI,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC;AACtF,IAAI,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;AACpE,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;AACxC,QAAQ,IAAI,QAAQ,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM;AAC5D,YAAY,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC;AAC3D,QAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC3D;AACA,IAAI,IAAI,KAAK,IAAI,OAAO;AACxB,QAAQ,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC;AACvD,IAAI,OAAO,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,GAAG,MAAM,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAClH;AACA,SAAS,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AACnD,IAAI,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC;AACtF,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;AAGxC,QAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC5E;AACA,IAAI,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,GAAG,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC;AACpE,IAAI,OAAO,KAAK,IAAI,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClE;AACA,SAASC,SAAO,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK;AACrC,QAAQ,MAAM,IAAI,YAAY,CAAC,iDAAiD,CAAC;AACjF,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,IAAI,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO;AAClE,QAAQ,MAAM,IAAI,YAAY,CAAC,0BAA0B,CAAC;AAC1D,IAAI,OAAO,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7C;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;AAChD,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5D,IAAI,IAAI,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,EAAE;AAC5E,QAAQ,IAAI,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC;AAC9D,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACjE;AACA,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE;AAClC,QAAQ,OAAO,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC5D;AACA,SAAS,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,KAAK,IAAI,KAAK,EAAE;AAC/F,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,OAAO,GAAG,MAAM,CAAC,OAAO;AAC3D,QAAQ,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;AAC5H;AACA,SAAS;AACT,QAAQ,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,sBAAsB,CAAC,KAAK,EAAE,KAAK,CAAC;AACjE,QAAQ,OAAO,KAAK,CAAC,IAAI,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC1E;AACA;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE;AAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C,QAAQ,MAAM,IAAI,YAAY,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1F;AACA,SAASC,UAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE;AAC1C,IAAI,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AAClC,IAAI,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvC,IAAI,OAAO,IAAI;AACf;AACA,SAAS,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;AAChC,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;AAChC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnE,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACrE;AACA,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1B;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;AAC/C,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC;AAC3C,IAAI,IAAI,UAAU,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU;AAC7E,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,EAAE;AAClC,YAAY,UAAU,EAAE;AACxB;AACA,aAAa,IAAI,MAAM,CAAC,UAAU,EAAE;AACpC,YAAY,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;AAC7C,YAAY,UAAU,EAAE;AACxB;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE;AAC9C,QAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;AACtC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU;AACtD,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;AACxC;AACA,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE;AAC9B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACnC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC7B;AACA,SAAS,eAAe,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE;AAC1D,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,IAAIA,UAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC;AAC7E,IAAI,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,GAAG,KAAK,IAAIA,UAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC;AACrE,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;AACzC,IAAI,IAAI,SAAS,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC1E,QAAQ,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC;AACrC,QAAQ,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,eAAe,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AAChG;AACA,SAAS;AACT,QAAQ,IAAI,SAAS;AACrB,YAAY,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AACvF,QAAQ,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC;AAC9C,QAAQ,IAAI,OAAO;AACnB,YAAY,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AACjF;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC;AACvC,IAAI,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC;AAChC;AACA,SAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE;AAC1C,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC;AACzC,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE;AAC7B,QAAQ,IAAI,IAAI,GAAGA,UAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC;AAClD,QAAQ,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;AAC3E;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC;AACvC,IAAI,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC;AAChC;AACA,SAAS,sBAAsB,CAAC,KAAK,EAAE,MAAM,EAAE;AAC/C,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,EAAE,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3E,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACvC,QAAQ,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvD,IAAI,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;AAChE,QAAQ,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE;AAC7E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,WAAW,CAAC;AAClB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,YAAY,EAAE;AAClB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY;AACxC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,GAAG,EAAE;AACtB,QAAQ,IAAI,GAAG,IAAI,IAAI;AACvB,YAAY,OAAO,IAAI,CAAC,KAAK;AAC7B,QAAQ,IAAI,GAAG,GAAG,CAAC;AACnB,YAAY,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG;AACnC,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChD;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpC;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACtE;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;AACpF;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,KAAK,EAAE;AACf,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,MAAM,IAAI,UAAU,CAAC,gDAAgD,CAAC;AAClF,QAAQ,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5E;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,MAAM,IAAI,UAAU,CAAC,+CAA+C,CAAC;AACjF,QAAQ,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAChE,QAAQ,IAAI,KAAK,IAAI,MAAM,CAAC,UAAU;AACtC,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AAC1F,QAAQ,OAAO,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1C,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7D,QAAQ,IAAI,IAAI;AAChB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;AACxD,QAAQ,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE;AAC7B,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC5F,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;AACtC,YAAY,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ;AACzC,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AACtD;AACA,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AACpC,YAAY,OAAO,IAAI,CAAC,IAAI;AAC5B;AACA,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC3B,YAAY,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK;AAC5C,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;AACjF;AACA;AACA,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,YAAY,IAAI,GAAG,GAAG,IAAI;AAC1B,YAAY,IAAI,GAAG,KAAK;AACxB,YAAY,KAAK,GAAG,GAAG;AACvB;AACA;AACA;AACA,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpG,gBAAgB,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;AACvD,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AACxD,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ;AACrC,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AAC5E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClG,gBAAgB,KAAK,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;AACvD,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE;AACrB,QAAQ,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE;AACvD,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG;AAClE,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI,EAAE;AACnC,QAAQ,IAAI,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG;AAChC,YAAY,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC;AACzC,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAC3G,YAAY,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,gBAAgB,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AACpD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,YAAY;AAC7E;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,KAAK,EAAE;AACf,QAAQ,OAAO,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;AAClD;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,KAAK,EAAE;AACf,QAAQ,OAAO,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI;AAClD;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,GAAG,GAAG,EAAE;AACpB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;AAC5C,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACtF,QAAQ,OAAO,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY;AAC5C;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;AAC7B,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;AAClD,YAAY,MAAM,IAAI,UAAU,CAAC,WAAW,GAAG,GAAG,GAAG,eAAe,CAAC;AACrE,QAAQ,IAAI,IAAI,GAAG,EAAE;AACrB,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE,YAAY,GAAG,GAAG;AACzC,QAAQ,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI;AAC/B,YAAY,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC;AACxE,YAAY,IAAI,GAAG,GAAG,YAAY,GAAG,MAAM;AAC3C,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,GAAG,MAAM,CAAC;AAClD,YAAY,IAAI,CAAC,GAAG;AACpB,gBAAgB;AAChB,YAAY,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AACpC,YAAY,IAAI,IAAI,CAAC,MAAM;AAC3B,gBAAgB;AAChB,YAAY,YAAY,GAAG,GAAG,GAAG,CAAC;AAClC,YAAY,KAAK,IAAI,MAAM,GAAG,CAAC;AAC/B;AACA,QAAQ,OAAO,IAAI,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,YAAY,CAAC;AACvD;AACA;AACA;AACA;AACA,IAAI,OAAO,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE;AACnC,QAAQ,IAAI,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC;AACzC,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxD,gBAAgB,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC,gBAAgB,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG;AAClC,oBAAoB,OAAO,GAAG;AAC9B;AACA;AACA,aAAa;AACb,YAAY,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,YAAY,CAAC;AAC3D;AACA,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;AACxE,QAAQ,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,gBAAgB;AAClD,QAAQ,OAAO,MAAM;AACrB;AACA;AACA,MAAM,YAAY,CAAC;AACnB,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE;AACtB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC;AAClB;AACA;AACA,MAAM,gBAAgB,GAAG,EAAE,EAAE,YAAY,GAAG,IAAI,OAAO,EAAE;AACzD;AACA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3D;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACtD;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtD;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3D;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5D;;AAEA,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;aACA,MAAM,IAAI,CAAC;AACX;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,QAAQ,CAAC,KAAK;AAChD;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACpE;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AACtD;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpD;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC9D;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE;AAC5C,QAAQ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,CAAC,EAAE;AACnB,QAAQ,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;AACtD,cAAc,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;AAC1C,cAAc,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,cAAc,EAAE,QAAQ,EAAE;AACpD,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,cAAc,EAAE,QAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AACtD;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;AACpD;AACA;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AAClC,QAAQ,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI;AAChC,YAAY,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,IAAI,CAAC,YAAY,IAAI,UAAU,CAAC;AAC7E,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,EAAE;AACzB,QAAQ,IAAI,OAAO,IAAI,IAAI,CAAC,OAAO;AACnC,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACtC,QAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI;AAChD,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,cAAc,GAAG,KAAK,EAAE;AAChE,QAAQ,IAAI,IAAI,IAAI,EAAE;AACtB,YAAY,OAAO,KAAK,CAAC,KAAK;AAC9B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;AAC9D,QAAQ,IAAI,KAAK,GAAG,cAAc,GAAG,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC;AAC9D,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAChE,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;AAC1E,QAAQ,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;AAC7B,QAAQ,OAAOD,SAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;AACnE;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI;AAChC,YAAY,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AAC/D,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AACzC,YAAY,IAAI,CAAC,IAAI;AACrB,gBAAgB,OAAO,IAAI;AAC3B,YAAY,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM;AAC5C,gBAAgB,OAAO,IAAI;AAC3B,YAAY,GAAG,IAAI,MAAM,GAAG,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AAC3D,QAAQ,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE;AACrB,QAAQ,IAAI,GAAG,IAAI,CAAC;AACpB,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;AACtD,QAAQ,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;AAC3D,QAAQ,IAAI,MAAM,GAAG,GAAG;AACxB,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;AACrE,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAChD,QAAQ,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC/D;AACA;AACA;AACA,IAAI,cAAc,CAAC,GAAG,EAAE,EAAE,OAAO,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAChE;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AACjC,QAAQ,IAAI,KAAK,GAAG,KAAK;AACzB,QAAQ,IAAI,EAAE,GAAG,IAAI;AACrB,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,IAAI;AAChD,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5C,oBAAoB,KAAK,GAAG,IAAI;AAChC,gBAAgB,OAAO,CAAC,KAAK;AAC7B,aAAa,CAAC;AACd,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC7C;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;AACrD;AACA;AACA;AACA,IAAI,IAAI,aAAa,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;AACzD;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC/C;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC3C;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa;AACxC,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACrD,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;AACjC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI;AAC7B,YAAY,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,GAAG,GAAG;AAC5D,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;AAC1C;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,KAAK,EAAE;AAC1B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;AAChF,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC;AACnF,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,WAAW,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,UAAU,EAAE;AAChG,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC;AAClF,QAAQ,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;AAC5D,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ;AACjC,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;AACxC,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAClE,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AAC1C,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAClD,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;AAC7D,QAAQ,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;AAChE,QAAQ,OAAO,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,KAAK,EAAE;AACrB,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI;AAC9B,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC;AACnF;AACA,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;AAC5C,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;AAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5C,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AACtC;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAC3C,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,qCAAqC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/H,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AAClD;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AAC1C,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;AAClC,YAAY,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AAClC,YAAY;AACZ;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI;AAC7B,YAAY,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAC/C,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM;AAC7B,YAAY,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AACvD,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,MAAM,IAAI,UAAU,CAAC,iCAAiC,CAAC;AACnE,QAAQ,IAAI,KAAK,GAAG,SAAS;AAC7B,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1C,gBAAgB,MAAM,IAAI,UAAU,CAAC,qCAAqC,CAAC;AAC3E,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;AACvD;AACA,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE;AACjC,YAAY,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ;AAC5C,gBAAgB,MAAM,IAAI,UAAU,CAAC,2BAA2B,CAAC;AACjE,YAAY,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AAChD;AACA,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC;AAC7D,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC;AAChF,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,QAAQ,OAAO,IAAI;AACnB;AACA;AACAE,MAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS;AAC/B,MAAM,QAAQ,SAASA,MAAI,CAAC;AAC5B;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;AAC7C,QAAQ,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AACvC,QAAQ,IAAI,CAAC,OAAO;AACpB,YAAY,MAAM,IAAI,UAAU,CAAC,kCAAkC,CAAC;AACpE,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO;AAC3B;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa;AACxC,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACrD,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/D;AACA,IAAI,IAAI,WAAW,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC;AACzC,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7D,IAAI,IAAI,QAAQ,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7C,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AACjG;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI;AAC7B,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AACpE;AACA,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACzC,QAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;AAC/C,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACvD;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI;AAChE;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE;AACjC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;AAC7B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAC9C,QAAQ,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAClD,IAAI,OAAO,GAAG;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,CAAC;AACnB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,QAAQ,EAAE;AACd,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC;AACA;AACA;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE;AACtB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE;AAC3B;AACA;AACA;AACA;AACA,IAAI,OAAO,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE;AACpC,QAAQ,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC;AACvD,QAAQ,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI;AAC/B,YAAY,OAAO,YAAY,CAAC,KAAK;AACrC,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;AACpC,QAAQ,IAAI,MAAM,CAAC,IAAI;AACvB,YAAY,MAAM,CAAC,GAAG,CAAC,0BAA0B,CAAC;AAClD,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClC,QAAQ,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC;AACvC,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AACjD,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI;AACzC,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;AACxC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE;AAC1D,QAAQ,IAAI,GAAG,GAAG,IAAI;AACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;AAC/C,YAAY,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACnD,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA,IAAI,IAAI,aAAa,GAAG;AACxB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,YAAY,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC,YAAY,IAAI,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACzD,gBAAgB,OAAO,IAAI;AAC3B;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AACjD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AACtD,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;AAC3D,oBAAoB,OAAO,IAAI;AAC/B,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC,EAAE;AACrD,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC;AACzB,QAAQ,SAAS,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE;AACtC,YAAY,IAAI,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,CAAC;AACjE,YAAY,IAAI,QAAQ,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC;AACzD,gBAAgB,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;AACzE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxD,gBAAgB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3F,oBAAoB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACnC,oBAAoB,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAChE,oBAAoB,IAAI,KAAK;AAC7B,wBAAwB,OAAO,KAAK;AACpC;AACA;AACA,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,OAAO,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACzD,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM;AAC3C,gBAAgB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;AACnD,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC7C,QAAQ,OAAO,QAAQ;AACvB;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,MAAM,EAAE;AAC5B,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AACzF,QAAQ,OAAO,MAAM,CAAC,MAAM,EAAE;AAC9B,YAAY,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,GAAG,OAAO,CAAC,KAAK;AAC/D,YAAY,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AACzC,gBAAgB,IAAI,MAAM,GAAG,EAAE;AAC/B,gBAAgB,KAAK,IAAI,GAAG,GAAG,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG;AAC/D,oBAAoB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AACzC,gBAAgB,OAAO,MAAM,CAAC,OAAO,EAAE;AACvC;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxD,gBAAgB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC1H,oBAAoB,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;AACjF,oBAAoB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;AAC1C;AACA;AACA;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM;AAC/B;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,CAAC,EAAE;AACZ,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM;AACjC,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,6BAA6B,CAAC,CAAC;AAChF,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,IAAI,GAAG,EAAE;AACrB,QAAQ,SAAS,IAAI,CAAC,CAAC,EAAE;AACzB,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AAClD,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,oBAAoB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC;AAClB,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAClC,YAAY,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;AACxD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AAClD,gBAAgB,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAClG,YAAY,OAAO,GAAG;AACtB,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC;AAC3C,MAAM,WAAW,CAAC;AAClB,IAAI,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE;AACnC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI;AAC1B,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC;AACpB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC;AACpD,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE;AACrD,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;AAC7B,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAChC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AAC/B;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9C,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC;AAC/D,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,IAAI,WAAW,CAAC,GAAG,GAAG,2BAA2B,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;AAC7F;AACA,SAAS,SAAS,CAAC,MAAM,EAAE;AAC3B,IAAI,IAAI,KAAK,GAAG,EAAE;AAClB,IAAI,GAAG;AACP,QAAQ,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACxC,KAAK,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5B,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;AACnE;AACA,SAAS,YAAY,CAAC,MAAM,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,EAAE;AAClB,IAAI,GAAG;AACP,QAAQ,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAC9C,KAAK,QAAQ,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,GAAG;AACpE,IAAI,OAAO,KAAK,CAAC,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AAChE;AACA,SAAS,kBAAkB,CAAC,MAAM,EAAE;AACpC,IAAI,IAAI,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC;AACpC,IAAI,SAAS;AACb,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3B,YAAY,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;AACzC,aAAa,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAChC,YAAY,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;AACzC,aAAa,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAChC,YAAY,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;AACxC,aAAa,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAChC,YAAY,IAAI,GAAG,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC;AAC/C;AACA,YAAY;AACZ;AACA,IAAI,OAAO,IAAI;AACf;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,CAAC,wBAAwB,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;AAChE,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACpC,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE;AACtC,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,GAAG,GAAG;AACzC,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACzB,QAAQ,IAAI,MAAM,CAAC,IAAI,IAAI,GAAG;AAC9B,YAAY,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;AAClC;AACA,YAAY,GAAG,GAAG,CAAC,CAAC;AACpB;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AACxB,QAAQ,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC;AAC3C,IAAI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC5C;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE;AACnC,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACpD,IAAI,IAAI,IAAI;AACZ,QAAQ,OAAO,CAAC,IAAI,CAAC;AACrB,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE;AAChC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;AAClC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChC,YAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC;AAC1B,QAAQ,MAAM,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,GAAG,SAAS,CAAC;AAChE,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,aAAa,CAAC,MAAM,EAAE;AAC/B,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACzB,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;AACpC,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5B,YAAY,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC;AAC/C,QAAQ,OAAO,IAAI;AACnB;AACA,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACtC,QAAQ,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI;AACjE,YAAY,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI;AACrC,gBAAgB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ;AAC7C,iBAAiB,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ;AACnD,gBAAgB,MAAM,CAAC,GAAG,CAAC,iCAAiC,CAAC;AAC7D,YAAY,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AAChD,SAAS,CAAC;AACV,QAAQ,MAAM,CAAC,GAAG,EAAE;AACpB,QAAQ,OAAO,KAAK,CAAC,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;AACvE;AACA,SAAS;AACT,QAAQ,MAAM,CAAC,GAAG,CAAC,oBAAoB,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,IAAI,EAAE;AACnB,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;AAClB,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC;AACrC,IAAI,OAAO,GAAG;AACd,IAAI,SAAS,IAAI,GAAG,EAAE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC9C,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE;AAC/B,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE;AAChC,QAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AAC3C;AACA,IAAI,SAAS,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE;AACjC,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;AACnC,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;AACxF;AACA,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE;AACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;AAClC,gBAAgB,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AACvD,gBAAgB,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AAC9C,oBAAoB,OAAO,IAAI;AAC/B,gBAAgB,OAAO,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,CAAC;AAC5C;AACA;AACA,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE;AACtC,YAAY,IAAI,IAAI,GAAG,IAAI,EAAE;AAC7B,YAAY,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AAC5B,YAAY,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AACnD,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B;AACA,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE;AACtC,YAAY,IAAI,IAAI,GAAG,IAAI,EAAE;AAC7B,YAAY,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AACnD,YAAY,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AACnD,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B;AACA,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE;AACrC,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAChE;AACA,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE;AACvC,YAAY,IAAI,GAAG,GAAG,IAAI;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;AAC/C,gBAAgB,IAAI,IAAI,GAAG,IAAI,EAAE;AACjC,gBAAgB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;AACtD,gBAAgB,GAAG,GAAG,IAAI;AAC1B;AACA,YAAY,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE;AAChC,gBAAgB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AACrD;AACA,iBAAiB;AACjB,gBAAgB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;AAC1D,oBAAoB,IAAI,IAAI,GAAG,IAAI,EAAE;AACrC,oBAAoB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;AACnC,oBAAoB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;AAC1D,oBAAoB,GAAG,GAAG,IAAI;AAC9B;AACA;AACA,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9B;AACA,aAAa,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,EAAE;AACtC,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACtD;AACA,aAAa;AACb,YAAY,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC;AAChD;AACA;AACA;AACA,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClC;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE;AAC7B,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,IAAI,CAAC,IAAI,CAAC;AACd,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3B,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE;AACxB,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;AAC7B,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;AAC/C,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACzB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAY,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;AACvC,YAAY,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjD,gBAAgB,IAAI,CAAC,EAAE,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,CAAC,GAAG,EAAE;AAClB,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE;AAC7B,QAAQ,IAAI,GAAG,GAAG,EAAE;AACpB,QAAQ,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI;AAC/B,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK;AAChD,gBAAgB,IAAI,CAAC,IAAI;AACzB,oBAAoB;AACpB,gBAAgB,IAAI,GAAG;AACvB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;AACnD,oBAAoB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;AACzC,wBAAwB,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,gBAAgB,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI;AAClD,oBAAoB,IAAI,CAAC,GAAG;AAC5B,wBAAwB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;AAClD,oBAAoB,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,wBAAwB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AACtC,iBAAiB,CAAC;AAClB,aAAa,CAAC;AACd,SAAS,CAAC;AACV,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACrG,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,YAAY,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AAC5C,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;AACpG;AACA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,SAAS,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,GAAG,EAAE;AAC/D,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACjC,YAAY,IAAI,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACjE,gBAAgB,IAAI,GAAG,KAAK;AAC5B,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/B;AACA,QAAQ,IAAI,IAAI;AAChB,YAAY,MAAM,CAAC,GAAG,CAAC,8BAA8B,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,gFAAgF,CAAC;AAC5J;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,IAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACtC,IAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE;AAChC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC;AAClC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU;AAC5B,YAAY,OAAO,IAAI;AACvB,QAAQ,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,OAAO;AACzC;AACA,IAAI,OAAO,QAAQ;AACnB;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACnC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC;AACxC,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE;AACjC,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAClC,YAAY,IAAI,IAAI,CAAC,UAAU;AAC/B,gBAAgB,KAAK,GAAG,IAAI,CAAC,OAAO;AACpC;AACA,gBAAgB,MAAM,IAAI,UAAU,CAAC,kCAAkC,GAAG,IAAI,CAAC;AAC/E;AACA,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK;AAC3B;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;AAC/C,IAAI,KAAK,IAAI,IAAI,IAAI,MAAM;AAC3B,QAAQ,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC;AAC5B,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,sBAAsB,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7F,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAC5B,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAC9B,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzB,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC;AACA;AACA,SAAS,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACpC,IAAI,IAAI,KAAK;AACb,QAAQ,KAAK,IAAI,IAAI,IAAI,KAAK;AAC9B,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACrE,IAAI,OAAO,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;iBACA,MAAM,QAAQ,CAAC;AACf;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;AAC7D,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAChD,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AACpD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI;AAChC,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI;AACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC;AACvD,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,MAAM;AACpC;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1C;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC;AAClE;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC;AAClE;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1D;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,KAAK,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9C;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,QAAQ,CAAC;AAC1E;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK;AAChC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU;AACxC,gBAAgB,OAAO,IAAI;AAC3B,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,KAAK,EAAE;AAC7B,QAAQ,OAAO,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC;AAChF;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY;AACvC,YAAY,OAAO,IAAI,CAAC,YAAY;AACpC;AACA,YAAY,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;AACzC,QAAQ,IAAI,IAAI,CAAC,MAAM;AACvB,YAAY,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC;AACzE,QAAQ,OAAO,IAAIA,MAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;AAChD,QAAQ,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC,QAAQ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AAClC,QAAQ,OAAO,IAAIA,MAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;AAChD,QAAQ,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,QAAQ,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC1B,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;AAC9D,YAAY,IAAI,CAAC,MAAM;AACvB,gBAAgB,OAAO,IAAI;AAC3B,YAAY,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;AAC5C;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC;AAC9D,QAAQ,IAAI,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC;AACvE,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAIA,MAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC;AAC7D,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ;AACvC,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,UAAU,EAAE,CAAC,EAAE;AACnD,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACzD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,OAAO,EAAE;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;AACvC,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7G;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;AACxD;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,QAAQ,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC1E;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI;AAChC,YAAY,OAAO,IAAI;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACnD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI;AAChC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,IAAI;AAChB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AACrD,gBAAgB,IAAI,CAAC,IAAI;AACzB,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC5C;AACA,iBAAiB,IAAI,IAAI,EAAE;AAC3B,gBAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACnC;AACA;AACA,QAAQ,OAAO,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI;AAC7D;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;AAClC,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACxC,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACtF,QAAQ,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK;AAClD,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC5B,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,GAAG,OAAO,GAAG,IAAI,CAAC;AAC3F,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI;AACxB,YAAY,MAAM,IAAI,UAAU,CAAC,kCAAkC,CAAC;AACpE,QAAQ,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK;AACvC,YAAY,MAAM,IAAI,UAAU,CAAC,+CAA+C,CAAC;AACjF,QAAQ,OAAO,MAAM;AACrB;AACA;AACA,SAAS,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;AAChD,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/B,IAAI,OAAO,CAAC,KAAK,KAAK;AACtB,QAAQ,IAAI,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,MAAM,GAAG,OAAO,KAAK;AACzD,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AACnC,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,uBAAuB,EAAE,KAAK,CAAC,eAAe,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9H,KAAK;AACL;AACA;AACA,MAAM,SAAS,CAAC;AAChB,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC7C,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;AAClF,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO;AACtC,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,OAAO,CAAC,QAAQ,IAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ;AACnI;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,CAAC;AACf;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAChD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC5B,QAAQ,IAAI,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AAC/C,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,EAAE;AACzB,QAAQ,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ;AACnC,YAAY,OAAO,IAAI,CAAC,QAAQ;AAChC,QAAQ,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9D;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE;AAClC,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC;AAClD,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9F,QAAQ,OAAO,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,GAAG,EAAE;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;AAC3C,YAAY,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE;AACrC,gBAAgB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9D,gBAAgB,CAAC,EAAE;AACnB;AACA,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;AAC3C,YAAY,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI;AACnC,gBAAgB,OAAO,GAAG,CAAC,CAAC,CAAC;AAC7B;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,KAAK,EAAE;AACtB,QAAQ,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,MAAM,CAAC;AACb;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,oBAAoB,GAAG,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACzC,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;AACzC,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI;AAC7B,YAAY,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3C,QAAQ,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACxD,YAAY,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;AAClE,YAAY,IAAI,CAAC,KAAK,GAAGC,UAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;AAChE,QAAQ,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;AAC5D,QAAQ,IAAI,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAClD,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACrC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK;AAClC,gBAAgB,MAAM,IAAI,UAAU,CAAC,IAAI,GAAG,oCAAoC,CAAC;AACjF,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;AAC1G,YAAY,IAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC,WAAW,CAAC;AAC7D,iBAAiB,gBAAgB,CAAC,WAAW,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7F,YAAY,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa;AAChE,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;AAChD,gBAAgB,IAAI,IAAI,CAAC,oBAAoB;AAC7C,oBAAoB,MAAM,IAAI,UAAU,CAAC,kCAAkC,CAAC;AAC5E,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM;AAClD,oBAAoB,MAAM,IAAI,UAAU,CAAC,uDAAuD,CAAC;AACjG,gBAAgB,IAAI,CAAC,oBAAoB,GAAG,IAAI;AAChD;AACA,YAAY,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,GAAG,GAAG,IAAI;AACjD,gBAAgB,QAAQ,GAAG,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACjE,oBAAoB,QAAQ,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI;AACrE;AACA,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACrC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;AAClE,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxG;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;AACxD,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;AACxD,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;AACjE,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;AAC7C,QAAQ,IAAI,OAAO,IAAI,IAAI,QAAQ;AACnC,YAAY,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AACtC,aAAa,IAAI,EAAE,IAAI,YAAYA,UAAQ,CAAC;AAC5C,YAAY,MAAM,IAAI,UAAU,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAC9D,aAAa,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI;AACpC,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAC5F,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;AACtB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;AAClC,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/E;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;AACtB,QAAQ,IAAI,OAAO,IAAI,IAAI,QAAQ;AACnC,YAAY,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACnC,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,OAAOD,MAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;AACxC;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACpC,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,MAAM,IAAI,UAAU,CAAC,qBAAqB,GAAG,IAAI,CAAC;AAC9D,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,KAAK,GAAG,EAAE;AAClB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI;AACjE,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5B;AACA,aAAa;AACb,YAAY,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;AAC3C,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7C,gBAAgB,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACrG,oBAAoB,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;AACzC;AACA;AACA,QAAQ,IAAI,CAAC,EAAE;AACf,YAAY,MAAM,IAAI,WAAW,CAAC,sBAAsB,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC1E;AACA,IAAI,OAAO,KAAK;AAChB;;AAEA,SAAS,SAAS,CAAC,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC;AACnD,SAAS,WAAW,CAAC,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE;AACtB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE;AACxB,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE;AACnD,QAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;AAC9B,YAAY,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;AACjC,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC;AACA,iBAAiB,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;AACxC,gBAAgB,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtD,gBAAgB,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AACnD,oBAAoB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5C,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACtC;AACA,SAAS,CAAC;AACV;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI;AACnD,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;AACpD,gBAAgB,OAAO,KAAK;AAC5B,YAAY,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AAC3C,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC;AACpD,SAAS,CAAC;AACV;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,EAAE;AAC7B,QAAQ,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;AAC5D,QAAQ,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC;AAChE,QAAQ,OAAO,OAAO,CAAC,MAAM,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,EAAE;AAClC,QAAQ,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;AAC3D,QAAQ,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC;AAChE,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;AAC9C;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;AAClC,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1F,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACnC,YAAY,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;AACtC,iBAAiB,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,GAAG,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC;AACpF,iBAAiB,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;AACzE,gBAAgB,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnC,oBAAoB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AACnD,oBAAoB,IAAI,MAAM,KAAK,KAAK;AACxC,wBAAwB;AACxB,oBAAoB,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,SAAS;AACpD;AACA,gBAAgB,OAAO,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;AAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9F,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK;AACzD,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AACxC,gBAAgB,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;AACrE;AACA;AACA;AACA,gBAAgB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;AAC1C,qBAAqB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC;AAClG,gBAAgB;AAChB,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC/B,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACjD,gBAAgB,IAAI,MAAM,KAAK,KAAK;AACpC,oBAAoB;AACpB,gBAAgB,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,SAAS;AAChD;AACA,YAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,WAAW,CAAC,MAAM,EAAE;AAC/B,QAAQ,IAAI,MAAM,GAAG,EAAE;AACvB,QAAQ,SAAS,MAAM,CAAC,IAAI,EAAE;AAC9B,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC;AAC5E,YAAY,OAAO,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ;AAC/F,gBAAgB,IAAI,YAAY,GAAG,QAAQ;AAC3C,oBAAoB;AACpB;AACA,YAAY,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;AACrC;AACA,QAAQ,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;AACvC,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ;AACxD,YAAY,IAAI,KAAK;AACrB,gBAAgB,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;AACtC,oBAAoB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7C,oBAAoB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC;AACrE,wBAAwB,IAAI,CAAC,IAAI,GAAG,IAAI;AACxC,iBAAiB,CAAC;AAClB;AACA,QAAQ,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,EAAE;AACvC,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ;AACxD,YAAY,IAAI,KAAK;AACrB,gBAAgB,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;AACtC,oBAAoB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7C,oBAAoB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;AAChE,wBAAwB,IAAI,CAAC,IAAI,GAAG,IAAI;AACxC,iBAAiB,CAAC;AAClB;AACA,QAAQ,OAAO,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC,SAAS;AACtC,aAAa,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5F;AACA;AACA,MAAM,SAAS,GAAG;AAClB,IAAI,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI;AAC7E,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI;AACjF,IAAI,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI;AAC9E,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI;AACtF,IAAI,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;AACnF,CAAC;AACD,MAAM,UAAU,GAAG;AACnB,IAAI,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;AAChF,CAAC;AACD,MAAM,QAAQ,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AACvC;AACA,MAAM,eAAe,GAAG,CAAC,EAAE,oBAAoB,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC;AACtE,SAAS,YAAY,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE;AACtD,IAAI,IAAI,kBAAkB,IAAI,IAAI;AAClC,QAAQ,OAAO,CAAC,kBAAkB,GAAG,eAAe,GAAG,CAAC;AACxD,aAAa,kBAAkB,KAAK,MAAM,GAAG,oBAAoB,GAAG,CAAC,CAAC;AACtE,IAAI,OAAO,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,GAAG,eAAe,GAAG,oBAAoB,GAAG,IAAI,GAAG,CAAC,aAAa;AAC5G;AACA,MAAM,WAAW,CAAC;AAClB,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE;AAC3D,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE;AACzB;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI;AACpC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,OAAO,GAAG,aAAa,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;AAClF;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACzB,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI;AAC1B,gBAAgB,OAAO,EAAE;AACzB,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7E,YAAY,IAAI,IAAI,EAAE;AACtB,gBAAgB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC;AACvE;AACA,iBAAiB;AACjB,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI;AACxD,gBAAgB,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC1D,oBAAoB,IAAI,CAAC,KAAK,GAAG,KAAK;AACtC,oBAAoB,OAAO,IAAI;AAC/B;AACA,qBAAqB;AACrB,oBAAoB,OAAO,IAAI;AAC/B;AACA;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;AACjD;AACA,IAAI,MAAM,CAAC,OAAO,EAAE;AACpB,QAAQ,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,EAAE;AAC/C,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;AAC/D,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AAClF,gBAAgB,IAAI,IAAI,GAAG,IAAI;AAC/B,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;AACnD,oBAAoB,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;AACtC;AACA,oBAAoB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAC7H;AACA;AACA,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AACjD,QAAQ,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK;AAClC,YAAY,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACjF,QAAQ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO;AACtF;AACA,IAAI,aAAa,CAAC,IAAI,EAAE;AACxB,QAAQ,IAAI,IAAI,CAAC,IAAI;AACrB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa;AAC1C,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;AAC/B,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ;AAC3C,QAAQ,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AACnG;AACA;AACA,MAAM,YAAY,CAAC;AACnB,IAAI,WAAW;AACf;AACA,IAAI,MAAM;AACV;AACA,IAAI,OAAO,EAAE,MAAM,EAAE;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC;AACrB,QAAQ,IAAI,CAAC,eAAe,GAAG,KAAK;AACpC,QAAQ,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,UAAU;AACjD,QAAQ,IAAI,UAAU,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,MAAM,GAAG,aAAa,GAAG,CAAC,CAAC;AACzG,QAAQ,IAAI,OAAO;AACnB,YAAY,UAAU,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC;AACjJ,aAAa,IAAI,MAAM;AACvB,YAAY,UAAU,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC;AACvF;AACA,YAAY,UAAU,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC;AAC5G,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC;AACjC,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,aAAa;AACzC,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK;AAC/B;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE;AACvB,QAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC;AAC7B,YAAY,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC;AACxC,aAAa,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC;AAClC,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC;AACvC;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,SAAS;AACjC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,UAAU,GAAG,CAAC,GAAG,CAAC,OAAO,GAAG,oBAAoB,IAAI;AAChF,cAAc,IAAI,CAAC,eAAe,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,eAAe,IAAI,CAAC;AACzE,QAAQ,IAAI,UAAU,KAAK,MAAM;AACjC,YAAY,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC;AAClC,YAAY,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5C,YAAY,IAAI,CAAC,UAAU,EAAE;AAC7B,gBAAgB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,mBAAmB,EAAE,GAAG,CAAC;AAC/D;AACA;AACA;AACA,gBAAgB,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1F,oBAAoB,IAAI,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACxE,oBAAoB,IAAI,aAAa,GAAG,GAAG,CAAC,eAAe;AAC3D,oBAAoB,IAAI,CAAC,UAAU;AACnC,yBAAyB,aAAa,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC;AACzE,yBAAyB,UAAU,CAAC,MAAM,IAAI,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACvF,wBAAwB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9C;AACA;AACA,iBAAiB,IAAI,UAAU,KAAK,MAAM,EAAE;AAC5C,gBAAgB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC;AACvD;AACA,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACrD;AACA,YAAY,IAAI,KAAK;AACrB,gBAAgB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;AACtE,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAChC;AACA,aAAa;AACb,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAChC;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE;AACvC,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG;AAC1D,QAAQ,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AACjF,YAAY,IAAI,CAAC,eAAe,GAAG,IAAI;AACvC,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,MAAM;AACrD,QAAQ,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc;AACvE,YAAY,aAAa,CAAC,GAAG,CAAC;AAC9B,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;AAC/E,aAAa,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAClE,QAAQ,GAAG,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACvE,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAChC,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC;AAC3C;AACA,aAAa,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;AACzD,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW;AACxC,gBAAgB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACtD,iBAAiB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ;AAC/C,gBAAgB,GAAG,GAAG,IAAI,CAAC,IAAI;AAC/B,YAAY,IAAI,IAAI,EAAE,aAAa,GAAG,IAAI,CAAC,UAAU;AACrD,YAAY,IAAI,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AAChD,gBAAgB,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;AAChF,oBAAoB,IAAI,CAAC,IAAI,EAAE;AAC/B,oBAAoB,GAAG,GAAG,IAAI,CAAC,GAAG;AAClC;AACA,gBAAgB,IAAI,GAAG,IAAI;AAC3B,gBAAgB,IAAI,CAAC,GAAG,CAAC,IAAI;AAC7B,oBAAoB,IAAI,CAAC,UAAU,GAAG,IAAI;AAC1C;AACA,iBAAiB,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACtC,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC;AAC7C,gBAAgB,MAAM,GAAG;AACzB;AACA,YAAY,IAAI,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC;AACpF,YAAY,IAAI,UAAU;AAC1B,gBAAgB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC;AAC5C,YAAY,IAAI,IAAI;AACpB,gBAAgB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,YAAY,IAAI,CAAC,UAAU,GAAG,aAAa;AAC3C;AACA,aAAa;AACb,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC;AACxD,YAAY,IAAI,UAAU;AAC1B,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,SAAS,KAAK,KAAK,GAAG,MAAM,GAAG,SAAS,CAAC;AAC3G;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,OAAO;AACtC;AACA;AACA,IAAI,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE;AAC7B,QAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa;AAChF,YAAY,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;AAC3E;AACA;AACA,IAAI,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE;AAC/B;AACA,QAAQ,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;AACpF,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;AAC/D;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE;AAC3B,QAAQ,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM;AACnC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvE,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC;AAC9F,gBAAgB,IAAI,KAAK;AACzB,oBAAoB,KAAK,IAAI,KAAK,GAAG,SAAS,IAAI;AAClD,wBAAwB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AACnF,wBAAwB,IAAI,CAAC,IAAI;AACjC,4BAA4B;AAC5B,wBAAwB,IAAI,IAAI,CAAC,MAAM;AACvC,4BAA4B,OAAO,IAAI;AACvC,wBAAwB,IAAI,IAAI,CAAC,SAAS;AAC1C,4BAA4B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACzE;AACA,4BAA4B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxG,wBAAwB,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK;AACpD,4BAA4B,KAAK,GAAG,IAAI;AACxC;AACA,4BAA4B;AAC5B;AACA;AACA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE;AACtD,QAAQ,IAAI,IAAI,EAAE,QAAQ;AAC1B,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;AACvB,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1D,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AAClC,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC;AACpG,gBAAgB,IAAI,KAAK,EAAE;AAC3B,oBAAoB,IAAI,GAAG,IAAI;AAC/B,oBAAoB,KAAK,GAAG,KAAK;AACjC;AACA;AACA,iBAAiB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;AAC3E,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC;AAC7C;AACA;AACA,aAAa;AACb,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9D,YAAY,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7D;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG;AAC9B,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;AACzC,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAChC;AACA,aAAa,IAAI,aAAa,EAAE;AAChC,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,aAAa,CAAC;AACtD;AACA,aAAa,IAAI,IAAI,CAAC,UAAU,EAAE;AAClC,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAChC,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAClG;AACA,aAAa;AACb,YAAY,IAAI,UAAU,GAAG,GAAG;AAChC,YAAY,IAAI,OAAO,IAAI,CAAC,cAAc,IAAI,QAAQ;AACtD,gBAAgB,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC;AACnE,iBAAiB,IAAI,OAAO,IAAI,CAAC,cAAc,IAAI,UAAU;AAC7D,gBAAgB,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;AACrD,iBAAiB,IAAI,IAAI,CAAC,cAAc;AACxC,gBAAgB,UAAU,GAAG,IAAI,CAAC,cAAc;AAChD,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC;AAClD,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC;AAC1C,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC;AACnD;AACA,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AACtC,YAAY,IAAI,CAAC,IAAI,EAAE;AACvB;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE;AAChD,QAAQ,IAAI,KAAK,GAAG,UAAU,IAAI,CAAC;AACnC,QAAQ,KAAK,IAAI,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,EAAE,GAAG,GAAG,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE;AAChM,YAAY,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC;AAC3C,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC;AACvC;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;AAC3B,QAAQ,IAAI,KAAK,EAAE,IAAI;AACvB,QAAQ,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;AACzD,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;AACtC,YAAY,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;AAC7C,YAAY,IAAI,KAAK,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE;AAClE,gBAAgB,KAAK,GAAG,KAAK;AAC7B,gBAAgB,IAAI,GAAG,EAAE;AACzB,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM;AACjC,oBAAoB;AACpB;AACA,YAAY,IAAI,EAAE,CAAC,KAAK;AACxB,gBAAgB;AAChB;AACA,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,YAAY,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AACjE,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5B,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AAChE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,EAAE;AACnD,YAAY,IAAI,KAAK;AACrB,gBAAgB,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;AAC3D;AACA,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC;AACpD,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,IAAI,CAAC,UAAU,EAAE;AAC7B,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;AAC9B,YAAY,IAAI,GAAG,CAAC,KAAK;AACzB,gBAAgB,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1D,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI;AACrC,YAAY,KAAK,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACvD,gBAAgB,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;AAChG,oBAAoB,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;AACrD,YAAY,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClD,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE;AAC1C,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;AAClE,QAAQ,IAAI,UAAU;AACtB,YAAY,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC;AAC9E,QAAQ,OAAO,UAAU;AACzB;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,UAAU,EAAE;AAC9D,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;AAC1B,QAAQ,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AAC1D,QAAQ,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,GAAG,CAAC,OAAO,CAAC;AACjE,QAAQ,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,aAAa,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC;AACpE,YAAY,OAAO,IAAI,aAAa;AACpC,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI;AAClC,QAAQ,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI;AAClC,YAAY,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;AACzF,gBAAgB,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;AACnD,gBAAgB,OAAO,KAAK;AAC5B;AACA,YAAY,OAAO,IAAI;AACvB,SAAS,CAAC;AACV,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACvF,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA,IAAI,UAAU,CAAC,OAAO,GAAG,KAAK,EAAE;AAChC,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AACrC,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;AAC3B,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;AACrC,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7E,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC;AAC7C;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC;AACrB,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AACpC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5E;AACA,IAAI,IAAI,CAAC,EAAE,EAAE;AACb,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;AACrC,gBAAgB,IAAI,CAAC,IAAI,GAAG,CAAC;AAC7B,gBAAgB,OAAO,IAAI;AAC3B;AACA,iBAAiB,IAAI,IAAI,CAAC,eAAe,EAAE;AAC3C,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,eAAe;AACxD;AACA;AACA,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,QAAQ,IAAI,GAAG,GAAG,CAAC;AACnB,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO;AAC/C,YAAY,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACxD,gBAAgB,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ;AAC1C,YAAY,IAAI,CAAC;AACjB,gBAAgB,GAAG,EAAE;AACrB;AACA,QAAQ,OAAO,GAAG;AAClB;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE;AAChC,QAAQ,IAAI,IAAI,CAAC,IAAI;AACrB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM;AAChF,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU;AACtD;AACA;AACA,IAAI,UAAU,CAAC,MAAM,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,IAAI;AACrB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1G,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU;AACtD;AACA;AACA,IAAI,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE;AACxC,QAAQ,IAAI,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI;AAC1C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAC5G,oBAAoB,IAAI,GAAG,GAAG,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAChF,oBAAoB,IAAI,GAAG,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9C,wBAAwB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU;AAC1D;AACA;AACA;AACA,IAAI,UAAU,CAAC,QAAQ,EAAE;AACzB,QAAQ,IAAI,IAAI,CAAC,IAAI;AACrB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,gBAAgB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ;AACjD,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC1G;AACA;AACA;AACA,IAAI,cAAc,CAAC,OAAO,EAAE;AAC5B,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrC,YAAY,OAAO,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC;AAC5E,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AACtC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;AACzC,QAAQ,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC3F,QAAQ,IAAI,QAAQ,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3E,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,KAAK;AAClC,YAAY,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAChC,gBAAgB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AACnC,gBAAgB,IAAI,IAAI,IAAI,EAAE,EAAE;AAChC,oBAAoB,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AACvD,wBAAwB;AACxB,oBAAoB,OAAO,KAAK,IAAI,QAAQ,EAAE,KAAK,EAAE;AACrD,wBAAwB,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;AAC/C,4BAA4B,OAAO,IAAI;AACvC,oBAAoB,OAAO,KAAK;AAChC;AACA,qBAAqB;AACrB,oBAAoB,IAAI,IAAI,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACxF,0BAA0B,MAAM,IAAI,KAAK,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;AACtF,8BAA8B,IAAI;AAClC,oBAAoB,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7E,wBAAwB,OAAO,KAAK;AACpC,oBAAoB,KAAK,EAAE;AAC3B;AACA;AACA,YAAY,OAAO,IAAI;AACvB,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AACjD;AACA,IAAI,oBAAoB,GAAG;AAC3B,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO;AAC3C,QAAQ,IAAI,QAAQ;AACpB,YAAY,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,gBAAgB,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW;AAC/F,gBAAgB,IAAI,KAAK,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,YAAY;AACpE,oBAAoB,OAAO,KAAK;AAChC;AACA,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;AACnD,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;AACrD,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY;AACrD,gBAAgB,OAAO,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,GAAG,EAAE;AAC5B,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,EAAE,QAAQ,GAAG,IAAI,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE;AACxF,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,IAAI;AAC5E,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE;AAC/D,YAAY,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;AACvC,YAAY,KAAK,GAAG,QAAQ;AAC5B;AACA,aAAa,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B,YAAY,QAAQ,GAAG,KAAK;AAC5B;AACA,aAAa,IAAI,IAAI,EAAE;AACvB,YAAY,QAAQ,GAAG,IAAI;AAC3B;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE;AAChC,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,iBAAiB,IAAI,GAAG,CAAC,qBAAqB,IAAI,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;AAC5H;AACA,SAAS,IAAI,CAAC,GAAG,EAAE;AACnB,IAAI,IAAI,IAAI,GAAG,EAAE;AACjB,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG;AACxB,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AAC9B,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE;AAC1C,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK;AACrC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAC5B,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;AAChC,QAAQ,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;AAC5C,YAAY;AACZ,QAAQ,IAAI,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC,KAAK,KAAK;AACzC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;AACtD,gBAAgB,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,IAAI,IAAI,QAAQ;AACpC,oBAAoB,OAAO,IAAI;AAC/B,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;AACxD,oBAAoB,OAAO,IAAI;AAC/B;AACA,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;AACrC,YAAY,OAAO,IAAI;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM,aAAa,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,QAAQ,EAAE,OAAO,GAAG,EAAE,EAAE,MAAM,EAAE;AACtD,QAAQ,IAAI,CAAC,MAAM;AACnB,YAAY,MAAM,GAAGE,KAAG,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE;AAC1D,QAAQ,IAAI,GAAG,GAAG,MAAM,EAAE,MAAM,GAAG,EAAE;AACrC,QAAQ,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI;AACjC,YAAY,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACpD,gBAAgB,IAAI,IAAI,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC;AAC1C,gBAAgB,OAAO,IAAI,GAAG,MAAM,CAAC,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC7E,oBAAoB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AACnD,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACrD,wBAAwB,QAAQ,EAAE;AAClC,wBAAwB;AACxB;AACA,oBAAoB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK;AACtF,wBAAwB;AACxB,oBAAoB,IAAI,EAAE;AAC1B,oBAAoB,QAAQ,EAAE;AAC9B;AACA,gBAAgB,OAAO,IAAI,GAAG,MAAM,CAAC,MAAM;AAC3C,oBAAoB,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACzC,gBAAgB,OAAO,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrD,oBAAoB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AACpD,oBAAoB,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;AACjF,oBAAoB,IAAI,OAAO,EAAE;AACjC,wBAAwB,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/C,wBAAwB,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;AACpD,wBAAwB,GAAG,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG;AAC/D;AACA;AACA;AACA,YAAY,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnE,SAAS,CAAC;AACV,QAAQ,OAAO,MAAM;AACrB;AACA;AACA;AACA;AACA,IAAI,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE;AACtC,QAAQ,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,UAAU,CAACA,KAAG,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAC9G,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,IAAI,IAAI,CAAC,MAAM;AAC3B,gBAAgB,MAAM,IAAI,UAAU,CAAC,8CAA8C,CAAC;AACpF,YAAY,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC;AACrE;AACA,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,IAAI,EAAE,OAAO,GAAG,EAAE,EAAE;AACtC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC;AACxD,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACzD,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;AAChF,YAAY,IAAI,IAAI,EAAE;AACtB,gBAAgB,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC;AAC9D,gBAAgB,GAAG,GAAG,IAAI,CAAC,GAAG;AAC9B;AACA;AACA,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9C,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C,QAAQ,OAAO,KAAK,IAAI,UAAU,CAACA,KAAG,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AACvF;AACA,IAAI,OAAO,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,GAAG,IAAI,EAAE,aAAa,EAAE;AACnE,QAAQ,OAAO,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC,aAAa;AAC1C,aAAa,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AACzH;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;AACnC,QAAQ,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;AAC9C,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI;AACxB,YAAY,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI;AAC3C,QAAQ,OAAO,MAAM;AACrB;AACA;AACA;AACA;AACA,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;AACnC,QAAQ,OAAO,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;AACxC;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,EAAE;AAC1B,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK;AACxC,QAAQ,IAAI,KAAK;AACjB,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK;AAChC;AACA,IAAI,OAAO,MAAM;AACjB;AACA,SAASA,KAAG,CAAC,OAAO,EAAE;AACtB,IAAI,OAAO,OAAO,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ;AAC9C;AACA,MAAM,wBAAwB,GAAG,IAAI,OAAO,EAAE;AAC9C,SAAS,oBAAoB,CAAC,KAAK,EAAE;AACrC,IAAI,IAAI,KAAK,GAAG,wBAAwB,CAAC,GAAG,CAAC,KAAK,CAAC;AACnD,IAAI,IAAI,KAAK,KAAK,SAAS;AAC3B,QAAQ,wBAAwB,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,GAAG,yBAAyB,CAAC,KAAK,CAAC,CAAC;AACrF,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,yBAAyB,CAAC,KAAK,EAAE;AAC1C,IAAI,IAAI,MAAM,GAAG,IAAI;AACrB,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;AACzB,QAAQ,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC/C,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACtC,gBAAgB,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;AACjD,oBAAoB,IAAI,CAAC,MAAM;AAC/B,wBAAwB,MAAM,GAAG,EAAE;AACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC;AACA,qBAAqB;AACrB,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AACzD,wBAAwB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtC;AACA;AACA,iBAAiB;AACjB,gBAAgB,KAAK,IAAI,IAAI,IAAI,KAAK;AACtC,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrC;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,CAAC;AACf,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE;AAC1D,IAAI,IAAI,OAAO,SAAS,IAAI,QAAQ;AACpC,QAAQ,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACrD,IAAI,IAAI,SAAS,CAAC,QAAQ,IAAI,IAAI;AAClC,QAAQ,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE;AACjC,IAAI,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI;AACvD,QAAQ,OAAO,SAAS;AACxB,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU;AAC1C,IAAI,IAAI,OAAO,OAAO,IAAI,QAAQ;AAClC,QAAQ,MAAM,IAAI,UAAU,CAAC,oCAAoC,CAAC;AAClE,IAAI,IAAI,aAAa,KAAK,UAAU,GAAG,oBAAoB,CAAC,aAAa,CAAC,CAAC;AAC3E,QAAQ,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC1C,QAAQ,MAAM,IAAI,UAAU,CAAC,8GAA8G,CAAC;AAC5I,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;AACpC,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,QAAQ,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;AACvC,QAAQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAC1C;AACA,IAAI,IAAI,UAAU;AAClB,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACxF,IAAI,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC;AACvC,IAAI,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC9F,QAAQ,KAAK,GAAG,CAAC;AACjB,QAAQ,KAAK,IAAI,IAAI,IAAI,KAAK;AAC9B,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;AACrC,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AAC7C,gBAAgB,IAAI,KAAK,GAAG,CAAC;AAC7B,oBAAoB,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AAChG;AACA,oBAAoB,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACvD;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;AAChC,QAAQ,IAAI,KAAK,KAAK,CAAC,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK;AACrD,gBAAgB,MAAM,IAAI,UAAU,CAAC,wDAAwD,CAAC;AAC9F,YAAY,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE;AAC3C;AACA,aAAa;AACb,YAAY,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,CAAC;AACvG,YAAY,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC;AAClC,YAAY,IAAI,YAAY,EAAE;AAC9B,gBAAgB,IAAI,UAAU;AAC9B,oBAAoB,MAAM,IAAI,UAAU,CAAC,wBAAwB,CAAC;AAClE,gBAAgB,UAAU,GAAG,YAAY;AACzC;AACA;AACA;AACA,IAAI,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE;AAC9B;;AC33Ga,MAAA,WAAA,GAAc,YAAY,aAAa,CAAA;AAI7C,SAAS,OAAO,SAAmC,EAAA;AACxD,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAQ,KAAA;AACtC,IAAA,GAAA,CAAI,OAAO,WAAW,CAAA;AAEtB,IAAA,OAAO,YAAY;AACjB,MAAA,MAAM,UAAU,GAAG,CAAA;AACnB,MAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AAEpB,MAAA,OAAO,MAAM;AACX,QAAA,GAAA,CAAI,WAAW,WAAW,CAAA;AAAA,OAC5B;AAAA,KACF;AAAA,GACF;AAEA,EAAAL,UAAA,CAAS,MAAQ,EAAA;AAAA,IACf,WAAa,EAAA;AAAA,GACd,CAAA;AAED,EAAO,OAAA,MAAA;AACT;;ACTa,MAAA,SAAA,GAAY,YAAY,WAAW,CAAA;AAMzC,SAAS,KAAK,MAAgC,EAAA;AACnD,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAQ,KAAA;AACtC,IAAA,GAAA,CACG,MAAO,CAAA,SAAA,EAAW,MAAM,CAAA,CACxB,MAAO,CAAA,eAAA,EAAiB,EAAE,CAC1B,CAAA,MAAA,CAAO,gBAAkB,EAAA,EAAE,CAC3B,CAAA,MAAA,CAAO,aAAe,EAAA,EAAE,CAAA,CACxB,MAAO,CAAA,WAAA,EAAa,EAAE,CACtB,CAAA,MAAA,CAAO,WAAa,EAAA,EAAE,CAAA,CACtB,OAAO,yBAA2B,EAAA;AAAA,MACjC,QAAU,EAAA;AAAA,KACX,EACA,MAAO,CAAA,SAAA,EAAW,SAAU,CAAA,GAAA,CAAI,WAAW,CAAE,CAAA,GAAA,CAAI,eAAe,CAAC,CAAA,CACjE,OAAO,YAAc,EAAA,CAAC,WAAW,CAAC,CAAA,CAClC,OAAO,SAAS,CAAA;AAEnB,IAAA,OAAO,YAAY;AACjB,MAAM,MAAA,GAAA,CAAI,WAAW,YAAY,CAAA;AACjC,MAAM,MAAA,OAAA,GAAU,GAAI,CAAA,GAAA,CAAI,yBAAyB,CAAA;AACjD,MAAI,GAAA,CAAA,GAAA;AAAA,QACF,SAAA;AAAA,QACA,SAAU,CAAA,GAAA,CAAI,WAAW,CAAE,CAAA,GAAA,CAAI,iBAAiB,OAAO;AAAA,OACzD;AAEA,MAAA,GAAA,CAAI,KAAK,SAAS,CAAA;AAElB,MAAA,OAAO,MAAM;AACX,QAAA,GAAA,CACG,MAAO,CAAA,SAAS,CAChB,CAAA,MAAA,CAAO,eAAe,CAAA,CACtB,MAAO,CAAA,gBAAgB,CACvB,CAAA,MAAA,CAAO,aAAa,CAAA,CACpB,MAAO,CAAA,WAAW,CAClB,CAAA,MAAA,CAAO,WAAW,CAAA,CAClB,MAAO,CAAA,yBAAyB,CAChC,CAAA,MAAA,CAAO,SAAS,CAAA,CAChB,MAAO,CAAA,YAAY,CACnB,CAAA,UAAA,CAAW,SAAS,CAAA;AAAA,OACzB;AAAA,KACF;AAAA,GACF;AACA,EAAAA,UAAA,CAAS,MAAQ,EAAA;AAAA,IACf,WAAa,EAAA;AAAA,GACd,CAAA;AAED,EAAO,OAAA,MAAA;AACT;;AC5Da,MAAA,WAAA,GAAc,YAAY,aAAa,CAAA;AAI7C,MAAM,cAAiB,GAAA,WAAA,CAAY,EAAC,EAAkB,aAAa,CAAA;AAGnE,MAAM,SAAY,GAAA,WAAA,CAAY,EAAC,EAAa,QAAQ,CAAA;AAGpD,MAAM,QAAW,GAAA,WAAA,CAAY,EAAC,EAAkC,OAAO,CAAA;AAGvE,MAAM,QAAW,GAAA,WAAA,CAAY,EAAC,EAAkC,OAAO,CAAA;AAE9E,SAAS,eAAkD,CAAS,EAAA;AA7BpE,EAAA,IAAA,EAAA;AA8BE,EAAO,OAAA;AAAA,IACL,GAAG,CAAA;AAAA,IACH,QAAU,EAAA,CAAA,EAAA,GAAA,CAAA,CAAE,QAAF,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAY,GAAI,CAAA,CAAC,IAAU,MAAA,EAAE,QAAU,EAAA,CAAA,CAAE,QAAU,EAAA,GAAG,IAAK,EAAA,CAAA;AAAA,GACvE;AACF;AAMa,MAAAM,QAAA,GAAyB,CAAC,GAAQ,KAAA;AAC7C,EACG,GAAA,CAAA,MAAA,CAAO,WAAW,EAAY,EAC9B,MAAO,CAAA,QAAA,EAAU,EAAE,CACnB,CAAA,MAAA,CAAO,UAAU,EAAE,EACnB,MAAO,CAAA,cAAA,EAAgB,CAAC,SAAS,CAAC,CAClC,CAAA,MAAA,CAAO,WAAW,CAAA;AAErB,EAAA,OAAO,YAAY;AACjB,IAAM,MAAA,GAAA,CAAI,WAAW,cAAc,CAAA;AAEnC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAChC,IAAM,MAAA,aAAA,GAAgB,GAAI,CAAA,GAAA,CAAI,gBAAgB,CAAA;AAE9C,IAAA,MAAM,YAAY,aAAc,CAAA,MAAA;AAAA,MAC9B,CAAC,KAAmB,IAClB,KAAA,GAAA,CAAI,IAAI,IAAK,CAAA,MAAA,EAAQ,KAAK,OAAO,CAAA;AAAA,MACnC;AAAA,KACF;AACA,IAAI,GAAA,CAAA,GAAA,CAAI,WAAW,SAAS,CAAA;AAE5B,IAAA,MAAM,QAAQ,MAAO,CAAA,WAAA;AAAA,MACnB,GAAI,CAAA,GAAA,CAAI,QAAQ,CAAA,CAAE,IAAI,CAAC,CAAC,GAAK,EAAA,CAAC,MAAM,CAAC,GAAA,EAAK,cAAe,CAAA,CAAC,CAAC,CAAC;AAAA,KAC9D;AACA,IAAA,MAAM,QAAQ,MAAO,CAAA,WAAA;AAAA,MACnB,GAAI,CAAA,GAAA,CAAI,QAAQ,CAAA,CAAE,IAAI,CAAC,CAAC,GAAK,EAAA,CAAC,MAAM,CAAC,GAAA,EAAK,cAAe,CAAA,CAAC,CAAC,CAAC;AAAA,KAC9D;AACA,IAAA,MAAMA,UAAS,IAAI,MAAA,CAAO,EAAE,KAAA,EAAO,OAAO,CAAA;AAE1C,IAAI,GAAA,CAAA,GAAA,CAAI,WAAWA,OAAM,CAAA;AAEzB,IAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AAEpB,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CACG,MAAO,CAAA,SAAS,CAChB,CAAA,MAAA,CAAO,QAAQ,CAAA,CACf,MAAO,CAAA,QAAQ,CACf,CAAA,MAAA,CAAO,cAAc,CAAA,CACrB,WAAW,WAAW,CAAA;AAAA,KAC3B;AAAA,GACF;AACF,CAAA;AAEAN,UAAA,CAASM,QAAQ,EAAA;AAAA,EACf,WAAa,EAAA;AACf,CAAC,CAAA;;;;;;;;;ACtFD,IAAArC,YAAA,EAAAsC,MAAA;AAqBO,MAAM,cAAe,CAAA;AAAA,EAArB,WAAA,GAAA;AAEL;AAAA,IAAA3C,cAAA,CAAA,IAAA,EAAAK,YAAA,EAAa,IAAI,SAAU,EAAA,CAAA;AAG3B;AAAA,IAAmBL,cAAA,CAAA,IAAA,EAAA2C,MAAA,EAAA,IAAA,CAAA;AAGnB;AAAA,IAAA,IAAA,CAAA,MAAA,GAAS,CAAC,GAAa,KAAA;AACrB,MAAAzC,cAAA,CAAA,IAAA,EAAKyC,MAAO,EAAA,GAAA,CAAA;AAAA,KACd;AAAA;AAAA,EAEA,IAAI,GAAM,GAAA;AACR,IAAA,OAAO1C,cAAK,CAAA,IAAA,EAAA0C,MAAA,CAAA;AAAA;AACd;AAAA,EAGA,MAAA,CAAU,MAAiB,KAAe,EAAA;AACxC,IAAA,MAAM,KAAQ,GAAA,IAAA,CAAK,MAAO,CAAA1C,cAAA,CAAA,IAAA,EAAKI,cAAW,QAAQ,CAAA;AAClD,IAAA,KAAA,CAAM,IAAI,KAAK,CAAA;AACf,IAAO,OAAA,KAAA;AAAA;AACT,EAMA,IAAI,KAAuC,EAAA;AACzC,IAAA,OAAOJ,cAAK,CAAA,IAAA,EAAAI,YAAA,CAAA,CAAW,GAAI,CAAA,KAAK,EAAE,GAAI,EAAA;AAAA;AACxC,EAMA,OAAO,KAAmC,EAAA;AACxC,IAAO,OAAAJ,cAAA,CAAA,IAAA,EAAKI,YAAW,CAAA,CAAA,MAAA,CAAO,KAAK,CAAA;AAAA;AACrC,EAMA,IAAA,CAAK,OAA6B,OAAwB,EAAA;AACxD,IAAA,IAAIJ,cAAK,CAAA,IAAA,EAAA0C,MAAA,CAAA,IAAQ,IAAM,EAAA,MAAM,2BAA4B,EAAA;AAEzD,IAAM,MAAA,GAAA,GAAM,IAAK,CAAA,GAAA,CAAI,KAAK,CAAA;AAC1B,IAAM,MAAA,OAAA,GAAU,IAAI,OAAO,CAAA;AAC3B,IAAA,MAAM,IAAO,GAAA1C,cAAA,CAAA,IAAA,EAAK0C,MAAK,CAAA,CAAA,GAAA,CAAI,aAAa,CAAA;AACxC,IAAA,OAAO,OAAQ,CAAA,IAAA,CAAK,KAAO,EAAA,IAAA,CAAK,UAAU,IAAI,CAAA;AAAA;AAElD;AAjDEtC,YAAA,GAAA,IAAA,OAAA,EAAA;AAGAsC,MAAA,GAAA,IAAA,OAAA,EAAA;AAiDc,SAAA,YAAA,CAA4B,MAAM,QAAqB,EAAA;AACrE,EAAA,OAAO,WAAa,CAAA,MAAM,MAAM,KAAA,EAAkB,GAAG,CAAA;AACvD;AAGO,MAAM,WAAc,GAAA,WAAA,CAAY,IAAI,cAAA,IAAkB,UAAU,CAAA;AAIhE,MAAM,gBAAmB,GAAA,WAAA,CAAY,CAAC,WAAW,GAAG,eAAe,CAAA;AAG7D,MAAA,aAAA,GAAgB,YAAY,eAAe,CAAA;AAM3C,MAAAC,UAAA,GAA2B,CAAC,GAAQ,KAAA;AAC/C,EAAM,MAAA,GAAA,GAAM,IAAI,cAAe,EAAA;AAC/B,EAAA,GAAA,CAAI,OAAO,GAAG,CAAA;AACd,EACG,GAAA,CAAA,MAAA,CAAO,WAAa,EAAA,GAAG,CACvB,CAAA,MAAA,CAAO,gBAAkB,EAAA,CAAC,WAAW,CAAC,CACtC,CAAA,MAAA,CAAO,aAAa,CAAA;AACvB,EAAA,OAAO,YAAY;AACjB,IAAM,MAAA,GAAA,CAAI,WAAW,gBAAgB,CAAA;AAErC,IAAA,GAAA,CAAI,KAAK,aAAa,CAAA;AAEtB,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CAAI,OAAO,WAAW,CAAA,CAAE,OAAO,gBAAgB,CAAA,CAAE,WAAW,aAAa,CAAA;AAAA,KAC3E;AAAA,GACF;AACF,CAAA;AAEAR,UAAA,CAASQ,UAAU,EAAA;AAAA,EACjB,WAAa,EAAA;AACf,CAAC,CAAA;;AC5GD,MAAMC,KAAM,GAAA,OAAO,SAAa,IAAA,WAAA,GAAc,SAAY,GAAA,IAAA;AAC1D,MAAMJ,KAAM,GAAA,OAAO,QAAY,IAAA,WAAA,GAAc,QAAW,GAAA,IAAA;AACxD,MAAMK,OAAA,GAASD,KAAO,IAAAA,KAAA,CAAI,SAAc,IAAA,EAAA;AAExC,MAAME,SAAA,GAAU,aAAc,CAAA,IAAA,CAAKD,OAAK,CAAA;AACxC,MAAME,WAAA,GAAY,SAAU,CAAA,IAAA,CAAKF,OAAK,CAAA;AACtC,MAAMG,SAAA,GAAU,uCAAwC,CAAA,IAAA,CAAKH,OAAK,CAAA;AAE3D,MAAMI,IAAK,GAAA,CAAC,EAAEF,WAAA,IAAaC,SAAW,IAAAF,SAAA,CAAA;AACtC,MAAMI,YAAa,GAAAH,WAAA,GACrB,QAAyD,CAAA,YAAA,GAC1DC,SACE,GAAA,CAACA,SAAQ,CAAA,CAAC,CACV,GAAAF,SAAA,GACE,CAACA,SAAA,CAAQ,CAAC,CACV,GAAA,CAAA;AACD,MAAMK,OAAQ,GAAA,CAACF,IAAM,IAAA,eAAA,CAAgB,KAAKJ,OAAK,CAAA;AAEpDM,OAAS,IAAA,CAAA,CAAE,gBAAiB,CAAA,IAAA,CAAKN,OAAK,CAAA,IAAK,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,CAAC;AAEtD,MAAMO,SAAU,GAAA,CAACH,IAAM,IAAA,eAAA,CAAgB,KAAKJ,OAAK,CAAA;AAEnBO,SAAA,GAAU,CAACA,SAAA,CAAQ,CAAC,CAAK,GAAA;AAC1C,MAAAC,QAAA,GAAS,CAACJ,IAAM,IAAA,CAAC,CAACL,KAAO,IAAA,gBAAA,CAAiB,IAAK,CAAAA,KAAA,CAAI,MAAM,CAAA;AAEzD,MAAAU,KAAA,GACXD,QAAW,KAAA,aAAA,CAAc,IAAK,CAAAR,OAAK,KAAM,CAAC,CAACD,KAAO,IAAAA,KAAA,CAAI,cAAiB,GAAA,CAAA,CAAA;AACtDU,KAAQ,KAAAV,KAAA,GAAM,MAAM,IAAK,CAAAA,KAAA,CAAI,QAAQ,CAAI,GAAA,KAAA;AAErD,MAAMW,WACX,CAAC,CAACf,KAAO,IAAA,qBAAA,IAAyBA,MAAI,eAAgB,CAAA,KAAA;AACjD,MAAMgB,gBAAiB,GAAAD,QAAA,GAC1B,CAAE,CAAA,sBAAA,CAAuB,IAAK,CAAA,SAAA,CAAU,SAAS,CAAA,IAAK,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,CAAC,CAC/D,GAAA,CAAA;;ACpCJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO,GAAG,MAAM;AACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAChC,SAAS,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC;AACvE,SAAS,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,GAAG,OAAO,CAAC;AACtD,SAAS,aAAa,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,KAAK,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,QAAQ,CAAC;AAC9E,MAAM,UAAU,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC;AACjE;AACA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,IAAI,CAAC,CAAC;AACzD;AACA;AACA;AACA,IAAI,IAAI,aAAa,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAChF;AACA;AACA;AACA,IAAI,IAAI,YAAY,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,aAAa,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI,CAAC,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO,CAAC;AACd;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA,IAAI,QAAQ,GAAG,KAAK,EAAE;AACtB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK;AAC3C,YAAY,OAAO,OAAO,CAAC,KAAK;AAChC;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,KAAK,EAAE;AACnB,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;AACjD,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;AAC1C,gBAAgB,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvE,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC;AACnE;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACpE,IAAI,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7D;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7B,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC;AACxF,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACxD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC;AACnE,YAAY,IAAI,KAAK,GAAG,GAAG;AAC3B,gBAAgB;AAChB,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,OAAO;AAC/G,YAAY,IAAI,GAAG,IAAI,GAAG,EAAE;AAC5B,gBAAgB,IAAI,IAAI,GAAG,CAAC,OAAO,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK;AACxF,gBAAgB,IAAI,MAAM,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;AACpE,gBAAgB,IAAI,MAAM;AAC1B,oBAAoB,OAAO,MAAM;AACjC,gBAAgB,IAAI,OAAO,GAAG,GAAG,KAAK,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC;AACvG,gBAAgB,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,GAAG,SAAS,GAAG,GAAG,IAAI,GAAG,GAAG,UAAU,GAAG,UAAU;AACzF,gBAAgB,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG;AACzD,oBAAoB,GAAG,IAAI,QAAQ;AACnC,gBAAgB,OAAO,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC;AAC1D;AACA,YAAY,IAAI,IAAI,OAAO,GAAG,OAAO;AACrC;AACA,QAAQ,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;AACvE;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE;AAC1B,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC;AACnD,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC;AAC9E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACxD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC;AACnE,YAAY,IAAI,KAAK,GAAG,GAAG;AAC3B,gBAAgB;AAChB,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,OAAO;AAC1E,YAAY,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC;AAC5C,gBAAgB,OAAO,IAAI;AAC3B,YAAY,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,OAAO;AACvD;AACA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,CAAC,EAAE;AACf,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC;AAC9E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAClE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC;AACpI,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;AACxF,YAAY,CAAC,CAAC,QAAQ,EAAE,QAAQ,GAAG,OAAO,EAAE,QAAQ,EAAE,QAAQ,GAAG,OAAO,CAAC;AACzE,YAAY,IAAI,IAAI,OAAO,GAAG,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;AACvD;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,CAAC,EAAE;AACrB,QAAQ,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA,OAAO,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO,CAAC;AACd;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI,GAAG,EAAE;AACb;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,CAAC;AACZ;AACA;AACA;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE;AACpB;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC3C,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC;AAC5D;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE;AAC5B,QAAQ,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AACrC,QAAQ,IAAI,OAAO,IAAI,IAAI;AAC3B,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,OAAO,EAAE;AAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpF,YAAY,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,CAAC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,CAAC,EAAE;AACjB,QAAQ,IAAI,IAAI,CAAC,MAAM;AACvB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AACvD,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AACvC,oBAAoB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;AACpB,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM;AACxB,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE;AAC5B,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9B;AACA;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,OAAO,EAAE;AACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/G,YAAY,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,SAAS,GAAG,IAAI,GAAG,CAAC,GAAG,SAAS,CAAC;AACjH;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,OAAO,GAAG,IAAI,OAAO;AACjC,QAAQ,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC;AAC3C,QAAQ,OAAO,OAAO;AACtB;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE;AACxB,QAAQ,IAAI,IAAI,CAAC,MAAM;AACvB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC;AAC9C,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAChD,YAAY,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;AAC9C,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACpE;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE;AAC7B,QAAQ,IAAI,OAAO,GAAG,CAAC;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;AACtE,YAAY,IAAI,MAAM,CAAC,OAAO,IAAI,IAAI,EAAE;AACxC,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAC5C,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE;AAChE,oBAAoB,CAAC,GAAG,IAAI;AAC5B,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC;AACjE,oBAAoB;AACpB;AACA;AACA,YAAY,OAAO,IAAI,MAAM,CAAC,OAAO;AACrC,YAAY,GAAG,GAAG,MAAM,CAAC,GAAG;AAC5B;AACA,QAAQ,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC;AAC/D;AACA;;AAEA,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC;AACX;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC;AAC/B;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ;AACnC,YAAY,MAAM,IAAI,UAAU,CAAC,iCAAiC,CAAC;AACnE,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3C,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACzE,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE;AACjC,QAAQ,IAAI,EAAE,IAAI,SAAS;AAC3B,YAAY,MAAM,IAAI,UAAU,CAAC,gCAAgC,GAAG,EAAE,CAAC;AACvE,QAAQ,SAAS,CAAC,EAAE,CAAC,GAAG,SAAS;AACjC,QAAQ,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE;AACvC,QAAQ,OAAO,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,CAAC;AACjB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,MAAM,EAAE;AACZ,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,OAAO,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACtD;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;AAC7C,QAAQ,IAAI;AACZ,YAAY,OAAO,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AAC9D;AACA,QAAQ,OAAO,CAAC,EAAE;AAClB,YAAY,IAAI,CAAC,YAAY,YAAY;AACzC,gBAAgB,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;AACjD,YAAY,MAAM,CAAC;AACnB;AACA;AACA;;AAEA,SAAS,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE;AAC1C,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AAClD,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI;AAC9B,YAAY,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACpE,QAAQ,IAAI,KAAK,CAAC,QAAQ;AAC1B,YAAY,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;AACvC,QAAQ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1B;AACA,IAAI,OAAO,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;AACrC;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,IAAI,CAAC;AAC/B;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,EAAE;AACN;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE;AACpB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AACpF,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3D,QAAQ,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,MAAM,KAAK;AAC9E,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3E,gBAAgB,OAAO,IAAI;AAC3B,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5D,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC;AACzD,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC;AACrE;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;AAChE;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG;AAC5D,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AAC3D;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,IAAI,KAAK,YAAY,WAAW;AACxC,YAAY,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC,YAAY,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI;AAC1D,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AAC3G,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC9D,YAAY,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;AAC1C;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE,IAAI,QAAQ;AACtE,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC;AAC1E,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClF;AACA;AACA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;AACnC;AACA;AACA;AACA,MAAM,cAAc,SAAS,IAAI,CAAC;AAClC;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,EAAE;AACN;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE;AACpB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;AACpD,QAAQ,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,IAAI;AACpE,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjE,SAAS,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC;AACtD,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC;AACrE;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;AAC7D;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG;AAC5D,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AAC9D;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,IAAI,KAAK,YAAY,cAAc;AAC3C,YAAY,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC,YAAY,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI;AAC1D,YAAY,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AAC9G,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACjE,YAAY,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;AAC1C;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE,IAAI,QAAQ;AACtE,YAAY,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC;AAC7E,QAAQ,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrF;AACA;AACA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,cAAc,CAAC;AACzC;AACA;AACA;AACA,MAAM,eAAe,SAAS,IAAI,CAAC;AACnC;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,iCAAiC,CAAC;AACrE,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxF,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7H;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACvD,YAAY,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACpD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC1D,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;AACtD,wBAAwB,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3E,gBAAgB,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AAC/D;AACA;AACA,QAAQ,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AAC1D;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAChD,QAAQ,OAAO,GAAG,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AAChF;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;AACnF;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,QAAQ;AACvC,YAAY,MAAM,IAAI,UAAU,CAAC,4CAA4C,CAAC;AAC9E,QAAQ,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5E;AACA;AACA,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,eAAe,CAAC;AAC3C;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,IAAI,CAAC;AACtC;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,iCAAiC,CAAC;AACrE,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7F,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7H;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AACnD,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AACvD;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAChD,QAAQ,OAAO,GAAG,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AACnF;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;AACtF;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,QAAQ;AACvC,YAAY,MAAM,IAAI,UAAU,CAAC,+CAA+C,CAAC;AACjF,QAAQ,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/E;AACA;AACA,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;;AAEjD;AACA;AACA;AACA,MAAM,WAAW,SAAS,IAAI,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,EAAE;AACN;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA,IAAI,SAAS,GAAG,KAAK,EAAE;AACvB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE;AACpB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;AACrE,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,2CAA2C,CAAC;AAC/E,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;AAC1E;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC7E;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AACrG;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,aAAa;AAClD,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;AAChF;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,IAAI,EAAE,KAAK,YAAY,WAAW,CAAC,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS;AAChF,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE;AACxG,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;AACxE,kBAAkB,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;AACtH,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;AACvG;AACA,aAAa,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE;AACzF,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;AACxE,kBAAkB,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACtH,YAAY,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9E;AACA,aAAa;AACb,YAAY,OAAO,IAAI;AACvB;AACA;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;AACxE,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI;AAC3B,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC5C,QAAQ,IAAI,IAAI,CAAC,SAAS;AAC1B,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI;AACjC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE,IAAI,QAAQ;AACtE,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC;AAC1E,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;AACxG;AACA;AACA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,SAAS,IAAI,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA,IAAI,EAAE;AACN;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA,IAAI,SAAS,GAAG,KAAK,EAAE;AACvB,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE;AACpB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,IAAI,CAAC,SAAS,KAAK,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;AAC3E,YAAY,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AACrD,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,+CAA+C,CAAC;AACnF,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;AACrD,QAAQ,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,OAAO;AACxC,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,yBAAyB,CAAC;AAC7D,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC;AACpE,QAAQ,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,6BAA6B,CAAC;AACjE,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC;AACxE;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM;AAC5E,YAAY,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAC7E;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO;AAC3C,QAAQ,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;AACnR;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1F,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAC/E,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,aAAa,KAAK,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG;AAC5F,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC;AAC/G;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE;AAC5E,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;AAC3E,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI;AAC3B,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC5C,QAAQ,IAAI,IAAI,CAAC,SAAS;AAC1B,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI;AACjC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,EAAE,IAAI,QAAQ;AACtE,YAAY,OAAO,IAAI,CAAC,OAAO,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,MAAM,IAAI,QAAQ;AAC9G,YAAY,MAAM,IAAI,UAAU,CAAC,8CAA8C,CAAC;AAChF,QAAQ,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;AACrJ;AACA;AACA,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,iBAAiB,CAAC;AAC/C,SAAS,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE;AACvC,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK;AACxE,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE;AAC7F,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,EAAE;AACd;AACA,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAClB,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACxE,QAAQ,OAAO,IAAI,GAAG,CAAC,EAAE;AACzB,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM;AACpC,gBAAgB,OAAO,IAAI;AAC3B,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU;AAClC,YAAY,IAAI,EAAE;AAClB;AACA;AACA,IAAI,OAAO,KAAK;AAChB;;AAEA,SAAS,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AACrC,IAAI,IAAI,OAAO,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE;AAChC,IAAI,IAAI,QAAQ,EAAE,MAAM;AACxB,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK;AACzD,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;AAC1B,YAAY;AACZ,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK;AAC9B,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC3E,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;AACpF,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC7C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC/C,oBAAoB,IAAI,QAAQ,IAAI,QAAQ,CAAC,EAAE,IAAI,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtF,wBAAwB,QAAQ,CAAC,EAAE,GAAG,GAAG;AACzC;AACA,wBAAwB,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF;AACA;AACA,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,KAAK;AAC5C,gBAAgB,MAAM,CAAC,EAAE,GAAG,GAAG;AAC/B;AACA,gBAAgB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACtE;AACA,KAAK,CAAC;AACN,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC;AACA,SAAS,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AACxC,IAAI,IAAI,OAAO,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC;AAC9B,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK;AACjD,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;AAC1B,YAAY;AACZ,QAAQ,IAAI,EAAE;AACd,QAAQ,IAAI,QAAQ,GAAG,IAAI;AAC3B,QAAQ,IAAI,IAAI,YAAY,QAAQ,EAAE;AACtC,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK;AACvC,YAAY,OAAO,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAC9C,gBAAgB,CAAC,QAAQ,KAAK,QAAQ,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;AACzD,gBAAgB,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC;AAC9C;AACA;AACA,aAAa,IAAI,IAAI,EAAE;AACvB,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,gBAAgB,QAAQ,GAAG,CAAC,IAAI,CAAC;AACjC;AACA,aAAa;AACb,YAAY,QAAQ,GAAG,IAAI,CAAC,KAAK;AACjC;AACA,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;AACzC,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;AACvD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,gBAAgB,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK;AAC9C,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzD,oBAAoB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;AACtC,oBAAoB,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACxE,wBAAwB,KAAK,GAAG,CAAC;AACjC;AACA,gBAAgB,IAAI,KAAK,EAAE;AAC3B,oBAAoB,KAAK,CAAC,EAAE,GAAG,GAAG;AAClC,oBAAoB,KAAK,CAAC,IAAI,GAAG,IAAI;AACrC;AACA,qBAAqB;AACrB,oBAAoB,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AACrF;AACA;AACA;AACA,KAAK,CAAC;AACN,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5E;AACA,SAAS,iBAAiB,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,GAAG,UAAU,CAAC,YAAY,EAAE,aAAa,GAAG,IAAI,EAAE;AACvG,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;AACjC,IAAI,IAAI,SAAS,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;AACrC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,QAAQ;AAC7D,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;AACjD,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,SAAS,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAClE;AACA,aAAa;AACb,YAAY,KAAK,GAAG,OAAO;AAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AACvD,gBAAgB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACnE,oBAAoB,EAAE,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,YAAY,IAAI,aAAa,IAAI,KAAK,CAAC,MAAM,IAAI,UAAU,CAAC,UAAU,IAAI,KAAK,EAAE;AACjF,gBAAgB,IAAI,CAAC,EAAE,OAAO,GAAG,WAAW,EAAE,KAAK;AACnD,gBAAgB,OAAO,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACrD,oBAAoB,IAAI,CAAC,KAAK;AAC9B,wBAAwB,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjI,oBAAoB,SAAS,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACtG;AACA;AACA;AACA,QAAQ,GAAG,GAAG,GAAG;AACjB;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACzB,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC;AACzD,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnD;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAClD,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7B;;AAEA,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AAClC,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC;AACjE,SAAS,GAAG,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM;AAC7B,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC;AAC7E,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE;AAC5C,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1C,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;AACpF,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;AAC5E,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;AACpF,YAAY;AACZ;AACA,IAAI,OAAO,IAAI;AACf;AACA,SAAS,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;AACjC,IAAI,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,KAAK;AACrC,IAAI,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AACzE,IAAI,IAAI,KAAK,GAAG,QAAQ,EAAE,GAAG,GAAG,MAAM;AACtC,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,SAAS,GAAG,CAAC;AAC9C,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;AAC1D,QAAQ,IAAI,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AAC7C,YAAY,SAAS,GAAG,IAAI;AAC5B,YAAY,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9D,YAAY,SAAS,EAAE;AACvB;AACA,aAAa;AACb,YAAY,KAAK,EAAE;AACnB;AACA,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,OAAO,GAAG,CAAC;AAC3C,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE;AAC1D,QAAQ,IAAI,SAAS,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACxD,YAAY,SAAS,GAAG,IAAI;AAC5B,YAAY,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,YAAY,OAAO,EAAE;AACrB;AACA,aAAa;AACb,YAAY,GAAG,EAAE;AACjB;AACA,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE;AACzE,IAAI,IAAI,MAAM,GAAG,mBAAmB,CAAC,KAAK,EAAE,QAAQ,CAAC;AACrD,IAAI,IAAI,KAAK,GAAG,MAAM,IAAI,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC;AAClE,IAAI,IAAI,CAAC,KAAK;AACd,QAAQ,OAAO,IAAI;AACnB,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,SAAS;AAC/B,SAAS,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACvE;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AACxD,SAAS,mBAAmB,CAAC,KAAK,EAAE,IAAI,EAAE;AAC1C,IAAI,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,KAAK;AAChD,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC;AACrE,IAAI,IAAI,CAAC,MAAM;AACf,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;AAChD,IAAI,OAAO,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,IAAI;AAC7E;AACA,SAAS,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE;AACzC,IAAI,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,KAAK;AAChD,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;AACxC,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;AAC3D,IAAI,IAAI,CAAC,MAAM;AACf,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;AACnE,IAAI,IAAI,UAAU,GAAG,QAAQ,CAAC,YAAY;AAC1C,IAAI,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,UAAU,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE;AAC5D,QAAQ,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC/D,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,QAAQ;AAC3C,QAAQ,OAAO,IAAI;AACnB,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;AACnC,IAAI,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK;AAChC,IAAI,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACnD,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC1B,YAAY,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC;AAC5E,YAAY,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ;AACzC,gBAAgB,MAAM,IAAI,UAAU,CAAC,wFAAwF,CAAC;AAC9H;AACA,QAAQ,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACpF;AACA,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG;AAC5C,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC3G;AACA,SAASE,cAAY,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AACjD,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;AACzB,QAAQ,MAAM,IAAI,UAAU,CAAC,kDAAkD,CAAC;AAChF,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM;AACjC,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK;AACjD,QAAQ,IAAI,SAAS,GAAG,OAAO,KAAK,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK;AACxE,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;AAChE,YAAY,aAAa,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE;AAC7E,YAAY,IAAI,eAAe,GAAG,IAAI;AACtC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;AAClD,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,IAAI,KAAK,EAAE,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC;AACtI,gBAAgB,IAAI,GAAG,IAAI,CAAC,gBAAgB;AAC5C,oBAAoB,eAAe,GAAG,KAAK;AAC3C,qBAAqB,IAAI,CAAC,GAAG,IAAI,gBAAgB;AACjD,oBAAoB,eAAe,GAAG,IAAI;AAC1C;AACA;AACA,YAAY,IAAI,eAAe,KAAK,KAAK;AACzC,gBAAgB,iBAAiB,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC;AACzD,YAAY,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,KAAK,IAAI,CAAC;AACnH,YAAY,IAAI,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;AACnD,YAAY,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxF,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACjK,YAAY,IAAI,eAAe,KAAK,IAAI;AACxC,gBAAgB,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC;AACvD,YAAY,OAAO,KAAK;AACxB;AACA,KAAK,CAAC;AACN;AACA,SAAS,eAAe,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AACjD,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;AACpC,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;AAC1B,YAAY,IAAI,CAAC,EAAE,OAAO,GAAG,WAAW;AACxC,YAAY,OAAO,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACjD,gBAAgB,IAAI,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;AACrF,gBAAgB,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;AAChG;AACA;AACA,KAAK,CAAC;AACN;AACA,SAAS,iBAAiB,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE;AACnD,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,KAAK;AACpC,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;AAClE,YAAY,IAAI,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC;AACvE,YAAY,EAAE,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzE;AACA,KAAK,CAAC;AACN;AACA,SAAS,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACvC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AACrD,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AACpD,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;AACjC,IAAI,IAAI,CAAC,IAAI;AACb,QAAQ,MAAM,IAAI,UAAU,CAAC,2BAA2B,CAAC;AACzD,IAAI,IAAI,CAAC,IAAI;AACb,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI;AACxB,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;AAC/D,IAAI,IAAI,IAAI,CAAC,MAAM;AACnB,QAAQ,OAAO,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC;AAChE,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC,QAAQ,MAAM,IAAI,UAAU,CAAC,gCAAgC,GAAG,IAAI,CAAC,IAAI,CAAC;AAC1E,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAChJ;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,EAAE;AACnD,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1D,IAAI,IAAI,SAAS,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM;AACpF,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AACnD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AACrE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAC1G,QAAQ,OAAO,KAAK;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AACpE,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACtD,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AACpC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC;AAClE,QAAQ,IAAI,aAAa,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3D,QAAQ,IAAI,aAAa;AACzB,YAAY,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACvF,QAAQ,IAAI,KAAK,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI;AACzD,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1F,YAAY,OAAO,KAAK;AACxB;AACA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACrC,IAAI,IAAI,QAAQ,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;AAC9C,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AAC5G;AACA,SAAS,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,EAAE;AAC/C,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,QAAQ,CAAC,KAAK;AACnF,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AACrF,QAAQ,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD,QAAQ,IAAI,SAAS,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;AACnD,QAAQ,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnH;AACA,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;AAC3F;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;AAC3B,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AACrD,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC;AACpD,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC;AAChD;AACA,SAAS,kCAAkC,CAAC,CAAC,EAAE,CAAC,EAAE;AAClD,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI;AACvB,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC;AAC9C,IAAI,IAAI,EAAE,oBAAoB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM;AAChD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9B,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,oBAAoB,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI;AAC7F,QAAQ,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;AAC5C,YAAY,OAAO,KAAK;AACxB;AACA,IAAI,OAAO,KAAK,CAAC,QAAQ;AACzB;AACA,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,kCAAkC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9E;AA+BA,SAAS,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;AAC9B,IAAI,IAAI,eAAe,GAAG,IAAI;AAC9B,IAAI,IAAI,EAAE,oBAAoB,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;AACrD,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,UAAU,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI;AAC/E,IAAI,IAAI,oBAAoB,IAAI,UAAU,CAAC,aAAa,EAAE;AAC1D,QAAQ,IAAI,GAAG,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK;AAChD,QAAQ,IAAI,gBAAgB,GAAG,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACxF,QAAQ,IAAI,GAAG,IAAI,CAAC,gBAAgB;AACpC,YAAY,eAAe,GAAG,KAAK;AACnC,aAAa,IAAI,CAAC,GAAG,IAAI,gBAAgB;AACzC,YAAY,eAAe,GAAG,IAAI;AAClC;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM;AACjC,IAAI,IAAI,eAAe,KAAK,KAAK,EAAE;AACnC,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC;AAChD,QAAQ,iBAAiB,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC;AACtE;AACA,IAAI,IAAI,UAAU,CAAC,aAAa;AAChC,QAAQ,iBAAiB,CAAC,EAAE,EAAE,GAAG,GAAG,KAAK,GAAG,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,eAAe,IAAI,IAAI,CAAC;AACnI,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC;AAC7E,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpF,IAAI,IAAI,eAAe,KAAK,IAAI,EAAE;AAClC,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AACzC,QAAQ,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;AAC1E;AACA,IAAI,OAAO,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE;AACzC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;AAC/B,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC;AACxE,QAAQ,OAAO,GAAG;AAClB,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;AACnE,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,YAAY,IAAI,KAAK,GAAG,CAAC;AACzB,gBAAgB,OAAO,IAAI;AAC3B;AACA,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;AACrD,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC1C,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;AACnE,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACxC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;AAC/C,gBAAgB,OAAO,IAAI;AAC3B;AACA,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;AAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;AAC3B,QAAQ,OAAO,GAAG;AAClB,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE;AAC5C,QAAQ,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO;AAC5C,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;AACrF,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9C,YAAY,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC3G,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9D,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK;AACnD,YAAY,IAAI,IAAI,IAAI,CAAC,EAAE;AAC3B,gBAAgB,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;AACvE;AACA,iBAAiB;AACjB,gBAAgB,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACrG,gBAAgB,IAAI,GAAG,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC3F;AACA,YAAY,IAAI,IAAI;AACpB,gBAAgB,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/F;AACA;AACA,IAAI,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE;AAChE,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;AACjC,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;AACxD;AACA,IAAI,IAAI,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC;AACxC,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC;AAC/C,IAAI,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE;AAC9C;AACA,SAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE;AAC1C,IAAI,OAAO,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,EAAE;AAC7E,QAAQ,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,MAAM,CAAC;AACb,IAAI,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;AACtC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK;AACpC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC/B,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;AAC/B,gBAAgB,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AAC9D,aAAa,CAAC;AACd;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AAC5C,YAAY,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxE;AACA,IAAI,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AAClD,IAAI,GAAG,GAAG;AACV;AACA;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AACnC,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE;AACzC,YAAY,IAAI,GAAG;AACnB,gBAAgB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AACpC;AACA,gBAAgB,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,EAAE,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK;AAC7G,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC3G,QAAQ,IAAI,CAAC,GAAG;AAChB,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,GAAG,KAAK,CAAC,KAAK,EAAE,OAAO,GAAG,GAAG,CAAC,KAAK;AAC/E,QAAQ,OAAO,SAAS,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,EAAE;AAChE,YAAY,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO;AAChD,YAAY,SAAS,EAAE;AACvB,YAAY,OAAO,EAAE;AACrB;AACA,QAAQ,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;AAC1D,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;AAC3B,YAAY,OAAO,IAAI,iBAAiB,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC;AAChH,QAAQ,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG;AACnD,YAAY,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;AAC7D,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS;AAChD,QAAQ,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;AAC3G,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU;AACrC,YAAY,IAAI,GAAG,CAAC,UAAU,GAAG,CAAC;AAClC,gBAAgB,OAAO,GAAG,CAAC;AAC3B,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,IAAI,CAAC,EAAE;AAC1D,gBAAgB,UAAU,GAAG,CAAC;AAC9B,gBAAgB;AAChB;AACA,YAAY,GAAG,GAAG,IAAI,CAAC,OAAO;AAC9B;AACA;AACA;AACA,QAAQ,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE;AAC9C,YAAY,KAAK,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,IAAI,CAAC,EAAE,UAAU,EAAE,EAAE;AACnH,gBAAgB,IAAI,QAAQ,EAAE,MAAM,GAAG,IAAI;AAC3C,gBAAgB,IAAI,UAAU,EAAE;AAChC,oBAAoB,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,UAAU;AACxF,oBAAoB,QAAQ,GAAG,MAAM,CAAC,OAAO;AAC7C;AACA,qBAAqB;AACrB,oBAAoB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO;AACpD;AACA,gBAAgB,IAAI,KAAK,GAAG,QAAQ,CAAC,UAAU;AAC/C,gBAAgB,KAAK,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,EAAE,aAAa,IAAI,CAAC,EAAE,aAAa,EAAE,EAAE;AAC1F,oBAAoB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,MAAM,GAAG,IAAI;AAC3F;AACA;AACA;AACA,oBAAoB,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC;AACpI,0BAA0B,MAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACxE,wBAAwB,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE;AAC5E;AACA;AACA,yBAAyB,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1F,wBAAwB,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE;AAC1E;AACA;AACA,oBAAoB,IAAI,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9D,wBAAwB;AACxB;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ;AAC3D,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;AACjD,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM;AACxD,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,SAAS,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,GAAG,SAAS,IAAI,OAAO,CAAC,IAAI,GAAG,OAAO,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAClJ,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ;AAC3D,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;AACjD,QAAQ,IAAI,KAAK,CAAC,UAAU,IAAI,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE;AACpD,YAAY,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,SAAS,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI;AAC9E,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,SAAS,GAAG,CAAC,GAAG,OAAO,CAAC;AACtI;AACA,aAAa;AACb,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC;AAClG;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;AACpE,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,aAAa;AACzC,YAAY,IAAI,CAAC,iBAAiB,EAAE;AACpC,QAAQ,IAAI,IAAI;AAChB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AAChD,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO;AACrF,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,UAAU;AACpD,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE;AAC/B,QAAQ,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC1D,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE;AACtD,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzC,YAAY,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC;AAC/C;AACA;AACA;AACA;AACA,QAAQ,IAAI,YAAY,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,UAAU,KAAK,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;AAC9F;AACA;AACA,QAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC,UAAU,EAAE;AAC5C,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AAClF,YAAY,IAAI,CAAC,OAAO;AACxB,gBAAgB;AAChB,YAAY,KAAK,EAAE;AACnB,YAAY,IAAI,KAAK,GAAG,CAAC,IAAI,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAClE,gBAAgB,KAAK,GAAG,OAAO;AAC/B,gBAAgB,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,KAAK,IAAI,QAAQ,CAAC,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AAChK;AACA;AACA,QAAQ,IAAI,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC,UAAU;AAChD,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,YAAY,GAAG,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnF,QAAQ,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,KAAK;AAClD;AACA;AACA,QAAQ,IAAI,KAAK,IAAI,YAAY,GAAG,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;AAC5H,YAAY,IAAI,CAAC,iBAAiB,EAAE;AACpC;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;AAC/D,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS;AACpC,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;AAChG,YAAY,GAAG,GAAG,IAAI,CAAC,OAAO;AAC9B;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO;AAC7H,cAAc,UAAU,IAAI,CAAC,GAAG,KAAK,CAAC;AACtC,kBAAkB,IAAI,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,UAAU,GAAG,CAAC,CAAC;AAClJ;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW;AACxC,YAAY,OAAO,CAAC,CAAC;AACrB,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK;AAClD,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;AAC5G,aAAa,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;AAClH,YAAY,OAAO,CAAC,CAAC;AACrB,QAAQ,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;AAC/D,QAAQ,OAAO,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;AAC1D,YAAY,EAAE,KAAK;AACnB,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,cAAc,CAAC,GAAG,EAAE;AACxB,QAAQ,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACzE,YAAY,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClD,YAAY,IAAI,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9F,YAAY,IAAI,GAAG,GAAG,gBAAgB,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC;AACtE,YAAY,IAAI,CAAC,GAAG;AACpB,gBAAgB;AAChB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtD,gBAAgB,IAAI,OAAO,GAAG,gBAAgB,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;AACzE,gBAAgB,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU;AAClD,oBAAoB,SAAS,IAAI;AACjC;AACA,YAAY,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;AAC/F;AACA;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;AAC5C,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;AACvC,YAAY,IAAI,CAAC,iBAAiB,EAAE;AACpC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU;AAChC,YAAY,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC;AAC5E,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AAC3D,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7G,YAAY,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;AAC7D;AACA,QAAQ,OAAO,GAAG;AAClB;AACA,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE;AAClD,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3C,QAAQ,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AAC7C,QAAQ,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;AACxG,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;AAC9D;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;AACtC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC;AAC7D,QAAQ,IAAI,GAAG,CAAC,UAAU;AAC1B,YAAY,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC;AAC/E;AACA;AACA,SAAS,gBAAgB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;AAClD,IAAI,IAAI,KAAK,IAAI,CAAC;AAClB,QAAQ,OAAO,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC;AAC9D,IAAI,OAAO,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9H;AACA,SAAS,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE;AACjD,IAAI,IAAI,KAAK,IAAI,CAAC;AAClB,QAAQ,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC;AACvC,IAAI,OAAO,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AACjJ;AACA,SAAS,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE;AACpC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;AAClC,QAAQ,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,OAAO;AAC9C,IAAI,OAAO,QAAQ;AACnB;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE;AAClD,IAAI,IAAI,SAAS,IAAI,CAAC;AACtB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO;AAC3B,IAAI,IAAI,SAAS,GAAG,CAAC;AACrB,QAAQ,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3H,IAAI,IAAI,SAAS,GAAG,CAAC,EAAE;AACvB,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;AACnE,QAAQ,IAAI,OAAO,IAAI,CAAC;AACxB,YAAY,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC3G;AACA,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1B;AACA,SAAS,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;AACzD,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;AACvF,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;AACtE,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC;AACzD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI;AACvE;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE;AACpD,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACtD,YAAY,OAAO,IAAI;AACvB,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB;AAC7D;AACA,SAAS,YAAY,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;AAC3C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI;AACnB,QAAQ,OAAO,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;AACvC,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;AAC9D,IAAI,IAAI,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC;AACxC,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AACxD,IAAI,IAAI,YAAY,GAAG,aAAa,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC/D;AACA,IAAI,IAAI,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;AAClD,QAAQ,YAAY,CAAC,GAAG,EAAE;AAC1B;AACA;AACA,IAAI,IAAI,eAAe,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAC5C,IAAI,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;AACzC;AACA;AACA;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE;AACtE,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;AAC1C,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS;AACrE,YAAY;AACZ,QAAQ,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACxC,YAAY,eAAe,GAAG,CAAC;AAC/B,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG;AACvC,YAAY,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC;AACA;AACA;AACA,IAAI,IAAI,oBAAoB,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;AACpE,IAAI,IAAI,SAAS,GAAG,EAAE,EAAE,cAAc,GAAG,KAAK,CAAC,SAAS;AACxD,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;AACnD,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU;AACrC,QAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5B,QAAQ,IAAI,CAAC,IAAI,KAAK,CAAC,SAAS;AAChC,YAAY;AACZ,QAAQ,OAAO,GAAG,IAAI,CAAC,OAAO;AAC9B;AACA;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,QAAQ,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC;AACxE,QAAQ,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;AAClF,YAAY,cAAc,GAAG,CAAC;AAC9B,aAAa,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW;AAClD,YAAY;AACZ;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,KAAK,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;AACxE,QAAQ,IAAI,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC;AACzC,QAAQ,IAAI,CAAC,MAAM;AACnB,YAAY;AACZ,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD;AACA;AACA,YAAY,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,oBAAoB,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE,MAAM,GAAG,IAAI;AAC3G,YAAY,IAAI,WAAW,GAAG,CAAC,EAAE;AACjC,gBAAgB,MAAM,GAAG,KAAK;AAC9B,gBAAgB,WAAW,GAAG,CAAC,WAAW;AAC1C;AACA,YAAY,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;AAC1F,YAAY,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC;AAC9E,gBAAgB,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,IAAI,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;AACpM;AACA;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM;AACpC,IAAI,KAAK,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACvD,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC;AACnC,QAAQ,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU;AACxC,YAAY;AACZ,QAAQ,IAAI,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC;AACnC,QAAQ,IAAI,KAAK,GAAG,CAAC;AACrB,YAAY;AACZ,QAAQ,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AAClC,QAAQ,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;AAC7B;AACA;AACA,SAAS,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;AAClE,IAAI,IAAI,KAAK,GAAG,OAAO,EAAE;AACzB,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,UAAU;AACvC,QAAQ,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AACzH;AACA,IAAI,IAAI,KAAK,GAAG,OAAO,EAAE;AACzB,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;AAC5C,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC/D,QAAQ,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC5F;AACA,IAAI,OAAO,QAAQ;AACnB;AACA,SAAS,gBAAgB,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AAC9C,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;AAClF,QAAQ,IAAI,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;AACxD,QAAQ,IAAI,KAAK,IAAI,IAAI;AACzB,YAAY,IAAI,GAAG,EAAE,GAAG,KAAK;AAC7B;AACA,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnE;AACA,SAAS,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;AACnC,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;AAC9D,IAAI,IAAI,OAAO,GAAG,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC;AAC3C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ;AAChF,YAAY,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAChE,QAAQ,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACtH,YAAY,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACnE;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AAC7D,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC;AAC7G,YAAY,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxH,YAAY,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACjD;AACA,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;AACvB;AACA;AACA;AACA,SAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE;AACnC,IAAI,IAAI,MAAM,GAAG,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC;AAChE,IAAI,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AACjD,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;AAClD,YAAY,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAC7C,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAC3C,YAAY;AACZ,QAAQ,IAAI,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACjC,aAAa,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,IAAI,GAAG,CAAC,MAAM,CAAC,aAAa;AACzG,gBAAgB,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;AACnD,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B;AACA,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA;AACA;AACA,MAAM,QAAQ,SAAS,IAAI,CAAC;AAC5B;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,GAAG;AACP;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA,IAAI,KAAK,EAAE;AACX,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,sCAAsC,CAAC;AAC1E,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACvC,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK;AACnC,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAC1C,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK;AACrC,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAC/D,QAAQ,OAAO,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7H;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,OAAO,CAAC,KAAK;AAC5B;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvF;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAChD,QAAQ,OAAO,GAAG,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AACrF;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;AACtF;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ;AACvE,YAAY,MAAM,IAAI,UAAU,CAAC,qCAAqC,CAAC;AACvE,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAC5D;AACA;AACA,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC7B;AACA;AACA;AACA,MAAM,WAAW,SAAS,IAAI,CAAC;AAC/B;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA,IAAI,KAAK,EAAE;AACX,QAAQ,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B;AACA,IAAI,KAAK,CAAC,GAAG,EAAE;AACf,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACvC,QAAQ,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK;AAClC,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;AACzC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK;AACrC,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC;AACpE,QAAQ,OAAO,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC;AACrC;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,OAAO,CAAC,KAAK;AAC5B;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/D;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;AAC1E;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ;AACxC,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC;AAC1E,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AACrD;AACA;AACA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;;AAEnC;AACA;AACA;AACA,IAAI,cAAc,GAAG,cAAc,KAAK,CAAC;AACzC,CAAC;AACD,cAAc,GAAG,SAAS,cAAc,CAAC,OAAO,EAAE;AAClD,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACvC,IAAI,GAAG,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS;AAC5C,IAAI,OAAO,GAAG;AACd,CAAC;AACD,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;AACzD,cAAc,CAAC,SAAS,CAAC,WAAW,GAAG,cAAc;AACrD,cAAc,CAAC,SAAS,CAAC,IAAI,GAAG,gBAAgB;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;AACvB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,EAAE;AACtB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO;AAClC;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;AACrE;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AACzC,QAAQ,IAAI,MAAM,CAAC,MAAM;AACzB,YAAY,MAAM,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC;AACnD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AACzC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM;AAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC;AAC1C,QAAQ,OAAO,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AACpC;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAChC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7B,QAAQ,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;AAC7C,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE;AAClD,QAAQ,IAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC;AACzD,QAAQ,IAAI,IAAI;AAChB,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE;AACnC,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC;AAClD;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;AAClC,QAAQ,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC;AAC3C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AACrC,QAAQ,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AAC9C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE;AAC1B,QAAQ,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;AACnC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE;AACxB,QAAQ,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;AACjC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE;AACzB,QAAQ,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;AAC9B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;AAC1B,QAAQ,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;AACnC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE;AACtD,QAAQA,cAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC;AACjD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,KAAK,EAAE;AAClD,QAAQ,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AACpD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;AACvC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACjD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE;AACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC/C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE;AAC3B,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;AAC9B,QAAQ,IAAI,EAAE,IAAI,YAAY,IAAI,CAAC,EAAE;AACrC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;AAC3C,YAAY,IAAI,CAAC,IAAI;AACrB,gBAAgB,MAAM,IAAI,UAAU,CAAC,sBAAsB,GAAG,GAAG,CAAC;AAClE,YAAY,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3C,YAAY,IAAI,CAAC,IAAI;AACrB,gBAAgB,OAAO,IAAI;AAC3B;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACpD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,EAAE;AACtC,QAAQ,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC;AAC3C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AAC5B,QAAQ,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AACrC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AAC/B,QAAQ,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AACxC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE;AAC9C,QAAQ,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC;AACvD,QAAQ,OAAO,IAAI;AACnB;AACA;;AC/lEA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACvC;AACA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,MAAM,EAAE;AACnB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5F;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AAC3C;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACvC;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACvC;AACA;AACA;AACA,IAAI,IAAI,EAAE,GAAG,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACnC;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;AACnC;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG;AACjC;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM;AAChC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AAC9C,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;AACxD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,EAAE,EAAE,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;AACvC;AACA;AACA;AACA,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,GAAG,IAAI;AACnE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,UAAU,GAAG,QAAQ;AACjC,YAAY,QAAQ,GAAG,QAAQ,CAAC,SAAS;AACzC;AACA,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM;AAC3D,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;AAC/E,YAAY,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;AACpG,YAAY,IAAI,CAAC,IAAI,CAAC;AACtB,gBAAgB,uBAAuB,CAAC,EAAE,EAAE,OAAO,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,UAAU,IAAI,UAAU,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACpI;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE;AAC1B,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM;AAC3D,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;AAC/E,YAAY,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACxE,YAAY,IAAI,CAAC,EAAE;AACnB,gBAAgB,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;AACxC;AACA,iBAAiB;AACjB,gBAAgB,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AACnD,gBAAgB,uBAAuB,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,GAAG,KAAK,EAAE;AACjD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI;AACtE,cAAc,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC;AAC/F,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;AAC9D,YAAY,IAAI,KAAK,GAAG,GAAG,GAAG;AAC9B,kBAAkB,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,QAAQ;AAC1H,kBAAkB,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC;AAC9H,YAAY,IAAI,KAAK;AACrB,gBAAgB,OAAO,KAAK;AAC5B;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE;AAChC,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,GAAG,EAAE;AACxB,QAAQ,OAAO,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,YAAY,CAAC,GAAG,CAAC;AAC1E;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,KAAK,CAAC,GAAG,EAAE;AACtB,QAAQ,OAAO,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,YAAY,CAAC,GAAG,CAAC;AACvG;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;AAC/B,YAAY,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC;AACxE,QAAQ,IAAI,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AACxC,QAAQ,IAAI,CAAC,GAAG;AAChB,YAAY,MAAM,IAAI,UAAU,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1E,QAAQ,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE;AACtC,QAAQ,IAAI,EAAE,IAAI,WAAW;AAC7B,YAAY,MAAM,IAAI,UAAU,CAAC,qCAAqC,GAAG,EAAE,CAAC;AAC5E,QAAQ,WAAW,CAAC,EAAE,CAAC,GAAG,cAAc;AACxC,QAAQ,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE;AAC5C,QAAQ,OAAO,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,OAAO,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE;AAC5E;AACA;AACA,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI;AAClC;AACA;AACA;AACA,MAAM,cAAc,CAAC;AACrB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,KAAK;AACT;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB;AACA;AACA,IAAI,wBAAwB,GAAG,KAAK;AACpC,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAClC,IAAI,IAAI,CAAC,wBAAwB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;AACjE,QAAQ,wBAAwB,GAAG,IAAI;AACvC,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,uEAAuE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,SAAS,CAAC;AACtC;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE,KAAK,GAAG,OAAO,EAAE;AAC1C,QAAQ,kBAAkB,CAAC,OAAO,CAAC;AACnC,QAAQ,kBAAkB,CAAC,KAAK,CAAC;AACjC,QAAQ,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClF,IAAI,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE;AACtB,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa;AACvC,YAAY,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3D,QAAQ,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,GAAG,OAAO,GAAG,KAAK,EAAE,KAAK,CAAC;AACvF;AACA,IAAI,OAAO,CAAC,EAAE,EAAE,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;AACvC,QAAQ,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC;AAClC,QAAQ,IAAI,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE;AACpC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AACxD,YAAY,IAAI,KAAK;AACrB,gBAAgB,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;AACrC;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,KAAK,YAAY,aAAa,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;AACvG;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;AACvD;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AACrE;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,QAAQ,IAAI,OAAO,IAAI,CAAC,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ;AAC1E,YAAY,MAAM,IAAI,UAAU,CAAC,0CAA0C,CAAC;AAC5E,QAAQ,OAAO,IAAI,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClF;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,GAAG,MAAM,EAAE;AAC9C,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AACzC,QAAQ,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,MAAM,GAAG,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;AACzC,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG;AAC1C,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI;AACzB,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE;AACzC,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AACvG,YAAY,IAAI,KAAK;AACrB,gBAAgB,KAAK,GAAG,KAAK,CAAC,KAAK;AACnC;AACA,gBAAgB,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;AAClD;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE;AAC3C,YAAY,IAAI,IAAI,IAAI,CAAC,EAAE;AAC3B,gBAAgB,OAAO,GAAG,KAAK;AAC/B;AACA,iBAAiB;AACjB,gBAAgB,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,OAAO;AACvH,gBAAgB,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;AAC3D,oBAAoB,OAAO,GAAG,KAAK;AACnC;AACA;AACA,QAAQ,OAAO,IAAI,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC;AAChD;AACA;AACA,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC;AACvC,MAAM,YAAY,CAAC;AACnB,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE;AAC9B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjF;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,OAAO,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,SAAS,CAAC;AACtC;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS;AACjC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;AACjE,QAAQ,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE;AACtB,QAAQ,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7D,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;AACnC,QAAQ,IAAI,OAAO;AACnB,YAAY,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AACvC,QAAQ,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC;AACtC;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACxD;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,KAAK,YAAY,aAAa,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM;AAC5E;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;AACpD;AACA,IAAI,WAAW,GAAG,EAAE,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzD;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,QAAQ,IAAI,OAAO,IAAI,CAAC,MAAM,IAAI,QAAQ;AAC1C,YAAY,MAAM,IAAI,UAAU,CAAC,0CAA0C,CAAC;AAC5E,QAAQ,OAAO,IAAI,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1D;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE;AAC7B,QAAQ,OAAO,IAAI,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,YAAY,CAAC,IAAI,EAAE;AAC9B,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,KAAK;AAClE;AACA;AACA,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK;AACvC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC;AACvC,MAAM,YAAY,CAAC;AACnB,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA,IAAI,GAAG,CAAC,OAAO,EAAE;AACjB,QAAQ,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7D,QAAQ,OAAO,OAAO,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC;AAC3E;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS;AAClE,QAAQ,IAAI,IAAI,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;AACpD,YAAY,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC;AAC1C,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,SAAS,CAAC;AACrC;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE;AACrB,QAAQ,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC5D;AACA,IAAI,OAAO,CAAC,EAAE,EAAE,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;AACvC,QAAQ,IAAI,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE;AACpC,YAAY,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7C,YAAY,IAAI,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC;AAC/C,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC;AACrC,gBAAgB,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC;AACpC;AACA,aAAa;AACb,YAAY,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC;AACtC;AACA;AACA,IAAI,MAAM,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACtC;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,EAAE,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;AACxD,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;AAC5C,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,YAAY,CAAC;AACrD,IAAI,WAAW,GAAG,EAAE,OAAO,WAAW,CAAC;AACvC;AACA,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC;AACrC,MAAM,WAAW,GAAG;AACpB,IAAI,GAAG,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE;AAC1B,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE;AACnE,IAAI,IAAI,IAAI,CAAC,aAAa;AAC1B,QAAQ,OAAO,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE;AAC9F,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC3B,YAAY,IAAI,KAAK,GAAG,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,UAAU,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;AACzG,YAAY,IAAI,KAAK;AACrB,gBAAgB,OAAO,KAAK;AAC5B;AACA,aAAa,IAAI,CAAC,IAAI,IAAI,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;AAC7D,YAAY,OAAO,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAClF;AACA,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,GAAG,GAAG;AACnC;AACA,IAAI,OAAO,IAAI;AACf;AACA,SAAS,uBAAuB,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;AACrD,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;AAClC,IAAI,IAAI,IAAI,GAAG,QAAQ;AACvB,QAAQ;AACR,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7B,IAAI,IAAI,EAAE,IAAI,YAAY,WAAW,IAAI,IAAI,YAAY,iBAAiB,CAAC;AAC3E,QAAQ;AACR,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG;AACxC,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,KAAK,EAAE,IAAI,GAAG,IAAI,IAAI;AAClE,QAAQ,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC;AACvB,IAAI,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC9D;;AAEA,MAAM,WAAW,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,cAAc,GAAG,CAAC;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,SAAS,CAAC;AACpC;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;AACxB;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC;AAChC;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC;AACxB;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE;AAC9B,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,SAAS;AAC3C,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACtD,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACzG,YAAY,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AACpD;AACA,QAAQ,OAAO,IAAI,CAAC,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,SAAS,EAAE;AAC5B,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG;AAC3C,YAAY,MAAM,IAAI,UAAU,CAAC,qEAAqE,CAAC;AACvG,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS;AACrC,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;AAChD,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,IAAI,CAAC,aAAa;AACpE,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI;AAC/B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,IAAI,YAAY,GAAG;AACvB,QAAQ,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,IAAI,CAAC;AAC/C;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,KAAK,EAAE;AAC1B,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK;AAChC,QAAQ,IAAI,CAAC,OAAO,IAAI,aAAa;AACrC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC;AAClF,YAAY,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACtC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,IAAI,EAAE;AACxB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;AAChG;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,IAAI,EAAE;AAC3B,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;AACrG;AACA;AACA;AACA;AACA,IAAI,IAAI,cAAc,GAAG;AACzB,QAAQ,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,IAAI,CAAC;AACjD;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE;AACvB,QAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AAChC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,aAAa;AACpD,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI;AAC/B;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE;AAClB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;AAC3C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAoB,CAAC,IAAI,EAAE,YAAY,GAAG,IAAI,EAAE;AACpD,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;AACtC,QAAQ,IAAI,YAAY;AACxB,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzJ,QAAQ,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC;AACzC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG;AACtB,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;AACpC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;AAC/B,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;AACzC,QAAQ,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1B,YAAY,IAAI,CAAC,IAAI;AACrB,gBAAgB,OAAO,IAAI,CAAC,eAAe,EAAE;AAC7C,YAAY,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;AACrE;AACA,aAAa;AACb,YAAY,IAAI,EAAE,IAAI,IAAI;AAC1B,gBAAgB,EAAE,GAAG,IAAI;AACzB,YAAY,EAAE,GAAG,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE;AACvC,YAAY,IAAI,CAAC,IAAI;AACrB,gBAAgB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;AACjD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW;AACxC,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;AAClD,gBAAgB,KAAK,GAAG,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC5F;AACA,YAAY,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACrE,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK;AACrC,gBAAgB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACrE,YAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE;AACxB,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AACjE,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;AAC/B,YAAY,OAAO,KAAK;AACxB,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,IAAI,CAAC,OAAO,IAAI,cAAc;AACtC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,IAAI,gBAAgB,GAAG;AAC3B,QAAQ,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,cAAc,IAAI,CAAC;AAClD;AACA;;AAEA,SAAS,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE;AACvB,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AACzC;AACA,MAAM,SAAS,CAAC;AAChB,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAClC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACzC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC;AAC3C;AACA;AACA,MAAM,UAAU,GAAG;AACnB,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE;AACzB,QAAQ,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,EAAE;AACxF,QAAQ,KAAK,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC;AAClC,KAAK,CAAC;AACN,IAAI,IAAI,SAAS,CAAC,WAAW,EAAE;AAC/B,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,OAAO,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9F,QAAQ,KAAK,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,SAAS,CAAC;AACxC,KAAK,CAAC;AACN,IAAI,IAAI,SAAS,CAAC,aAAa,EAAE;AACjC,QAAQ,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,EAAE;AAC3D,QAAQ,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;AAChG,KAAK,CAAC;AACN,IAAI,IAAI,SAAS,CAAC,mBAAmB,EAAE;AACvC,QAAQ,IAAI,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE;AAC5B,QAAQ,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,gBAAgB,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;AACvE,KAAK;AACL,CAAC;AACD;AACA;AACA,MAAM,aAAa,CAAC;AACpB,IAAI,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE;AACzB,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAC/C,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE;AACxC,QAAQ,IAAI,OAAO;AACnB,YAAY,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;AACtC,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;AACjD,oBAAoB,MAAM,IAAI,UAAU,CAAC,gDAAgD,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AAC7G,gBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACzC,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM;AACtD,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK;AACrC,oBAAoB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC1F,aAAa,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,WAAW,CAAC;AAClB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,MAAM,EAAE;AACZ,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM;AACjC;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO;AAClC;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,EAAE,EAAE;AACd,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,KAAK;AAC9C;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE;AACvC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AAC3D,YAAY,IAAI,CAAC,IAAI,MAAM,EAAE;AAC7B,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;AAC1G,oBAAoB,OAAO,KAAK;AAChC;AACA,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,MAAM,EAAE;AAC7B,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;AAC3C,YAAY,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE;AACpD,QAAQ,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,GAAG,IAAI;AAC3E;AACA;AACA;AACA,QAAQ,SAAS;AACjB,YAAY,IAAI,OAAO,GAAG,KAAK;AAC/B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjE,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE;AACnD,oBAAoB,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI;AACxF,oBAAoB,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM;AAC3C,wBAAwB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC9G,oBAAoB,IAAI,EAAE,IAAI,QAAQ,CAAC,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;AACjE,wBAAwB,EAAE,CAAC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;AACjE,wBAAwB,IAAI,CAAC,IAAI,EAAE;AACnC,4BAA4B,IAAI,GAAG,EAAE;AACrC,4BAA4B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AAC/E,gCAAgC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC7G;AACA,wBAAwB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AACpC,wBAAwB,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;AAC1D,wBAAwB,OAAO,GAAG,IAAI;AACtC;AACA,oBAAoB,IAAI,IAAI;AAC5B,wBAAwB,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE;AACpE;AACA;AACA,YAAY,IAAI,CAAC,OAAO;AACxB,gBAAgB,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,EAAE,EAAE;AACnB,QAAQ,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AACnC,YAAY,MAAM,IAAI,UAAU,CAAC,mCAAmC,CAAC;AACrE,QAAQ,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;AACnF,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AACjC,YAAY,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC;AAC1F;AACA,QAAQ,OAAO,WAAW;AAC1B;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,GAAG,EAAE,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;AAC5C;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,MAAM,EAAE;AAC1B,QAAQ,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC;AAC5G,QAAQ,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC;AAC/C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AACtD,YAAY,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;AACvF,QAAQ,OAAO,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC;AACpE,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC;AACxE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI;AACrC,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;AACtG;AACA,QAAQ,OAAO,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,YAAY,EAAE;AACzB,QAAQ,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE;AACnF,QAAQ,IAAI,IAAI,CAAC,WAAW;AAC5B,YAAY,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AACtE,QAAQ,IAAI,YAAY,IAAI,OAAO,YAAY,IAAI,QAAQ;AAC3D,YAAY,KAAK,IAAI,IAAI,IAAI,YAAY,EAAE;AAC3C,gBAAgB,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,WAAW;AACxD,oBAAoB,MAAM,IAAI,UAAU,CAAC,oDAAoD,CAAC;AAC9F,gBAAgB,IAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;AAC1E,gBAAgB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM;AACzC,oBAAoB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9E;AACA,QAAQ,OAAO,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE;AAChD,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC;AAC1E,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM;AAC1B,YAAY,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC;AAC1E,QAAQ,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC;AACtE,QAAQ,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC;AAC/C,QAAQ,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI;AACxC,YAAY,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,EAAE;AACrC,gBAAgB,QAAQ,CAAC,GAAG,GAAGnB,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC;AACrE;AACA,iBAAiB,IAAI,KAAK,CAAC,IAAI,IAAI,WAAW,EAAE;AAChD,gBAAgB,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC;AACrF;AACA,iBAAiB,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,EAAE;AAClD,gBAAgB,IAAI,IAAI,CAAC,WAAW;AACpC,oBAAoB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;AAC3F;AACA,iBAAiB;AACjB,gBAAgB,IAAI,YAAY;AAChC,oBAAoB,KAAK,IAAI,IAAI,IAAI,YAAY,EAAE;AACnD,wBAAwB,IAAI,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;AAClF,wBAAwB,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ;AAC/E,4BAA4B,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;AAC9E,4BAA4B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC;AAC5G,4BAA4B;AAC5B;AACA;AACA,gBAAgB,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC;AACnE;AACA,SAAS,CAAC;AACV,QAAQ,OAAO,QAAQ;AACvB;AACA;;AAEA,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;AACtC,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,EAAE;AAC1B,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;AAC3B,QAAQ,IAAI,GAAG,YAAY,QAAQ;AACnC,YAAY,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AAChC,aAAa,IAAI,IAAI,IAAI,iBAAiB;AAC1C,YAAY,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;AAC1C,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG;AAC1B;AACA,IAAI,OAAO,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,MAAM,CAAC;AACb;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,KAAK;AACtB,YAAY,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AACnD,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,QAAQ,CAAC;AAChE;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C;AACA,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAChC,SAAS,SAAS,CAAC,IAAI,EAAE;AACzB,IAAI,IAAI,IAAI,IAAI,IAAI;AACpB,QAAQ,OAAO,IAAI,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC;AACxC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAClB,IAAI,OAAO,IAAI,GAAG,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3D;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5D;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7C;;ACl+BA,SAAS,IACP,IACA,EAAA,IAAA,EACA,EACA,EAAA,IAAA,EACA,OACA,MACA,EAAA;AAbF,EAAA,IAAA,EAAA;AAcE,EAAI,IAAA,IAAA,CAAK,WAAkB,OAAA,KAAA;AAC3B,EAAA,MAAM,QAAQ,IAAK,CAAA,KAAA;AACnB,EAAA,MAAM,KAAQ,GAAA,KAAA,CAAM,GAAI,CAAA,OAAA,CAAQ,IAAI,CAAA;AACpC,EAAA,IAAI,KAAM,CAAA,MAAA,CAAO,IAAK,CAAA,IAAA,CAAK,MAAa,OAAA,KAAA;AACxC,EAAM,MAAA,UAAA,GACJ,MAAM,MAAO,CAAA,WAAA;AAAA,IACX,IAAK,CAAA,GAAA,CAAI,CAAG,EAAA,KAAA,CAAM,eAAe,GAAG,CAAA;AAAA,IACpC,KAAM,CAAA,YAAA;AAAA,IACN,KAAA,CAAA;AAAA,IACA;AAAA,GACE,GAAA,IAAA;AACN,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,KAAA,CAAM,QAAQ,CAAK,EAAA,EAAA;AAGrC,IAAA,MAAM,QAAS,KAAM,CAAA,CAAC,CAAU,CAAA,KAAA,CAAM,KAAK,UAAU,CAAA;AACrD,IAAM,MAAA,EAAA,GACJ,KACA,IAAA,KAAA,CAAM,CAAC,CAAA;AAAA;AAAA,IAGN,KAAA,CAAM,CAAC,CAAU,CAAA,OAAA;AAAA,MAChB,KAAA;AAAA,MACA,KAAA;AAAA,MACA,IAAQ,IAAA,KAAA,CAAM,CAAC,CAAA,CAAE,SAAS,IAAK,CAAA,MAAA,CAAA;AAAA,MAC/B;AAAA,KACF;AACF,IAAA,IAAI,CAAC,EAAI,EAAA;AAET,IAAA,IAAA,CAAA,CAAI,EAAM,GAAA,KAAA,CAAA,CAAC,CAAP,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAU,QAAa,MAAA,KAAA;AACzB,MAAG,EAAA,CAAA,OAAA,CAAQ,QAAQ,EAAE,SAAA,EAAW,IAAI,IAAM,EAAA,EAAA,EAAI,MAAM,CAAA;AACtD,IAAA,IAAA,CAAK,SAAS,EAAE,CAAA;AAChB,IAAO,OAAA,IAAA;AAAA;AAET,EAAO,OAAA,KAAA;AACT;AAEa,MAAA,mBAAA,GAAsB,IAAI,SAAA,CAAU,4BAA4B,CAAA;AAC7D,SAAA,gBAAA,CAAiB,EAAE,KAAA,EAAyC,EAAA;AAC1E,EAAM,MAAA,MAAA,GAAiB,IAAI,MAAO,CAAA;AAAA,IAChC,GAAK,EAAA,mBAAA;AAAA,IACL,YAAc,EAAA,IAAA;AAAA,IAEd,KAAO,EAAA;AAAA,MACL,IAAO,GAAA;AACL,QAAO,OAAA,IAAA;AAAA,OACT;AAAA,MACA,KAAA,CAA2B,IAAI,IAAM,EAAA;AACnC,QAAM,MAAA,MAAA,GAAS,EAAG,CAAA,OAAA,CAAQ,IAAI,CAAA;AAC9B,QAAA,IAAI,QAAe,OAAA,MAAA;AACnB,QAAA,OAAO,EAAG,CAAA,YAAA,IAAgB,EAAG,CAAA,UAAA,GAAa,IAAO,GAAA,IAAA;AAAA;AACnD,KACF;AAAA,IACA,KAAO,EAAA;AAAA,MACL,eAAgB,CAAA,IAAA,EAAM,IAAM,EAAA,EAAA,EAAI,IAAM,EAAA;AACpC,QAAA,OAAO,IAAI,IAAM,EAAA,IAAA,EAAM,EAAI,EAAA,IAAA,EAAM,OAAO,MAAM,CAAA;AAAA,OAChD;AAAA,MACA,eAAiB,EAAA;AAAA,QACf,cAAA,EAAgB,CAAC,IAAS,KAAA;AACxB,UAAA,UAAA,CAAW,MAAM;AACf,YAAA,MAAM,EAAE,OAAA,EAAY,GAAA,IAAA,CAAK,KAAM,CAAA,SAAA;AAC/B,YAAI,IAAA,OAAA,MAAa,IAAM,EAAA,OAAA,CAAQ,KAAK,OAAQ,CAAA,GAAA,EAAK,EAAI,EAAA,KAAA,EAAO,MAAM,CAAA;AAAA,WACnE,CAAA;AACD,UAAO,OAAA,KAAA;AAAA;AACT,OACF;AAAA,MACA,aAAA,CAAc,MAAM,KAAO,EAAA;AACzB,QAAI,IAAA,KAAA,CAAM,GAAQ,KAAA,OAAA,EAAgB,OAAA,KAAA;AAClC,QAAA,MAAM,EAAE,OAAA,EAAY,GAAA,IAAA,CAAK,KAAM,CAAA,SAAA;AAC/B,QAAI,IAAA,OAAA;AACF,UAAO,OAAA,GAAA,CAAI,MAAM,OAAQ,CAAA,GAAA,EAAK,QAAQ,GAAK,EAAA,IAAA,EAAM,OAAO,MAAM,CAAA;AAChE,QAAO,OAAA,KAAA;AAAA;AACT;AACF,GACD,CAAA;AACD,EAAO,OAAA,MAAA;AACT;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,KAAK,EAAE,OAAO,EAAE,OAAO,GAAG,EAAE,EAAE;AAClC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,OAAO,IAAI,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,GAAG,OAAO;AACpF,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,KAAK,KAAK;AAClD,QAAQ,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK;AAC7C;AACA;AACA,SAAS,aAAa,CAAC,MAAM,EAAE;AAC/B,IAAI,OAAO,UAAU,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;AAC/C,QAAQ,IAAI,MAAM,GAAG,MAAM;AAC3B,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;AACtB,YAAY,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACvD,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC9D,YAAY,KAAK,IAAI,MAAM;AAC3B,YAAY,IAAI,MAAM,GAAG,KAAK,GAAG,GAAG;AACpC,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE;AAC5B,gBAAgB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE,MAAM,CAAC,GAAG,MAAM;AACzE,gBAAgB,KAAK,GAAG,GAAG;AAC3B;AACA;AACA,QAAQ,OAAO,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC;AACtD,KAAK;AACL;AA6DA;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AAC3C,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,QAAQ;AACzC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,KAAK,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;AAC7E,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,MAAM,GAAG,QAAQ,CAAC,SAAS;AAC9D,gBAAgB,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACjE,oBAAoB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,gBAAgB,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnC,oBAAoB,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE;AACrE,oBAAoB,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACvG;AACA,qBAAqB;AACrB,oBAAoB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC;AACzD;AACA,gBAAgB,QAAQ,CAAC,EAAE,CAAC;AAC5B;AACA,YAAY,OAAO,IAAI;AACvB;AACA;AACA,IAAI,OAAO,KAAK;AAChB,CAAC;;AAED;AACA;AACA;AACe,IAAI,SAAS,CAAC,KAAK,EAAE,GAAG;AACvC;AACA;AACA;AACiB,IAAI,SAAS,CAAC,SAAS,EAAE,GAAG;AAC7C;AACA;AACA;AACwB,IAAI,SAAS,CAAC,sCAAsC,EAAE,GAAG;AACjF;AACA;AACA;AACyB,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG;AAChD;AACA;AACA;AACwB,IAAI,SAAS,CAAC,sCAAsC,EAAE,GAAG;AACjF;AACA;AACA;AACyB,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG;;AAMhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,GAAG,IAAI,EAAE,aAAa,EAAE;AAC7E,IAAI,OAAO,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK;AAC/D,QAAQ,IAAI,KAAK,GAAG,QAAQ,YAAY,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ;AAC7E,QAAQ,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;AAC5C,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,GAAG,KAAK,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;AACjI,QAAQ,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,IAAI;AACvB,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;AAChC,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU;AACzD,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC;AAC3E,aAAa,CAAC,aAAa,IAAI,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC5D,YAAY,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AAC9B,QAAQ,OAAO,EAAE;AACjB,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,GAAG,IAAI,EAAE;AACnE,IAAI,OAAO,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK;AAC/D,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AAC7C,QAAQ,IAAI,KAAK,GAAG,QAAQ,YAAY,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ;AAC7E,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;AAC9F,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,KAAK,CAAC;AACrB,aAAa,MAAM,CAAC,KAAK,EAAE,GAAG;AAC9B,aAAa,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;AACxD,KAAK,CAAC;AACN;;ACzNO,SAAS,QACd,CAAA,MAAA,EACA,QACA,EAAA,OAAA,GAAmB,EACR,EAAA;AACX,EAAA,OAAO,IAAI,SAAU,CAAA,MAAA,EAAQ,CAAC,KAAO,EAAA,KAAA,EAAO,OAAO,GAAQ,KAAA;AAV7D,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAWI,IAAM,MAAA,EAAE,IAAO,GAAA,KAAA;AACf,IAAA,MAAM,cAAc,KAAM,CAAA,MAAA;AAE1B,IAAI,IAAA,KAAA,GAAQ,KAAM,CAAA,WAAA,GAAc,CAAC,CAAA;AACjC,IAAI,IAAA,SAAA,GAAY,MAAM,CAAC,CAAA;AACvB,IAAA,IAAI,qBAAsC,EAAC;AAE3C,IAAA,IAAI,OAAU,GAAA,GAAA;AAEd,IAAA,MAAM,QAAqB,GAAA;AAAA,MACzB,KAAA;AAAA,MACA,SAAA;AAAA,MACA,KAAA;AAAA,MACA;AAAA,KACF;AAEA,IAAM,MAAA,MAAA,GAAA,CAAS,EAAQ,GAAA,OAAA,CAAA,cAAA,KAAR,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACxC,IAAO,MAAA,CAAA,MAAA,CAAO,UAAU,MAAM,CAAA;AAC7B,IAAA,CAAC,EAAE,KAAA,EAAO,SAAW,EAAA,KAAA,EAAO,KAAQ,GAAA,QAAA;AAErC,IAAI,IAAA,SAAA,KAAc,MAAa,OAAA,IAAA;AAE/B,IAAI,IAAA,CAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAO,IAAW,EAAA,MAAA,EAAA,EAAW,OAAA,IAAA;AAEjC,IAAA,IAAI,KAAO,EAAA;AACT,MAAM,MAAA,WAAA,GAAc,SAAU,CAAA,MAAA,CAAO,IAAI,CAAA;AACzC,MAAA,MAAM,SAAY,GAAA,KAAA,GAAQ,SAAU,CAAA,OAAA,CAAQ,KAAK,CAAA;AACjD,MAAM,MAAA,OAAA,GAAU,YAAY,KAAM,CAAA,MAAA;AAElC,MAAqB,kBAAA,GAAA,CAAA,EAAA,GAAA,EAAA,CAAG,WAAH,KAAA,IAAA,GAAA,EAAA,GAAkB,EAAC;AAExC,MAAA,IAAI,OAAU,GAAA,GAAA,EAAQ,EAAA,CAAA,MAAA,CAAO,SAAS,GAAG,CAAA;AAEzC,MAAA,IAAI,YAAY,KAAO,EAAA,EAAA,CAAG,MAAO,CAAA,KAAA,GAAQ,aAAa,SAAS,CAAA;AAE/D,MAAU,OAAA,GAAA,KAAA,GAAQ,cAAc,KAAM,CAAA,MAAA;AAEtC,MAAM,MAAA,KAAA,GAAA,CAAQ,EAAQ,GAAA,OAAA,CAAA,OAAA,KAAR,IAAkB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAEhC,MAAA,EAAA,CAAG,QAAQ,KAAO,EAAA,OAAA,EAAS,QAAS,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA;AACjD,MAAA,EAAA,CAAG,eAAe,kBAAkB,CAAA;AAEpC,MAAA,CAAA,EAAA,GAAA,OAAA,CAAQ,mBAAR,IAAyB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,EAAE,KAAO,EAAA,KAAA,EAAO,KAAK,EAAG,EAAA,CAAA;AAAA;AAGnD,IAAO,OAAA,EAAA;AAAA,GACR,CAAA;AACH;;ACWA,SAAS,OAAO,KAAQ,GAAA,CAAA,EAAG,GAAM,GAAA,CAAA,EAAG,MAAM,CAAW,EAAA;AACnD,EAAA,OAAO,KAAK,GAAI,CAAA,IAAA,CAAK,IAAI,KAAO,EAAA,GAAG,GAAG,GAAG,CAAA;AAC3C;AAEgB,SAAA,YAAA,CACd,IACA,EAAA,IAAA,EACA,EACS,EAAA;AACT,EAAA,MAAM,MAAS,GAAA,CAAA;AACf,EAAA,MAAM,MAAS,GAAA,IAAA,CAAK,KAAM,CAAA,GAAA,CAAI,OAAQ,CAAA,IAAA;AACtC,EAAA,MAAM,YAAe,GAAA,MAAA,CAAO,IAAM,EAAA,MAAA,EAAQ,MAAM,CAAA;AAChD,EAAA,MAAM,WAAc,GAAA,MAAA,CAAO,EAAI,EAAA,MAAA,EAAQ,MAAM,CAAA;AAC7C,EAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,WAAA,CAAY,YAAY,CAAA;AAC3C,EAAA,MAAM,GAAM,GAAA,IAAA,CAAK,WAAY,CAAA,WAAA,EAAa,CAAE,CAAA,CAAA;AAC5C,EAAA,MAAM,MAAM,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,GAAA,EAAK,IAAI,GAAG,CAAA;AACvC,EAAA,MAAM,SAAS,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,MAAA,EAAQ,IAAI,MAAM,CAAA;AAChD,EAAA,MAAM,OAAO,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,IAAA,EAAM,IAAI,IAAI,CAAA;AAC1C,EAAA,MAAM,QAAQ,IAAK,CAAA,GAAA,CAAI,KAAM,CAAA,KAAA,EAAO,IAAI,KAAK,CAAA;AAC7C,EAAA,MAAM,QAAQ,KAAQ,GAAA,IAAA;AACtB,EAAA,MAAM,SAAS,MAAS,GAAA,GAAA;AACxB,EAAA,MAAM,CAAI,GAAA,IAAA;AACV,EAAA,MAAM,CAAI,GAAA,GAAA;AACV,EAAA,MAAM,IAAO,GAAA;AAAA,IACX,GAAA;AAAA,IACA,MAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,IACA,KAAA;AAAA,IACA,MAAA;AAAA,IACA,CAAA;AAAA,IACA;AAAA,GACF;AAEA,EAAO,OAAA;AAAA,IACL,GAAG,IAAA;AAAA,IACH,QAAQ,MAAM;AAAA,GAChB;AACF;;ACxGO,SAAS,QAAQ,EAA8B,EAAA;AACpD,EAAO,OAAA,MAAA,CAAO,MAAO,CAAA,MAAA,CAAO,MAAO,CAAA,EAAE,CAAG,EAAA,EAAE,CAAE,CAAA,OAAA,CAAQ,IAAK,CAAA,GAAA,EAAK,CAAA;AAChE;AAEgB,SAAA,aAAA,CACd,UACA,IACA,EAAA;AACA,EACG,OAAA,KAAA,CAAM,OAAQ,CAAA,QAAQ,CAAK,IAAA,QAAA,CAAS,SAAS,IAAK,CAAA,IAAI,CACvD,IAAA,IAAA,CAAK,IAAS,KAAA,QAAA;AAElB;;ACyBO,SAAS,WAAW,SAAsB,EAAA;AAC/C,EAAA,OAAO,CAAC,IAAkD,KAAA;AACxD,IAAA,KAAA,IAAS,QAAQ,IAAK,CAAA,KAAA,EAAO,KAAQ,GAAA,CAAA,EAAG,SAAS,CAAG,EAAA;AAClD,MAAM,MAAA,IAAA,GAAO,IAAK,CAAA,IAAA,CAAK,KAAK,CAAA;AAE5B,MAAI,IAAA,SAAA,CAAU,IAAI,CAAG,EAAA;AACnB,QAAM,MAAA,IAAA,GAAO,IAAK,CAAA,MAAA,CAAO,KAAK,CAAA;AAC9B,QAAM,MAAA,EAAA,GAAK,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA;AAC3B,QAAO,OAAA;AAAA,UACL,IAAA;AAAA,UACA,EAAA;AAAA,UACA;AAAA,SACF;AAAA;AACF;AAGF,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACF;AAEgB,SAAA,kBAAA,CAAmB,MAAmB,QAAoB,EAAA;AACxE,EAAA,OAAO,WAAW,CAAC,IAAA,KAAS,KAAK,IAAS,KAAA,QAAQ,EAAE,IAAI,CAAA;AAC1D;;AC1DgB,SAAA,iBAAA,CAAkB,MAAc,MAA0B,EAAA;AACxE,EAAM,MAAA,MAAA,GAAS,MAAO,CAAA,KAAA,CAAM,IAAI,CAAA;AAEhC,EAAA,IAAI,CAAC,MAAA,EAAc,MAAA,qBAAA,CAAsB,QAAQ,IAAI,CAAA;AAErD,EAAO,OAAA,MAAA;AACT;;ACGO,SAAS,2BAA2B,SAAsB,EAAA;AAC/D,EAAA,OAAO,CAAC,IAAsD,KAAA;AAC5D,IAAA,KAAA,IAAS,CAAI,GAAA,IAAA,CAAK,KAAO,EAAA,CAAA,GAAI,GAAG,CAAK,EAAA,EAAA;AACnC,MAAM,MAAA,IAAA,GAAO,IAAK,CAAA,IAAA,CAAK,CAAC,CAAA;AACxB,MAAI,IAAA,SAAA,CAAU,IAAI,CAAG,EAAA;AACnB,QAAO,OAAA;AAAA,UACL,KAAK,CAAI,GAAA,CAAA,GAAI,IAAK,CAAA,MAAA,CAAO,CAAC,CAAI,GAAA,CAAA;AAAA,UAC9B,KAAA,EAAO,IAAK,CAAA,KAAA,CAAM,CAAC,CAAA;AAAA,UACnB,KAAO,EAAA,CAAA;AAAA,UACP;AAAA,SACF;AAAA;AACF;AAGF,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACF;AAEO,SAAS,eAAe,SAAsB,EAAA;AACnD,EAAA,OAAO,CAAC,SAAyD,KAAA;AAC/D,IAAA,OAAO,0BAA2B,CAAA,SAAS,CAAE,CAAA,SAAA,CAAU,KAAK,CAAA;AAAA,GAC9D;AACF;AAEgB,SAAA,sBAAA,CACd,WACA,QACgC,EAAA;AAChC,EAAI,IAAA,EAAE,qBAAqB,aAAgB,CAAA,EAAA;AAE3C,EAAM,MAAA,EAAE,IAAM,EAAA,KAAA,EAAU,GAAA,SAAA;AACxB,EAAI,IAAA,aAAA,CAAc,UAAU,IAAI,CAAA;AAC9B,IAAO,OAAA;AAAA,MACL,IAAA;AAAA,MACA,KAAK,KAAM,CAAA,GAAA;AAAA,MACX,KAAO,EAAA,KAAA,CAAM,KAAM,CAAA,KAAA,CAAM,KAAK,CAAA;AAAA,MAC9B,OAAO,KAAM,CAAA;AAAA,KACf;AAEF,EAAO,OAAA,KAAA,CAAA;AACT;;ACjDA;AACA;AACA;AACA,MAAM,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AAC7C,IAAI,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK;AAC7B,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,cAAc,EAAE,CAAC;AAC7D,IAAI,OAAO,IAAI;AACf,CAAC;AACD,SAAS,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE;AACnC,IAAI,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,SAAS;AACrC,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK;AAClE,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC;AACnC,QAAQ,OAAO,IAAI;AACnB,IAAI,OAAO,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,KAAK;AAChD,IAAI,IAAI,OAAO,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;AAC3C,IAAI,IAAI,CAAC,OAAO;AAChB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC;AACrC;AACA,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,EAAE,MAAM,GAAG,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC;AAC7E,QAAQ,IAAI,MAAM,IAAI,IAAI;AAC1B,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;AACnE,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;AAChC;AACA,IAAI,IAAI,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAChD,QAAQ,OAAO,IAAI;AACnB;AACA;AACA,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AACxC,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE;AAC5E,QAAQ,KAAK,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,KAAK,EAAE,EAAE;AAClD,YAAY,IAAI,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC;AAC1G,YAAY,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE;AAC3E,gBAAgB,IAAI,QAAQ,EAAE;AAC9B,oBAAoB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;AACnD,oBAAoB,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK;AAC7D,0BAA0B,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7F,0BAA0B,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACnF,oBAAoB,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACjD;AACA,gBAAgB,OAAO,IAAI;AAC3B;AACA,YAAY,IAAI,KAAK,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC;AACpE,gBAAgB;AAChB;AACA;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE;AAC1D,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;AAC5F,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB,CAAC;AAuDD,SAAS,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,KAAK,EAAE;AAC/C,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE;AAC7F,QAAQ,IAAI,IAAI,CAAC,WAAW;AAC5B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC;AACxC,YAAY,OAAO,KAAK;AACxB;AACA,IAAI,OAAO,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,KAAK;AACtD,IAAI,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS,EAAE,IAAI,GAAG,KAAK;AACxD,IAAI,IAAI,CAAC,KAAK;AACd,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;AAClC,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,YAAY,GAAG,CAAC;AACnF,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC;AACnC;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU;AACtC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;AAClD,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;AACnH,IAAI,OAAO,IAAI;AACf,CAAC;AACD,SAAS,aAAa,CAAC,IAAI,EAAE;AAC7B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AACxC,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACjC,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3D,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAChD,gBAAgB;AAChB;AACA,IAAI,OAAO,IAAI;AACf;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE;AACjC,IAAI,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,SAAS;AACrC,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK;AACjE,UAAU,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;AAC7D,QAAQ,OAAO,IAAI;AACnB,IAAI,OAAO,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,KAAK;AAC/C,IAAI,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC;AACzC,IAAI,IAAI,CAAC,OAAO;AAChB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,IAAI;AACb,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS;AAC9B;AACA,IAAI,IAAI,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC/C,QAAQ,OAAO,IAAI;AACnB;AACA;AACA,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AACxC,SAAS,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;AAC5E,QAAQ,IAAI,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC;AAC5F,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE;AACvE,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;AAC/C,gBAAgB,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AAC5H,sBAAsB,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7E,gBAAgB,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AAC7C;AACA,YAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE;AACzD,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;AAC3F,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,KAAK;AACrD,IAAI,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS,EAAE,IAAI,GAAG,KAAK;AACxD,IAAI,IAAI,CAAC,KAAK;AACd,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;AAClC,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;AAC1G,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC;AAClC;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS;AACrC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;AAClD,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;AACnG,IAAI,OAAO,IAAI;AACf,CAAC;AACD,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AACxC,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,UAAU;AACrD,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1D,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAC1C,gBAAgB;AAChB;AACA,IAAI,OAAO,IAAI;AACf;AA2DA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AAC3C,IAAI,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,SAAS;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;AAClE,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AAC5D,IAAI,OAAO,IAAI;AACf,CAAC;AACD,SAAS,cAAc,CAAC,KAAK,EAAE;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AACxD,YAAY,OAAO,IAAI;AACvB;AACA,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AACtC,IAAI,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,SAAS;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;AAClE,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAChH,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;AAC1D,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;AAC1F,QAAQ,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/D,QAAQ,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACrC;AACA,IAAI,OAAO,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM,mBAAmB,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AACjD,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG;AACnD,IAAI,IAAI,GAAG,YAAY,YAAY,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,IAAI,GAAG,CAAC,MAAM,CAAC,aAAa;AAC7F,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;AAC1E,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;AAClC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY,IAAI,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,GAAG,GAAG,EAAE,GAAG;AACjG,QAAQ,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;AAC5D,QAAQ,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACrC;AACA,IAAI,OAAO,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM,cAAc,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AAC5C,IAAI,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,SAAS;AACrC,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;AAC/C,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;AACjE,QAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;AACrC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;AACzC,YAAY,IAAI,QAAQ;AACxB,gBAAgB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;AACjE,YAAY,OAAO,IAAI;AACvB;AACA;AACA,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,EAAE,EAAE,MAAM,GAAG,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC;AACzE,IAAI,IAAI,MAAM,IAAI,IAAI;AACtB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;AAC/D,IAAI,OAAO,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,SAAS,EAAE;AACjC,IAAI,OAAO,CAAC,KAAK,EAAE,QAAQ,KAAK;AAChC,QAAQ,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS;AAC5C,QAAQ,IAAI,KAAK,CAAC,SAAS,YAAY,aAAa,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE;AACtF,YAAY,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC;AACtE,gBAAgB,OAAO,KAAK;AAC5B,YAAY,IAAI,QAAQ;AACxB,gBAAgB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;AACpE,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK;AACxB,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,KAAK,GAAG,EAAE;AACtB,QAAQ,IAAI,UAAU,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK;AAC7D,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE;AACxC,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;AAC9B,gBAAgB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AACrE,gBAAgB,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AACzE,gBAAgB,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjG,gBAAgB,KAAK,CAAC,OAAO,CAAc,CAAC,KAAK,IAAI,KAAK,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;AACrF,gBAAgB,UAAU,GAAG,CAAC;AAC9B,gBAAgB;AAChB;AACA,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,IAAI,CAAC;AAC1B,oBAAoB,OAAO,KAAK;AAChC,gBAAgB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;AACnC;AACA;AACA,QAAQ,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;AACzB,QAAQ,IAAI,KAAK,CAAC,SAAS,YAAY,aAAa,IAAI,KAAK,CAAC,SAAS,YAAY,YAAY;AAC/F,YAAY,EAAE,CAAC,eAAe,EAAE;AAChC,QAAQ,IAAI,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;AAChD,QAAQ,IAAI,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AACjE,QAAQ,IAAI,CAAC,GAAG,EAAE;AAClB,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI;AACrD,YAAY,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AACjE;AACA,QAAQ,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AAC/C,QAAQ,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,IAAI,KAAK,EAAE;AACvE,YAAY,IAAI,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AAChG,YAAY,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;AAC7G,gBAAgB,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC;AACjF;AACA,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACzC,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,GAAG,YAAY,EAAE;AA2BjC;AACA;AACA;AACA,MAAM,SAAS,GAAG,CAAC,KAAK,EAAE,QAAQ,KAAK;AACvC,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpE,IAAI,OAAO,IAAI;AACf,CAAC;AACD,SAAS,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC/C,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AAC9E,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC;AACvE,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE;AAC1E,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;AAC5F,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACzG,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,QAAQ;AAChB,QAAQ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;AAC1D,IAAI,OAAO,IAAI;AACf;AACA,SAAS,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE;AACnD,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK;AACrE,IAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAC1E,IAAI,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC1D,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,WAAW,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACzF,IAAI,IAAI,WAAW;AACnB,SAAS,IAAI,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5F,QAAQ,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;AACzD,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,IAAI,GAAG,QAAQ,CAAC,KAAK;AACtE,YAAY,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACrD,gBAAgB,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAChE,YAAY,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,YAAY,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACrI,YAAY,IAAI,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/D,YAAY,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI;AAC1E,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC;AAC5C,gBAAgB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AACpC,YAAY,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACzC;AACA,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,GAAG,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1G,IAAI,IAAI,KAAK,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC;AACxG,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;AAChD,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;AACnE,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;AACxF,QAAQ,IAAI,EAAE,GAAG,MAAM,EAAE,IAAI,GAAG,EAAE;AAClC,QAAQ,SAAS;AACjB,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;AACzB,YAAY,IAAI,EAAE,CAAC,WAAW;AAC9B,gBAAgB;AAChB,YAAY,EAAE,GAAG,EAAE,CAAC,SAAS;AAC7B;AACA,QAAQ,IAAI,SAAS,GAAG,KAAK,EAAE,UAAU,GAAG,CAAC;AAC7C,QAAQ,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,GAAG,SAAS,CAAC,UAAU;AACvE,YAAY,UAAU,EAAE;AACxB,QAAQ,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE;AAC5E,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK;AACxC,gBAAgB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACzD,oBAAoB,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1D,gBAAgB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,GAAG,UAAU,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,GAAG,UAAU,EAAE,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACxN,gBAAgB,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AAC7C;AACA,YAAY,OAAO,IAAI;AACvB;AACA;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,IAAI,OAAO,UAAU,KAAK,EAAE,QAAQ,EAAE;AACtC,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG;AACxE,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK;AAC9B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;AAC1C,YAAY,IAAI,CAAC,KAAK;AACtB,gBAAgB,OAAO,KAAK;AAC5B,YAAY,KAAK,EAAE;AACnB;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW;AACzC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5H,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM,oBAAoB,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC;AACpD;AACA;AACA;AACA,MAAM,kBAAkB,GAAG,mBAAmB,CAAC,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE;AACxC,IAAI,OAAO,UAAU,KAAK,EAAE,QAAQ,EAAE;AACtC,QAAQ,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS;AAC5C,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;AACnG,QAAQ,IAAI,CAAC,QAAQ;AACrB,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,QAAQ;AACpB,YAAY,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,cAAc,EAAE,CAAC;AACrE,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAASmB,cAAY,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE;AAC9C,IAAI,OAAO,UAAU,KAAK,EAAE,QAAQ,EAAE;AACtC,QAAQ,IAAI,UAAU,GAAG,KAAK;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AAC/E,YAAY,IAAI,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACtF,YAAY,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK;AAC5D,gBAAgB,IAAI,UAAU;AAC9B,oBAAoB,OAAO,KAAK;AAChC,gBAAgB,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC;AACxE,oBAAoB;AACpB,gBAAgB,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;AAC3C,oBAAoB,UAAU,GAAG,IAAI;AACrC;AACA,qBAAqB;AACrB,oBAAoB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AAC3E,oBAAoB,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,QAAQ,CAAC;AACvF;AACA,aAAa,CAAC;AACd;AACA,QAAQ,IAAI,CAAC,UAAU;AACvB,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;AAC7B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpE,gBAAgB,IAAI,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1F,gBAAgB,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC;AAC1D;AACA,YAAY,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACzC;AACA,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE;AACpD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAQ,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;AACtC,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,aAAa,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,KAAK;AAC/F,QAAQ,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,KAAK;AAC5D,YAAY,IAAI,GAAG,IAAI,CAAC,UAAgG;AACxH,gBAAgB,OAAO,KAAK;AAC5B,YAAY,GAAG,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;AACtE,SAAS,CAAC;AACV,QAAQ,IAAI,GAAG;AACf,YAAY,OAAO,IAAI;AACvB;AACA,IAAI,OAAO,KAAK;AAChB;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI,EAAE,OAAO,EAAE;AAErD,IAAI,IAAI,UAAU,GAAG,CAAC,OAAmC,MAAM,KAAK;AACpE,IAAI,OAAO,UAAU,KAAK,EAAE,QAAQ,EAAE;AACtC,QAAQ,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,SAAS;AACxD,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC;AACxF,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,IAAI,OAAO,EAAE;AACzB,gBAAgB,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;AAC1E,oBAAoB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;AACjE;AACA,oBAAoB,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5E;AACA,iBAAiB;AACjB,gBAAgB,IAAI,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE;AAGtC,gBAAuC;AACvC,oBAAoB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACrG;AAaA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxD,oBAAoB,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;AAClD,oBAAoB,IAAI,CAAC,GAAG,EAAE;AAC9B,wBAAwB,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC;AACnE;AACA,yBAAyB;AACzB,wBAAwB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,KAAK,CAAC,SAAS,EAAE,GAAG,GAAG,GAAG,CAAC,UAAU;AACzG,wBAAwB,IAAI,UAAU,GAAG,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;AACtG,wBAAwB,IAAI,QAAQ,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;AAC9F,wBAAwB,IAAI,IAAI,GAAG,UAAU,GAAG,EAAE,EAAE;AACpD,4BAA4B,IAAI,IAAI,UAAU;AAC9C,4BAA4B,EAAE,IAAI,QAAQ;AAC1C;AACA,wBAAwB,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACpE;AACA;AACA,gBAAgB,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AAC7C;AACA;AACA,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL;AAoDA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,GAAG,QAAQ,EAAE;AACpC,IAAI,OAAO,UAAU,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AAChD,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;AAClD,gBAAgB,OAAO,IAAI;AAC3B,QAAQ,OAAO,KAAK;AACpB,KAAK;AACL;AACA,IAAI,SAAS,GAAG,aAAa,CAAC,eAAe,EAAE,YAAY,EAAE,kBAAkB,CAAC;AAChF,IAAI,GAAG,GAAG,aAAa,CAAC,eAAe,EAAE,WAAW,EAAE,iBAAiB,CAAC;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG;AACrB,IAAI,OAAO,EAAE,aAAa,CAAC,aAAa,EAAE,mBAAmB,EAAE,cAAc,EAAE,UAAU,CAAC;AAC1F,IAAI,WAAW,EAAE,QAAQ;AACzB,IAAI,WAAW,EAAE,SAAS;AAC1B,IAAI,eAAe,EAAE,SAAS;AAC9B,IAAI,iBAAiB,EAAE,SAAS;AAChC,IAAI,QAAQ,EAAE,GAAG;AACjB,IAAI,YAAY,EAAE,GAAG;AACrB,IAAI,OAAO,EAAE;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,GAAG;AACtB,IAAI,QAAQ,EAAE,YAAY,CAAC,WAAW,CAAC;AACvC,IAAI,eAAe,EAAE,YAAY,CAAC,eAAe,CAAC;AAClD,IAAI,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC;AACpC,IAAI,oBAAoB,EAAE,YAAY,CAAC,YAAY,CAAC;AACpD,IAAI,YAAY,EAAE,YAAY,CAAC,YAAY,CAAC;AAC5C,IAAI,OAAO,EAAE,YAAY,CAAC,YAAY,CAAC;AACvC,IAAI,QAAQ,EAAE,oBAAoB;AAClC,IAAI,QAAQ,EAAE;AACd,CAAC;AACD,KAAK,IAAI,GAAG,IAAI,YAAY;AAC5B,IAAI,aAAa,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC;AAC1C,MAAMC,KAAG,GAAG,OAAO,SAAS,IAAI,WAAW,GAAG,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ;AAC1F;AACA,MAAM,OAAO,EAAE,IAAI,WAAW,IAAI,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,IAAI,QAAQ,GAAG,KAAK;AACjF;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,GAAGA,KAAG,GAAG,aAAa,GAAG,YAAY;;AC50B9C,IAAI,IAAI,GAAG;AAClB,EAAE,CAAC,EAAE,WAAW;AAChB,EAAE,CAAC,EAAE,KAAK;AACV,EAAE,EAAE,EAAE,OAAO;AACb,EAAE,EAAE,EAAE,SAAS;AACf,EAAE,EAAE,EAAE,OAAO;AACb,EAAE,EAAE,EAAE,OAAO;AACb,EAAE,EAAE,EAAE,SAAS;AACf,EAAE,EAAE,EAAE,KAAK;AACX,EAAE,EAAE,EAAE,UAAU;AAChB,EAAE,EAAE,EAAE,QAAQ;AACd,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,QAAQ;AACd,EAAE,EAAE,EAAE,UAAU;AAChB,EAAE,EAAE,EAAE,KAAK;AACX,EAAE,EAAE,EAAE,MAAM;AACZ,EAAE,EAAE,EAAE,WAAW;AACjB,EAAE,EAAE,EAAE,SAAS;AACf,EAAE,EAAE,EAAE,YAAY;AAClB,EAAE,EAAE,EAAE,WAAW;AACjB,EAAE,EAAE,EAAE,aAAa;AACnB,EAAE,EAAE,EAAE,QAAQ;AACd,EAAE,EAAE,EAAE,QAAQ;AACd,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,MAAM;AACZ,EAAE,EAAE,EAAE,MAAM;AACZ,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,SAAS;AAChB,EAAE,GAAG,EAAE,YAAY;AACnB,EAAE,GAAG,EAAE,OAAO;AACd,EAAE,GAAG,EAAE,OAAO;AACd,EAAE,GAAG,EAAE,SAAS;AAChB,EAAE,GAAG,EAAE,SAAS;AAChB,EAAE,GAAG,EAAE,KAAK;AACZ,EAAE,GAAG,EAAE,KAAK;AACZ,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,IAAI;AACX,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE;AACP;;AAEO,IAAIC,OAAK,GAAG;AACnB,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,EAAE,EAAE,GAAG;AACT,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE,GAAG;AACV,EAAE,GAAG,EAAE;AACP;;AAEA,IAAID,KAAG,GAAG,OAAO,SAAS,IAAI,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ;AAC1E,IAAIT,IAAE,GAAG,OAAO,SAAS,IAAI,WAAW,IAAI,+CAA+C,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS;;AAEpH;AACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;;AAEnE;AACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG;;AAEpD;AACA,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;AAC/B,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE;AACtC,EAAEU,OAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAClC;;AAEA;AACA,KAAK,IAAInC,MAAI,IAAI,IAAI,EAAE,IAAI,CAACmC,OAAK,CAAC,cAAc,CAACnC,MAAI,CAAC,EAAEmC,OAAK,CAACnC,MAAI,CAAC,GAAG,IAAI,CAACA,MAAI;;AAExE,SAAS,OAAO,CAAC,KAAK,EAAE;AAC/B;AACA;AACA,EAAE,IAAI,SAAS,GAAGkC,KAAG,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;AAC3F,MAAMT,IAAE,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC;AAChE,MAAM,KAAK,CAAC,GAAG,IAAI;AACnB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,GAAG;AACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAGU,OAAK,GAAG,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC;AAClD,IAAI,KAAK,CAAC,GAAG,IAAI;AACjB;AACA,EAAE,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,GAAG;AAC5B,EAAE,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,GAAG;AAC5B;AACA,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE,IAAI,GAAG;AAC7B,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG;AAC3B,EAAE,IAAI,IAAI,IAAI,OAAO,EAAE,IAAI,GAAG;AAC9B,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE,IAAI,GAAG;AAC7B,EAAE,OAAO;AACT;;ACnHA,MAAMD,KAAG,GAAG,OAAO,SAAS,IAAI,WAAW,GAAG,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK;AACnG,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAChC,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACtE,IAAI,IAAI,MAAM,IAAI,OAAO;AACzB,QAAQ,MAAM,GAAG,GAAG;AACpB,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI;AAC9B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;AAC1B,QAAQ,IAAI,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,YAAY,IAAI,GAAG,IAAI;AACvB,aAAa,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AACtC,YAAY,GAAG,GAAG,IAAI;AACtB,aAAa,IAAI,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC;AAChD,YAAY,IAAI,GAAG,IAAI;AACvB,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC;AACxC,YAAY,KAAK,GAAG,IAAI;AACxB,aAAa,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACrC,YAAY,IAAIA,KAAG;AACnB,gBAAgB,IAAI,GAAG,IAAI;AAC3B;AACA,gBAAgB,IAAI,GAAG,IAAI;AAC3B;AACA;AACA,YAAY,MAAM,IAAI,KAAK,CAAC,8BAA8B,GAAG,GAAG,CAAC;AACjE;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,MAAM,GAAG,MAAM,GAAG,MAAM;AAChC,IAAI,IAAI,IAAI;AACZ,QAAQ,MAAM,GAAG,OAAO,GAAG,MAAM;AACjC,IAAI,IAAI,IAAI;AACZ,QAAQ,MAAM,GAAG,OAAO,GAAG,MAAM;AACjC,IAAI,IAAI,KAAK;AACb,QAAQ,MAAM,GAAG,QAAQ,GAAG,MAAM;AAClC,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,SAAS,CAAC,GAAG,EAAE;AACxB,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAClC,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG;AACxB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AAChD,IAAI,OAAO,IAAI;AACf;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE;AAC9C,IAAI,IAAI,KAAK,CAAC,MAAM;AACpB,QAAQ,IAAI,GAAG,MAAM,GAAG,IAAI;AAC5B,IAAI,IAAI,KAAK,CAAC,OAAO;AACrB,QAAQ,IAAI,GAAG,OAAO,GAAG,IAAI;AAC7B,IAAI,IAAI,KAAK,CAAC,OAAO;AACrB,QAAQ,IAAI,GAAG,OAAO,GAAG,IAAI;AAC7B,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ;AAC/B,QAAQ,IAAI,GAAG,QAAQ,GAAG,IAAI;AAC9B,IAAI,OAAO,IAAI;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASE,QAAM,CAAC,QAAQ,EAAE;AAC1B,IAAI,OAAO,IAAI,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,aAAa,EAAE,cAAc,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,QAAQ,EAAE;AAClC,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,QAAQ,CAAC;AACjC,IAAI,OAAO,UAAU,IAAI,EAAE,KAAK,EAAE;AAClC,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACjF,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AAC7D,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,EAAE;AAC7C,YAAY,IAAI,KAAK,CAAC,QAAQ,EAAE;AAChC;AACA;AACA,gBAAgB,IAAI,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAChE,gBAAgB,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AACvE,oBAAoB,OAAO,IAAI;AAC/B;AACA,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG;AAC5F,iBAAiB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,QAAQ,IAAI,IAAI,EAAE;AACtE;AACA;AACA;AACA;AACA,gBAAgB,IAAI,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC9D,gBAAgB,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AACzE,oBAAoB,OAAO,IAAI;AAC/B;AACA;AACA,QAAQ,OAAO,KAAK;AACpB,KAAK;AACL;;ACvHO,MAAe,YAAmB,CAAA;AAGzC;AAWO,MAAM,KAAgD,CAAA;AAAA,EAAtD,WAAA,GAAA;AACL,IAAA,IAAA,CAAU,WAAsB,EAAC;AAGjC;AAAA,IAAA,IAAA,CAAA,IAAA,GAAO,MAAc;AACnB,MAAA,OAAO,KAAK,QAAS,CAAA,MAAA;AAAA,KACvB;AAGA;AAAA,IAAA,IAAA,CAAA,GAAA,GAAM,MAA2B;AAC/B,MAAO,OAAA,IAAA,CAAK,QAAS,CAAA,EAAA,CAAG,CAAE,CAAA,CAAA;AAAA,KAC5B;AAGA;AAAA,IAAA,IAAA,CAAA,IAAA,GAAO,CAAC,IAAqB,KAAA;AA/B/B,MAAA,IAAA,EAAA;AAgCI,MAAK,CAAA,EAAA,GAAA,IAAA,CAAA,GAAA,EAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAY,IAAK,CAAA,IAAA,CAAA;AAAA,KACnB;AAGA;AAAA,IAAA,IAAA,CAAA,IAAA,GAAO,CAAC,IAAwB,KAAA;AAC9B,MAAK,IAAA,CAAA,QAAA,CAAS,KAAK,IAAI,CAAA;AAAA,KACzB;AAGA;AAAA,IAAA,IAAA,CAAA,KAAA,GAAQ,MAAe;AACrB,MAAM,MAAA,EAAA,GAAK,IAAK,CAAA,QAAA,CAAS,GAAI,EAAA;AAC7B,MAAI,IAAA,CAAC,EAAI,EAAA,MAAM,aAAc,EAAA;AAE7B,MAAO,OAAA,EAAA;AAAA,KACT;AAAA;AACF;;AC5CO,MAAM,2BAA2B,YAAmB,CAAA;AAAA,EACzD,WAAA,CACS,IACA,EAAA,OAAA,EACA,KACP,EAAA;AACA,IAAM,KAAA,EAAA;AAJC,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,OAAA,GAAA,OAAA;AACA,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAAA;AAGT,EAEA,IAAA,CAAK,SAAe,IAAc,EAAA;AAChC,IAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,CAAK,IAAM,EAAA,GAAG,IAAI,CAAA;AAAA;AACjC,EAEA,GAAwB,GAAA;AACtB,IAAO,OAAA,IAAA,CAAK,QAAQ,GAAI,EAAA;AAAA;AAC1B,EAEA,OAAO,MAAA,CAAO,IAAgB,EAAA,OAAA,EAAiB,KAAe,EAAA;AAC5D,IAAA,OAAO,IAAI,kBAAA,CAAmB,IAAM,EAAA,OAAA,EAAS,KAAK,CAAA;AAAA;AAEtD;;;;;;;;;ACvBA,IAAAC,QAAA,EAAA,QAAA,EAAA,WAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,mBAAA,EAAAC,iBAAA;AAyBO,MAAM,YAAA,GAAN,MAAM,YAAA,SAAoB,KAAgC,CAAA;AAAA;AAAA,EAsBrD,YAAY,MAAgB,EAAA;AACpC,IAAM,KAAA,EAAA;AAlBR;AAAA,IAAAlE,cAAA,CAAA,IAAA,EAAA8D,QAAA,EAA0B,IAAK,CAAA,IAAA,CAAA;AAuB/B;AAAA,IAAW9D,cAAA,CAAA,IAAA,EAAA,QAAA,EAAA,CAAC,SAAgD,IAAK,CAAA,MAAA,CAAA;AAGjE;AAAA,IAAcA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA,CAAC,GAAS,CAA8B,KAAA;AACpD,MAAA,IAAIC,cAAK,CAAA,IAAA,EAAA,QAAA,CAAA,CAAL,IAAc,CAAA,IAAA,EAAA,CAAA,CAAA,IAAMA,cAAK,CAAA,IAAA,EAAA,QAAA,CAAA,CAAL,IAAc,CAAA,IAAA,EAAA,CAAA,CAAA,IAAM,IAAK,CAAA,OAAA,CAAQ,CAAE,CAAA,KAAA,EAAO,EAAE,KAAK,CAAA;AACvE,QAAO,OAAA,IAAA,CAAK,OAAO,IAAK,CAAA,CAAA,CAAE,OAAO,CAAE,CAAA,IAAA,EAAM,EAAE,KAAK,CAAA;AAElD,MAAO,OAAA,KAAA,CAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAA+D,cAAA,EAAe,CAAC,IAA4C,KAAA;AAC1D,MAAM,MAAA,MAAA,GAAS,OAAO,MAAO,CAAA;AAAA,QAC3B,GAAG,KAAK,MAAO,CAAA,KAAA;AAAA,QACf,GAAG,KAAK,MAAO,CAAA;AAAA,OAChB,CAAA,CAAE,IAAK,CAAA,CAAC,CAAgC,KAAA;AACvC,QAAA,MAAM,OAAO,CAAE,CAAA,IAAA;AACf,QAAO,OAAA,IAAA,CAAK,aAAc,CAAA,KAAA,CAAM,IAAI,CAAA;AAAA,OACrC,CAAA;AAED,MAAA,IAAI,CAAC,MAAA,EAAc,MAAA,gBAAA,CAAiB,IAAI,CAAA;AAExC,MAAO,OAAA,MAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAA/D,cAAA,CAAA,IAAA,EAAAgE,UAAA,EAAW,CAAC,IAAuB,KAAA;AACjC,MAAM,MAAA,IAAA,GAAO/D,cAAK,CAAA,IAAA,EAAA8D,cAAA,CAAA,CAAL,IAAkB,CAAA,IAAA,EAAA,IAAA,CAAA;AAC/B,MAAA,MAAM,OAAO,IAAK,CAAA,IAAA;AAElB,MAAA,IAAA,CAAK,aAAc,CAAA,MAAA,CAAO,IAAM,EAAA,IAAA,EAAM,IAA2B,CAAA;AAAA,KACnE,CAAA;AAGA;AAAA,IAAa,IAAA,CAAA,UAAA,GAAA,CAAC,IAAoB,EAAA,QAAA,EAAoB,KAAkB,KAAA;AACtE,MAAK,IAAA,CAAA,QAAA,CAAS,UAAU,KAAK,CAAA;AAC7B,MAAK,IAAA,CAAA,IAAA,CAAK,KAAK,QAAQ,CAAA;AAEvB,MAAO,OAAA,IAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAW,IAAA,CAAA,QAAA,GAAA,CAAC,UAAoB,KAAkB,KAAA;AAChD,MAAA,IAAA,CAAK,KAAK,kBAAmB,CAAA,MAAA,CAAO,UAAU,EAAC,EAAG,KAAK,CAAC,CAAA;AACxD,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAA/D,cAAA,CAAA,IAAA,EAAAiE,mBAAA,EAAoB,MAAY;AAC9B,MAAA/D,cAAA,CAAA,IAAA,EAAK4D,UAAS,IAAK,CAAA,IAAA,CAAA;AACnB,MAAM,MAAA,OAAA,GAAU,KAAK,KAAM,EAAA;AAE3B,MAAA,OAAO7D,qBAAKiE,iBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAqB,QAAQ,IAAM,EAAA,OAAA,CAAQ,OAAO,OAAQ,CAAA,OAAA,CAAA;AAAA,KACnE,CAAA;AAGA;AAAA,IAAA,IAAA,CAAA,SAAA,GAAY,MAAM;AAChB,MAAAjE,cAAA,CAAA,IAAA,EAAKgE,mBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAkBjE,cAAA,CAAA,IAAA,EAAAkE,iBAAA,EAAA,CAChB,QACA,EAAA,KAAA,EACA,OACS,KAAA;AACT,MAAA,MAAM,OAAO,QAAS,CAAA,aAAA,CAAc,KAAO,EAAA,OAAA,EAASjE,qBAAK6D,QAAM,CAAA,CAAA;AAC/D,MAAA,IAAI,CAAC,IAAM,EAAA,MAAM,sBAAuB,CAAA,QAAA,EAAU,OAAO,OAAO,CAAA;AAEhE,MAAA,IAAA,CAAK,KAAK,IAAI,CAAA;AAEd,MAAO,OAAA,IAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAU,IAAA,CAAA,OAAA,GAAA,CAAC,QAAoB,EAAA,KAAA,EAAe,OAAqB,KAAA;AACjE,MAAK7D,cAAA,CAAA,IAAA,EAAAiE,iBAAA,CAAA,CAAL,IAAqB,CAAA,IAAA,EAAA,QAAA,EAAU,KAAO,EAAA,OAAA,CAAA;AACtC,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAW,IAAA,CAAA,QAAA,GAAA,CAAC,UAAoB,KAAkB,KAAA;AAChD,MAAM,MAAA,IAAA,GAAO,QAAS,CAAA,MAAA,CAAO,KAAK,CAAA;AAElC,MAAAhE,cAAA,CAAA,IAAA,EAAK4D,QAAS,EAAA,IAAA,CAAK,QAAS,CAAA7D,cAAA,CAAA,IAAA,EAAK6D,QAAM,CAAA,CAAA,CAAA;AACvC,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAA,IAAA,CAAA,SAAA,GAAY,CAAC,QAAuB,KAAA;AAClC,MAAA5D,cAAA,CAAA,IAAA,EAAK4D,QAAS,EAAA,QAAA,CAAS,aAAc,CAAA7D,cAAA,CAAA,IAAA,EAAK6D,QAAM,CAAA,CAAA,CAAA;AAChD,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAA,IAAA,CAAA,OAAA,GAAU,CAAC,IAAiB,KAAA;AAC1B,MAAM,MAAA,UAAA,GAAa,KAAK,GAAI,EAAA;AAC5B,MAAI,IAAA,CAAC,UAAY,EAAA,MAAM,aAAc,EAAA;AAErC,MAAM,MAAA,QAAA,GAAW,WAAW,GAAI,EAAA;AAChC,MAAA,MAAM,WAAW,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,IAAA,EAAM7D,qBAAK6D,QAAM,CAAA,CAAA;AAEnD,MAAA,IAAI,CAAC,QAAU,EAAA;AACb,QAAA,UAAA,CAAW,KAAK,QAAQ,CAAA;AACxB,QAAO,OAAA,IAAA;AAAA;AAGT,MAAA,MAAM,MAAS,GAAA7D,cAAA,CAAA,IAAA,EAAK,WAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAiB,QAAU,EAAA,QAAA,CAAA;AAC1C,MAAA,IAAI,MAAQ,EAAA;AACV,QAAA,UAAA,CAAW,KAAK,MAAM,CAAA;AACtB,QAAO,OAAA,IAAA;AAAA;AAET,MAAW,UAAA,CAAA,IAAA,CAAK,UAAU,QAAQ,CAAA;AAClC,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAA,IAAA,CAAA,KAAA,GAAQ,MAAY;AAClB,MAAI,IAAA,GAAA;AAEJ,MAAA;AAAG,QAAA,GAAA,GAAMA,qBAAKgE,mBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAAA,aACF,KAAK,IAAK,EAAA;AAEjB,MAAO,OAAA,GAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAO,IAAA,CAAA,IAAA,GAAA,CAAC,KAAuC,GAAA,EAAO,KAAA;AACnD,MAAC,CAAA,KAAK,CAAE,CAAA,IAAA,EAAO,CAAA,OAAA,CAAQ,CAAC,IAAS,KAAAhE,cAAA,CAAA,IAAA,EAAK+D,UAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAc,IAAK,CAAA,CAAA;AACrD,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAQ,IAAA,CAAA,KAAA,GAAA,MAAM,KAAK,KAAM,EAAA;AAGzB;AAAA,IAAM,IAAA,CAAA,GAAA,GAAA,CAAC,QAAsB,QAAqB,KAAA;AAChD,MAAA,MAAM,OAAO,MAAO,CAAA,OAAA;AAAA,QAClB,MAAA,CAAO,MAAM,QAAQ,CAAA;AAAA,QACrB;AAAA,OACF;AACA,MAAA,IAAA,CAAK,KAAK,IAAI,CAAA;AAEd,MAAO,OAAA,IAAA;AAAA,KACT;AAvJE,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA;AAAA;AAwJlB,CAAA;AA3KEF,QAAA,GAAA,IAAA,OAAA,EAAA;AAuBA,QAAA,GAAA,IAAA,OAAA,EAAA;AAGA,WAAA,GAAA,IAAA,OAAA,EAAA;AAQAC,cAAA,GAAA,IAAA,OAAA,EAAA;AAeAC,UAAA,GAAA,IAAA,OAAA,EAAA;AAuBAC,mBAAA,GAAA,IAAA,OAAA,EAAA;AAcAC,iBAAA,GAAA,IAAA,OAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3FW,YAaJ,CAAA,MAAA,GAAS,CAAC,MAAA,EAAgB,MAAiC,KAAA;AAChE,EAAM,MAAA,KAAA,GAAQ,IAAI,YAAA,CAAK,MAAM,CAAA;AAC7B,EAAA,OAAO,CAAC,IAAS,KAAA;AACf,IAAM,KAAA,CAAA,GAAA,CAAI,QAAQ,IAAI,CAAA;AACtB,IAAA,OAAO,MAAM,KAAM,EAAA;AAAA,GACrB;AACF,CAAA;AAnBK,IAAM,WAAN,GAAA,YAAA;;ACrBA,MAAM,uBAAA,GAAN,MAAM,uBAAA,SAA+B,YAA2B,CAAA;AAAA,EACrE,YACS,IACA,EAAA,QAAA,EACA,KACA,EAAA,KAAA,GAAoB,EAC3B,EAAA;AACA,IAAM,KAAA,EAAA;AALC,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AACA,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AACA,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAYT,IAAO,IAAA,CAAA,IAAA,GAAA,CAAC,SAAuB,IAAyB,KAAA;AACtD,MAAA,IAAI,CAAC,IAAA,CAAK,QAAU,EAAA,IAAA,CAAK,WAAW,EAAC;AAErC,MAAA,IAAA,CAAK,QAAS,CAAA,IAAA,CAAK,IAAM,EAAA,GAAG,IAAI,CAAA;AAAA,KAClC;AAEA,IAAA,IAAA,CAAA,GAAA,GAAM,MAA6B;AA3BrC,MAAA,IAAA,EAAA;AA2BwC,MAAA,OAAA,CAAA,EAAA,GAAA,IAAA,CAAK,aAAL,IAAe,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,EAAA;AAAA,KAAA;AAAA;AACvD,CAAA;AAxBa,uBAAA,CAUJ,MAAS,GAAA,CACd,IACA,EAAA,QAAA,EACA,KACA,EAAA,KAAA,GAAoB,EAAC,KAClB,IAAI,uBAAA,CAAuB,IAAM,EAAA,QAAA,EAAU,OAAO,KAAK,CAAA;AAfvD,IAAM,sBAAN,GAAA,uBAAA;;;;;;;;;ACJP,IAAA,MAAA,EAAA,YAAA,EAAA,aAAA,EAAA,aAAA,EAAA,QAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,SAAA,EAAA,UAAA;AAsBA,MAAM,UAAA,GAAa,CAAC,CAClB,KAAA,MAAA,CAAO,UAAU,cAAe,CAAA,IAAA,CAAK,GAAG,MAAM,CAAA;AAIzC,MAAM,gBAAA,GAAN,MAAM,gBAAA,SAAwB,KAGnC,CAAA;AAAA;AAAA,EAqBA,YAAY,MAAgB,EAAA;AAC1B,IAAM,KAAA,EAAA;AApBR;AAAA,IAAAlE,cAAA,CAAA,IAAA,EAAA,MAAA,EAA0B,IAAK,CAAA,IAAA,CAAA;AAyB/B;AAAA,IAAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAe,CAAC,IAA2C,KAAA;AACzD,MAAM,MAAA,MAAA,GAAS,OAAO,MAAO,CAAA;AAAA,QAC3B,GAAG,KAAK,MAAO,CAAA,KAAA;AAAA,QACf,GAAG,KAAK,MAAO,CAAA;AAAA,OAChB,CAAA,CAAE,IAAK,CAAA,CAAC,CAAgC,KAAA;AACvC,QAAA,MAAM,OAAO,CAAE,CAAA,IAAA;AACf,QAAO,OAAA,IAAA,CAAK,UAAW,CAAA,KAAA,CAAM,IAAmB,CAAA;AAAA,OACjD,CAAA;AAED,MAAA,IAAI,CAAC,MAAA,EAAc,MAAA,oBAAA,CAAqB,KAAK,IAAI,CAAA;AAEjD,MAAO,OAAA,MAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAAA,cAAA,CAAA,IAAA,EAAA,aAAA,EAAgB,CAAC,IAAe,KAAA;AAC9B,MAAM,MAAA,IAAA,GAAOC,cAAK,CAAA,IAAA,EAAA,YAAA,CAAA,CAAL,IAAkB,CAAA,IAAA,EAAA,IAAA,CAAA;AAC/B,MAAA,MAAM,OAAO,IAAK,CAAA,IAAA;AAClB,MAAA,OAAO,IAAK,CAAA,UAAA,CAAW,MAAO,CAAA,IAAA,EAAM,IAAI,CAAA;AAAA,KAC1C,CAAA;AAGA;AAAA,IAAgBD,cAAA,CAAA,IAAA,EAAA,aAAA,EAAA,CAAC,MAAY,IAAe,KAAA;AAC1C,MAAM,MAAA,IAAA,GAAOC,cAAK,CAAA,IAAA,EAAA,YAAA,CAAA,CAAL,IAAkB,CAAA,IAAA,EAAA,IAAA,CAAA;AAC/B,MAAA,MAAM,OAAO,IAAK,CAAA,IAAA;AAClB,MAAA,OAAO,IAAK,CAAA,UAAA,CAAW,MAAO,CAAA,IAAA,EAAM,MAAM,IAAI,CAAA;AAAA,KAChD,CAAA;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAA,QAAA,EAAW,CAAC,IAAe,KAAA;AACzB,MAAM,MAAA,EAAE,OAAU,GAAA,IAAA;AAClB,MAAM,MAAA,WAAA,GAAc,CAAC,CAAS,KAAA;AAxFlC,QAAA,IAAA,EAAA;AAwFqC,QAAE,OAAA,CAAA,EAAA,GAAA,CAAA,CAAA,IAAA,CAAK,IAAK,CAAA,QAAA,KAAZ,IAAwB,GAAA,EAAA,GAAA,EAAA;AAAA,OAAA;AACzD,MAAA,MAAM,GAAM,GAAA,CAAC,GAAG,KAAK,EAAE,IAAK,CAAA,CAAC,CAAG,EAAA,CAAA,KAAM,WAAY,CAAA,CAAC,CAAI,GAAA,WAAA,CAAY,CAAC,CAAC,CAAA;AACrE,MAAM,MAAA,aAAA,GAAgB,GAAI,CAAA,KAAA,CAAM,CAAC,IAAA,KAAS,CAACC,cAAK,CAAA,IAAA,EAAA,aAAA,CAAA,CAAL,IAAmB,CAAA,IAAA,EAAA,IAAA,EAAM,IAAK,CAAA,CAAA;AACzE,MAAI,IAAA,aAAA,EAAoBA,cAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAL,IAAmB,CAAA,IAAA,EAAA,IAAA,CAAA;AAEtC,MAAA,KAAA,CAAM,QAAQ,CAAC,IAAA,KAASA,cAAK,CAAA,IAAA,EAAA,UAAA,CAAA,CAAL,WAAgB,IAAK,CAAA,CAAA;AAAA,KAC/C,CAAA;AAGA;AAAA,IAAcD,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA,CAAC,OAAqB,IAA+B,KAAA;AAjGrE,MAAA,IAAA,EAAA;AAkGI,MAAI,IAAA,KAAA,CAAM,IAAS,KAAA,IAAA,EAAa,OAAA,KAAA;AAEhC,MAAA,IAAA,CAAA,CAAI,EAAM,GAAA,KAAA,CAAA,QAAA,KAAN,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAA,MAAW,GAAU,OAAA,KAAA;AAEzC,MAAM,MAAA,UAAA,GAAa,CAACmE,KAA4C,KAAA;AAtGpE,QAAAC,IAAAA,GAAAA;AAuGM,QAAID,IAAAA,KAAAA,CAAK,IAAS,KAAA,IAAA,EAAaA,OAAAA,KAAAA;AAE/B,QAAA,IAAA,CAAA,CAAIC,MAAAD,KAAK,CAAA,QAAA,KAAL,gBAAAC,GAAe,CAAA,MAAA,MAAW,GAAU,OAAA,IAAA;AAExC,QAAM,MAAA,CAAC,UAAU,CAAA,GAAID,KAAK,CAAA,QAAA;AAC1B,QAAI,IAAA,CAAC,YAAmB,OAAA,IAAA;AAExB,QAAA,OAAO,WAAW,UAAU,CAAA;AAAA,OAC9B;AAEA,MAAM,MAAA,MAAA,GAAS,WAAW,KAAK,CAAA;AAE/B,MAAI,IAAA,CAAC,QAAe,OAAA,KAAA;AAEpB,MAAA,MAAM,MAAM,MAAO,CAAA,QAAA,GAAW,CAAC,GAAG,MAAA,CAAO,QAAQ,CAAI,GAAA,KAAA,CAAA;AACrD,MAAA,MAAM,IAAO,GAAA,EAAE,GAAG,KAAA,EAAO,UAAU,GAAI,EAAA;AACvC,MAAA,IAAA,CAAK,QAAW,GAAA,GAAA;AAChB,MAAO,MAAA,CAAA,QAAA,GAAW,CAAC,IAAI,CAAA;AAEvB,MAAO,OAAA,MAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAAnE,cAAA,CAAA,IAAA,EAAA,mBAAA,EAAsB,CAAC,IAAqC,KAAA;AAC1D,MAAM,MAAA,EAAE,UAAa,GAAA,IAAA;AACrB,MAAI,IAAA,CAAC,UAAiB,OAAA,IAAA;AAEtB,MAAA,IAAA,CAAK,WAAW,QAAS,CAAA,MAAA,CAAO,CAAC,YAAA,EAAc,OAAO,KAAU,KAAA;AAC9D,QAAA,IAAI,KAAU,KAAA,CAAA,EAAU,OAAA,CAAC,KAAK,CAAA;AAE9B,QAAM,MAAA,IAAA,GAAO,YAAa,CAAA,EAAA,CAAG,CAAE,CAAA,CAAA;AAC/B,QAAA,IAAI,IAAQ,IAAA,IAAA,CAAK,MAAU,IAAA,KAAA,CAAM,MAAQ,EAAA;AACvC,UAAA,KAAA,GAAQC,cAAK,CAAA,IAAA,EAAA,WAAA,CAAA,CAAL,IAAiB,CAAA,IAAA,EAAA,KAAA,EAAO,IAAK,CAAA,IAAA,CAAA;AACrC,UAAA,MAAM,EAAE,QAAA,EAAU,YAAc,EAAA,GAAG,UAAa,GAAA,KAAA;AAChD,UAAA,MAAM,EAAE,QAAA,EAAU,YAAc,EAAA,GAAG,UAAa,GAAA,IAAA;AAChD,UAAA,IACE,KAAM,CAAA,IAAA,KAAS,IAAK,CAAA,IAAA,IACpB,YACA,IAAA,YAAA,IACA,IAAK,CAAA,SAAA,CAAU,QAAQ,CAAA,KAAM,IAAK,CAAA,SAAA,CAAU,QAAQ,CACpD,EAAA;AACA,YAAA,MAAM,IAAO,GAAA;AAAA,cACX,GAAG,QAAA;AAAA,cACH,QAAU,EAAA,CAAC,GAAG,YAAA,EAAc,GAAG,YAAY;AAAA,aAC7C;AACA,YAAO,OAAA,YAAA,CACJ,MAAM,CAAG,EAAA,CAAA,CAAE,EACX,MAAO,CAAAA,cAAA,CAAA,IAAA,EAAK,mBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAyB,IAAK,CAAA,CAAA;AAAA;AAC1C;AAEF,QAAO,OAAA,YAAA,CAAa,OAAO,KAAK,CAAA;AAAA,OAClC,EAAG,EAAoB,CAAA;AAEvB,MAAO,OAAA,IAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAA,mBAAA,EAAsB,CAAC,OAAoC,KAAA;AACzD,MAAA,MAAM,IAAqB,GAAA;AAAA,QACzB,GAAG,OAAQ,CAAA,KAAA;AAAA,QACX,MAAM,OAAQ,CAAA;AAAA,OAChB;AAEA,MAAA,IAAI,OAAQ,CAAA,QAAA,EAAe,IAAA,CAAA,QAAA,GAAW,OAAQ,CAAA,QAAA;AAE9C,MAAA,IAAI,OAAQ,CAAA,KAAA,EAAY,IAAA,CAAA,KAAA,GAAQ,OAAQ,CAAA,KAAA;AAExC,MAAO,OAAA,IAAA;AAAA,KACT,CAAA;AAIA;AAAA;AAAA,IAAW,IAAA,CAAA,QAAA,GAAA,CAAC,IAAc,EAAA,KAAA,EAAgB,KAAuB,KAAA;AAC/D,MAAA,IAAA,CAAK,KAAK,sBAAuB,CAAA,MAAA,CAAO,MAAM,KAAW,CAAA,EAAA,KAAA,EAAO,KAAK,CAAC,CAAA;AACtE,MAAO,OAAA,IAAA;AAAA,KACT;AAEA,IAAcA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA,CACZ,SACA,MACG,KAAA;AACH,MAAA,IAAI,WAAc,GAAA,EAAA;AAClB,MAAA,IAAI,SAAY,GAAA,EAAA;AAChB,MAAA,MAAM,WAAW,OAAQ,CAAA,QAAA;AACzB,MAAA,IAAI,KAAQ,GAAA,CAAA,CAAA;AACZ,MAAA,IAAI,IAAO,GAAA,CAAA,CAAA;AACX,MAAM,MAAA,SAAA,GAAY,CAAC,IAAyB,KAAA;AAC1C,QAAA,IAAI,CAAC,IAAM,EAAA;AACX,QAAK,IAAA,CAAA,OAAA,CAAQ,CAAC,KAAA,EAAO,KAAU,KAAA;AAC7B,UAAA,IAAI,KAAM,CAAA,IAAA,KAAS,MAAU,IAAA,KAAA,CAAM,KAAO,EAAA;AACxC,YAAI,IAAA,KAAA,GAAQ,GAAW,KAAA,GAAA,KAAA;AAEvB,YAAO,IAAA,GAAA,KAAA;AAAA;AACT,SACD,CAAA;AAAA,OACH;AAEA,MAAA,IAAI,QAAU,EAAA;AACZ,QAAA,SAAA,CAAU,QAAQ,CAAA;AAClB,QAAA,MAAM,YAAY,QAAW,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,IAAA,CAAA;AAG7B,QAAA,MAAM,aAAa,QAAW,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,KAAA,CAAA;AAG9B,QAAA,IAAI,SAAa,IAAA,SAAA,CAAU,KAAM,CAAA,QAAA,CAAS,GAAG,CAAG,EAAA;AAC9C,UAAA,SAAA,GAAY,SAAU,CAAA,KAAA,CAAM,KAAM,CAAA,KAAK,EAAG,CAAC,CAAA;AAC3C,UAAU,SAAA,CAAA,KAAA,GAAQ,SAAU,CAAA,KAAA,CAAM,OAAQ,EAAA;AAAA;AAE5C,QAAA,IAAI,UAAc,IAAA,UAAA,CAAW,KAAM,CAAA,UAAA,CAAW,GAAG,CAAG,EAAA;AAClD,UAAA,WAAA,GAAc,UAAW,CAAA,KAAA,CAAM,KAAM,CAAA,KAAK,EAAG,CAAC,CAAA;AAC9C,UAAW,UAAA,CAAA,KAAA,GAAQ,UAAW,CAAA,KAAA,CAAM,SAAU,EAAA;AAAA;AAChD;AAGF,MAAA,IAAI,YAAY,MAAQ,EAAAC,cAAA,CAAA,IAAA,EAAK,eAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAqB,QAAQ,KAAW,CAAA,EAAA,WAAA,CAAA;AAEhE,MAAA,MAAM,SAAS,MAAO,EAAA;AAEtB,MAAA,IAAI,UAAU,MAAQ,EAAAA,cAAA,CAAA,IAAA,EAAK,eAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAqB,QAAQ,KAAW,CAAA,EAAA,SAAA,CAAA;AAE9D,MAAO,OAAA,MAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAoBD,cAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,CAAC,OAAgB,KAAwB,KAAA;AAC3D,MAAM,MAAA,OAAA,GAAU,KAAK,KAAM,EAAA;AAE3B,MAAM,MAAA,MAAA,GAAS,MACbC,cAAA,CAAA,IAAA,EAAK,eAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EACE,OAAQ,CAAA,IAAA,EACR,OAAQ,CAAA,QAAA,EACR,OAAQ,CAAA,KAAA,EACR,OAAQ,CAAA,KAAA,CAAA;AAGZ,MAAA,IAAI,IAAM,EAAA,OAAOA,cAAK,CAAA,IAAA,EAAA,WAAA,CAAA,CAAL,WAAiB,OAAS,EAAA,MAAA,CAAA;AAE3C,MAAA,OAAO,MAAO,EAAA;AAAA,KAChB,CAAA;AAGA;AAAA,IAAA,IAAA,CAAA,SAAA,GAAY,MAAM;AAChB,MAAAA,cAAA,CAAA,IAAA,EAAK,iBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAA,eAAA,EAAkB,CAChB,IAAA,EACA,QACA,EAAA,KAAA,EACA,KACiB,KAAA;AACjB,MAAA,MAAM,UAAU,sBAAuB,CAAA,MAAA,CAAO,IAAM,EAAA,QAAA,EAAU,OAAO,KAAK,CAAA;AAC1E,MAAA,MAAM,OAAqBC,cAAK,CAAA,IAAA,EAAA,mBAAA,CAAA,CAAL,IACzB,CAAA,IAAA,EAAAA,cAAA,CAAA,IAAA,EAAK,qBAAL,IAAyB,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AAE3B,MAAA,IAAA,CAAK,KAAK,IAAI,CAAA;AACd,MAAO,OAAA,IAAA;AAAA,KACT,CAAA;AAGA;AAAA,IAAA,IAAA,CAAA,OAAA,GAAU,CACR,IAAA,EACA,QACA,EAAA,KAAA,EACA,KACG,KAAA;AACH,MAAAA,cAAA,CAAA,IAAA,EAAK,eAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAqB,IAAM,EAAA,QAAA,EAAU,KAAO,EAAA,KAAA,CAAA;AAC5C,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAA,SAAA,EAAY,CACV,IAAA,EACA,IACA,EAAA,KAAA,EACA,KACG,KAAA;AACH,MAAA,MAAM,IAAO,GAAA,IAAA,CAAK,OAAQ,CAAAC,cAAA,CAAA,IAAA,EAAK,MAAM,CAAA,CAAA;AAErC,MAAA,IAAI,MAAa,OAAA,IAAA;AAEjB,MAAAC,cAAA,CAAA,IAAA,EAAK,MAAS,EAAA,IAAA,CAAK,QAAS,CAAAD,cAAA,CAAA,IAAA,EAAK,MAAM,CAAA,CAAA,CAAA;AACvC,MAAO,OAAA,IAAA,CAAK,SAAS,IAAM,EAAA,KAAA,EAAO,EAAE,GAAG,KAAA,EAAO,MAAQ,EAAA,IAAA,EAAM,CAAA;AAAA,KAC9D,CAAA;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAA,UAAA,EAAa,CAAC,IAAqB,KAAA;AACjC,MAAA,MAAM,IAAO,GAAA,IAAA,CAAK,OAAQ,CAAAC,cAAA,CAAA,IAAA,EAAK,MAAM,CAAA,CAAA;AAErC,MAAA,IAAI,CAAC,IAAM,EAAA;AAEX,MAAAC,cAAA,CAAA,IAAA,EAAK,MAAS,EAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAcD,qBAAK,MAAM,CAAA,CAAA,CAAA;AACjD,MAAAA,cAAA,CAAA,IAAA,EAAK,mBAAL,IAAuB,CAAA,IAAA,EAAA,IAAA,CAAA;AAAA,KACzB,CAAA;AAIA;AAAA;AAAA,IAAA,IAAA,CAAA,QAAA,GAAW,CAAC,IAAA,EAAY,IAAc,EAAA,KAAA,EAAgB,KAAuB,KAAA;AAC3E,MAAAA,cAAA,CAAA,IAAA,EAAK,SAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAe,IAAM,EAAA,IAAA,EAAM,KAAO,EAAA,KAAA,CAAA;AAClC,MAAO,OAAA,IAAA;AAAA,KACT;AAKA;AAAA;AAAA;AAAA,IAAA,IAAA,CAAA,SAAA,GAAY,CAAC,IAAe,KAAA;AAC1B,MAAAA,cAAA,CAAA,IAAA,EAAK,YAAL,IAAgB,CAAA,IAAA,EAAA,IAAA,CAAA;AAChB,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAA,IAAA,CAAA,KAAA,GAAQ,MAAoB;AAC1B,MAAA,IAAI,GAA2B,GAAA,IAAA;AAC/B,MAAA;AAAG,QAAA,GAAA,GAAMA,qBAAK,iBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAAA,aACF,KAAK,IAAK,EAAA;AAEjB,MAAO,OAAA,GAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAA,IAAA,CAAA,IAAA,GAAO,CAAC,KAA2B,KAAA;AACjC,MAAI,IAAA,UAAA,CAAW,KAAK,CAAG,EAAA;AACrB,QAAM,KAAA,CAAA,OAAA,CAAQ,CAAC,IAAS,KAAA;AACtB,UAAAA,cAAA,CAAA,IAAA,EAAK,UAAL,IAAc,CAAA,IAAA,EAAA,IAAA,CAAA;AAAA,SACf,CAAA;AACD,QAAO,OAAA,IAAA;AAAA;AAET,MAAAA,cAAA,CAAA,IAAA,EAAK,UAAL,IAAc,CAAA,IAAA,EAAA,KAAA,CAAA;AACd,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAA,IAAA,CAAS,WAAW,CAAC,MAAA,KACnB,OAAO,SAAU,CAAA,IAAA,CAAK,OAAe,CAAA;AAGvC;AAAA,IAAA,IAAA,CAAA,GAAA,GAAM,CAAC,IAAe,KAAA;AACpB,MAAA,IAAA,CAAK,KAAK,IAAI,CAAA;AAEd,MAAO,OAAA,IAAA;AAAA,KACT;AAtSE,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA;AAAA;AAuSlB,CAAA;AA5TE,MAAA,GAAA,IAAA,OAAA,EAAA;AAyBA,YAAA,GAAA,IAAA,OAAA,EAAA;AAeA,aAAA,GAAA,IAAA,OAAA,EAAA;AAOA,aAAA,GAAA,IAAA,OAAA,EAAA;AAOA,QAAA,GAAA,IAAA,OAAA,EAAA;AAWA,WAAA,GAAA,IAAA,OAAA,EAAA;AA6BA,mBAAA,GAAA,IAAA,OAAA,EAAA;AAkCA,mBAAA,GAAA,IAAA,OAAA,EAAA;AAoBA,WAAA,GAAA,IAAA,OAAA,EAAA;AAgDA,iBAAA,GAAA,IAAA,OAAA,EAAA;AAuBA,eAAA,GAAA,IAAA,OAAA,EAAA;AA0BA,SAAA,GAAA,IAAA,OAAA,EAAA;AAeA,UAAA,GAAA,IAAA,OAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzQW,gBAeJ,CAAA,MAAA,GAAS,CAAC,MAAA,EAAgB,MAAqC,KAAA;AACpE,EAAM,MAAA,KAAA,GAAQ,IAAI,gBAAA,CAAK,MAAM,CAAA;AAC7B,EAAA,OAAO,CAAC,OAAkB,KAAA;AACxB,IAAA,KAAA,CAAM,IAAI,OAAO,CAAA;AACjB,IAAO,OAAA,KAAA,CAAM,SAAS,MAAM,CAAA;AAAA,GAC9B;AACF,CAAA;AArBK,IAAM,eAAN,GAAA,gBAAA;;AChBM,MAAA,WAAA,GAAc,YAAY,aAAa,CAAA;AAEpD,MAAMoE,eAAc,MAAM;AACxB,EAAA,MAAM,iBAAkB,EAAA;AAC1B,CAAA;AAGa,MAAA,SAAA,GAAY,WAAY,CAAAA,YAAA,EAAY,QAAQ,CAAA;AAIlD,MAAM,cAAiB,GAAA,WAAA,CAAY,EAAC,EAAkB,aAAa,CAAA;AAM7D,MAAA,MAAA,GAAyB,CAAC,GAAQ,KAAA;AAC7C,EACG,GAAA,CAAA,MAAA,CAAO,SAAW,EAAAA,YAAU,CAC5B,CAAA,MAAA,CAAO,cAAgB,EAAA,CAAC,WAAW,CAAC,CACpC,CAAA,MAAA,CAAO,WAAW,CAAA;AAErB,EAAA,OAAO,YAAY;AACjB,IAAM,MAAA,GAAA,CAAI,WAAW,cAAc,CAAA;AACnC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAChC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAEhC,IAAA,GAAA,CAAI,IAAI,SAAW,EAAA,WAAA,CAAY,MAAO,CAAA,MAAA,EAAQ,MAAM,CAAC,CAAA;AACrD,IAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AACpB,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CAAI,OAAO,SAAS,CAAA,CAAE,OAAO,cAAc,CAAA,CAAE,WAAW,WAAW,CAAA;AAAA,KACrE;AAAA,GACF;AACF,CAAA;AAEAjC,UAAA,CAAS,MAAQ,EAAA;AAAA,EACf,WAAa,EAAA;AACf,CAAC,CAAA;;ACtCY,MAAA,eAAA,GAAkB,YAAY,iBAAiB,CAAA;AAIrD,MAAM,kBAAqB,GAAA,WAAA;AAAA,EAChC,EAAC;AAAA,EACD;AACF,CAAA;AAEA,MAAM,aAAc,MAAM;AACxB,EAAA,MAAM,iBAAkB,EAAA;AAC1B,CAAA;AAGO,MAAM,aAAgB,GAAA,WAAA;AAAA,EAC3B,UAAA;AAAA,EACA;AACF,CAAA;AAMa,MAAA,UAAA,GAA6B,CAAC,GAAQ,KAAA;AACjD,EACG,GAAA,CAAA,MAAA,CAAO,aAAe,EAAA,UAAU,CAChC,CAAA,MAAA,CAAO,kBAAoB,EAAA,CAAC,WAAW,CAAC,CACxC,CAAA,MAAA,CAAO,eAAe,CAAA;AAEzB,EAAA,OAAO,YAAY;AACjB,IAAM,MAAA,GAAA,CAAI,WAAW,kBAAkB,CAAA;AACvC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAChC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAEhC,IAAA,GAAA,CAAI,IAAI,aAAe,EAAA,eAAA,CAAgB,MAAO,CAAA,MAAA,EAAQ,MAAM,CAAC,CAAA;AAC7D,IAAA,GAAA,CAAI,KAAK,eAAe,CAAA;AAExB,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CACG,OAAO,aAAa,CAAA,CACpB,OAAO,kBAAkB,CAAA,CACzB,WAAW,eAAe,CAAA;AAAA,KAC/B;AAAA,GACF;AACF,CAAA;AAEAA,UAAA,CAAS,UAAY,EAAA;AAAA,EACnB,WAAa,EAAA;AACf,CAAC,CAAA;;ACvBY,MAAA,eAAA,GAAkB,WAAY,CAAA,EAAA,EAAoB,cAAc,CAAA;AAGtE,MAAM,qBAAwB,GAAA,WAAA;AAAA,EACnC,CAAC,CAAM,KAAA,CAAA;AAAA,EACP;AACF,CAAA;AAIO,MAAM,mBAAsB,GAAA,WAAA;AAAA,EACjC,EAAC;AAAA,EACD;AACF,CAAA;AAGa,MAAA,gBAAA,GAAmB,YAAY,kBAAkB,CAAA;AAG9C,SAAA,MAAA,CACd,YACA,EAAA,MAAA,EACA,MACA,EAAA;AACA,EAAA,IAAI,OAAO,YAAA,KAAiB,QAAU,EAAA,OAAO,OAAO,YAAY,CAAA;AAEhE,EAAA,IAAI,aAAa,IAAS,KAAA,MAAA;AACxB,IAAA,OAAO,UAAU,UAAW,CAAA,MAAM,CAAE,CAAA,KAAA,CAAM,aAAa,GAAG,CAAA;AAE5D,EAAA,IAAI,aAAa,IAAS,KAAA,MAAA;AACxB,IAAA,OAAOG,MAAK,CAAA,QAAA,CAAS,MAAQ,EAAA,YAAA,CAAa,KAAK,CAAA;AAEjD,EAAA,MAAM,aAAa,YAAY,CAAA;AACjC;AAEA,MAAM+B,KAAA,GAAM,IAAI,SAAA,CAAU,wBAAwB,CAAA;AAElD,SAAS,mBAAmB,MAAiC,EAAA;AAC3D,EAAA,MAAM,eAAkB,GAAA,aAAA;AAAA,IACtB,aAAA;AAAA,IACA,eAAA;AAAA,IACA,YAAA;AAAA,IACA;AAAA,GACF;AACA,EAAA,MAAA,CAAO,SAAY,GAAA,eAAA;AACnB,EAAO,OAAA,MAAA;AACT;AAMa,MAAA,WAAA,GAA8B,CAAC,GAAQ,KAAA;AAClD,EACG,GAAA,CAAA,MAAA,CAAO,eAAiB,EAAA,EAAE,CAC1B,CAAA,MAAA,CAAO,gBAAgB,EAAiB,CACxC,CAAA,MAAA,CAAO,qBAAuB,EAAA,CAAC,MAAM,CAAC,CAAA,CACtC,MAAO,CAAA,mBAAA,EAAqB,CAAC,WAAA,EAAa,iBAAiB,aAAa,CAAC,CACzE,CAAA,MAAA,CAAO,gBAAgB,CAAA;AAE1B,EAAA,OAAO,YAAY;AACjB,IAAM,MAAA,GAAA,CAAI,WAAW,mBAAmB,CAAA;AAExC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAChC,IAAM,MAAA,MAAA,GAAS,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA;AAChC,IAAM,MAAA,KAAA,GAAQ,GAAI,CAAA,GAAA,CAAI,aAAa,CAAA;AACnC,IAAM,MAAA,eAAA,GAAkB,GAAI,CAAA,GAAA,CAAI,qBAAqB,CAAA;AACrD,IAAM,MAAA,YAAA,GAAe,GAAI,CAAA,GAAA,CAAI,eAAe,CAAA;AAC5C,IAAM,MAAA,YAAA,GAAe,GAAI,CAAA,GAAA,CAAI,eAAe,CAAA;AAC5C,IAAA,MAAM,GAAM,GAAA,MAAA,CAAO,YAAc,EAAA,MAAA,EAAQ,MAAM,CAAA;AAE/C,IAAA,MAAM,OAAU,GAAA;AAAA,MACd,GAAG,YAAA;AAAA,MACH,IAAI,MAAO,CAAA;AAAA,aACTA,KAAA;AAAA,QACA,KAAO,EAAA;AAAA,UACL,MAAM,MAAM;AAAA,WAEZ;AAAA,UACA,KAAO,EAAA,CAAC,GAAK,EAAA,MAAA,EAAQ,WAAW,QAAa,KAAA;AAC3C,YAAI,GAAA,CAAA,GAAA,CAAI,gBAAgB,QAAQ,CAAA;AAAA;AAClC;AACF,OACD,CAAA;AAAA,MACDC,gBAAA,CAAiB,EAAE,KAAA,EAAO,CAAA;AAAA,MAC1BC,QAAA,CAAa,kBAAmB,CAAA,UAAU,CAAC;AAAA,KAC7C;AAEA,IAAI,GAAA,CAAA,GAAA,CAAI,iBAAiB,OAAO,CAAA;AAEhC,IAAA,MAAM,UAAU,eAAgB,CAAA;AAAA,MAC9B,MAAA;AAAA,MACA,GAAA;AAAA,MACA;AAAA,KACD,CAAA;AAED,IAAM,MAAA,KAAA,GAAQ,WAAY,CAAA,MAAA,CAAO,OAAO,CAAA;AACxC,IAAI,GAAA,CAAA,GAAA,CAAI,gBAAgB,KAAK,CAAA;AAC7B,IAAA,GAAA,CAAI,KAAK,gBAAgB,CAAA;AAEzB,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CACG,MAAO,CAAA,eAAe,CACtB,CAAA,MAAA,CAAO,cAAc,CAAA,CACrB,MAAO,CAAA,qBAAqB,CAC5B,CAAA,MAAA,CAAO,mBAAmB,CAAA,CAC1B,WAAW,gBAAgB,CAAA;AAAA,KAChC;AAAA,GACF;AACF,CAAA;AAEApC,UAAA,CAAS,WAAa,EAAA;AAAA,EACpB,WAAa,EAAA;AACf,CAAC,CAAA;;ACjJD,MAAM,QAAQ,GAAG,UAAU,IAAI,EAAE;AACjC,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,GAAG,KAAK,EAAE,EAAE;AAClC,QAAQ,IAAI,GAAG,IAAI,CAAC,eAAe;AACnC,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,KAAK;AACxB;AACA,CAAC;AACD,MAAM,UAAU,GAAG,UAAU,IAAI,EAAE;AACnC,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU;AACrD,IAAI,OAAO,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM;AACjE,CAAC;AACD,IAAI,WAAW,GAAG,IAAI;AACtB;AACA;AACA;AACA,MAAM,SAAS,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;AAC5C,IAAI,IAAI,KAAK,GAAG,WAAW,KAAK,WAAW,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;AACrE,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;AAC/D,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC;AACnC,IAAI,OAAO,KAAK;AAChB,CAAC;AACD,MAAM,gBAAgB,GAAG,YAAY;AACrC,IAAI,WAAW,GAAG,IAAI;AACtB,CAAC;AACD;AACA;AACA;AACA,MAAM,oBAAoB,GAAG,UAAU,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE;AACzE,IAAI,OAAO,UAAU,KAAK,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AACvE,QAAQ,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AACrD,CAAC;AACD,MAAM,YAAY,GAAG,+BAA+B;AACpD,SAAS,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;AACxD,IAAI,SAAS;AACb,QAAQ,IAAI,IAAI,IAAI,UAAU,IAAI,GAAG,IAAI,SAAS;AAClD,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACnD,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU;AACxC,YAAY,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AACzG,gBAAgB,IAAI,CAAC,eAAe,IAAI,OAAO;AAC/C,gBAAgB,OAAO,KAAK;AAC5B,YAAY,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpD,YAAY,IAAI,GAAG,MAAM;AACzB;AACA,aAAa,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AACrC,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D,YAAY,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;AAC/C,gBAAgB,OAAO,KAAK;AAC5B,YAAY,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9C;AACA,aAAa;AACb,YAAY,OAAO,KAAK;AACxB;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,IAAI,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;AAC9E;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE;AACxC,IAAI,SAAS;AACb,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM;AACxC,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;AAC9C,YAAY,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;AAC/C,gBAAgB,OAAO,IAAI;AAC3B,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9C,YAAY,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;AACnC;AACA,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACzD,YAAY,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;AACnC,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU;AAClC;AACA,aAAa;AACb,YAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA,SAAS,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE;AACvC,IAAI,SAAS;AACb,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;AAChE,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AACnE,YAAY,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;AAC/C,gBAAgB,OAAO,IAAI;AAC3B,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC1C,YAAY,MAAM,GAAG,CAAC;AACtB;AACA,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACzD,YAAY,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU;AAClC;AACA,aAAa;AACb,YAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AACxC,IAAI,KAAK,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,EAAE,KAAK,GAAG,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,IAAI,KAAK,GAAG;AACzF,QAAQ,IAAI,IAAI,IAAI,MAAM;AAC1B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;AAClC,QAAQ,IAAI,GAAG,IAAI,CAAC,UAAU;AAC9B,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,KAAK;AACxB,QAAQ,OAAO,GAAG,OAAO,IAAI,KAAK,IAAI,CAAC;AACvC,QAAQ,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC;AAChD;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE;AAC3B,IAAI,IAAI,IAAI;AACZ,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,UAAU;AACjD,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU;AACjC,YAAY;AACZ,IAAI,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC;AAChG;AACA;AACA;AACA,MAAM,kBAAkB,GAAG,UAAU,MAAM,EAAE;AAC7C,IAAI,OAAO,MAAM,CAAC,SAAS,IAAI,oBAAoB,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;AACjI,CAAC;AACD,SAAS,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;AAChC,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;AAC7C,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC;AAC1C,IAAI,KAAK,CAAC,OAAO,GAAG,OAAO;AAC3B,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG;AAChC,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,iBAAiB,CAAC,GAAG,EAAE;AAChC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,aAAa;AAC/B,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,UAAU;AAChC,QAAQ,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,aAAa;AAC1C,IAAI,OAAO,GAAG;AACd;AACA,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;AACnC,IAAI,IAAI,GAAG,CAAC,sBAAsB,EAAE;AACpC,QAAQ,IAAI;AACZ,YAAY,IAAI,GAAG,GAAG,GAAG,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC;AACtD;AACA;AACA;AACA,YAAY,IAAI,GAAG;AACnB,gBAAgB,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;AACvG;AACA,QAAQ,OAAO,CAAC,EAAE;AAClB;AACA,IAAI,IAAI,GAAG,CAAC,mBAAmB,EAAE;AACjC,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC;AACjD,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,cAAc,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE;AACtH;AACA;;AAEA,MAAMS,KAAG,GAAG,OAAO,SAAS,IAAI,WAAW,GAAG,SAAS,GAAG,IAAI;AAC9D,MAAM,GAAG,GAAG,OAAO,QAAQ,IAAI,WAAW,GAAG,QAAQ,GAAG,IAAI;AAC5D,MAAMC,OAAK,GAAG,CAACD,KAAG,IAAIA,KAAG,CAAC,SAAS,KAAK,EAAE;AAC1C,MAAME,SAAO,GAAG,aAAa,CAAC,IAAI,CAACD,OAAK,CAAC;AACzC,MAAME,WAAS,GAAG,SAAS,CAAC,IAAI,CAACF,OAAK,CAAC;AACvC,MAAMG,SAAO,GAAG,uCAAuC,CAAC,IAAI,CAACH,OAAK,CAAC;AACnE,MAAMI,IAAE,GAAG,CAAC,EAAEF,WAAS,IAAIC,SAAO,IAAIF,SAAO,CAAC;AAC9C,MAAM,UAAU,GAAGC,WAAS,GAAG,QAAQ,CAAC,YAAY,GAAGC,SAAO,GAAG,CAACA,SAAO,CAAC,CAAC,CAAC,GAAGF,SAAO,GAAG,CAACA,SAAO,CAAC,CAAC,CAAC,GAAG,CAAC;AACxG,MAAM,KAAK,GAAG,CAACG,IAAE,IAAI,eAAe,CAAC,IAAI,CAACJ,OAAK,CAAC;AAChD,KAAK,IAAI,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAACA,OAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACrD,MAAM,OAAO,GAAG,CAACI,IAAE,IAAI,eAAe,CAAC,IAAI,CAACJ,OAAK,CAAC;AAClD,MAAM,MAAM,GAAG,CAAC,CAAC,OAAO;AACxB,MAAM,cAAc,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;AAChD,MAAMQ,QAAM,GAAG,CAACJ,IAAE,IAAI,CAAC,CAACL,KAAG,IAAI,gBAAgB,CAAC,IAAI,CAACA,KAAG,CAAC,MAAM,CAAC;AAChE;AACA,MAAM,GAAG,GAAGS,QAAM,KAAK,aAAa,CAAC,IAAI,CAACR,OAAK,CAAC,IAAI,CAAC,CAACD,KAAG,IAAIA,KAAG,CAAC,cAAc,GAAG,CAAC,CAAC;AACpF,MAAM,GAAG,GAAG,GAAG,KAAKA,KAAG,GAAG,KAAK,CAAC,IAAI,CAACA,KAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;AAC3D,MAAM,OAAO,GAAGA,KAAG,GAAG,KAAK,CAAC,IAAI,CAACA,KAAG,CAAC,QAAQ,CAAC,GAAG,KAAK;AACtD,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAACC,OAAK,CAAC;AACxC,MAAM,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,qBAAqB,IAAI,GAAG,CAAC,eAAe,CAAC,KAAK;AAC1E,MAAM,cAAc,GAAG,MAAM,GAAG,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;;AAEpG,SAAS,UAAU,CAAC,GAAG,EAAE;AACzB,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,cAAc;AAC9D,IAAI,IAAI,EAAE;AACV,QAAQ,OAAO;AACf,YAAY,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK;AACpC,YAAY,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC;AAC/B,SAAS;AACT,IAAI,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,eAAe,CAAC,WAAW;AAC5D,QAAQ,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,eAAe,CAAC,YAAY,EAAE;AAC1D;AACA,SAAS2B,SAAO,CAAC,KAAK,EAAE,IAAI,EAAE;AAC9B,IAAI,OAAO,OAAO,KAAK,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;AACzD;AACA,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE;AAC3C;AACA,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,KAAK,CAAC;AACrD,IAAI,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,KAAK,CAAC;AACvD;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM;AAC1E,QAAQ,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE;AACtE;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;AAClD,IAAI,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC;AAClH,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa;AACpC,IAAI,KAAK,IAAI,MAAM,GAAG,QAAQ,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE;AAC1E,QAAQ,IAAI,CAAC,MAAM;AACnB,YAAY;AACZ,QAAQ,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC;AAChC,YAAY;AACZ,QAAQ,IAAI,GAAG,GAAG,MAAM;AACxB,QAAQ,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI;AACnC,QAAQ,IAAI,QAAQ,GAAG,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;AAChE,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;AAChC,QAAQ,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAGA,SAAO,CAAC,eAAe,EAAE,KAAK,CAAC;AACrE,YAAY,KAAK,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAGA,SAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;AAC7E,aAAa,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAGA,SAAO,CAAC,eAAe,EAAE,QAAQ,CAAC;AACnF,YAAY,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxE,kBAAkB,IAAI,CAAC,GAAG,GAAGA,SAAO,CAAC,YAAY,EAAE,KAAK,CAAC,GAAG,QAAQ,CAAC;AACrE,kBAAkB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAGA,SAAO,CAAC,YAAY,EAAE,QAAQ,CAAC;AACjF,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAGA,SAAO,CAAC,eAAe,EAAE,MAAM,CAAC;AACxE,YAAY,KAAK,GAAG,EAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAGA,SAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;AAChF,aAAa,IAAI,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAGA,SAAO,CAAC,eAAe,EAAE,OAAO,CAAC;AAChF,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAGA,SAAO,CAAC,YAAY,EAAE,OAAO,CAAC;AAChF,QAAQ,IAAI,KAAK,IAAI,KAAK,EAAE;AAC5B,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC;AACtD;AACA,iBAAiB;AACjB,gBAAgB,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU,EAAE,MAAM,GAAG,GAAG,CAAC,SAAS;AACnE,gBAAgB,IAAI,KAAK;AACzB,oBAAoB,GAAG,CAAC,SAAS,IAAI,KAAK;AAC1C,gBAAgB,IAAI,KAAK;AACzB,oBAAoB,GAAG,CAAC,UAAU,IAAI,KAAK;AAC3C,gBAAgB,IAAI,EAAE,GAAG,GAAG,CAAC,UAAU,GAAG,MAAM,EAAE,EAAE,GAAG,GAAG,CAAC,SAAS,GAAG,MAAM;AAC7E,gBAAgB,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;AACrH;AACA;AACA,QAAQ,IAAI,KAAK,IAAI,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;AAC/E,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;AAC/E,IAAI,IAAI,MAAM,EAAE,MAAM;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AAC/G,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC;AAClD,QAAQ,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;AAC9D,YAAY;AACZ,QAAQ,IAAI,SAAS,GAAG,GAAG,CAAC,qBAAqB,EAAE;AACnD,QAAQ,IAAI,SAAS,CAAC,GAAG,IAAI,MAAM,GAAG,EAAE,EAAE;AAC1C,YAAY,MAAM,GAAG,GAAG;AACxB,YAAY,MAAM,GAAG,SAAS,CAAC,GAAG;AAClC,YAAY;AACZ;AACA;AACA,IAAI,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAC3E;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,aAAa;AAC3C,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,EAAE;AACpD,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,UAAU,EAAE,CAAC;AAC1E,QAAQ,IAAI,GAAG,IAAI,GAAG;AACtB,YAAY;AACZ;AACA,IAAI,OAAO,KAAK;AAChB;AACA;AACA;AACA,SAAS,cAAc,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;AACnD,IAAI,IAAI,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,CAAC;AACnE,IAAI,kBAAkB,CAAC,KAAK,EAAE,SAAS,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC;AACtE;AACA,SAAS,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;AACzC,QAAQ,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,GAAG,IAAI;AACvC,YAAY,GAAG,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI;AACtC,QAAQ,IAAI,GAAG,CAAC,UAAU,IAAI,IAAI;AAClC,YAAY,GAAG,CAAC,UAAU,GAAG,IAAI;AACjC;AACA;AACA,IAAI,sBAAsB,GAAG,IAAI;AACjC;AACA;AACA,SAAS,kBAAkB,CAAC,GAAG,EAAE;AACjC,IAAI,IAAI,GAAG,CAAC,SAAS;AACrB,QAAQ,OAAO,GAAG,CAAC,SAAS,EAAE,CAAC;AAC/B,IAAI,IAAI,sBAAsB;AAC9B,QAAQ,OAAO,GAAG,CAAC,KAAK,CAAC,sBAAsB,CAAC;AAChD,IAAI,IAAI,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC;AACjC,IAAI,GAAG,CAAC,KAAK,CAAC,sBAAsB,IAAI,IAAI,GAAG;AAC/C,QAAQ,IAAI,aAAa,GAAG;AAC5B,YAAY,sBAAsB,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE;AAC5D,YAAY,OAAO,IAAI;AACvB;AACA,KAAK,GAAG,SAAS,CAAC;AAClB,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACjC,QAAQ,sBAAsB,GAAG,KAAK;AACtC,QAAQ,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC;AACrC;AACA;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE;AACxC,IAAI,IAAI,OAAO,EAAE,SAAS,GAAG,GAAG,EAAE,aAAa,EAAE,MAAM,GAAG,CAAC;AAC3D,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC,GAAG;AAChD,IAAI,IAAI,UAAU,EAAE,WAAW;AAC/B,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,UAAU,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,EAAE;AACtG,QAAQ,IAAI,KAAK;AACjB,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC;AAC/B,YAAY,KAAK,GAAG,KAAK,CAAC,cAAc,EAAE;AAC1C,aAAa,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC;AACpC,YAAY,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE;AACrD;AACA,YAAY;AACZ,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAC/B,YAAY,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;AAC7D,gBAAgB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;AACtD,gBAAgB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC;AACnD,gBAAgB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AACtE,sBAAsB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;AAC7E,gBAAgB,IAAI,EAAE,GAAG,SAAS,EAAE;AACpC,oBAAoB,OAAO,GAAG,KAAK;AACnC,oBAAoB,SAAS,GAAG,EAAE;AAClC,oBAAoB,aAAa,GAAG,EAAE,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,GAAG;AAClE,wBAAwB,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI;AAC/E,wBAAwB,GAAG,EAAE,MAAM,CAAC;AACpC,qBAAqB,GAAG,MAAM;AAC9B,oBAAoB,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,EAAE;AACjD,wBAAwB,MAAM,GAAG,UAAU,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnG,oBAAoB;AACpB;AACA;AACA,iBAAiB,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,EAAE;AACpH,gBAAgB,UAAU,GAAG,KAAK;AAClC,gBAAgB,WAAW,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;AAC7G;AACA,YAAY,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG;AAChF,gBAAgB,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC;AACtE,gBAAgB,MAAM,GAAG,UAAU,GAAG,CAAC;AACvC;AACA;AACA,IAAI,IAAI,CAAC,OAAO,IAAI,UAAU,EAAE;AAChC,QAAQ,OAAO,GAAG,UAAU;AAC5B,QAAQ,aAAa,GAAG,WAAW;AACnC,QAAQ,SAAS,GAAG,CAAC;AACrB;AACA,IAAI,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC;AACxC,QAAQ,OAAO,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC;AACvD,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC;AACxD,QAAQ,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE;AAC/B,IAAI,OAAO,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC;AACnD;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE;AACxC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;AACnC,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE;AACtC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,QAAQ,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AACjC,QAAQ,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/B,QAAQ,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;AACvC,QAAQ,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM;AACnC,YAAY;AACZ,QAAQ,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;AAChC,YAAY,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9F;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE;AAC9B;AACA,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;AAC9B,IAAI,OAAO,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;AACxE,QAAQ,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;AACnE;AACA,SAAS,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE;AACnC,IAAI,IAAI,MAAM,GAAG,GAAG,CAAC,UAAU;AAC/B,IAAI,IAAI,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,qBAAqB,EAAE,CAAC,IAAI;AACjG,QAAQ,OAAO,MAAM;AACrB,IAAI,OAAO,GAAG;AACd;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE;AAC3C,IAAI,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;AACnE,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAChD,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE;AAC/C,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7F;AACA,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;AACtD;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,YAAY,GAAG,CAAC,CAAC;AACzB,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,EAAE,QAAQ,GAAG,KAAK,IAAI;AAC7C,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG;AAC3B,YAAY;AACZ,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC;AACtD,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC9F,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE;AACvD,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE;AAClD;AACA,gBAAgB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG;AACjF,oBAAoB,YAAY,GAAG,IAAI,CAAC,SAAS;AACjD,qBAAqB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG;AAC1F,oBAAoB,YAAY,GAAG,IAAI,CAAC,QAAQ;AAChD,gBAAgB,QAAQ,GAAG,IAAI;AAC/B;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC3E;AACA,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI;AACzF,sBAAsB,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;AAChE,gBAAgB,OAAO,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ;AAC9D;AACA;AACA,QAAQ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU;AACjC;AACA,IAAI,OAAO,YAAY,GAAG,CAAC,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACvF;AACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE;AAChD,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM;AACvC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE;AACrC,QAAQ,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,IAAI;AAC/I,YAAY,IAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;AAC7C,YAAY,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,EAAE;AACrC,gBAAgB,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,EAAE;AAClD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,oBAAoB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AACvC,oBAAoB,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;AAC5C,wBAAwB,OAAO,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC;AACpE;AACA;AACA,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,MAAM;AAC7C,gBAAgB;AAChB;AACA;AACA,IAAI,OAAO,OAAO;AAClB;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE;AACnC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC;AACtD,IAAI,IAAI,KAAK,GAAG,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC;AAC5D,IAAI,IAAI,KAAK;AACb,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,KAAK;AACjC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG;AAC3D,SAAS,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC;AAClD,IAAI,IAAI,GAAG;AACX,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,EAAE;AAC9E,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE;AAClD,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC;AAChC,YAAY,OAAO,IAAI;AACvB,QAAQ,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC;AACrD,QAAQ,IAAI,CAAC,GAAG;AAChB,YAAY,OAAO,IAAI;AACvB;AACA;AACA,IAAI,IAAInB,QAAM,EAAE;AAChB,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;AACtD,YAAY,IAAI,CAAC,CAAC,SAAS;AAC3B,gBAAgB,IAAI,GAAG,SAAS;AAChC;AACA,IAAI,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC;AACnC,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AACzC;AACA;AACA,YAAY,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC7D;AACA;AACA,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AACjD,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG;AACvD,gBAAgB,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,qBAAqB,EAAE,EAAE,KAAK,IAAI,MAAM,CAAC,IAAI;AACvG,oBAAoB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG;AAC3C,oBAAoB,MAAM,EAAE;AAC5B;AACA;AACA,QAAQ,IAAI,IAAI;AAChB;AACA,QAAQ,IAAI,MAAM,IAAI,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,IAAI,CAAC;AACxG,YAAY,IAAI,CAAC,eAAe,IAAI,OAAO,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG;AAC7F,YAAY,MAAM,EAAE;AACpB;AACA;AACA,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC;AACpG,YAAY,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,MAAM;AACtE,YAAY,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI;AAC7C;AACA;AACA;AACA,aAAa,IAAI,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI;AAClG,YAAY,GAAG,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;AAC1D;AACA,IAAI,IAAI,GAAG,IAAI,IAAI;AACnB,QAAQ,GAAG,GAAG,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;AAC/C,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC;AAClD,IAAI,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AACrE;AACA,SAAS,OAAO,CAAC,IAAI,EAAE;AACvB,IAAI,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK;AAC3D;AACA,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,EAAE;AACvC,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE;AACtB,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1D,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC;AAC1B,YAAY,OAAO,KAAK;AACxB;AACA,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACtF;AACA,MAAM,IAAI,GAAG,2CAA2C;AACxD;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;AACtC,IAAI,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAChF,IAAI,IAAI,iBAAiB,GAAG,MAAM,IAAI,KAAK;AAC3C,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AAC5B;AACA;AACA,QAAQ,IAAI,iBAAiB,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE;AACxH,YAAY,IAAI,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC;AACxE;AACA;AACA;AACA,YAAY,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AAC5G,gBAAgB,IAAI,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxF,gBAAgB,IAAI,UAAU,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE;AAChD,oBAAoB,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,oBAAoB,IAAI,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG;AACjD,wBAAwB,OAAO,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AACpF;AACA;AACA,YAAY,OAAO,IAAI;AACvB;AACA,aAAa;AACb,YAAY,IAAI,IAAI,GAAG,MAAM,EAAE,EAAE,GAAG,MAAM,EAAE,QAAQ,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxE,YAAY,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;AACrC,gBAAgB,EAAE,EAAE;AACpB,gBAAgB,QAAQ,GAAG,CAAC,CAAC;AAC7B;AACA,iBAAiB,IAAI,IAAI,IAAI,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACnE,gBAAgB,IAAI,EAAE;AACtB,gBAAgB,QAAQ,GAAG,CAAC;AAC5B;AACA,iBAAiB,IAAI,IAAI,GAAG,CAAC,EAAE;AAC/B,gBAAgB,IAAI,EAAE;AACtB;AACA,iBAAiB;AACjB,gBAAgB,EAAE,EAAE;AACpB;AACA,YAAY,OAAO,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;AAC1F;AACA;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;AACxD;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;AACpC,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC,IAAI,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AAC9E,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AACpD,YAAY,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC;AACpC,gBAAgB,OAAO,QAAQ,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,KAAK,CAAC;AACtE;AACA,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE;AACrD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC/C,YAAY,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC;AACnC,gBAAgB,OAAO,QAAQ,CAAC,KAAK,CAAC,qBAAqB,EAAE,EAAE,IAAI,CAAC;AACpE;AACA,QAAQ,OAAO,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC;AAChE;AACA;AACA,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,KAAK,IAAI,GAAG,CAAC,IAAI,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AAC1E,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAChD,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,iBAAiB,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5G;AACA;AACA,cAAc,MAAM,CAAC,QAAQ,IAAI,CAAC,KAAK,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,GAAG,IAAI;AACtG,QAAQ,IAAI,MAAM;AAClB,YAAY,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC;AACzD;AACA,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE;AACjD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC3C,QAAQ,OAAO,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,eAAe;AACnE,YAAY,KAAK,GAAG,KAAK,CAAC,WAAW;AACrC,QAAQ,IAAI,MAAM,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,GAAG,iBAAiB,GAAG,CAAC,GAAG,CAAC;AACzG,cAAc,KAAK,CAAC,QAAQ,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI;AAChD,QAAQ,IAAI,MAAM;AAClB,YAAY,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AACzD;AACA;AACA,IAAI,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC;AAC9F;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;AAC9B,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC;AACvB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK;AACzC,IAAI,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;AACpE;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE;AAC7B,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AACxB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM;AACxC,IAAI,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;AACpE;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;AAC1C,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa;AAChE,IAAI,IAAI,SAAS,IAAI,KAAK;AAC1B,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC/B,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG;AAC1B,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,IAAI,IAAI;AACR,QAAQ,OAAO,CAAC,EAAE;AAClB;AACA,YAAY;AACZ,QAAQ,IAAI,SAAS,IAAI,KAAK;AAC9B,YAAY,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;AACvC,QAAQ,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM;AACxC,YAAY,MAAM,CAAC,KAAK,EAAE;AAC1B;AACA;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AAClD,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS;AAC7B,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG;AAChD,IAAI,OAAO,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM;AAC/C,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACnF,QAAQ,SAAS;AACjB,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC;AAC7D,YAAY,IAAI,CAAC,OAAO;AACxB,gBAAgB;AAChB,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;AACtC,gBAAgB,GAAG,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG;AACvD,gBAAgB;AAChB;AACA,YAAY,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU;AACxC;AACA,QAAQ,IAAI,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACnD,QAAQ,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE;AAC3E,YAAY,IAAI,KAAK;AACrB,YAAY,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC;AACnC,gBAAgB,KAAK,GAAG,KAAK,CAAC,cAAc,EAAE;AAC9C,iBAAiB,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC;AACxC,gBAAgB,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE;AACpF;AACA,gBAAgB;AAChB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,gBAAgB,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;AAClC,gBAAgB,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAC5C,qBAAqB,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI;AACtF,0BAA0B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AACrF,oBAAoB,OAAO,KAAK;AAChC;AACA;AACA,QAAQ,OAAO,IAAI;AACnB,KAAK,CAAC;AACN;AACA,MAAM,QAAQ,GAAG,iBAAiB;AAClC,SAAS,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AACpD,IAAI,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS;AACnC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW;AACjC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,YAAY,EAAE,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,GAAG,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI;AACnG,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE;AACjC,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ,OAAO,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE;AACrE;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM;AAC/D,QAAQ,OAAO,GAAG,IAAI,MAAM,IAAI,GAAG,IAAI,UAAU,GAAG,OAAO,GAAG,KAAK;AACnE,IAAI,OAAO,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM;AAC/C;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE;AAC5G,QAAQ,IAAI,YAAY,GAAG,GAAG,CAAC,cAAc;AAC7C;AACA,QAAQ,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,WAAW,CAAC;AAC5C,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG;AACzF,QAAQ,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE;AAClF,QAAQ,IAAI,MAAM,GAAG,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;AACzG,aAAa,OAAO,IAAI,OAAO,IAAI,MAAM,IAAI,MAAM,CAAC;AACpD;AACA,QAAQ,IAAI;AACZ,YAAY,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC;AAClD,YAAY,IAAI,OAAO,KAAK,OAAO,IAAI,UAAU,IAAI,MAAM,IAAI,YAAY,CAAC,IAAI,GAAG,CAAC,MAAM;AAC1F,gBAAgB,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;AAC3C;AACA,QAAQ,OAAO,CAAC,EAAE;AAClB,QAAQ,IAAI,YAAY,IAAI,IAAI;AAChC,YAAY,GAAG,CAAC,cAAc,GAAG,YAAY;AAC7C,QAAQ,OAAO,MAAM;AACrB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,GAAG,IAAI;AACtB,IAAI,SAAS,GAAG,IAAI;AACpB,IAAI,YAAY,GAAG,KAAK;AACxB,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AAC1C,IAAI,IAAI,WAAW,IAAI,KAAK,IAAI,SAAS,IAAI,GAAG;AAChD,QAAQ,OAAO,YAAY;AAC3B,IAAI,WAAW,GAAG,KAAK;AACvB,IAAI,SAAS,GAAG,GAAG;AACnB,IAAI,OAAO,YAAY,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;AAChD,UAAU,sBAAsB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG;AACjD,UAAU,wBAAwB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC;AACvE;AACA;AACA,MAAM,QAAQ,CAAC;AACf,IAAI,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG;AACrC;AACA;AACA,IAAI,UAAU,EAAE;AAChB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU;AACpC,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS;AAC9B;AACA;AACA,QAAQ,GAAG,CAAC,UAAU,GAAG,IAAI;AAC7B;AACA;AACA;AACA,IAAI,aAAa,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC;AACzC,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC;AACrC,IAAI,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,OAAO,KAAK,CAAC;AAC3D,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAE,OAAO,KAAK,CAAC;AACzC;AACA;AACA;AACA,IAAI,SAAS,GAAG,EAAE,OAAO,IAAI,CAAC;AAC9B;AACA;AACA,IAAI,SAAS,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC;AACpC;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,IAAI,IAAI,GAAG,CAAC;AACpB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACrD,YAAY,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;AACzC,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,CAAC,CAAC;AAC5B,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS;AAC/B,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI;AACvC,YAAY,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,SAAS;AAC3C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AACrD,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AACtC;AACA,IAAI,cAAc,CAAC,KAAK,EAAE;AAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE;AACrD,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtC,YAAY,IAAI,GAAG,IAAI,KAAK;AAC5B,gBAAgB,OAAO,GAAG;AAC1B,YAAY,GAAG,IAAI,GAAG,CAAC,IAAI;AAC3B;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC;AAC/C;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;AAC/E;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI;AACzC;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM;AAC5D;AACA,IAAI,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE;AACvC;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,EAAE;AACnG,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;AAC1B,gBAAgB,IAAI,SAAS,EAAE,IAAI;AACnC,gBAAgB,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE;AAC5C,oBAAoB,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1D;AACA,qBAAqB;AACrB,oBAAoB,OAAO,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;AAC5D,wBAAwB,GAAG,GAAG,GAAG,CAAC,UAAU;AAC5C,oBAAoB,SAAS,GAAG,GAAG,CAAC,eAAe;AACnD;AACA,gBAAgB,OAAO,SAAS,IAAI,EAAE,CAAC,IAAI,GAAG,SAAS,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AAC3F,oBAAoB,SAAS,GAAG,SAAS,CAAC,eAAe;AACzD,gBAAgB,OAAO,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU;AAC1F;AACA,iBAAiB;AACjB,gBAAgB,IAAI,QAAQ,EAAE,IAAI;AAClC,gBAAgB,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE;AAC5C,oBAAoB,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC;AACrD;AACA,qBAAqB;AACrB,oBAAoB,OAAO,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;AAC5D,wBAAwB,GAAG,GAAG,GAAG,CAAC,UAAU;AAC5C,oBAAoB,QAAQ,GAAG,GAAG,CAAC,WAAW;AAC9C;AACA,gBAAgB,OAAO,QAAQ,IAAI,EAAE,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;AACzF,oBAAoB,QAAQ,GAAG,QAAQ,CAAC,WAAW;AACnD,gBAAgB,OAAO,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ;AAC3E;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,KAAK;AACjB,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE;AAChD,YAAY,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;AACtD;AACA,aAAa,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACvG,YAAY,KAAK,GAAG,GAAG,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AACpE;AACA,aAAa,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACtC,YAAY,IAAI,MAAM,IAAI,CAAC;AAC3B,gBAAgB,KAAK,IAAI,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE;AACpE,oBAAoB,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;AAC5C,wBAAwB,KAAK,GAAG,KAAK;AACrC,wBAAwB;AACxB;AACA,oBAAoB,IAAI,MAAM,CAAC,eAAe;AAC9C,wBAAwB;AACxB;AACA,YAAY,IAAI,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM;AAChE,gBAAgB,KAAK,IAAI,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE;AACpE,oBAAoB,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;AAC5C,wBAAwB,KAAK,GAAG,IAAI;AACpC,wBAAwB;AACxB;AACA,oBAAoB,IAAI,MAAM,CAAC,WAAW;AAC1C,wBAAwB;AACxB;AACA;AACA,QAAQ,OAAO,CAAC,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU;AACnF;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,SAAS,GAAG,KAAK,EAAE;AACxC,QAAQ,KAAK,IAAI,KAAK,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,UAAU,EAAE;AACrE,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO;AACjD,YAAY,IAAI,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;AACnD;AACA,gBAAgB,IAAI,KAAK,KAAK,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACrD,oBAAoB,EAAE,OAAO,CAAC,QAAQ,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,OAAO,IAAI,GAAG,CAAC;AAC1H,oBAAoB,KAAK,GAAG,KAAK;AACjC;AACA,oBAAoB,OAAO,IAAI;AAC/B;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU;AACjC,QAAQ,KAAK,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM;AAClD,YAAY,IAAI,GAAG,IAAI,IAAI;AAC3B,gBAAgB,OAAO,IAAI;AAC3B;AACA,IAAI,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE;AAClC,QAAQ,KAAK,IAAI,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;AAC3D,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACzC,YAAY,IAAI,IAAI;AACpB,gBAAgB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;AAC9D;AACA,QAAQ,OAAO,CAAC,CAAC;AACjB;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE;AAChB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI;AACnE,YAAY,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,EAAE;AAChD,gBAAgB,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM;AAC7D,oBAAoB,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7C,gBAAgB,OAAO,KAAK;AAC5B;AACA,YAAY,IAAI,GAAG,GAAG,GAAG;AACzB,gBAAgB,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAChE,YAAY,MAAM,GAAG,GAAG;AACxB;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU;AAC5B,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE;AAC/D;AACA,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC;AAC7B,QAAQ,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5D,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI;AACnE,YAAY,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,YAAY,oBAAoB,EAAE;AACpE,gBAAgB,MAAM,GAAG,GAAG,GAAG,MAAM;AACrC,gBAAgB;AAChB;AACA,YAAY,MAAM,GAAG,GAAG;AACxB;AACA;AACA,QAAQ,IAAI,MAAM;AAClB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC;AACtF;AACA,QAAQ,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,YAAY,cAAc,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1H;AACA,QAAQ,IAAI,IAAI,IAAI,CAAC,EAAE;AACvB,YAAY,IAAI,IAAI,EAAE,KAAK,GAAG,IAAI;AAClC,YAAY,QAAQ,CAAC,EAAE,EAAE,KAAK,GAAG,KAAK,EAAE;AACxC,gBAAgB,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;AACtD,gBAAgB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;AACnE,oBAAoB;AACpB;AACA,YAAY,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;AACtE,gBAAgB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACvD,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACvF;AACA,aAAa;AACb,YAAY,IAAI,IAAI,EAAE,KAAK,GAAG,IAAI;AAClC,YAAY,QAAQ,CAAC,EAAE,EAAE,KAAK,GAAG,KAAK,EAAE;AACxC,gBAAgB,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI;AACzE,gBAAgB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;AACnE,oBAAoB;AACpB;AACA,YAAY,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;AAC9D,gBAAgB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC;AAC/C,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE;AACnH;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE;AACnC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC;AACrC,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE;AAClH,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;AAC1C,QAAQ,KAAK,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;AAC7C,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI;AACnE,YAAY,IAAI,UAAU,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,GAAG,EAAE;AACjD,gBAAgB,IAAI,SAAS,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM;AACrD;AACA,gBAAgB,IAAI,IAAI,IAAI,SAAS,IAAI,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI;AAC/E,oBAAoB,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC;AAClF,oBAAoB,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,SAAS,CAAC;AAChE,gBAAgB,IAAI,GAAG,MAAM;AAC7B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC5C,oBAAoB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACnD,oBAAoB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;AACtG,wBAAwB,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3D,wBAAwB;AACxB;AACA,oBAAoB,IAAI,IAAI,IAAI,CAAC,IAAI;AACrC;AACA,gBAAgB,IAAI,UAAU,IAAI,CAAC,CAAC;AACpC,oBAAoB,UAAU,GAAG,CAAC;AAClC;AACA,YAAY,IAAI,UAAU,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AAChF,gBAAgB,EAAE,GAAG,GAAG;AACxB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnE,oBAAoB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/C,oBAAoB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;AACvG,wBAAwB,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AACrD,wBAAwB;AACxB;AACA,oBAAoB,EAAE,IAAI,IAAI,CAAC,IAAI;AACnC;AACA,gBAAgB,IAAI,QAAQ,IAAI,CAAC,CAAC;AAClC,oBAAoB,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM;AAChE,gBAAgB;AAChB;AACA,YAAY,MAAM,GAAG,GAAG;AACxB;AACA,QAAQ,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE;AACxE;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;AACpE,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1E,QAAQ,OAAO,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1D;AACA,IAAI,WAAW,CAAC,GAAG,EAAE;AACrB,QAAQ,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;AACtD,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM;AAClE,YAAY,MAAM,IAAI,UAAU,CAAC,oBAAoB,GAAG,GAAG,CAAC;AAC5D,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,EAAE;AACpD;AACA,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACtE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI;AACnE,YAAY,IAAI,IAAI,GAAG,MAAM,IAAI,EAAE,GAAG,GAAG;AACzC,gBAAgB,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC;AACpH,YAAY,MAAM,GAAG,GAAG;AACxB;AACA,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAChE,QAAQ,IAAI,OAAO,GAAG,IAAI,IAAI,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvF,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE;AACxC,QAAQ,IAAI,QAAQ,GAAG,KAAK;AAC5B;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,IAAIA,QAAM,KAAK,MAAM,IAAI,IAAI,EAAE;AACjD,YAAY,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,SAAS;AAC5C,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AACpC,gBAAgB,QAAQ,GAAG,CAAC,EAAE,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;AAC3E;AACA,gBAAgB,IAAI,QAAQ,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACjE,oBAAoB,KAAK,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;AAC/E,wBAAwB,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE;AACtD,4BAA4B,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI;AACtD,gCAAgC,SAAS,GAAG,OAAO,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AAC7G,4BAA4B;AAC5B;AACA,wBAAwB,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU;AAClD,wBAAwB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AAClE,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,gBAAgB,QAAQ,GAAG,IAAI,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO,CAAC;AAC7F;AACA;AACA;AACA;AACA,QAAQ,IAAI,KAAK,IAAI,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,IAAI,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,EAAE;AAC7G,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC;AACvE,YAAY,IAAI,KAAK,IAAI,KAAK,CAAC,eAAe,IAAI,OAAO;AACzD,gBAAgB,KAAK,GAAG,IAAI;AAC5B;AACA,QAAQ,IAAI,EAAE,KAAK,IAAI,QAAQ,IAAIA,QAAM,CAAC;AAC1C,YAAY,oBAAoB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;AAC1G,YAAY,oBAAoB,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC;AACpG,YAAY;AACZ;AACA;AACA;AACA,QAAQ,IAAI,cAAc,GAAG,KAAK;AAClC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE;AAC5D,YAAY,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC;AAC7D,YAAY,IAAI;AAChB,gBAAgB,IAAI,MAAM,IAAI,IAAI;AAClC,oBAAoB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC;AAC/D,gBAAgB,cAAc,GAAG,IAAI;AACrC;AACA,YAAY,OAAO,CAAC,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,cAAc,EAAE;AAC7B,YAAY,IAAI,MAAM,GAAG,IAAI,EAAE;AAC/B,gBAAgB,IAAI,GAAG,GAAG,SAAS;AACnC,gBAAgB,SAAS,GAAG,OAAO;AACnC,gBAAgB,OAAO,GAAG,GAAG;AAC7B;AACA,YAAY,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE;AAC9C,YAAY,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC;AACtD,YAAY,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC;AAC5D,YAAY,MAAM,CAAC,eAAe,EAAE;AACpC,YAAY,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AAClC;AACA;AACA,IAAI,cAAc,CAAC,QAAQ,EAAE;AAC7B,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,IAAI,WAAW;AAC/D;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;AACpG;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE;AACxB,QAAQ,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI;AACnE,YAAY,IAAI,MAAM,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,MAAM,GAAG,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,MAAM,EAAE;AACzF,gBAAgB,IAAI,WAAW,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM;AACvF,gBAAgB,IAAI,IAAI,IAAI,WAAW,IAAI,EAAE,IAAI,SAAS,EAAE;AAC5D,oBAAoB,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,MAAM,IAAI,EAAE,IAAI,GAAG,GAAG,aAAa,GAAG,WAAW;AAC1F,oBAAoB,IAAI,IAAI,IAAI,WAAW,IAAI,EAAE,IAAI,SAAS;AAC9D,yBAAyB,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;AACtF,wBAAwB,KAAK,CAAC,KAAK,GAAG,UAAU;AAChD;AACA,wBAAwB,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW,EAAE,EAAE,GAAG,WAAW,CAAC;AAC7E,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC9H,0BAA0B,aAAa,GAAG,UAAU;AACpD;AACA;AACA,YAAY,MAAM,GAAG,GAAG;AACxB;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,aAAa;AAClC;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,IAAI,KAAK,GAAG,CAAC;AACrB,QAAQ,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AACxE,YAAY,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,GAAG,aAAa,GAAG,WAAW;AAChE,YAAY,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK;AAClC,gBAAgB,IAAI,CAAC,KAAK,GAAG,KAAK;AAClC;AACA;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,KAAK,CAAC;AACjC,IAAI,IAAI,eAAe,GAAG,EAAE,OAAO,KAAK,CAAC;AACzC,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC;AAChC;AACA;AACA;AACA,MAAM,cAAc,SAAS,QAAQ,CAAC;AACtC,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;AAC3C,QAAQ,IAAI,IAAI,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK;AACzC,QAAQ,IAAI,OAAO,GAAG,IAAI,UAAU;AACpC,YAAY,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,MAAM;AAClC,gBAAgB,IAAI,CAAC,IAAI;AACzB,oBAAoB,OAAO,GAAG;AAC9B,gBAAgB,IAAI,IAAI,CAAC,MAAM;AAC/B,oBAAoB,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC;AAC3D,aAAa,CAAC;AACd,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AACnC,YAAY,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,EAAE;AACnC,gBAAgB,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AACzD,gBAAgB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;AACrC,gBAAgB,GAAG,GAAG,IAAI;AAC1B;AACA,YAAY,GAAG,CAAC,eAAe,GAAG,OAAO;AACzC,YAAY,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC;AACnD;AACA,QAAQ,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AACpC,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM;AAC5B,QAAQ,IAAI,GAAG,IAAI;AACnB;AACA,IAAI,aAAa,CAAC,MAAM,EAAE;AAC1B,QAAQ,OAAO,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC1E;AACA,IAAI,SAAS,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AAC1C,IAAI,SAAS,CAAC,KAAK,EAAE;AACrB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;AAC7C,QAAQ,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK;AACzC;AACA,IAAI,cAAc,CAAC,QAAQ,EAAE;AAC7B,QAAQ,OAAO,QAAQ,CAAC,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe;AAC/E;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1C,QAAQ,KAAK,CAAC,OAAO,EAAE;AACvB;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,IAAI,CAAC;AAChC,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C;AACA,MAAM,mBAAmB,SAAS,QAAQ,CAAC;AAC3C,IAAI,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AAC5C,QAAQ,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AACpC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AACzC,IAAI,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE;AACjC,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO;AAC/B,YAAY,OAAO,IAAI,CAAC,UAAU,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAC7D,QAAQ,OAAO,IAAI,CAAC,UAAU,GAAG,MAAM;AACvC;AACA,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE;AAClD;AACA,IAAI,cAAc,CAAC,GAAG,EAAE;AACxB,QAAQ,OAAO,GAAG,CAAC,IAAI,KAAK,eAAe,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,IAAI,GAAG,CAAC,QAAQ;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,QAAQ,CAAC;AACpC,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE;AACrD,QAAQ,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC;AAC1C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA,IAAI,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;AAC9C,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACnD,QAAQ,IAAI,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG;AAC9B,YAAY,IAAI,GAAG,aAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AAC3G,QAAQ,OAAO,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;AAC1F;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa;AAC1E,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE;AACrG;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,KAAK,IAAI,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9E,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE;AACxB,QAAQ,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;AACjC;AACA,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,EAAE;AACrC,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM;AACpC,YAAY,OAAO,CAAC,MAAM,CAAC,IAAI;AAC/B,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM;AACtC,YAAY,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AACzC,gBAAgB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AACzC,YAAY,IAAI,CAAC,KAAK,GAAG,SAAS;AAClC;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AAC1B,QAAQ,IAAI,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAC1E,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI;AACnD,QAAQ,IAAI,EAAE,GAAG,IAAI;AACrB,YAAY,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;AACvD,QAAQ,IAAI,IAAI,GAAG,CAAC;AACpB,YAAY,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AACtD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI;AAClC,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK;AAC7B,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AAC7B,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC/B,QAAQ,KAAK,CAAC,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,SAAS,QAAQ,CAAC;AACpC,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE;AACzF,QAAQ,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC;AAC1C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE;AACjE,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO;AAC5D,QAAQ,IAAI,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM;AACtD;AACA;AACA,YAAY,IAAI,CAAC,OAAO;AACxB,gBAAgB,OAAO,GAAG;AAC1B,YAAY,IAAI,OAAO,CAAC,MAAM;AAC9B,gBAAgB,OAAO,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC;AAC7D,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAChC,QAAQ,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU;AACxE,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG;AACpB,gBAAgB,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AACxD,iBAAiB,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC;AACtC,gBAAgB,MAAM,IAAI,UAAU,CAAC,0CAA0C,CAAC;AAChF;AACA,aAAa,IAAI,CAAC,GAAG,EAAE;AACvB,YAAY,IAAI,IAAI,GAAG,aAAa,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;AACvG,YAAY,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,IAAI;AACvC;AACA,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAE;AACjE,YAAY,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,iBAAiB,CAAC;AACpD,gBAAgB,GAAG,CAAC,eAAe,GAAG,OAAO;AAC7C,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AACxC,gBAAgB,GAAG,CAAC,SAAS,GAAG,IAAI;AACpC;AACA,QAAQ,IAAI,OAAO,GAAG,GAAG;AACzB,QAAQ,GAAG,GAAG,cAAc,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC;AAClD,QAAQ,IAAI,IAAI;AAChB,YAAY,OAAO,OAAO,GAAG,IAAI,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,IAAI,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;AAC9I,aAAa,IAAI,IAAI,CAAC,MAAM;AAC5B,YAAY,OAAO,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC;AAC3F;AACA,YAAY,OAAO,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,IAAI,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;AACxH;AACA,IAAI,SAAS,GAAG;AAChB;AACA,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa;AAC7C,YAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA;AACA,QAAQ,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACxE,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,KAAK;AAC9C,YAAY,IAAI,CAAC,kBAAkB,GAAG,MAAM;AAC5C,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC9B,YAAY,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;AACrD;AACA,aAAa,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACpC,YAAY,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU;AACjD;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAChE,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5C,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAC7D,oBAAoB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC,UAAU;AAC9D,oBAAoB;AACpB;AACA;AACA,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc;AACpC,gBAAgB,IAAI,CAAC,UAAU,GAAG,MAAM,QAAQ,CAAC,KAAK;AACtD;AACA,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;AAC5C,QAAQ,OAAO,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5D,YAAY,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;AACpF;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3C,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;AAC9B,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,GAAG;AACvD,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,IAAI;AACtF,QAAQ,IAAI,gBAAgB,GAAG,WAAW,IAAI,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,WAAW,GAAG,IAAI;AACvF,QAAQ,IAAI,kBAAkB,GAAG,WAAW,IAAI,WAAW,CAAC,GAAG,GAAG,CAAC;AACnE,QAAQ,IAAI,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,gBAAgB,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC;AAChG,QAAQ,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,UAAU,KAAK;AACvE,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK;AACjC,gBAAgB,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC;AACpE,iBAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU;AACzD,gBAAgB,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC;AACnH;AACA;AACA,YAAY,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;AAClD,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,KAAK;AAC/C;AACA,YAAY,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC;AAC1D;AACA,YAAY,IAAI,SAAS;AACzB,YAAY,IAAI,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE;AACvE,iBAAiB,IAAI,kBAAkB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,GAAG;AAC1E,gBAAgB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,QAAQ;AAC9D,gBAAgB,CAAC,SAAS,GAAG,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/E,gBAAgB,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE;AACpF,iBAAiB,IAAI,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE;AACxF,iBAAiB;AACjB;AACA,gBAAgB,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC;AACvE;AACA,YAAY,GAAG,IAAI,KAAK,CAAC,QAAQ;AACjC,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,CAAC,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC;AAC7C,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;AACjC,YAAY,OAAO,CAAC,iBAAiB,EAAE;AACvC,QAAQ,OAAO,CAAC,WAAW,EAAE;AAC7B;AACA,QAAQ,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,IAAI,aAAa,EAAE;AAC5D;AACA,YAAY,IAAI,gBAAgB;AAChC,gBAAgB,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,gBAAgB,CAAC;AACpE,YAAY,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AAC7D,YAAY,IAAI,GAAG;AACnB,gBAAgB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AAClC;AACA;AACA,IAAI,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE;AACpC;AACA;AACA,QAAQ,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAC/C,QAAQ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,YAAY,aAAa,CAAC,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;AAC/G,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe;AACjD,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;AAChE,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACrC;AACA;AACA;AACA,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,SAAS;AACzC,YAAY,IAAI,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC;AAC3F,YAAY,OAAO,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AAC9E;AACA,aAAa;AACb,YAAY,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;AACxD;AACA;AACA,IAAI,uBAAuB,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;AACvD;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AAC9B,YAAY;AACZ;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI;AAC1B,QAAQ,QAAQ,OAAO,GAAG,OAAO,CAAC,UAAU,EAAE;AAC9C,YAAY,IAAI,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;AACrD,gBAAgB;AAChB,YAAY,OAAO,OAAO,CAAC,eAAe;AAC1C,gBAAgB,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,eAAe,CAAC;AACvE,YAAY,OAAO,OAAO,CAAC,WAAW;AACtC,gBAAgB,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC;AACnE,YAAY,IAAI,OAAO,CAAC,UAAU;AAClC,gBAAgB,OAAO,CAAC,UAAU,GAAG,SAAS;AAC9C;AACA,QAAQ,IAAI,IAAI,GAAG,IAAI,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;AACrE,QAAQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC;AACvF;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;AAC7C,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU;AACpC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AACvC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC;AAC1D,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;AAClD,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC3B,YAAY,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;AACtD,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS;AAC9B;AACA,IAAI,eAAe,CAAC,SAAS,EAAE;AAC/B,QAAQ,IAAI,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AACpD,YAAY;AACZ,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC;AAClD,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG;AAC7B,QAAQ,IAAI,CAAC,GAAG,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpK,QAAQ,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE;AAChC,YAAY,MAAM,CAAC,UAAU,GAAG,SAAS;AACzC,YAAY,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI;AACtC;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS;AAClC;AACA;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC;AACtC,YAAY,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC;AAClE,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAC7D,YAAY,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI;AACrC;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,EAAE;AACxC,YAAY,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,0BAA0B,CAAC;AACrE,YAAY,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AACjE,gBAAgB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC;AACrD;AACA;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5C;AACA;AACA;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE;AAC3D,IAAI,cAAc,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC;AACvC,IAAI,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AAChG,IAAI,IAAI,OAAO,CAAC,UAAU;AAC1B,QAAQ,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;AACvC,IAAI,OAAO,OAAO;AAClB;AACA,MAAM,YAAY,SAAS,YAAY,CAAC;AACxC,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;AACxE,QAAQ,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9E;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU;AAC1C,QAAQ,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;AACzD,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU;AAClC,QAAQ,OAAO,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,EAAE;AACvC;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;AAC7C,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,KAAK,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACrF,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AACvC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;AACvC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAC7G,YAAY,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI;AAC9C,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO;AAChD,gBAAgB,IAAI,CAAC,WAAW,GAAG,IAAI;AACvC;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS;AAC9B,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU;AAC9C,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU;AACtD,YAAY,IAAI,CAAC,IAAI,SAAS;AAC9B,gBAAgB,OAAO,IAAI;AAC3B,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE;AAClD;AACA,IAAI,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE;AACvC,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO;AAC/B,YAAY,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5E,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC;AACvD;AACA,IAAI,cAAc,CAAC,QAAQ,EAAE;AAC7B,QAAQ,OAAO,QAAQ,CAAC,IAAI,IAAI,eAAe,IAAI,QAAQ,CAAC,IAAI,IAAI,WAAW;AAC/E;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE;AAC1B,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AACpF,QAAQ,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;AAClG;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE;AACxB,QAAQ,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;AACjC,QAAQ,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;AAC1F,YAAY,IAAI,CAAC,KAAK,GAAG,UAAU;AACnC;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,KAAK,CAAC;AACjC,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AACjD;AACA;AACA;AACA,MAAM,oBAAoB,SAAS,QAAQ,CAAC;AAC5C,IAAI,SAAS,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AAC1C,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC;AAC5F,IAAI,IAAI,OAAO,GAAG,EAAE,OAAO,IAAI,CAAC;AAChC,IAAI,IAAI,eAAe,GAAG,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,KAAK,CAAC;AAC9D;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAAS,YAAY,CAAC;AAC9C,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;AAC/F,QAAQ,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC;AACtF,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE;AAC7C,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU;AACpC,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACtF,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC;AACrE,YAAY,IAAI,MAAM;AACtB,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC;AAClE,YAAY,OAAO,MAAM;AACzB;AACA,aAAa,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACnD,YAAY,OAAO,KAAK;AACxB;AACA,aAAa;AACb,YAAY,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC;AACjE;AACA;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,KAAK,CAAC,UAAU,EAAE;AAC1E;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,KAAK,CAAC,YAAY,EAAE;AAChF;AACA,IAAI,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC5C,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI;AAC1E,cAAc,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AAC3D;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AAC7B,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC/B,QAAQ,KAAK,CAAC,OAAO,EAAE;AACvB;AACA,IAAI,SAAS,CAAC,KAAK,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK;AACvE;AACA,IAAI,cAAc,CAAC,QAAQ,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC;AAC7G;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE;AAC7C,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,UAAU,EAAE,OAAO,GAAG,KAAK;AACnD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG;AAChD,QAAQ,IAAI,QAAQ,CAAC,UAAU,IAAI,SAAS,EAAE;AAC9C,YAAY,OAAO,QAAQ,IAAI,GAAG,EAAE;AACpC,gBAAgB,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;AAC7B,gBAAgB,OAAO,GAAG,IAAI;AAC9B;AACA,YAAY,GAAG,GAAG,GAAG,CAAC,WAAW;AACjC;AACA,aAAa;AACb,YAAY,OAAO,GAAG,IAAI;AAC1B,YAAY,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;AACjD;AACA,QAAQ,IAAI,IAAI,YAAY,YAAY,EAAE;AAC1C,YAAY,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,eAAe,GAAG,SAAS,CAAC,SAAS;AACrE,YAAY,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AAC7D,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,UAAU;AAC9D;AACA;AACA,IAAI,OAAO,GAAG,EAAE;AAChB,QAAQ,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;AACrB,QAAQ,OAAO,GAAG,IAAI;AACtB;AACA,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,IAAI,SAAS;AAChD,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI;AAC/B;AACA,MAAM,cAAc,GAAG,UAAU,QAAQ,EAAE;AAC3C,IAAI,IAAI,QAAQ;AAChB,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAChC,CAAC;AACD,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9C,MAAM,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC;AACnC,SAAS,gBAAgB,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;AACtD,IAAI,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC;AAC7B,QAAQ,OAAO,MAAM;AACrB,IAAI,IAAI,GAAG,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,cAAc,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC;AACxE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;AAC3C,QAAQ,IAAI,CAAC,KAAK;AAClB,YAAY;AACZ,QAAQ,IAAI,KAAK,CAAC,QAAQ;AAC1B,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACjE,QAAQ,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AAChC,YAAY,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;AACjC,YAAY,IAAI,GAAG,IAAI,IAAI;AAC3B,gBAAgB;AAChB,YAAY,IAAI,SAAS,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC;AAC/C,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC;AACrF,YAAY,IAAI,IAAI,IAAI,OAAO;AAC/B,gBAAgB,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG;AACpE,iBAAiB,IAAI,IAAI,IAAI,OAAO;AACpC,gBAAgB,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG;AACpE,iBAAiB,IAAI,IAAI,IAAI,UAAU;AACvC,gBAAgB,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG;AAC/B;AACA;AACA,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE;AACtE;AACA,IAAI,IAAI,YAAY,IAAI,MAAM,IAAI,WAAW,IAAI,MAAM;AACvD,QAAQ,OAAO,OAAO;AACtB,IAAI,IAAI,MAAM,GAAG,OAAO;AACxB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,QAAQ,IAAI,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC;AACzD,QAAQ,IAAI,CAAC,EAAE;AACf,YAAY,IAAI,MAAM;AACtB,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,IAAI,QAAQ;AAC5E,iBAAiB,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;AAChG,gBAAgB,MAAM,GAAG,MAAM;AAC/B;AACA,iBAAiB;AACjB,gBAAgB,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC9D,gBAAgB,MAAM,CAAC,QAAQ,GAAG,IAAI;AACtC,gBAAgB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;AAC1C,gBAAgB,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;AAChC,gBAAgB,MAAM,GAAG,MAAM;AAC/B;AACA;AACA,QAAQ,eAAe,CAAC,MAAM,EAAE,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;AACxD;AACA,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;AACzC,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI;AACzB,QAAQ,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,UAAU,IAAI,EAAE,IAAI,IAAI,GAAG,CAAC;AACtF,YAAY,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC;AACrC,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG;AACxB,QAAQ,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,UAAU,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;AAC/F,YAAY,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7C,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,EAAE;AACjC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;AAC9E,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;AAC3E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AAChD,YAAY,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAClD,gBAAgB,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AAC/C,YAAY,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAClD,gBAAgB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7C,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC;AACrC,YAAY,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC;AACxC;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,EAAE;AACjC,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,IAAI,GAAG,+EAA+E,EAAE,CAAC;AACzG,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5C,gBAAgB,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C;AACA,QAAQ,IAAI,GAAG,CAAC,KAAK;AACrB,YAAY,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,KAAK;AAC1C;AACA;AACA,SAAS,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AACzC,IAAI,OAAO,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;AAC5F;AACA,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;AAC7B,IAAI,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM;AAC5B,QAAQ,OAAO,KAAK;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;AACrC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACpC,YAAY,OAAO,KAAK;AACxB,IAAI,OAAO,IAAI;AACf;AACA;AACA,SAAS,EAAE,CAAC,GAAG,EAAE;AACjB,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,WAAW;AAC9B,IAAI,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC;AACnC,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA,MAAM,eAAe,CAAC;AACtB,IAAI,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AACjC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC;AACtB;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;AACvB;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK;AAC5B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC;AACvD;AACA;AACA;AACA,IAAI,cAAc,CAAC,KAAK,EAAE,GAAG,EAAE;AAC/B,QAAQ,IAAI,KAAK,IAAI,GAAG;AACxB,YAAY;AACZ,QAAQ,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;AACxC,YAAY,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AAC1C,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC;AACpD,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3B;AACA;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;AACjE;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;AACrC,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;AACpD,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;AACnD,QAAQ,OAAO,IAAI,GAAG,OAAO;AAC7B,YAAY,CAAC,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;AACvE,iBAAiB,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK;AACrF,YAAY,IAAI,EAAE;AAClB,QAAQ,OAAO,IAAI,GAAG,KAAK,EAAE;AAC7B,YAAY,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS;AACtC,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AACzC,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;AACvC,YAAY,KAAK,EAAE;AACnB;AACA,QAAQ,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACrC,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACrD,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;AAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE;AAClG,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/C,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAChF,oBAAoB,KAAK,GAAG,CAAC;AAC7B,oBAAoB;AACpB;AACA;AACA,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;AAC5B,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;AACxC,oBAAoB,IAAI,CAAC,OAAO,GAAG,IAAI;AACvC,oBAAoB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;AAC1D;AACA,gBAAgB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACxD;AACA,iBAAiB;AACjB,gBAAgB,IAAI,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC;AACxF,gBAAgB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC;AACjE,gBAAgB,IAAI,CAAC,GAAG,GAAG,QAAQ;AACnC,gBAAgB,IAAI,CAAC,OAAO,GAAG,IAAI;AACnC;AACA,YAAY,IAAI,CAAC,KAAK,GAAG,CAAC;AAC1B,YAAY,KAAK,EAAE;AACnB;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE;AACrD,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,UAAU;AAClC,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK;AACxC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAM,IAAI,IAAI,CAAC,GAAG;AAChG,YAAY,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE;AAChE,YAAY,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC;AACrE;AACA,aAAa;AACb,YAAY,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChG,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAChD,gBAAgB,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACxG,oBAAoB,KAAK,GAAG,CAAC;AAC7B,oBAAoB;AACpB;AACA;AACA;AACA,QAAQ,IAAI,KAAK,GAAG,CAAC;AACrB,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;AAC9C,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE;AAC1D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC5C,QAAQ,IAAI,KAAK,CAAC,KAAK,IAAI,UAAU,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,UAAU;AACtE,YAAY,KAAK,CAAC,KAAK,GAAG,aAAa;AACvC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC;AAC3D,YAAY,OAAO,KAAK;AACxB,QAAQ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;AAC9C,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,kBAAkB,CAAC,OAAO,EAAE;AAChC,QAAQ,SAAS;AACjB,YAAY,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU;AAC3C,YAAY,IAAI,CAAC,MAAM;AACvB,gBAAgB,OAAO,CAAC,CAAC;AACzB,YAAY,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AAC/C,gBAAgB,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU;AAC7C,gBAAgB,IAAI,IAAI;AACxB,oBAAoB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChF,wBAAwB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI;AACxD,4BAA4B,OAAO,CAAC;AACpC;AACA,gBAAgB,OAAO,CAAC,CAAC;AACzB;AACA,YAAY,OAAO,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AACjE,QAAQ,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpE,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC3C,YAAY,IAAI,IAAI,YAAY,YAAY,EAAE;AAC9C,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;AAC9D,gBAAgB,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,KAAK;AACzD,oBAAoB,OAAO,KAAK;AAChC,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,OAAO;AAC/C;AACA;AACA;AACA,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACnD,oBAAoB,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI;AACzG,wBAAwB,IAAI,CAAC,KAAK,IAAI,UAAU,IAAI,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7F,gBAAgB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE;AAC9E,oBAAoB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACtD,oBAAoB,IAAI,IAAI,CAAC,GAAG,IAAI,OAAO;AAC3C,wBAAwB,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3C,oBAAoB,IAAI,CAAC,KAAK,EAAE;AAChC,oBAAoB,OAAO,IAAI;AAC/B;AACA,qBAAqB,IAAI,CAAC,MAAM,KAAK,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE;AACnH,oBAAoB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AACtD,oBAAoB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO;AAC3D,oBAAoB,IAAI,OAAO,CAAC,UAAU,EAAE;AAC5C,wBAAwB,OAAO,CAAC,KAAK,GAAG,aAAa;AACrD,wBAAwB,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;AAC7D,wBAAwB,OAAO,CAAC,KAAK,GAAG,SAAS;AACjD;AACA,oBAAoB,IAAI,CAAC,OAAO,GAAG,IAAI;AACvC,oBAAoB,IAAI,CAAC,KAAK,EAAE;AAChC,oBAAoB,OAAO,IAAI;AAC/B;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,OAAO,KAAK;AACpB;AACA;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE;AACjE,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;AAC9D,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;AAC/C,YAAY,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;AACtF,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC;AAC1F,QAAQ,IAAI,OAAO,CAAC,UAAU,EAAE;AAChC,YAAY,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC5C,YAAY,IAAI,CAAC,QAAQ,GAAG,EAAE;AAC9B,YAAY,KAAK,IAAI,EAAE,IAAI,OAAO,CAAC,QAAQ;AAC3C,gBAAgB,EAAE,CAAC,MAAM,GAAG,OAAO;AACnC;AACA,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,QAAQ,OAAO,OAAO;AACtB;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE;AACnD,QAAQ,IAAI,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC;AACvF,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC3B,YAAY,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;AAC9C,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;AACvD,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3B;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;AACnC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI;AAC/F,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;AAC9C,aAAa,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;AAC3E,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB;AACA,aAAa;AACb,YAAY,IAAI,IAAI,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;AACtE,YAAY,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;AAC3D,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI;AAC/B;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,GAAG;AAC5E,QAAQ,OAAO,SAAS,YAAY,YAAY,EAAE;AAClD,YAAY,MAAM,GAAG,SAAS;AAC9B,YAAY,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACnE;AACA,QAAQ,IAAI,CAAC,SAAS;AACtB,YAAY,EAAE,SAAS,YAAY,YAAY,CAAC;AAChD,YAAY,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,aAAa,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AAClF;AACA,YAAY,IAAI,CAACA,QAAM,IAAI,MAAM,KAAK,SAAS,IAAI,SAAS,CAAC,GAAG,CAAC,eAAe,IAAI,OAAO;AAC3F,gBAAgB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC;AAC/C,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;AAC5C;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;AAClC,QAAQ,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;AAC5H,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB;AACA,aAAa;AACb,YAAY,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AACtD,YAAY,IAAI,QAAQ,IAAI,KAAK,EAAE;AACnC,gBAAgB,GAAG,CAAC,SAAS,GAAG,uBAAuB;AACvD,gBAAgB,GAAG,CAAC,GAAG,GAAG,EAAE;AAC5B;AACA,YAAY,IAAI,QAAQ,IAAI,IAAI;AAChC,gBAAgB,GAAG,CAAC,SAAS,GAAG,2BAA2B;AAC3D,YAAY,IAAI,IAAI,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;AACxE,YAAY,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG;AAClC,gBAAgB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C;AACA,gBAAgB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;AAC7D,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI;AAC/B;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE;AACnB,QAAQ,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,UAAU,EAAE,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM;AAC7D,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,OAAO,GAAG,IAAI,GAAG,EAAE,OAAO,GAAG,EAAE;AAC7D,IAAI,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,EAAE;AAC1B,QAAQ,IAAI,IAAI;AAChB,QAAQ,SAAS;AACjB,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;AACtD,gBAAgB,IAAI,IAAI,YAAY,YAAY,EAAE;AAClD,oBAAoB,OAAO,GAAG,IAAI;AAClC,oBAAoB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;AAChD;AACA,qBAAqB;AACrB,oBAAoB,IAAI,GAAG,IAAI;AAC/B,oBAAoB,KAAK,EAAE;AAC3B,oBAAoB;AACpB;AACA;AACA,iBAAiB,IAAI,OAAO,IAAI,UAAU,EAAE;AAC5C,gBAAgB,MAAM,KAAK;AAC3B;AACA,iBAAiB;AACjB;AACA,gBAAgB,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;AAChE,gBAAgB,OAAO,GAAG,OAAO,CAAC,MAAM;AACxC;AACA;AACA,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;AAC5B,QAAQ,IAAI,CAAC,IAAI;AACjB,YAAY;AACZ,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;AACtC,YAAY;AACZ,QAAQ,EAAE,EAAE;AACZ,QAAQ,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;AAC7B,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1B;AACA,IAAI,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE;AAC7D;AACA,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE;AAClD,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,GAAG,CAAC;AAChD;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAClE,YAAY,MAAM,IAAI,KAAK,CAAC,QAAQ;AACpC;AACA,QAAQ;AACR;AACA,IAAI,IAAI,SAAS,GAAG,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,GAAG,IAAI;AACnD,IAAI,KAAK,IAAI,WAAW,GAAG,CAAC,IAAI;AAChC,QAAQ,IAAI,MAAM,EAAE,OAAO;AAC3B,QAAQ,OAAO,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,MAAM,EAAE;AAC5E,YAAY,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAC1C,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE;AAC7B,gBAAgB,IAAI,CAAC,MAAM;AAC3B,oBAAoB,MAAM,GAAG,IAAI;AACjC;AACA,oBAAoB,CAAC,OAAO,KAAK,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AAChE;AACA;AACA,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,IAAI,OAAO,EAAE;AACzB,gBAAgB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;AACzC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AACvD,oBAAoB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC;AACjE;AACA,iBAAiB;AACjB,gBAAgB,QAAQ,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC;AACzD;AACA;AACA,QAAQ,IAAI,KAAK,EAAE,KAAK;AACxB,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,KAAK,GAAG,CAAC,CAAC;AACtB,YAAY,KAAK,GAAG,QAAQ;AAC5B,YAAY,QAAQ,GAAG,IAAI;AAC3B;AACA,aAAa,IAAI,WAAW,GAAG,MAAM,CAAC,UAAU,EAAE;AAClD,YAAY,KAAK,GAAG,WAAW;AAC/B,YAAY,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AAC/C;AACA,aAAa;AACb,YAAY;AACZ;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AAC9C,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM;AACtC,gBAAgB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrC,QAAQ,OAAO,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,MAAM;AAC7G,YAAY,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;AAC5C,QAAQ,IAAI,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,QAAQ;AACzC,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;AAC1B,YAAY,IAAI,KAAK,GAAG,GAAG;AAC3B,YAAY,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,KAAK;AAC3E,gBAAgB,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI;AAC9C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AAClD,gBAAgB,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK;AACxC,oBAAoB,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AACxC,YAAY,IAAI,KAAK,GAAG,GAAG,EAAE;AAC7B,gBAAgB,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC;AACpD,gBAAgB,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,MAAM,CAAC;AACpD,gBAAgB,GAAG,GAAG,KAAK;AAC3B,gBAAgB,KAAK,GAAG,CAAC,CAAC;AAC1B;AACA;AACA,aAAa;AACb,YAAY,OAAO,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,GAAG;AAC1E,gBAAgB,SAAS,EAAE;AAC3B;AACA,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE;AACxG,QAAQ,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;AACrE,QAAQ,MAAM,GAAG,GAAG;AACpB;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE;AACvB,IAAI,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,EAAE;AACtD,QAAQ,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO;AACtC,QAAQ,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,GAAG,iCAAiC;AACtE,QAAQ,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS;AAC9C,QAAQ,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;AAClC;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE;AAClD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,IAAI,GAAG,IAAI,EAAE,GAAG;AAChE,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,GAAG,GAAG;AACrD,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ;AAC7B,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM;AACzB,YAAY;AACZ,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI;AAC5B,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE;AACpC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;AACtC,YAAY,GAAG,IAAI,IAAI,CAAC,QAAQ;AAChC,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM;AAC5B,gBAAgB;AAChB,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI;AAC5B;AACA,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE;AACzB,YAAY,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE,GAAG,UAAU,CAAC,IAAI,IAAI;AAC9F,gBAAgB,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM;AACvC,YAAY,IAAI,KAAK,GAAG,UAAU,GAAG,EAAE,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzF,YAAY,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,IAAI;AACtE,gBAAgB,OAAO,UAAU,GAAG,KAAK;AACzC,YAAY,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,IAAI,UAAU;AAC3E,gBAAgB,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,UAAU,EAAE,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI;AACjF,gBAAgB,OAAO,EAAE;AACzB;AACA;AACA,IAAI,OAAO,CAAC,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;AAC1D,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI;AAClE,QAAQ,IAAI,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,EAAE;AACxC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AAC9B;AACA,aAAa;AACb,YAAY,IAAI,KAAK,GAAG,IAAI;AAC5B,gBAAgB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;AAC/D,YAAY,IAAI,WAAW,EAAE;AAC7B,gBAAgB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;AACxC,gBAAgB,WAAW,GAAG,SAAS;AACvC;AACA,YAAY,IAAI,GAAG,GAAG,EAAE;AACxB,gBAAgB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtE;AACA;AACA,IAAI,OAAO,MAAM;AACjB;;AAEA,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE;AAC/C,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;AAC/D,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS;AACzB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,IAAI,IAAI,CAAC;AACjH,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/E,IAAI,IAAI,IAAI,GAAG,CAAC;AAChB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS;AACpD,IAAI,IAAI,kBAAkB,CAAC,MAAM,CAAC,EAAE;AACpC,QAAQ,MAAM,GAAG,IAAI;AACrB,QAAQ,OAAO,WAAW,IAAI,CAAC,WAAW,CAAC,IAAI;AAC/C,YAAY,WAAW,GAAG,WAAW,CAAC,MAAM;AAC5C,QAAQ,IAAI,eAAe,GAAG,WAAW,CAAC,IAAI;AAC9C,QAAQ,IAAI,WAAW,IAAI,eAAe,CAAC,MAAM,IAAI,aAAa,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC;AAChH,eAAe,EAAE,eAAe,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;AAC/G,YAAY,IAAI,GAAG,GAAG,WAAW,CAAC,SAAS;AAC3C,YAAY,SAAS,GAAG,IAAI,aAAa,CAAC,IAAI,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjF;AACA;AACA,SAAS;AACT,QAAQ,IAAI,MAAM,YAAY,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;AACrG,YAAY,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI;AACtC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AACxD,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAChD,gBAAgB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACxG,gBAAgB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;AACrG;AACA,YAAY,IAAI,GAAG,GAAG,CAAC;AACvB,gBAAgB,OAAO,IAAI;AAC3B,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AACzF,YAAY,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;AACrC;AACA,aAAa;AACb,YAAY,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;AACvF;AACA,QAAQ,IAAI,MAAM,GAAG,CAAC;AACtB,YAAY,OAAO,IAAI;AACvB;AACA,IAAI,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AACrC,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,QAAQ,IAAI,IAAI,GAAG,MAAM,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvG,QAAQ,SAAS,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC;AAChE;AACA,IAAI,OAAO,SAAS;AACpB;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,IAAI,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAC1C,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,aAAa,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AACjG;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,GAAG,KAAK,EAAE;AAC7C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClC,IAAI,iBAAiB,CAAC,IAAI,EAAE,GAAG,CAAC;AAChC,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;AAClC,QAAQ;AACR;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,IAAI,MAAM,EAAE;AACvF,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB;AACzF,QAAQ,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU;AAClD,YAAY,oBAAoB,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC,EAAE;AAClH,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,oBAAoB,GAAG,IAAI;AAC5D,YAAY,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;AAC9C,YAAY;AACZ;AACA;AACA,IAAI,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE;AAC1C,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B,QAAQ,mBAAmB,CAAC,IAAI,CAAC;AACjC;AACA,SAAS;AACT,QAAQ,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,EAAE,iBAAiB,EAAE,eAAe;AACtE,QAAQ,IAAI,6BAA6B,IAAI,EAAE,GAAG,YAAY,aAAa,CAAC,EAAE;AAC9E,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa;AAC/C,gBAAgB,iBAAiB,GAAG,uBAAuB,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC;AAC3E,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa;AAC7D,gBAAgB,eAAe,GAAG,uBAAuB,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC;AACvE;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AACjE,QAAQ,IAAI,6BAA6B,EAAE;AAC3C,YAAY,IAAI,iBAAiB;AACjC,gBAAgB,aAAa,CAAC,iBAAiB,CAAC;AAChD,YAAY,IAAI,eAAe;AAC/B,gBAAgB,aAAa,CAAC,eAAe,CAAC;AAC9C;AACA,QAAQ,IAAI,GAAG,CAAC,OAAO,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,2BAA2B,CAAC;AAClE;AACA,aAAa;AACb,YAAY,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,2BAA2B,CAAC;AAC/D,YAAY,IAAI,mBAAmB,IAAI,QAAQ;AAC/C,gBAAgB,4BAA4B,CAAC,IAAI,CAAC;AAClD;AACA;AACA,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;AACtC,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE;AACvC;AACA;AACA;AACA;AACA,MAAM,6BAA6B,GAAGA,QAAM,IAAI,MAAM,IAAI,cAAc,GAAG,EAAE;AAC7E,SAAS,uBAAuB,CAAC,IAAI,EAAE,GAAG,EAAE;AAC5C,IAAI,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1D,IAAI,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI;AAChF,IAAI,IAAI,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;AAC5D,IAAI,IAAIA,QAAM,IAAI,KAAK,IAAI,KAAK,CAAC,eAAe,IAAI,OAAO;AAC3D,QAAQ,OAAO,WAAW,CAAC,KAAK,CAAC;AACjC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,eAAe,IAAI,OAAO;AACnD,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,eAAe,IAAI,OAAO,CAAC,EAAE;AACxD,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,WAAW,CAAC,KAAK,CAAC;AACrC,aAAa,IAAI,MAAM;AACvB,YAAY,OAAO,WAAW,CAAC,MAAM,CAAC;AACtC;AACA;AACA,SAAS,WAAW,CAAC,OAAO,EAAE;AAC9B,IAAI,OAAO,CAAC,eAAe,GAAG,MAAM;AACpC,IAAI,IAAIA,QAAM,IAAI,OAAO,CAAC,SAAS,EAAE;AACrC,QAAQ,OAAO,CAAC,SAAS,GAAG,KAAK;AACjC,QAAQ,OAAO,CAAC,YAAY,GAAG,IAAI;AACnC;AACA,IAAI,OAAO,OAAO;AAClB;AACA,SAAS,aAAa,CAAC,OAAO,EAAE;AAChC,IAAI,OAAO,CAAC,eAAe,GAAG,OAAO;AACrC,IAAI,IAAI,OAAO,CAAC,YAAY,EAAE;AAC9B,QAAQ,OAAO,CAAC,SAAS,GAAG,IAAI;AAChC,QAAQ,OAAO,CAAC,YAAY,GAAG,IAAI;AACnC;AACA;AACA,SAAS,4BAA4B,CAAC,IAAI,EAAE;AAC5C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa;AACpC,IAAI,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;AAC7E,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACzC,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,MAAM,GAAG,MAAM,CAAC,YAAY;AAC9D,IAAI,GAAG,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,MAAM;AAClF,QAAQ,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,EAAE;AACxE,YAAY,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;AACrF,YAAY,UAAU,CAAC,MAAM;AAC7B,gBAAgB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO;AAC9E,oBAAoB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,2BAA2B,CAAC;AAC1E,aAAa,EAAE,EAAE,CAAC;AAClB;AACA,KAAK,CAAC;AACN;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,EAAE,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE;AACpE,IAAI,IAAI,CAAC,MAAM;AACf,QAAQ;AACR,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,KAAK;AACnE,IAAI,IAAI,GAAG;AACX,QAAQ,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3D;AACA,QAAQ,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/B,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;AACxB,IAAI,MAAM,CAAC,eAAe,EAAE;AAC5B,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,IAAIJ,IAAE,IAAI,UAAU,IAAI,EAAE,EAAE;AACzE,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK;AAC7B;AACA;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE;AACtC,IAAI,IAAI,GAAG,YAAY,aAAa,EAAE;AACtC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;AAChD,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC/C,YAAY,kBAAkB,CAAC,IAAI,CAAC;AACpC,YAAY,IAAI,IAAI;AACpB,gBAAgB,IAAI,CAAC,UAAU,EAAE;AACjC,YAAY,IAAI,CAAC,oBAAoB,GAAG,IAAI;AAC5C;AACA;AACA,SAAS;AACT,QAAQ,kBAAkB,CAAC,IAAI,CAAC;AAChC;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAClC,IAAI,IAAI,IAAI,CAAC,oBAAoB,EAAE;AACnC,QAAQ,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM;AAC5C,YAAY,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE;AACpD,QAAQ,IAAI,CAAC,oBAAoB,GAAG,SAAS;AAC7C;AACA;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;AACtD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;AAC/E,WAAW,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC;AACtD;AACA,SAAS,oBAAoB,CAAC,IAAI,EAAE;AACpC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACzC,QAAQ,OAAO,KAAK;AACpB,IAAI,OAAO,YAAY,CAAC,IAAI,CAAC;AAC7B;AACA,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACtC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU;AACvB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI;AACR;AACA;AACA;AACA,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;AAC3G,aAAa,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,UAAU,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;AACxH;AACA,IAAI,OAAO,CAAC,EAAE;AACd,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAClC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3E,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACzC,IAAI,OAAO,oBAAoB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,YAAY,CAAC;AACzG;;AAEA,SAAS,kBAAkB,CAAC,KAAK,EAAE,GAAG,EAAE;AACxC,IAAI,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS;AAC5C,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;AACjE,IAAI,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;AACvI,IAAI,OAAO,MAAM,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC;AACpD;AACA,SAAS,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE;AAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;AACnE,IAAI,OAAO,IAAI;AACf;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;AAC7C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClC,IAAI,IAAI,GAAG,YAAY,aAAa,EAAE;AACtC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACpC,YAAY,IAAI,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS;AAC9G,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM;AACpD,gBAAgB,OAAO,KAAK;AAC5B,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjG,YAAY,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACxE;AACA,aAAa,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;AAC7B,YAAY,OAAO,KAAK;AACxB;AACA,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,UAAU,CAAC,EAAE;AACxE,YAAY,IAAI,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;AAC1D,YAAY,IAAI,IAAI,KAAK,IAAI,YAAY,aAAa,CAAC;AACvD,gBAAgB,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AACxC,YAAY,OAAO,KAAK;AACxB;AACA,aAAa,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACnD,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,EAAE,IAAI;AACtH,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM;AACpC,gBAAgB,OAAO,KAAK;AAC5B,YAAY,IAAI,OAAO,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG;AACzE,YAAY,IAAI,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AAC3F,gBAAgB,OAAO,KAAK;AAC5B,YAAY,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AAClD,gBAAgB,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC;AAC1H;AACA,iBAAiB,IAAI,MAAM,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1H;AACA,iBAAiB;AACjB,gBAAgB,OAAO,KAAK;AAC5B;AACA;AACA;AACA,SAAS,IAAI,GAAG,YAAY,aAAa,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;AAChE,QAAQ,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;AAC5E;AACA,SAAS;AACT,QAAQ,IAAI,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;AACtD,QAAQ,IAAI,IAAI;AAChB,YAAY,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AACpC,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,SAAS,OAAO,CAAC,IAAI,EAAE;AACvB,IAAI,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;AAC9E;AACA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC/B,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU;AAC7B,IAAI,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC;AACzF;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE;AACrC,IAAI,OAAO,GAAG,GAAG,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC;AAC/E;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,IAAI,EAAE;AACtC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACtC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,EAAE,MAAM,GAAG,GAAG,CAAC,WAAW;AACtD,IAAI,IAAI,CAAC,IAAI;AACb,QAAQ;AACR,IAAI,IAAI,QAAQ,EAAE,UAAU,EAAE,KAAK,GAAG,KAAK;AAC3C;AACA;AACA;AACA,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACzG,QAAQ,KAAK,GAAG,IAAI;AACpB,IAAI,SAAS;AACb,QAAQ,IAAI,MAAM,GAAG,CAAC,EAAE;AACxB,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AACpC,gBAAgB;AAChB;AACA,iBAAiB;AACjB,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AACxD,gBAAgB,IAAI,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE;AAC7C,oBAAoB,QAAQ,GAAG,IAAI;AACnC,oBAAoB,UAAU,GAAG,EAAE,MAAM;AACzC;AACA,qBAAqB,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,EAAE;AAC/C,oBAAoB,IAAI,GAAG,MAAM;AACjC,oBAAoB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;AAClD;AACA;AACA,oBAAoB;AACpB;AACA;AACA,aAAa,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;AACpC,YAAY;AACZ;AACA,aAAa;AACb,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe;AAC3C,YAAY,OAAO,IAAI,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;AAClD,gBAAgB,QAAQ,GAAG,IAAI,CAAC,UAAU;AAC1C,gBAAgB,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC3C,gBAAgB,IAAI,GAAG,IAAI,CAAC,eAAe;AAC3C;AACA,YAAY,IAAI,CAAC,IAAI,EAAE;AACvB,gBAAgB,IAAI,GAAG,IAAI,CAAC,UAAU;AACtC,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG;AACpC,oBAAoB;AACpB,gBAAgB,MAAM,GAAG,CAAC;AAC1B;AACA,iBAAiB;AACjB,gBAAgB,IAAI,GAAG,IAAI;AAC3B,gBAAgB,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;AACtC;AACA;AACA;AACA,IAAI,IAAI,KAAK;AACb,QAAQ,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;AACvC,SAAS,IAAI,QAAQ;AACrB,QAAQ,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC;AAC/C;AACA;AACA;AACA,SAAS,qBAAqB,CAAC,IAAI,EAAE;AACrC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACtC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,EAAE,MAAM,GAAG,GAAG,CAAC,WAAW;AACtD,IAAI,IAAI,CAAC,IAAI;AACb,QAAQ;AACR,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;AAC3B,IAAI,IAAI,QAAQ,EAAE,UAAU;AAC5B,IAAI,SAAS;AACb,QAAQ,IAAI,MAAM,GAAG,GAAG,EAAE;AAC1B,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC;AAClC,gBAAgB;AAChB,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC/C,YAAY,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE;AACvC,gBAAgB,QAAQ,GAAG,IAAI;AAC/B,gBAAgB,UAAU,GAAG,EAAE,MAAM;AACrC;AACA;AACA,gBAAgB;AAChB;AACA,aAAa,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;AACpC,YAAY;AACZ;AACA,aAAa;AACb,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW;AACvC,YAAY,OAAO,IAAI,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;AACjD,gBAAgB,QAAQ,GAAG,IAAI,CAAC,UAAU;AAC1C,gBAAgB,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/C,gBAAgB,IAAI,GAAG,IAAI,CAAC,WAAW;AACvC;AACA,YAAY,IAAI,CAAC,IAAI,EAAE;AACvB,gBAAgB,IAAI,GAAG,IAAI,CAAC,UAAU;AACtC,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG;AACpC,oBAAoB;AACpB,gBAAgB,MAAM,GAAG,GAAG,GAAG,CAAC;AAChC;AACA,iBAAiB;AACjB,gBAAgB,IAAI,GAAG,IAAI;AAC3B,gBAAgB,MAAM,GAAG,CAAC;AAC1B,gBAAgB,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;AACnC;AACA;AACA;AACA,IAAI,IAAI,QAAQ;AAChB,QAAQ,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC;AAC/C;AACA,SAAS,WAAW,CAAC,GAAG,EAAE;AAC1B,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU;AAC7B,IAAI,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AACjD;AACA,SAAS,aAAa,CAAC,IAAI,EAAE,MAAM,EAAE;AACrC,IAAI,OAAO,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AAC5E,QAAQ,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;AACnC,QAAQ,IAAI,GAAG,IAAI,CAAC,UAAU;AAC9B;AACA,IAAI,OAAO,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AACpD,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AAC1C,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC;AAC9B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;AACjE,YAAY;AACZ,QAAQ,IAAI,GAAG,IAAI;AACnB,QAAQ,MAAM,GAAG,CAAC;AAClB;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AACtC,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACnD,QAAQ,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC/B,QAAQ,IAAI,GAAG,IAAI,CAAC,UAAU;AAC9B;AACA,IAAI,OAAO,IAAI,IAAI,MAAM,EAAE;AAC3B,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9C,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC;AAC9B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;AACjE,YAAY;AACZ,QAAQ,IAAI,GAAG,IAAI;AACnB,QAAQ,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;AACvC;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;AACzC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;AAC5B,QAAQ,IAAI,MAAM,EAAE,KAAK;AACzB,QAAQ,IAAI,KAAK,GAAG,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;AACjD,YAAY,IAAI,GAAG,KAAK;AACxB,YAAY,MAAM,GAAG,CAAC;AACtB;AACA,aAAa,IAAI,MAAM,GAAG,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;AACxD,YAAY,IAAI,GAAG,MAAM;AACzB,YAAY,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM;AAC5C;AACA;AACA,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE;AACjC,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ;AACR,IAAI,IAAI,kBAAkB,CAAC,GAAG,CAAC,EAAE;AACjC,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE;AAC1C,QAAQ,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAClC,QAAQ,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;AACpC,QAAQ,GAAG,CAAC,eAAe,EAAE;AAC7B,QAAQ,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC3B;AACA,SAAS,IAAI,GAAG,CAAC,MAAM,EAAE;AACzB,QAAQ,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;AAChC;AACA,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;AACtC,IAAI,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI;AACxB;AACA,IAAI,UAAU,CAAC,MAAM;AACrB,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK;AAC/B,YAAY,cAAc,CAAC,IAAI,CAAC;AAChC,KAAK,EAAE,EAAE,CAAC;AACV;AACA,SAAS,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;AAC1C,IAAI,IAAI,EAAE,MAAM,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;AAC3D,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;AAC1C,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE;AAChC,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;AAClD,YAAY,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC;AACtD,YAAY,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAClG,gBAAgB,OAAO,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,KAAK,GAAG,KAAK;AAChE;AACA,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE;AAC9B,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC;AACjD,YAAY,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,IAAI,CAAC;AACpD,YAAY,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACjG,gBAAgB,OAAO,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,KAAK,GAAG,KAAK;AAC/D;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS;AACvD,IAAI,OAAO,QAAQ,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK;AAC5C;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;AAC3C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClC,IAAI,IAAI,GAAG,YAAY,aAAa,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5E,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG;AAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,EAAE;AACrF,QAAQ,IAAI,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;AACtD,QAAQ,IAAI,IAAI,KAAK,IAAI,YAAY,aAAa,CAAC;AACnD,YAAY,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE;AACrC,QAAQ,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG;AACxC,QAAQ,IAAI,MAAM,GAAG,GAAG,YAAY,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC;AAC5G,QAAQ,OAAO,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,KAAK;AACnD;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,0BAA0B,CAAC,IAAI,EAAE,GAAG,EAAE;AAC/C,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,YAAY,aAAa,CAAC;AACxD,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AACxD,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;AAClC,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,CAAC,KAAK;AACd,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,UAAU,CAAC;AAC7D,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,QAAQ,GAAG,CAAC,KAAK,CAAC,UAAU,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC;AACtF,IAAI,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;AACtC,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;AAC9B,QAAQ,IAAI,GAAG,GAAG,CAAC;AACnB,YAAY,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC;AAC/D;AACA,YAAY,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAC/D,QAAQ,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;AACzB,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AAC3B,IAAI,IAAI,CAAC,eAAe,GAAG,KAAK;AAChC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE;AAClC,IAAI,IAAI,CAACI,QAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC;AAC9D,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE;AAC7D,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC;AAChE,QAAQ,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,eAAe,IAAI,OAAO,EAAE;AACjF,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,UAAU;AACxC,QAAQ,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;AAC3C,QAAQ,UAAU,CAAC,MAAM,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;AAClE;AACA,IAAI,OAAO,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,CAAC,KAAK,EAAE;AACxB,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,IAAI,KAAK,CAAC,OAAO;AACrB,QAAQ,MAAM,IAAI,GAAG;AACrB,IAAI,IAAI,KAAK,CAAC,OAAO;AACrB,QAAQ,MAAM,IAAI,GAAG;AACrB,IAAI,IAAI,KAAK,CAAC,MAAM;AACpB,QAAQ,MAAM,IAAI,GAAG;AACrB,IAAI,IAAI,KAAK,CAAC,QAAQ;AACtB,QAAQ,MAAM,IAAI,GAAG;AACrB,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;AACrC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;AACnD,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AACzD,QAAQ,OAAO,0BAA0B,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACjF;AACA,SAAS,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,MAAM,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AACpF,QAAQ,OAAO,0BAA0B,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC;AAC/E;AACA,SAAS,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE;AACvC,QAAQ,OAAO,IAAI;AACnB;AACA,SAAS,IAAI,IAAI,IAAI,EAAE,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAC/D,QAAQ,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtG,QAAQ,OAAO,kBAAkB,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,GAAG,CAAC;AACjF;AACA,SAAS,IAAI,IAAI,IAAI,EAAE,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAC/D,QAAQ,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACrG,QAAQ,OAAO,kBAAkB,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,GAAG,CAAC;AACjF;AACA,SAAS,IAAI,IAAI,IAAI,EAAE,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAC/D,QAAQ,OAAO,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7E;AACA,SAAS,IAAI,IAAI,IAAI,EAAE,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAC/D,QAAQ,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC;AACvG;AACA,SAAS,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtC,SAAS,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,EAAE;AAChE,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB;;AAEA,SAASoB,uBAAqB,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5C,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;AACtE,IAAI,IAAI,OAAO,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,KAAK;AAC7D,IAAI,OAAO,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,EAAE;AAC1G,QAAQ,SAAS,EAAE;AACnB,QAAQ,OAAO,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU;AACrC,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9F,QAAQ,OAAO,GAAG,IAAI,CAAC,OAAO;AAC9B;AACA,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACxG,IAAI,IAAI,GAAG,GAAGC,aAAW,EAAE,EAAE,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC;AAC5D,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,iBAAiB,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9E,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,GAAG,CAAC;AAC7D,IAAI,OAAO,UAAU,IAAI,UAAU,CAAC,QAAQ,IAAI,CAAC,KAAK,SAAS,GAAGC,SAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;AAC/G,QAAQ,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD,YAAY,IAAI,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACzD,YAAY,OAAO,IAAI,CAAC,UAAU;AAClC,gBAAgB,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;AACpD,YAAY,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;AACrC,YAAY,QAAQ,EAAE;AACtB;AACA,QAAQ,UAAU,GAAG,IAAI,CAAC,UAAU;AACpC;AACA,IAAI,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ,IAAI,CAAC;AAC9C,QAAQ,UAAU,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxI,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC5E,QAAQ,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;AAChE,IAAI,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACrC;AACA;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE;AACnE,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;AAC/C,IAAI,IAAI,GAAG,EAAE,KAAK;AAClB,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;AACtB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,MAAM,GAAG,IAAI,KAAK,SAAS,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC;AACvD,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,MAAM,IAAI,SAAS,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;AACjG,QAAQ,IAAI,MAAM;AAClB,YAAY,OAAO,IAAI,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK;AAC5H,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;AAClG,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,KAAK,GAAG,MAAM;AAC1B;AACA,aAAa;AACb,YAAY,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;AACxC,YAAY,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC;AACtF,YAAY,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAC/C,YAAY,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI;AACzD,gBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACpE,gBAAgB,IAAI,KAAK;AACzB,oBAAoB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;AACtF,aAAa,CAAC;AACd;AACA;AACA,SAAS;AACT,QAAQ,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;AAC5E,QAAQ,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC5B,QAAQ,IAAI,MAAM;AAClB,YAAY,qBAAqB,CAAC,GAAG,CAAC;AACtC;AACA,IAAI,IAAI,WAAW,GAAG,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,iBAAiB,CAAC;AACjE,IAAI,IAAI,SAAS,GAAG,WAAW,IAAI,+BAA+B,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;AACxH,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC;AACjC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChD,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC,UAAU;AACtC,YAAY,OAAO,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC;AAC/C,gBAAgB,KAAK,GAAG,KAAK,CAAC,WAAW;AACzC,YAAY,IAAI,CAAC,KAAK;AACtB,gBAAgB;AAChB,YAAY,GAAG,GAAG,KAAK;AACvB;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AAC9H,QAAQ,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;AACvC,YAAY,kBAAkB,EAAE,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC;AACvD,YAAY,OAAO,EAAE,QAAQ;AAC7B,YAAY,YAAY,CAAC,GAAG,EAAE;AAC9B,gBAAgB,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW;AAC5D,oBAAoB,GAAG,CAAC,UAAU,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC;AAClF,oBAAoB,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;AAC3C,gBAAgB,OAAO,IAAI;AAC3B;AACA,SAAS,CAAC;AACV;AACA,IAAI,IAAI,SAAS,EAAE;AACnB,QAAQ,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACzF;AACA,SAAS;AACT,QAAQ,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC;AAC/E,QAAQ,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,EAAE;AAC9C,YAAY,IAAI,SAAS,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AAC1C,YAAY,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;AACrJ,YAAY,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE;AAC7I,YAAY,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC;AACzD;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;AACtE,IAAI,OAAO,KAAK;AAChB;AACA,MAAM,aAAa,GAAG,+GAA+G;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,EAAE;AAC/C,IAAI,IAAI,QAAQ,CAAC,UAAU,GAAG,CAAC;AAC/B,QAAQ,OAAO,QAAQ;AACvB,IAAI,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9C,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5D,QAAQ,IAAI,QAAQ,EAAE,MAAM,GAAG,EAAE;AACjC,QAAQ,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI;AACjC,YAAY,IAAI,CAAC,MAAM;AACvB,gBAAgB;AAChB,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM;AAC5D,YAAY,IAAI,CAAC,IAAI;AACrB,gBAAgB,OAAO,MAAM,GAAG,IAAI;AACpC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,IAAI,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC/H,gBAAgB,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM;AAClD;AACA,iBAAiB;AACjB,gBAAgB,IAAI,MAAM,CAAC,MAAM;AACjC,oBAAoB,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC;AACtG,gBAAgB,IAAI,OAAO,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;AACtD,gBAAgB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AACpC,gBAAgB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;AACrD,gBAAgB,QAAQ,GAAG,IAAI;AAC/B;AACA,SAAS,CAAC;AACV,QAAQ,IAAI,MAAM;AAClB,YAAY,OAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACxC;AACA,IAAI,OAAO,QAAQ;AACnB;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE;AAC5C,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE;AAChD,QAAQ,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxD,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;AAC5D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC1F,QAAQ,IAAI,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,KAAK,GAAG,CAAC,CAAC;AACpF,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5F,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;AAC9D,QAAQ,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AACnF,YAAY,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3G;AACA;AACA,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,KAAK,IAAI,CAAC;AAClB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AACxG,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC;AACpF,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA,SAAS,UAAU,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;AAC9D,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO;AACxF,IAAI,IAAI,QAAQ,CAAC,UAAU,GAAG,CAAC;AAC/B,QAAQ,OAAO,GAAG,CAAC;AACnB,IAAI,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC;AACtB,QAAQ,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC;AACrE,IAAI,IAAI,KAAK,IAAI,IAAI;AACrB,QAAQ,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,IAAI,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK;AAClG,cAAc,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACjG,IAAI,OAAO,QAAQ,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1F;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE;AAC/C,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS;AACnC,QAAQ,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC;AAChI,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO;AAC/B,QAAQ,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;AAC/G,IAAI,OAAO,KAAK;AAChB;AACA;AACA;AACA;AACA,MAAMA,SAAO,GAAG;AAChB,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC;AACpB,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC;AACpB,IAAI,KAAK,EAAE,CAAC,OAAO,CAAC;AACpB,IAAI,OAAO,EAAE,CAAC,OAAO,CAAC;AACtB,IAAI,QAAQ,EAAE,CAAC,OAAO,CAAC;AACvB,IAAI,GAAG,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;AAC9B,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;AAC1B,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;AAChC,IAAI,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI;AAC/B,CAAC;AACD,IAAIC,cAAY,GAAG,IAAI;AACvB,SAASF,aAAW,GAAG;AACvB,IAAI,OAAOE,cAAY,KAAKA,cAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAC/F;AACA,IAAI,OAAO,GAAG,IAAI;AAClB,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAChC,IAAI,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY;AAC1C,IAAI,IAAI,CAAC,YAAY;AACrB,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO;AAChB,QAAQ,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,sBAAsB,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;AAC7F,IAAI,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACnC;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,IAAI,IAAI,KAAK,GAAG,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,IAAI,IAAI,KAAK;AACb,QAAQ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC1C,IAAI,IAAI,GAAG,GAAGF,aAAW,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;AAChD,IAAI,IAAI,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI;AACtD,IAAI,IAAI,IAAI,GAAG,QAAQ,IAAIC,SAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AAC7D,QAAQ,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AAC9G,IAAI,GAAG,CAAC,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC;AAC1C,IAAI,IAAI,IAAI;AACZ,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AAC5C,YAAY,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG;AACnD,IAAI,OAAO,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,CAAC,GAAG,EAAE;AACpC,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,gBAAgB,CAAC,MAAM,GAAG,gCAAgC,GAAG,4BAA4B,CAAC;AAC9G,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAC3B,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,IAAI,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC1F,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;AACrF;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE;AACpC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI;AACnB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK;AAC5D,IAAI,IAAI;AACR,QAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACnC;AACA,IAAI,OAAO,CAAC,EAAE;AACd,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,KAAK;AAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AACnD,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzC,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC5C,YAAY;AACZ,QAAQ,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACnE,QAAQ,SAAS,EAAE;AACnB,QAAQ,OAAO,EAAE;AACjB;AACA,IAAI,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;AACjD;;AAEA;AACA;AACA,MAAM,QAAQ,GAAG,EAAE;AACnB,MAAM,YAAY,GAAG,EAAE;AACvB,MAAM,eAAe,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;AAC7D,MAAM,UAAU,CAAC;AACjB,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI;AAC7B,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI;AAC/B,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC;AAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;AAC1D,QAAQ,IAAI,CAAC,mBAAmB,GAAG,IAAI;AACvC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,CAAC;AAClC,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC;AAC7B,QAAQ,IAAI,CAAC,2BAA2B,GAAG,CAAC,CAAC;AAC7C,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC;AAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC;AAC1B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,CAAC;AAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK;AAC9B,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI;AACnC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,EAAE;AAClC,QAAQ,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG;AACtC,QAAQ,IAAI,CAAC,aAAa,GAAG,CAAC;AAC9B;AACA,QAAQ,IAAI,CAAC,yBAAyB,GAAG,CAAC;AAC1C,QAAQ,IAAI,CAAC,cAAc,GAAG,CAAC;AAC/B,QAAQ,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAChD,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI;AACtC;AACA;AACA,SAAS,SAAS,CAAC,IAAI,EAAE;AACzB,IAAI,KAAK,IAAI,KAAK,IAAI,QAAQ,EAAE;AAChC,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC;AACrC,QAAQ,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK;AACtF,YAAY,IAAI,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC;AACjF,iBAAiB,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC;AAChE,gBAAgB,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;AACpC,SAAS,EAAE,eAAe,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AAClE;AACA;AACA;AACA;AACA,IAAI,IAAItB,QAAM;AACd,QAAQ,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC;AACtD,IAAI,eAAe,CAAC,IAAI,CAAC;AACzB;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE;AAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,MAAM;AAC3C,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE;AAC7C;AACA,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AAC3B,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa;AAC7C,QAAQ,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC1E,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;AAC7C,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,2BAA2B,CAAC;AACxD;AACA,SAAS,eAAe,CAAC,IAAI,EAAE;AAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,eAAe,IAAI;AACxD,QAAQ,KAAK,IAAI,IAAI,IAAI,eAAe;AACxC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC;AAC/C,gBAAgB,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACxH,KAAK,CAAC;AACN;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE;AACvC,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,QAAQ,IAAI;AACxD,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;AAC1C,QAAQ,OAAO,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,gBAAgB,GAAG,KAAK;AAC/E,KAAK,CAAC;AACN;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE;AACzC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO;AACtB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,KAAK,CAAC,gBAAgB;AAC9B,QAAQ,OAAO,KAAK;AACpB,IAAI,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU;AAC1E,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE;AACxC,aAAa,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACjE,YAAY,OAAO,KAAK;AACxB,IAAI,OAAO,IAAI;AACf;AACA,SAASwB,eAAa,CAAC,IAAI,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;AAC9D,SAAS,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,YAAY,CAAC,CAAC;AACxD,QAAQ,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC;AACzC;AACA,YAAY,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACzC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,KAAK,CAAC,QAAQ;AAC/D,IAAI,IAAI,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC;AACxC,QAAQ;AACR,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO;AAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,EAAE;AAC3C;AACA;AACA;AACA,IAAI,IAAI,OAAO,IAAI,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE;AAChD,QAAQ;AACR,IAAI,IAAI,KAAK,CAAC,OAAO,IAAI,GAAG;AAC5B,QAAQ,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;AACrC;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AACzF,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;AAC5B,QAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG;AACrC,QAAQ,IAAI,CAAC,KAAK,CAAC,2BAA2B,GAAG,UAAU,CAAC,MAAM;AAClE,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,GAAG,EAAE;AAChD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;AACnF,gBAAgB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC;AAC3C;AACA,SAAS,EAAE,GAAG,CAAC;AACf;AACA,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;AACjG,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B;AACA,SAAS;AACT,QAAQ,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC;AACvC;AACA,CAAC;AACD,YAAY,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;AACtC,IAAI,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE;AAC3B,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK;AACnC,CAAC;AACD,YAAY,CAAC,QAAQ,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AAC1C,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ;AAC3D,QAAQ,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,OAAO;AAC9D,QAAQ;AACR,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;AAC9D,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B,QAAQ;AACR;AACA,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClC,IAAI,IAAI,EAAE,GAAG,YAAY,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC3E,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;AACtD,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACrH,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AAC1E,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B;AACA,CAAC;AACD,SAAS,WAAW,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;AACjF,SAAS,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE;AAC9B,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO;AAClE,IAAI,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG;AAClC;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;AACjE,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC;AACpB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI;AAClH,cAAc,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACvE,YAAY,OAAO,IAAI;AACvB;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE;AAClD,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AACrB,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC;AAC1C,QAAQ;AACR,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC;AAClD,IACQ,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;AACnC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;AACrB;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE;AACzC,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC;AACpB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS;AACpE,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AACjE,QAAQ,eAAe,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,CAAY,CAAC;AACjE,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE;AACzC,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC;AACpB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,EAAE,QAAQ;AAC1D,IAAI,IAAI,GAAG,YAAY,aAAa;AACpC,QAAQ,YAAY,GAAG,GAAG,CAAC,IAAI;AAC/B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACjE,QAAQ,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;AAC9C,YAAY,IAAI,YAAY,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC;AACnD,gBAAgB,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG;AACzF,gBAAgB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;AACvD;AACA,gBAAgB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACzC,YAAY;AACZ;AACA;AACA,IAAI,IAAI,QAAQ,IAAI,IAAI,EAAE;AAC1B,QAAQ,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAY,CAAC;AACxF,QAAQ,OAAO,IAAI;AACnB;AACA,SAAS;AACT,QAAQ,OAAO,KAAK;AACpB;AACA;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE;AACjE,IAAI,OAAO,mBAAmB,CAAC,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;AACzE,QAAQ,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC9D,SAAS,UAAU,GAAG,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACxF;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;AACrD,IAAI,OAAO,mBAAmB,CAAC,IAAI,EAAE,qBAAqB,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;AAC/E,QAAQ,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AACpE;AACA,SAASC,mBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE;AACrD,IAAI,OAAO,mBAAmB,CAAC,IAAI,EAAE,qBAAqB,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC;AAC/E,QAAQ,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AACpE,QAAQ,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;AAC/C;AACA,SAAS,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;AACjD,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;AACzB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;AAC5B,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC,EAAE;AACtB,QAAQ,IAAI,GAAG,CAAC,aAAa,EAAE;AAC/B,YAAY,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAY,CAAC;AAC5F,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AAClC,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACjE,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,QAAQ,IAAI,IAAI,CAAC,aAAa;AAC9B,YAAY,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAY,CAAC;AACrH,aAAa,IAAI,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;AACjD,YAAY,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAY,CAAC;AAChF;AACA,YAAY;AACZ,QAAQ,OAAO,IAAI;AACnB;AACA;AACA,SAAS,aAAa,CAAC,IAAI,EAAE;AAC7B,IAAI,OAAO,cAAc,CAAC,IAAI,CAAC;AAC/B;AACA,MAAM,kBAAkB,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS;AACtD,QAAQ,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACvC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ;AACxC,IAAI,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC;AACrC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,GAAG,aAAa;AAC9C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE;AACpH,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,aAAa;AACtD,YAAY,IAAI,GAAG,aAAa;AAChC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,aAAa;AAC3D,YAAY,IAAI,GAAG,aAAa;AAChC;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE;AAClF,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAClD,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ;AACR,IAAI,IAAI,IAAI,IAAI,aAAa,EAAE;AAC/B,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS;AAChC,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE;AACvC,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;AACzE;AACA,SAAS,IAAI,CAAC,IAAI,IAAI,aAAa,GAAG,iBAAiB,GAAGA,mBAAiB,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;AAChH,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B;AACA,SAAS;AACT,QAAQ,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC;AAC3C;AACA,CAAC;AACD,MAAM,SAAS,CAAC;AAChB,IAAI,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE;AAC3C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG;AACtB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B,QAAQ,IAAI,CAAC,oBAAoB,GAAG,KAAK;AACzC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI;AAC7B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;AACtC,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC;AACrD,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,QAAQ;AAC1C,QAAQ,IAAI,UAAU,EAAE,SAAS;AACjC,QAAQ,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AAC7B,YAAY,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;AAC1D,YAAY,SAAS,GAAG,GAAG,CAAC,MAAM;AAClC;AACA,aAAa;AACb,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;AACtD,YAAY,UAAU,GAAG,IAAI,CAAC,MAAM;AACpC,YAAY,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;AACtD;AACA,QAAQ,MAAM,MAAM,GAAG,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM;AACpD,QAAQ,MAAM,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,IAAI;AACjF,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,UAAU,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,GAAG,IAAI;AACxF,QAAQ,IAAI,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK;AACtC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;AAC7B,YAAY,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,KAAK;AACvF,YAAY,SAAS,YAAY,aAAa,IAAI,SAAS,CAAC,IAAI,IAAI,SAAS,IAAI,SAAS,CAAC,EAAE,GAAG,SAAS;AACzG,YAAY,IAAI,CAAC,SAAS,GAAG;AAC7B,gBAAgB,IAAI,EAAE,UAAU;AAChC,gBAAgB,GAAG,EAAE,SAAS;AAC9B,gBAAgB,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAClE,gBAAgB,aAAa,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC;AACtG,aAAa;AACb,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;AACvG,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AACxC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO;AACtC,gBAAgB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI;AAC5C,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa;AAC5C,gBAAgB,UAAU,CAAC,MAAM;AACjC,oBAAoB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI;AACzD,wBAAwB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,CAAC;AAC5E,iBAAiB,EAAE,EAAE,CAAC;AACtB,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AACzC;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3E,QAAQ,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjF,QAAQ,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC;AAC3C;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC;AAC9D,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC;AAClE,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;AAC3C,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AACxC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO;AACtC,gBAAgB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC;AACxD,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa;AAC5C,gBAAgB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC;AAC9D,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AACzC;AACA,QAAQ,IAAI,IAAI,CAAC,oBAAoB;AACrC,YAAY,UAAU,CAAC,MAAM,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI;AACxC;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,IAAI,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACjD,YAAY;AACZ,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG;AAC1B,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ;AAChD,YAAY,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;AACtC,QAAQ,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,GAAG,EAAE;AACvC,YAAY,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACpD;AACA,aAAa,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;AAC5F,YAAY,KAAK,CAAC,cAAc,EAAE;AAClC;AACA,aAAa,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC;AAClC,aAAa,IAAI,CAAC,OAAO;AACzB;AACA,iBAAiBzB,QAAM,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO;AAC7D,oBAAoB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AAC3I,YAAY,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAY,CAAC;AACvG,YAAY,KAAK,CAAC,cAAc,EAAE;AAClC;AACA,aAAa;AACb,YAAY,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AACpD;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;AACtC,QAAQ,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;AAChD,QAAQ,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC;AAC9B,YAAY,IAAI,CAAC,IAAI,EAAE;AACvB;AACA,IAAI,kBAAkB,CAAC,KAAK,EAAE;AAC9B,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;AAC7E,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACvD,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI;AACpC;AACA;AACA,QAAQ,CAAC,UAAU,GAAG,IAAI,IAAI;AAC9B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;AACrC,IAAI,aAAa,CAAC,IAAI,CAAC;AACvB,IAAI,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC;AACvC,CAAC;AACD,QAAQ,CAAC,SAAS,GAAG,IAAI,IAAI;AAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;AACrC,IAAI,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC;AACvC,CAAC;AACD,QAAQ,CAAC,WAAW,GAAG,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC;AAClD,SAAS,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE;AAC1C,IAAI,IAAI,IAAI,CAAC,SAAS;AACtB,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAIA,QAAM,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,GAAG,EAAE;AACnF,QAAQ,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,GAAG;AAC5C,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB;AACA;AACA,MAAM,kBAAkB,GAAG,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC;AAC9C,YAAY,CAAC,gBAAgB,GAAG,YAAY,CAAC,iBAAiB,GAAG,IAAI,IAAI;AACzE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACzB,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAChC,QAAQ,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG;AACxD,QAAQ,IAAI,KAAK,CAAC,SAAS,YAAY,aAAa;AACpD,aAAa,KAAK,CAAC,WAAW;AAC9B,iBAAiB,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;AAC9H;AACA,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;AACpE,YAAY,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;AACtC,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI;AAClC;AACA,aAAa;AACb,YAAY,cAAc,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;AACxD;AACA;AACA;AACA,YAAY,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE;AACzH,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE;AAClD,gBAAgB,KAAK,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,EAAE,MAAM,GAAG,GAAG,CAAC,WAAW,EAAE,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG;AACrH,oBAAoB,IAAI,MAAM,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1F,oBAAoB,IAAI,CAAC,MAAM;AAC/B,wBAAwB;AACxB,oBAAoB,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,EAAE;AAC9C,wBAAwB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE;AACrD,wBAAwB,IAAI,GAAG;AAC/B,4BAA4B,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;AACzE,wBAAwB;AACxB;AACA,yBAAyB;AACzB,wBAAwB,IAAI,GAAG,MAAM;AACrC,wBAAwB,MAAM,GAAG,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI;AACnC;AACA,IAAI,kBAAkB,CAAC,IAAI,EAAE,kBAAkB,CAAC;AAChD,CAAC;AACD,YAAY,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;AAC/C,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK;AACpC,QAAQ,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC,SAAS;AACvD,QAAQ,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC;AACtH,QAAQ,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI;AACzC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB;AAChD,YAAY,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;AAClE,QAAQ,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;AAClC,QAAQ,kBAAkB,CAAC,IAAI,EAAE,EAAE,CAAC;AACpC;AACA,CAAC;AACD,SAAS,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE;AACzC,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;AAC7C,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,QAAQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;AACnF;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAChC,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK;AACpC,QAAQ,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,wBAAwB,EAAE;AAClE;AACA,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC;AACjD,QAAQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,gBAAgB,EAAE;AAC5D;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACtC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS;AACtB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC;AACrE,IAAI,IAAI,SAAS,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC;AACnE,IAAI,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,EAAE;AAC5D,QAAQ,IAAI,SAAS,GAAG,SAAS,CAAC,UAAU,EAAE,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,mBAAmB;AAChG,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW;AACjE,YAAY,OAAO,WAAW;AAC9B,QAAQ,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AAClE,YAAY,OAAO,SAAS;AAC5B;AACA,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,SAAS,EAAE;AAC1D,YAAY,IAAI,UAAU,GAAG,UAAU,CAAC,UAAU;AAClD,YAAY,IAAI,EAAE,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC1E,gBAAgB,OAAO,SAAS;AAChC;AACA;AACA,IAAI,OAAO,UAAU,IAAI,SAAS;AAClC;AACA,SAAS,wBAAwB,GAAG;AACpC,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;AAC7C,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;AACxC,IAAI,OAAO,KAAK,CAAC,SAAS;AAC1B;AACA;AACA;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE;AAClD,IAAI,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,IAAI,CAAC;AACrD,QAAQ;AACR,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;AACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC;AAC1B,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AAC1D,QAAQ,IAAI,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC;AACxC,QAAQ,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AAChD,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC1D,aAAa,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AAC/E,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC;AAC1D;AACA,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE;AAChC;AACA;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU;AAC5B,QAAQ;AACR,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC7E,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;AACzB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,4CAA4C;AACrE,IAAI,IAAI,GAAG,GAAG,YAAY,EAAE,EAAE,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE;AAC5D,IAAI,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC;AACjC;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AACnB,IAAI,GAAG,CAAC,eAAe,EAAE;AACzB,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AACvB,IAAI,UAAU,CAAC,MAAM;AACrB,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC;AAC7C,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,KAAK,EAAE,EAAE,CAAC;AACV;AACA;AACA;AACA;AACA,MAAM0B,oBAAkB,GAAG,CAAC9B,IAAE,IAAI,UAAU,GAAG,EAAE;AACjD,KAAK,GAAG,IAAI,cAAc,GAAG,GAAG,CAAC;AACjC,QAAQ,CAAC,IAAI,GAAG,YAAY,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACrD,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK;AAC7D,IAAI,IAAI,GAAG,CAAC,KAAK;AACjB,QAAQ;AACR;AACA,IAAI,IAAI,IAAI,GAAG8B,oBAAkB,GAAG,IAAI,GAAG,KAAK,CAAC,aAAa;AAC9D,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,GAAGN,uBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC;AACjF,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,QAAQ,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,SAAS,CAAC;AAChD,QAAQ,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC;AACxC;AACA,SAAS;AACT,QAAQ,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC;AAC9B;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AACjG,CAAC;AACD,SAAS,eAAe,CAAC,KAAK,EAAE;AAChC,IAAI,OAAO,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI;AACxH;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;AACnC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU;AAC5B,QAAQ;AACR,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;AAC3F,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC;AACxG,IAAI,IAAI,CAAC,SAAS;AAClB,QAAQ,MAAM,CAAC,eAAe,GAAG,MAAM;AACvC,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,4CAA4C;AACvE,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE;AACnE,IAAI,UAAU,CAAC,MAAM;AACrB,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,MAAM,CAAC,UAAU;AAC7B,YAAY,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC;AACjD,QAAQ,IAAI,SAAS;AACrB,YAAY,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AAC3D;AACA,YAAY,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;AAC7E,KAAK,EAAE,EAAE,CAAC;AACV;AACA,SAAS,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE;AACvD,IAAI,IAAI,KAAK,GAAG,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;AAC7F,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/E,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,CAAC,KAAK;AACd,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,UAAU,GAAG,eAAe,CAAC,KAAK,CAAC;AAC3C,IAAI,IAAI,EAAE,GAAG;AACb,UAAU,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,UAAU,EAAE,WAAW;AACpE,UAAU,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC;AAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACzF,IAAI,OAAO,IAAI;AACf;AACA,SAAS,OAAO,CAAC,aAAa,EAAE;AAChC,IAAI,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;AACnF,IAAI,IAAI,IAAI;AACZ,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,eAAe,CAAC;AACrD,IAAI,OAAO,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,EAAE;AAClD;AACA,YAAY,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACvC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO;AAClC,QAAQ;AACR,IAAI,IAAI,IAAI,GAAGM,oBAAkB,GAAG,IAAI,GAAG,KAAK,CAAC,aAAa;AAC9D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE;AACnE,IAAI,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;AACrF,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B;AACA,QAAQ,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;AACjC,CAAC;AACD,MAAM,QAAQ,CAAC;AACf,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;AACnC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA,MAAM,gBAAgB,GAAG,GAAG,GAAG,QAAQ,GAAG,SAAS;AACnD,QAAQ,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACvC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AACxC,IAAI,IAAI,SAAS;AACjB,QAAQ,SAAS,CAAC,IAAI,EAAE;AACxB,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY;AAC3B,QAAQ;AACR,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACrE,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,YAAY,aAAa,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE;AACvG,SAAS,IAAI,SAAS,IAAI,SAAS,CAAC,SAAS,EAAE;AAC/C,QAAQ,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC;AAC5E;AACA,SAAS,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,EAAE;AACzD,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC;AAC/D,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO;AACzE,YAAY,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC;AACvE;AACA,IAAI,IAAI,YAAY,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,EAAE;AAC/D,IAAI,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,GAAGN,uBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC;AACxE;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,MAAM,IAAI,cAAc,GAAG,GAAG;AAC3E,QAAQ,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE;AACtC,IAAI,KAAK,CAAC,YAAY,CAAC,OAAO,CAACM,oBAAkB,GAAG,MAAM,GAAG,WAAW,EAAE,GAAG,CAAC,SAAS,CAAC;AACxF;AACA,IAAI,KAAK,CAAC,YAAY,CAAC,aAAa,GAAG,UAAU;AACjD,IAAI,IAAI,CAACA,oBAAkB;AAC3B,QAAQ,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC;AACtD,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC;AACvE,CAAC;AACD,QAAQ,CAAC,OAAO,GAAG,IAAI,IAAI;AAC3B,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAChC,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM;AAC5B,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,QAAQ;AACrC,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI;AAChC,KAAK,EAAE,EAAE,CAAC;AACV,CAAC;AACD,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE;AAC7E,YAAY,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACtC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAChC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI;AACxB,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY;AAC3B,QAAQ;AACR,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACvD,IAAI,IAAI,CAAC,QAAQ;AACjB,QAAQ;AACR,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;AACrD,IAAI,IAAI,KAAK,GAAG,QAAQ,IAAI,QAAQ,CAAC,KAAK;AAC1C,IAAI,IAAI,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;AAC1E;AACA,SAAS;AACT,QAAQ,KAAK,GAAG,kBAAkB,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,EAAEA,oBAAkB,GAAG,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;AACzJ;AACA,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,QAAQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACvD,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE;AACtF,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B,QAAQ;AACR;AACA,IAAI,IAAI,CAAC,KAAK;AACd,QAAQ;AACR,IAAI,KAAK,CAAC,cAAc,EAAE;AAC1B,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC,GAAG;AACrF,IAAI,IAAI,SAAS,IAAI,IAAI;AACzB,QAAQ,SAAS,GAAG,MAAM,CAAC,GAAG;AAC9B,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;AAC1B,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,QAAQ;AAC/B,QAAQ,IAAI,IAAI;AAChB,YAAY,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;AAC5B;AACA,YAAY,EAAE,CAAC,eAAe,EAAE;AAChC;AACA,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AACvC,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC;AAC5F,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC,GAAG;AAC7B,IAAI,IAAI,MAAM;AACd,QAAQ,EAAE,CAAC,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;AAC/D;AACA,QAAQ,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;AACxC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC;AAC/B,QAAQ;AACR,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;AAClC,IAAI,IAAI,MAAM,IAAI,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;AACtE,QAAQ,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC/E,QAAQ,EAAE,CAAC,YAAY,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;AAChD;AACA,SAAS;AACT,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AAC3C,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,KAAK,GAAG,GAAG,KAAK,CAAC;AACzG,QAAQ,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E;AACA,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAChD,CAAC;AACD,QAAQ,CAAC,KAAK,GAAG,IAAI,IAAI;AACzB,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;AACrC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACvB,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC;AACrD,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAChC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3B,QAAQ,UAAU,CAAC,MAAM;AACzB,YAAY,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAClH,gBAAgB,cAAc,CAAC,IAAI,CAAC;AACpC,SAAS,EAAE,EAAE,CAAC;AACd;AACA,CAAC;AACD,QAAQ,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AAClC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC;AACxD,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAChC,QAAQ,IAAI,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC;AACzE,YAAY,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE;AACrD,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK;AAC5B;AACA,CAAC;AACD,QAAQ,CAAC,WAAW,GAAG,CAAC,IAAI,EAAE,MAAM,KAAK;AACzC,IAAI,IAAI,KAAK,GAAG,MAAM;AACtB;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,IAAI,OAAO,IAAI,KAAK,CAAC,SAAS,IAAI,uBAAuB,EAAE;AACzE,QAAQ,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;AACpC,QAAQ,IAAI,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,KAAK;AAC3C,QAAQ,UAAU,CAAC,MAAM;AACzB,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,cAAc;AAC3D,gBAAgB,OAAO;AACvB;AACA,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AAC3B,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;AACtF,gBAAgB;AAChB,YAAY,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClD;AACA,YAAY,IAAI,OAAO,IAAI,OAAO,CAAC,GAAG,GAAG,CAAC;AAC1C,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;AAClG,SAAS,EAAE,EAAE,CAAC;AACd;AACA,CAAC;AACD;AACA,KAAK,IAAI,IAAI,IAAI,YAAY;AAC7B,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC;;AAEvC,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B,IAAI,IAAI,CAAC,IAAI,CAAC;AACd,QAAQ,OAAO,IAAI;AACnB,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;AACnB,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB,YAAY,OAAO,KAAK;AACxB,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;AACnB,QAAQ,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;AACrB,YAAY,OAAO,KAAK;AACxB,IAAI,OAAO,IAAI;AACf;AACA,MAAM,UAAU,CAAC;AACjB,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;AAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,MAAM;AAClC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;AACvC;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;AAC1C,QAAQ,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/F,QAAQ,OAAO,OAAO,GAAG,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,MAAM,EAAE,IAAI,CAAC;AAChF;AACA,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC;AAC1B,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,IAAI,KAAK;AAC5B,aAAa,KAAK,YAAY,UAAU;AACxC,iBAAiB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG;AACjE,oBAAoB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACrF;AACA,IAAI,OAAO,CAAC,IAAI,EAAE;AAClB,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AAC7B,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACnC;AACA;AACA,MAAM,UAAU,CAAC;AACjB,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;AAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,MAAM;AAClC;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;AAC1C,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AACjG,QAAQ,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM;AAC3F,QAAQ,OAAO,IAAI,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AACjE;AACA,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;AAChD,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,IAAI,KAAK;AAC5B,aAAa,KAAK,YAAY,UAAU,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;AAChF,gBAAgB,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACnD;AACA,IAAI,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,YAAY,UAAU,CAAC;AAC7D,IAAI,OAAO,GAAG;AACd;AACA,MAAM,QAAQ,CAAC;AACf,IAAI,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;AAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,MAAM;AAClC;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;AAC1C,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,EAAE,CAAC,CAAC;AAC9D,QAAQ,IAAI,IAAI,CAAC,OAAO;AACxB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,EAAE,CAAC,CAAC,CAAC;AAC3D,QAAQ,IAAI,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG;AAC5C,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,MAAM,EAAE,IAAI,CAAC;AACvE;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;AACtB,QAAQ,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK;AACxE,QAAQ,OAAO,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE;AAC/G;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,OAAO,IAAI,IAAI,KAAK;AAC5B,aAAa,KAAK,YAAY,QAAQ,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;AAC9E,gBAAgB,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACnD;AACA,IAAI,OAAO,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,CAAC;AACjB;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA;AACA,IAAI,EAAE;AACN;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,EAAE,GAAG,EAAE;AACpB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE;AACnB,QAAQ,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;AAClD;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;AAC1B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,GAAG,MAAM,IAAI,KAAK,CAAC,EAAE;AAC3G;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE;AACpC,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;AACpC,QAAQ,OAAO,IAAI,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACzC,QAAQ,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACvC,QAAQ,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACvC;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,YAAY,UAAU,CAAC;AAC1D;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,YAAY,UAAU,CAAC;AAC1D;AACA,MAAM,IAAI,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,CAAC;AACpB;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE;AACjC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,IAAI;AAChD,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,QAAQ,GAAG,IAAI;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE,WAAW,EAAE;AACpC,QAAQ,OAAO,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,KAAK;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE;AAChC,QAAQ,IAAI,MAAM,GAAG,EAAE;AACvB,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,KAAK,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,CAAC;AAChG,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE;AACrD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,YAAY,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,KAAK,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5F,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;AAC5E;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAC1D,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,EAAE;AACxE,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;AACnD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,MAAM,EAAE,MAAM,GAAG,QAAQ,EAAE,SAAS,CAAC;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE;AAC/B,QAAQ,IAAI,IAAI,IAAI,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC;AACrD,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,MAAM,CAAC;AACnE;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;AACxD,QAAQ,IAAI,QAAQ;AACpB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;AACtE,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;AACzD,gBAAgB,CAAC,QAAQ,KAAK,QAAQ,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;AAC1D,iBAAiB,IAAI,OAAO,CAAC,QAAQ;AACrC,gBAAgB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACpD;AACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM;AAChC,YAAY,OAAO,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;AACxG;AACA,YAAY,OAAO,QAAQ,GAAG,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE;AAC1B,QAAQ,IAAI,CAAC,WAAW,CAAC,MAAM;AAC/B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,IAAI,KAAK;AACzB,YAAY,OAAO,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC;AACzD,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;AACjD;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,WAAW,EAAE,MAAM,EAAE;AACvC,QAAQ,IAAI,QAAQ,EAAE,UAAU,GAAG,CAAC;AACpC,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,WAAW,KAAK;AAChD,YAAY,IAAI,UAAU,GAAG,WAAW,GAAG,MAAM,EAAE,KAAK;AACxD,YAAY,IAAI,EAAE,KAAK,GAAG,gBAAgB,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;AAC/E,gBAAgB;AAChB,YAAY,IAAI,CAAC,QAAQ;AACzB,gBAAgB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;AAChD,YAAY,OAAO,UAAU,GAAG,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,WAAW;AACrF,gBAAgB,UAAU,IAAI,CAAC;AAC/B,YAAY,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,WAAW;AACnD,gBAAgB,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC;AAC9G;AACA,gBAAgB,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,WAAW,EAAE,WAAW,GAAG,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;AAClJ,YAAY,UAAU,IAAI,CAAC;AAC3B,SAAS,CAAC;AACV,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,WAAW,EAAE,CAAC,MAAM,CAAC;AAC5F,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACnD,gBAAgB,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC,QAAQ,OAAO,IAAI,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;AAC7H;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,WAAW,EAAE;AACxB,QAAQ,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK;AACpD,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/C;AACA,IAAI,WAAW,CAAC,WAAW,EAAE,MAAM,EAAE;AACrC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK;AACxD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACrD,YAAY,IAAI,KAAK;AACrB,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AAC1E,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7D,gBAAgB,IAAI,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE;AAC3C,oBAAoB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;AAC1D,wBAAwB,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI;AAC7C,wBAAwB,CAAC,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AAC1D;AACA;AACA,YAAY,IAAI,CAAC,KAAK;AACtB,gBAAgB;AAChB,YAAY,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzC,gBAAgB,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;AAChD,YAAY,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,CAAC;AACtE,YAAY,IAAI,OAAO,IAAI,KAAK,EAAE;AAClC,gBAAgB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AACzC;AACA,iBAAiB;AACjB,gBAAgB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AACrC,gBAAgB,CAAC,IAAI,CAAC;AACtB;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM;AACxB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7D,gBAAgB,IAAI,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE;AAC3C,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AACzD,wBAAwB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;AACvD,4BAA4B,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK;AACnD,gCAAgC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AAC1D,4BAA4B,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAChD;AACA;AACA,QAAQ,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK;AAC5D,YAAY,OAAO,IAAI;AACvB,QAAQ,OAAO,KAAK,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK;AAC3F;AACA,IAAI,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE;AAC3B,QAAQ,IAAI,IAAI,IAAI,KAAK;AACzB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,MAAM;AACvB,YAAY,OAAO,aAAa,CAAC,KAAK;AACtC,QAAQ,IAAI,KAAK,EAAE,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACxD,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;AAC5C,gBAAgB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM;AAC9C,oBAAoB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,gBAAgB;AAChB;AACA,QAAQ,IAAI,KAAK,GAAG,MAAM,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;AAC/D,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACnC,YAAY,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,GAAG,KAAK,KAAK,GAAG,CAAC,IAAI,YAAY,UAAU,CAAC,EAAE;AACtF,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK;AAChG,gBAAgB,IAAI,IAAI,GAAG,EAAE;AAC7B,oBAAoB,CAAC,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACpE;AACA;AACA,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,QAAQ,GAAG,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;AACrE,YAAY,OAAO,KAAK,GAAG,IAAI,eAAe,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,GAAG,QAAQ;AAC5E;AACA,QAAQ,OAAO,KAAK,IAAI,KAAK;AAC7B;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,IAAI,IAAI,IAAI,KAAK;AACzB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,EAAE,KAAK,YAAY,aAAa,CAAC;AAC7C,YAAY,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM;AACnD,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM;AACzD,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAClD,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACxD,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7D,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,OAAO,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACpD;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,IAAI,IAAI,KAAK;AACzB,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;AACjE,YAAY,OAAO,IAAI,CAAC,KAAK;AAC7B,QAAQ,IAAI,MAAM,GAAG,EAAE;AACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpD,YAAY,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,UAAU,CAAC;AAC3D,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1C;AACA,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;AAC5B;AACA;AACA;AACA;AACA,aAAa,CAAC,KAAK,GAAG,IAAI,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC;AAC/C;AACA;AACA;AACA,aAAa,CAAC,aAAa,GAAG,aAAa;AAC3C,MAAM,KAAK,GAAG,aAAa,CAAC,KAAK;AACjC;AACA;AACA;AACA,MAAM,eAAe,CAAC;AACtB,IAAI,WAAW,CAAC,OAAO,EAAE;AACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO;AAC9B;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE;AACtB,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AACxF,QAAQ,OAAO,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;AAChD;AACA,IAAI,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE;AAC5B,QAAQ,IAAI,KAAK,CAAC,MAAM;AACxB,YAAY,OAAO,aAAa,CAAC,KAAK;AACtC,QAAQ,IAAI,KAAK,GAAG,EAAE;AACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC;AAChE,YAAY,IAAI,MAAM,IAAI,KAAK;AAC/B,gBAAgB;AAChB,YAAY,IAAI,MAAM,YAAY,eAAe;AACjD,gBAAgB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;AACpD;AACA,gBAAgB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AAClC;AACA,QAAQ,OAAO,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1C;AACA,IAAI,EAAE,CAAC,KAAK,EAAE;AACd,QAAQ,IAAI,EAAE,KAAK,YAAY,eAAe,CAAC;AAC/C,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;AACvD,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AACpD,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACrD,gBAAgB,OAAO,KAAK;AAC5B,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,IAAI,MAAM,EAAE,MAAM,GAAG,IAAI;AACjC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC1D,YAAY,IAAI,CAAC,MAAM,CAAC,MAAM;AAC9B,gBAAgB;AAChB,YAAY,IAAI,CAAC,MAAM,EAAE;AACzB,gBAAgB,MAAM,GAAG,MAAM;AAC/B;AACA,iBAAiB;AACjB,gBAAgB,IAAI,MAAM,EAAE;AAC5B,oBAAoB,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE;AAC3C,oBAAoB,MAAM,GAAG,KAAK;AAClC;AACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AACtD,oBAAoB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1C;AACA;AACA,QAAQ,OAAO,MAAM,GAAG,aAAa,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI;AAClF;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;AACzB,QAAQ,QAAQ,OAAO,CAAC,MAAM;AAC9B,YAAY,KAAK,CAAC,EAAE,OAAO,KAAK;AAChC,YAAY,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC;AACrC,YAAY,SAAS,OAAO,IAAI,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,aAAa,CAAC,GAAG,OAAO;AACxG,gBAAgB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;AACnG;AACA;AACA,IAAI,UAAU,CAAC,CAAC,EAAE;AAClB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;AACpD,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AACzC;AACA;AACA,SAAS,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;AACvF,IAAI,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE;AACtC;AACA;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,SAAS,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1E,QAAQ,IAAI,KAAK,GAAG,CAAC;AACrB,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,KAAK;AACxE,YAAY,IAAI,KAAK,GAAG,CAAC,MAAM,GAAG,QAAQ,KAAK,MAAM,GAAG,QAAQ,CAAC;AACjE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACzD,gBAAgB,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC,gBAAgB,IAAI,GAAG,GAAG,CAAC,IAAI,QAAQ,GAAG,GAAG,GAAG,UAAU,GAAG,KAAK;AAClE,oBAAoB;AACpB,gBAAgB,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,KAAK;AAC5D,gBAAgB,IAAI,MAAM,IAAI,KAAK,EAAE;AACrC,oBAAoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjE;AACA,qBAAqB,IAAI,QAAQ,IAAI,UAAU,IAAI,KAAK,EAAE;AAC1D,oBAAoB,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK;AACxC,oBAAoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;AAC5C;AACA;AACA,YAAY,KAAK,IAAI,KAAK;AAC1B,SAAS,CAAC;AACV,QAAQ,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;AACxD;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,KAAK;AAC3B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AAC/C,QAAQ,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AACjC,YAAY,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AACvC,gBAAgB,WAAW,GAAG,IAAI;AAClC,gBAAgB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,gBAAgB;AAChB;AACA,YAAY,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,SAAS,GAAG,IAAI,GAAG,MAAM;AACzF,YAAY,IAAI,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AACjE,gBAAgB,WAAW,GAAG,IAAI;AAClC,gBAAgB;AAChB;AACA;AACA,YAAY,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE,GAAG,MAAM;AAC3F,YAAY,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC;AAClF,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;AAClD,YAAY,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,GAAG,SAAS,CAAC,QAAQ,IAAI,OAAO,EAAE;AACtG,gBAAgB,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC;AAC3C,qBAAqB,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,OAAO,CAAC;AACpG,gBAAgB,IAAI,MAAM,IAAI,KAAK,EAAE;AACrC,oBAAoB,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS;AAC3C,oBAAoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AAC7C,oBAAoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;AAC5C;AACA,qBAAqB;AACrB,oBAAoB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACxC,oBAAoB,WAAW,GAAG,IAAI;AACtC;AACA;AACA,iBAAiB;AACjB,gBAAgB,WAAW,GAAG,IAAI;AAClC;AACA;AACA;AACA,IAAI,IAAI,WAAW,EAAE;AACrB,QAAQ,IAAI,WAAW,GAAG,gCAAgC,CAAC,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;AAChI,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC;AAC5D,QAAQ,QAAQ,GAAG,KAAK,CAAC,KAAK;AAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACnD,YAAY,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AACrC,gBAAgB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AACrC,gBAAgB,CAAC,IAAI,CAAC;AACtB;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AAClE,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxC,YAAY,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5D,gBAAgB,CAAC,IAAI,CAAC;AACtB,YAAY,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAClG;AACA;AACA,IAAI,OAAO,IAAI,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC5D;AACA,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE;AAClC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM;AAChC,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AAC3B,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACpF;AACA,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,gCAAgC,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;AACnH;AACA,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE;AACpC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,YAAY,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;AACrE,YAAY,IAAI,MAAM;AACtB,gBAAgB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;AACxC,iBAAiB,IAAI,OAAO,CAAC,QAAQ;AACrC,gBAAgB,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACnD;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AACvD,YAAY,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;AACxE;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;AAC/C,QAAQ,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AACjC,YAAY,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;AACnE,IAAI,OAAO,WAAW;AACtB;AACA,SAAS,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;AAC/C,IAAI,IAAI,IAAI,CAAC,MAAM;AACnB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;AAClD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE;AACtE,YAAY,CAAC,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;AAC9C,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAC3B;AACA;AACA,IAAI,OAAO,KAAK;AAChB;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI;AAC5B,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,OAAO,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;AACjD,IAAI,IAAI,QAAQ,GAAG,EAAE,EAAE,QAAQ,GAAG,KAAK;AACvC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,UAAU,KAAK;AAC5C,QAAQ,IAAI,KAAK,GAAG,gBAAgB,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,GAAG,MAAM,CAAC;AAC3E,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,QAAQ,GAAG,IAAI;AAC3B,YAAY,IAAI,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,GAAG,UAAU,GAAG,CAAC,EAAE,OAAO,CAAC;AACvF,YAAY,IAAI,OAAO,IAAI,KAAK;AAChC,gBAAgB,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,GAAG,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC;AACnF;AACA,KAAK,CAAC;AACN,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACvF,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AAC1C,QAAQ,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AACpD,YAAY,IAAI,OAAO,CAAC,QAAQ;AAChC,gBAAgB,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAChD,YAAY,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACjC;AACA,IAAI,OAAO,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,KAAK;AACzF;AACA;AACA;AACA;AACA,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;AACrB,IAAI,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,KAAK,EAAE;AAC9B,IAAI,IAAI,OAAO,GAAG,KAAK;AACvB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACjD,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;AAC7B,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AAChC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzD,gBAAgB,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;AACrC,gBAAgB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AAC5C,oBAAoB,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,EAAE;AAC5C,wBAAwB,IAAI,OAAO,IAAI,KAAK;AAC5C,4BAA4B,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;AACnD;AACA;AACA,wBAAwB,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC;AAClE,wBAAwB,WAAW,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAChF;AACA,oBAAoB;AACpB;AACA,qBAAqB;AACrB,oBAAoB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE;AAC7C,wBAAwB,IAAI,OAAO,IAAI,KAAK;AAC5C,4BAA4B,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;AACnD;AACA;AACA,wBAAwB,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;AACpE,wBAAwB,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9E;AACA,oBAAoB;AACpB;AACA;AACA;AACA,IAAI,OAAO,OAAO;AAClB;AACA,SAAS,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE;AACrC,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACxD,QAAQ,CAAC,EAAE;AACX,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;AAC5B;AACA;AACA,SAAS,eAAe,CAAC,IAAI,EAAE;AAC/B,IAAI,IAAI,KAAK,GAAG,EAAE;AAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,IAAI;AACtC,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AAClC,QAAQ,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK;AACrC,YAAY,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AAC9B,KAAK,CAAC;AACN,IAAI,IAAI,IAAI,CAAC,aAAa;AAC1B,QAAQ,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;AACnF,IAAI,OAAO,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC;;AAEA,MAAM,cAAc,GAAG;AACvB,IAAI,SAAS,EAAE,IAAI;AACnB,IAAI,aAAa,EAAE,IAAI;AACvB,IAAI,qBAAqB,EAAE,IAAI;AAC/B,IAAI,UAAU,EAAE,IAAI;AACpB,IAAI,iBAAiB,EAAE,IAAI;AAC3B,IAAI,OAAO,EAAE;AACb,CAAC;AACD;AACA,MAAM,WAAW,GAAG9B,IAAE,IAAI,UAAU,IAAI,EAAE;AAC1C,MAAM,cAAc,CAAC;AACrB,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI;AAC9B,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI;AAC7B,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC;AAC5B;AACA,IAAI,GAAG,CAAC,GAAG,EAAE;AACb,QAAQ,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU;AACxC,QAAQ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY;AAC5C,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS;AACtC,QAAQ,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW;AAC1C;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI;AAC/C;AACA,IAAI,EAAE,CAAC,GAAG,EAAE;AACZ,QAAQ,OAAO,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY;AACzF,YAAY,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW;AAClF;AACA;AACA,MAAM,WAAW,CAAC;AAClB,IAAI,WAAW,CAAC,IAAI,EAAE,eAAe,EAAE;AACvC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI;AACxB,QAAQ,IAAI,CAAC,eAAe,GAAG,eAAe;AAC9C,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE;AACvB,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC9B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC5B,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,cAAc;AAClD,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI;AAC9B,QAAQ,IAAI,CAAC,2BAA2B,GAAG,KAAK;AAChD,QAAQ,IAAI,CAAC,mBAAmB,GAAG,IAAI;AACvC,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,gBAAgB;AAC/C,YAAY,IAAI,MAAM,CAAC,gBAAgB,CAAC,SAAS,IAAI;AACrD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;AACzD,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA,gBAAgB,IAAIA,IAAE,IAAI,UAAU,IAAI,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,IAAI,CAAC,CAAC,YAAY,CAAC,MAAM;AAChH,oBAAoB,CAAC,CAAC,IAAI,IAAI,eAAe,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;AAC/F,oBAAoB,IAAI,CAAC,SAAS,EAAE;AACpC;AACA,oBAAoB,IAAI,CAAC,KAAK,EAAE;AAChC,aAAa,CAAC;AACd,QAAQ,IAAI,WAAW,EAAE;AACzB,YAAY,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI;AACnC,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;AACnG,gBAAgB,IAAI,CAAC,SAAS,EAAE;AAChC,aAAa;AACb;AACA,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;AAClE;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC;AACjC,YAAY,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACtG;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE;AACpC,YAAY,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;AAClD,YAAY,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAClC,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;AACvC,YAAY,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC;AAChE;AACA,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC3B,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,0BAA0B,EAAE,IAAI,CAAC,UAAU,CAAC;AACvF,QAAQ,IAAI,CAAC,gBAAgB,EAAE;AAC/B;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;AAClD,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE;AAC7B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AACpD,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5C,gBAAgB,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC;AACzD;AACA,YAAY,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;AACtC;AACA,QAAQ,IAAI,IAAI,CAAC,UAAU;AAC3B,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,0BAA0B,EAAE,IAAI,CAAC,UAAU,CAAC;AAC1F,QAAQ,IAAI,CAAC,mBAAmB,EAAE;AAClC;AACA,IAAI,gBAAgB,GAAG;AACvB,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC;AAC/F;AACA,IAAI,mBAAmB,GAAG;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC;AAClG;AACA,IAAI,wBAAwB,GAAG;AAC/B,QAAQ,IAAI,CAAC,2BAA2B,GAAG,IAAI;AAC/C,QAAQ,UAAU,CAAC,MAAM,IAAI,CAAC,2BAA2B,GAAG,KAAK,EAAE,EAAE,CAAC;AACtE;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5C,YAAY;AACZ,QAAQ,IAAI,IAAI,CAAC,2BAA2B;AAC5C,YAAY,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5C;AACA;AACA;AACA,QAAQ,IAAIA,IAAE,IAAI,UAAU,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE;AACxE,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AACnD;AACA,YAAY,IAAI,GAAG,CAAC,SAAS,IAAI,oBAAoB,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC;AACvH,gBAAgB,OAAO,IAAI,CAAC,SAAS,EAAE;AACvC;AACA,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB;AACA,IAAI,eAAe,GAAG;AACtB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChE;AACA,IAAI,qBAAqB,CAAC,GAAG,EAAE;AAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,SAAS;AAC1B,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,SAAS,GAAG,IAAI,GAAG,EAAE,SAAS;AAC1C,QAAQ,KAAK,IAAI,IAAI,GAAG,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AACpE,YAAY,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;AAC/B,QAAQ,KAAK,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AACrE,YAAY,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACrC,gBAAgB,SAAS,GAAG,IAAI;AAChC,gBAAgB;AAChB;AACA,QAAQ,IAAI,IAAI,GAAG,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC;AACxE,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC;AACxC,YAAY,IAAI,EAAE,WAAW;AAC7B,YAAY,MAAM,EAAE,SAAS,CAAC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,UAAU,GAAG;AACrE,SAAS,CAAC,EAAE;AACZ,YAAY,IAAI,CAAC,eAAe,EAAE;AAClC,YAAY,OAAO,IAAI;AACvB;AACA;AACA,IAAI,cAAc,GAAG;AACrB,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzB,YAAY,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;AACvD,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AACpC,QAAQ,OAAO,IAAI,CAAC,KAAK;AACzB;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI;AAC3B,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACnD,YAAY;AACZ,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,EAAE;AAC7C,QAAQ,IAAI,SAAS,CAAC,MAAM;AAC5B,YAAY,IAAI,CAAC,KAAK,GAAG,EAAE;AAC3B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE;AAC1C,QAAQ,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,2BAA2B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC;AAC1J,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE;AAC5D,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvD,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACvE,gBAAgB,IAAI,MAAM,EAAE;AAC5B,oBAAoB,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;AAC/E,oBAAoB,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;AACrE,oBAAoB,IAAI,MAAM,CAAC,QAAQ;AACvC,wBAAwB,QAAQ,GAAG,IAAI;AACvC;AACA;AACA;AACA,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;AACnC,YAAY,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC;AAC3D,YAAY,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;AACjC,gBAAgB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;AAChC,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU;AAC3E,oBAAoB,CAAC,CAAC,MAAM,EAAE;AAC9B;AACA,oBAAoB,CAAC,CAAC,MAAM,EAAE;AAC9B;AACA,iBAAiB;AACjB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,gBAAgB;AACzD,gBAAgB,KAAK,IAAI,EAAE,IAAI,GAAG,EAAE;AACpC,oBAAoB,IAAI,MAAM,GAAG,EAAE,CAAC,UAAU;AAC9C,oBAAoB,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,KAAK,CAAC,SAAS,IAAI,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC;AACnH,wBAAwB,EAAE,CAAC,MAAM,EAAE;AACnC;AACA;AACA;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI;AAC1B;AACA;AACA;AACA,QAAQ,IAAI,IAAI,GAAG,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG;AACzE,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG;AACxF,YAAY,kBAAkB,CAAC,GAAG,CAAC,KAAK,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACzE,YAAY,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AACtE,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;AACpC,YAAY,cAAc,CAAC,IAAI,CAAC;AAChC,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC;AAC1C,YAAY,IAAI,CAAC,iBAAiB,EAAE;AACpC;AACA,aAAa,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,MAAM,EAAE;AACtC,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE;AAC3B,gBAAgB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC;AAChD,gBAAgB,QAAQ,CAAC,IAAI,CAAC;AAC9B;AACA,YAAY,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC;AAC3D,YAAY,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK;AAClD,gBAAgB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5C,iBAAiB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,CAAC;AACnD,gBAAgB,cAAc,CAAC,IAAI,CAAC;AACpC,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC;AAC1C;AACA;AACA,IAAI,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE;AACjC;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC1C,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;AAC5D,QAAQ,IAAI,GAAG,CAAC,IAAI,IAAI,YAAY;AACpC,aAAa,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,aAAa,IAAI,iBAAiB;AAChF;AACA,iBAAiB,GAAG,CAAC,aAAa,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;AACrG,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;AAC7C,YAAY,OAAO,IAAI;AACvB,QAAQ,IAAI,GAAG,CAAC,IAAI,IAAI,WAAW,EAAE;AACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5D,gBAAgB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAC5C,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAChC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC;AACtC,oBAAoB,IAAI,CAAC,mBAAmB,GAAG,IAAI;AACnD;AACA,YAAY,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC;AACvG,gBAAgB,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE;AAClE,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,eAAe,EAAE,IAAI,GAAG,GAAG,CAAC,WAAW;AAClE,YAAY,IAAIA,IAAE,IAAI,UAAU,IAAI,EAAE,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE;AACjE;AACA;AACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChE,oBAAoB,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAC5E,oBAAoB,IAAI,CAAC,eAAe,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,eAAe,CAAC,GAAG,CAAC;AAC7G,wBAAwB,IAAI,GAAG,eAAe;AAC9C,oBAAoB,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,CAAC;AACrG,wBAAwB,IAAI,GAAG,WAAW;AAC1C;AACA;AACA,YAAY,IAAI,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC;AAC5D,kBAAkB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACxC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;AACvE,YAAY,IAAI,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC;AAC1D,kBAAkB,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM;AAC/D,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;AAClE,YAAY,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE;AAC/B;AACA,aAAa,IAAI,GAAG,CAAC,IAAI,IAAI,YAAY,EAAE;AAC3C,YAAY,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE;AAC3F;AACA,aAAa;AACb,YAAY,IAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,MAAM;AACjD,YAAY,OAAO;AACnB,gBAAgB,IAAI,EAAE,IAAI,CAAC,UAAU;AACrC,gBAAgB,EAAE,EAAE,IAAI,CAAC,QAAQ;AACjC;AACA;AACA;AACA;AACA,gBAAgB,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,IAAI,GAAG,CAAC;AACtD,aAAa;AACb;AACA;AACA;AACA,IAAI,UAAU,GAAG,IAAI,OAAO,EAAE;AAC9B,IAAI,cAAc,GAAG,KAAK;AAC1B,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;AAC5B,QAAQ;AACR,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;AAChG,QAAQ,IAAI,CAAC,qBAAqB,GAAG,KAAK;AAC1C,QAAQ,IAAI,cAAc;AAC1B,YAAY;AACZ,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,0KAA0K,CAAC;AACnM,QAAQ,cAAc,GAAG,IAAI;AAC7B;AACA;AACA,SAAS,qBAAqB,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5C,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,cAAc,EAAE,YAAY,GAAG,KAAK,CAAC,WAAW;AAC3E,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,WAAW,GAAG,KAAK,CAAC,SAAS;AACrE,IAAI,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;AAClE;AACA;AACA;AACA,IAAI,IAAI,oBAAoB,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC;AAC9F,QAAQ,CAAC,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,CAAC;AAC/G,IAAI,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE;AAC/D;AACA;AACA;AACA,SAAS,0BAA0B,CAAC,IAAI,EAAE,SAAS,EAAE;AACrD,IAAI,IAAI,SAAS,CAAC,iBAAiB,EAAE;AACrC,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7D,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC;AACrD;AACA,IAAI,IAAI,KAAK;AACb,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;AACzB,QAAQ,KAAK,CAAC,cAAc,EAAE;AAC9B,QAAQ,KAAK,CAAC,wBAAwB,EAAE;AACxC,QAAQ,KAAK,GAAG,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC;AACxD,IAAI,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC;AAClC,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC;AAC3D,IAAI,OAAO,KAAK,GAAG,qBAAqB,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI;AAC5D;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE;AACjC,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE;AACxE,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC;AACpD,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO;AACrC,YAAY,OAAO,CAAC;AACpB;AACA,IAAI,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AACxC,IAAI,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC;AAC9F,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE;AACzC,IAAI,IAAI,IAAI;AACZ,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU;AAClC,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE;AACxF,QAAQ,IAAI,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC;AAC9D,QAAQ,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;AACvC,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC;AAC7E;AACA;AACA;AACA,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,CAAC,EAAE;AAChD,QAAQ,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,GAAG,UAAU,EAAE,GAAG,EAAE,EAAE;AAC1D,YAAY,IAAI,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,UAAU;AACzE,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AAChD,gBAAgB,QAAQ,GAAG,GAAG;AAC9B,gBAAgB;AAChB;AACA,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;AAClC,gBAAgB;AAChB;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG;AACjC,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACtF,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;AACtC,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;AAC/C,QAAQ,OAAO,EAAE,KAAK,CAAC,MAAM;AAC7B,QAAQ,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AAC5D,QAAQ,OAAO,EAAE,IAAI;AACrB,QAAQ,IAAI,EAAE,UAAU;AACxB,QAAQ,EAAE,EAAE,QAAQ;AACpB,QAAQ,kBAAkB,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI;AACjF,QAAQ,aAAa,EAAE,IAAI;AAC3B,QAAQ,YAAY;AACpB,QAAQ,OAAO,EAAE;AACjB,KAAK,CAAC;AACN,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE;AACrC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;AAC/D,QAAQ,IAAI,IAAI,IAAI,IAAI;AACxB,YAAY,IAAI,GAAG,MAAM;AACzB,QAAQ,GAAG,GAAG,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE;AAC1D;AACA,IAAI,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE;AACjC;AACA,SAAS,YAAY,CAAC,GAAG,EAAE;AAC3B,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU;AAC7B,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,OAAO,IAAI,CAAC,SAAS,EAAE;AAC/B;AACA,SAAS,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,IAAI,GAAG,CAAC,UAAU,EAAE;AACrD;AACA;AACA;AACA,QAAQ,IAAII,QAAM,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AAClE,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AACpD,YAAY,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC1D,YAAY,OAAO,EAAE,IAAI,EAAE;AAC3B;AACA,aAAa,IAAI,GAAG,CAAC,UAAU,CAAC,SAAS,IAAI,GAAG,IAAIA,QAAM,IAAI,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AAC7G,YAAY,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;AACnC;AACA;AACA,SAAS,IAAI,GAAG,CAAC,QAAQ,IAAI,KAAK,IAAI,GAAG,CAAC,YAAY,CAAC,kBAAkB,CAAC,EAAE;AAC5E,QAAQ,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;AAC/B;AACA,IAAI,OAAO,IAAI;AACf;AACA,MAAM,QAAQ,GAAG,wKAAwK;AACzL,SAAS,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;AAC7D,IAAI,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,yBAAyB,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;AAC/G,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,CAAC;AAC5C,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;AAClB,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,IAAI;AAC3G,QAAQ,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC;AACnD,QAAQ,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;AACxD,YAAY,IAAI,MAAM,IAAI,OAAO;AACjC,gBAAgB,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe;AAC9F,gBAAgB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;AACnF,gBAAgB;AAChB,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC;AACvD,YAAY,IAAI,MAAM,IAAI,SAAS;AACnC,gBAAgB,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;AAC3C,iBAAiB,IAAI,MAAM,IAAI,KAAK;AACpC,gBAAgB,EAAE,CAAC,cAAc,EAAE;AACnC,YAAY,IAAI,aAAa;AAC7B,gBAAgB,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC;AACxD,YAAY,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;AAC7B;AACA,QAAQ;AACR;AACA,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;AAC9C,IAAI,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;AACxC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACrD,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AAClC,IAAI,IAAI,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;AAC5C,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC;AACvE,IAAI,IAAI,YAAY,EAAE,aAAa;AACnC;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;AACvF,QAAQ,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAC9C,QAAQ,aAAa,GAAG,KAAK;AAC7B;AACA,SAAS;AACT,QAAQ,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI;AAChD,QAAQ,aAAa,GAAG,OAAO;AAC/B;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI;AACjC,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,aAAa,CAAC;AACtG,IAAI,IAAI,MAAM;AACd,QAAQ,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;AACnC,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,OAAO;AACrE,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC3E,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC;AAC/C,QAAQ,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;AAC7E,QAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC;AACnC,QAAQ;AACR;AACA,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,QAAQ,IAAI,QAAQ,IAAI,GAAG,YAAY,aAAa,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC;AACvG,YAAY,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACnF,YAAY,MAAM,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE;AACpE;AACA,aAAa;AACb,YAAY,IAAI,KAAK,CAAC,GAAG,EAAE;AAC3B,gBAAgB,IAAI,GAAG,GAAG,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC;AAC3E,gBAAgB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAC1D,oBAAoB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC;AAC5D,oBAAoB,IAAI,aAAa;AACrC,wBAAwB,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC;AAChE,oBAAoB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;AACrC;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAC3D,QAAQ,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI;AACnC,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,YAAY,aAAa,EAAE;AACvD,QAAQ,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC;AACrG,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE;AACrD,YAAY,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI;AACpD;AACA,aAAa,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC;AACpG,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE;AACjD,YAAY,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;AAClE,YAAY,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,IAAI,IAAIJ,IAAE,IAAI,UAAU,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC;AACjE,QAAQ,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;AAChE,QAAQ,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,SAAS,EAAE;AAC1G,QAAQ,MAAM,CAAC,KAAK,EAAE;AACtB,QAAQ,MAAM,CAAC,IAAI,EAAE;AACrB,QAAQ,MAAM,CAAC,IAAI,EAAE;AACrB;AACA,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;AACnE,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAChE,IAAI,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;AAC1C,IAAI,IAAI,YAAY,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,IAAI;AACzG,IAAI,IAAI,OAAO;AACf;AACA;AACA,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG;AAC3D,SAAS,CAAC,YAAY,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC;AACzF,SAAS,CAAC,YAAY,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;AACtF,aAAa,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACrF,YAAY,OAAO,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;AACpC,QAAQ,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;AAC7E,QAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC;AACnC,QAAQ;AACR;AACA;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK;AAClD,QAAQ,kBAAkB,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;AACtE,QAAQ,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE;AAChF,QAAQ,IAAI,OAAO,IAAI,MAAM;AAC7B,YAAY,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC;AACxD,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK;AACxD,QAAQ,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,YAAY,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK;AACrH,QAAQ,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AAC1F,QAAQ,MAAM,CAAC,IAAI,IAAI,CAAC;AACxB,QAAQ,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAChE,QAAQ,UAAU,CAAC,MAAM;AACzB,YAAY,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;AACnG,SAAS,EAAE,EAAE,CAAC;AACd;AACA,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI;AACjD,IAAI,IAAI,EAAE,EAAE,WAAW,EAAE,UAAU;AACnC,IAAI,IAAI,YAAY,EAAE;AACtB,QAAQ,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE;AAClC;AACA;AACA,YAAY,IAAIA,IAAE,IAAI,UAAU,IAAI,EAAE,IAAI,KAAK,CAAC,YAAY,IAAI,CAAC,EAAE;AACnE,gBAAgB,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE;AAC3D,gBAAgB,UAAU,CAAC,MAAM,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;AAC1D;AACA,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;AACnD,YAAY,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzF;AACA,aAAa;AACb,QAAQ,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI;AAClC,aAAa,UAAU,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;AACvL,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;AAC9B,YAAY,IAAI,UAAU,CAAC,IAAI,IAAI,KAAK;AACxC,gBAAgB,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC;AACzD;AACA,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC;AAC5D;AACA,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACtH;AACA,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC;AACrF,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClF,gBAAgB;AAChB,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;AAC7D;AACA;AACA,IAAI,IAAI,CAAC,EAAE;AACX,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACtH,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE;AACnB,QAAQ,IAAI,GAAG,GAAG,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,GAAG,IAAI,EAAE,MAAM,IAAI,OAAO,IAAI,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,KAAK;AACrE,aAAa,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;AAC5F,aAAa,GAAG,CAAC,IAAI,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxE,YAAYA,IAAE,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC;AAClD,YAAY,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC;AAChC;AACA,IAAI,IAAI,WAAW;AACnB,QAAQ,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC;AACnC,IAAI,IAAI,aAAa;AACrB,QAAQ,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC;AAChD,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC;AACtC;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE;AAChD,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI;AACrE,QAAQ,OAAO,IAAI;AACnB,IAAI,OAAO,gBAAgB,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7F;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE;AACjC,IAAI,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;AAC1E,IAAI,IAAI,KAAK,GAAG,QAAQ,EAAE,OAAO,GAAG,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM;AACjE,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,QAAQ,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;AACjD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE;AAC5C,QAAQ,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC;AACpD,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;AAClD,QAAQ,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AACvB,QAAQ,IAAI,GAAG,KAAK;AACpB,QAAQ,MAAM,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/D;AACA,SAAS,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;AACvD,QAAQ,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;AACzB,QAAQ,IAAI,GAAG,QAAQ;AACvB,QAAQ,MAAM,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpE;AACA,SAAS;AACT,QAAQ,OAAO,IAAI;AACnB;AACA,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;AAC5C,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACtC,QAAQ,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE;AAC7B;AACA,SAAS,kBAAkB,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;AACjE,IAAI;AACJ,IAAI,GAAG,GAAG,KAAK,IAAI,OAAO,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG;AAC9C;AACA,QAAQ,qBAAqB,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG;AACnE,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AACnC;AACA,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;AACvC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS;AACpC,QAAQ,OAAO,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ;AAC7D;AACA;AACA,IAAI,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW;AACtF,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtE;AACA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG;AACpD,QAAQ,qBAAqB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG;AACvD,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,OAAO,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;AACxF;AACA,SAAS,qBAAqB,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AACvD,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG;AACjE,IAAI,OAAO,KAAK,GAAG,CAAC,KAAK,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,EAAE;AAC5F,QAAQ,KAAK,EAAE;AACf,QAAQ,GAAG,EAAE;AACb,QAAQ,OAAO,GAAG,KAAK;AACvB;AACA,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACtE,QAAQ,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACrC,YAAY,IAAI,GAAG,IAAI,CAAC,UAAU;AAClC,YAAY,GAAG,EAAE;AACjB;AACA;AACA,IAAI,OAAO,GAAG;AACd;AACA,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,aAAa,EAAE;AAC1D,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,GAAG,CAAC;AACvC,IAAI,IAAI,KAAK,IAAI,IAAI;AACrB,QAAQ,OAAO,IAAI;AACnB,IAAI,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;AAC3E,IAAI,IAAI,aAAa,IAAI,KAAK,EAAE;AAChC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9D,QAAQ,YAAY,IAAI,IAAI,GAAG,MAAM,GAAG,KAAK;AAC7C;AACA,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;AACzC,QAAQ,IAAI,IAAI,GAAG,YAAY,IAAI,KAAK,IAAI,YAAY,IAAI,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,CAAC;AAC3F,QAAQ,KAAK,IAAI,IAAI;AACrB,QAAQ,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3F,YAAY,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC;AACpC,QAAQ,IAAI,GAAG,KAAK;AACpB;AACA,SAAS,IAAI,IAAI,GAAG,KAAK,EAAE;AAC3B,QAAQ,IAAI,IAAI,GAAG,YAAY,IAAI,KAAK,IAAI,YAAY,IAAI,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,CAAC;AAC3F,QAAQ,KAAK,IAAI,IAAI;AACrB,QAAQ,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3F,YAAY,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,QAAQ,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC;AACpC,QAAQ,IAAI,GAAG,KAAK;AACpB;AACA,IAAI,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;AAChC;AACA,SAAS,eAAe,CAAC,GAAG,EAAE;AAC9B,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC;AACvB,QAAQ,OAAO,KAAK;AACpB,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AACpD,IAAI,OAAO,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM;AACnE;AAcA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE;AAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI;AACzB;AACA;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK;AAC5B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK;AAC5B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI;AAC9B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI;AACjC;AACA;AACA;AACA,QAAQ,IAAI,CAAC,oBAAoB,GAAG,SAAS;AAC7C;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU;AACnC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,EAAE;AACnC,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,qBAAqB,GAAG,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI;AAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK;AAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;AAChC,QAAQ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE;AAChD,QAAQ,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,mBAAmB,CAAC;AACvD,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAC1E,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,KAAK,CAAC,WAAW;AACjC,gBAAgB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3C,iBAAiB,IAAI,OAAO,KAAK,IAAI,UAAU;AAC/C,gBAAgB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/B,iBAAiB,IAAI,KAAK,CAAC,KAAK;AAChC,gBAAgB,IAAI,CAAC,OAAO,GAAG,IAAI;AACnC;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;AACzC,QAAQ,mBAAmB,CAAC,IAAI,CAAC;AACjC,QAAQ,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC;AAC7C,QAAQ,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;AAC/G,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,KAAK,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC/H,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAChC,QAAQ,SAAS,CAAC,IAAI,CAAC;AACvB,QAAQ,IAAI,CAAC,iBAAiB,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AAClD;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AAC7C,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM;AAClC,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE;AAC5B,YAAY,KAAK,IAAI,IAAI,IAAI,IAAI;AACjC,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9C,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AAC1C;AACA,QAAQ,OAAO,IAAI,CAAC,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,KAAK,EAAE;AAClB,QAAQ,IAAI,KAAK,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe;AAChE,YAAY,eAAe,CAAC,IAAI,CAAC;AACjC,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM;AACnC,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK;AAC3B,QAAQ,IAAI,KAAK,CAAC,OAAO,EAAE;AAC3B,YAAY,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC;AACtD,YAAY,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO;AAC9C;AACA,QAAQ,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,OAAO,GAAG,EAAE;AACxB,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM;AACpC,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC7C,QAAQ,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AAClC,QAAQ,KAAK,IAAI,IAAI,IAAI,KAAK;AAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;AACvC,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE;AACvB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;AACjD;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE,SAAS,EAAE;AACvC,QAAQ,IAAI,EAAE;AACd,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK;AAChE;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,EAAE;AACjD,YAAY,gBAAgB,CAAC,IAAI,CAAC;AAClC,YAAY,SAAS,GAAG,IAAI;AAC5B;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK;AAC1B,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO;AACtG,QAAQ,IAAI,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,EAAE;AACxH,YAAY,IAAI,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC;AAChD,YAAY,IAAI,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;AAC7D,gBAAgB,IAAI,CAAC,SAAS,GAAG,SAAS;AAC1C,gBAAgB,MAAM,GAAG,IAAI;AAC7B;AACA;AACA,QAAQ,IAAI,cAAc,IAAI,SAAS,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;AACxF,YAAY,eAAe,CAAC,IAAI,CAAC;AACjC;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;AACzC,QAAQ,mBAAmB,CAAC,IAAI,CAAC;AACjC,QAAQ,IAAI,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC;AAC/E,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;AAChF,cAAc,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,cAAc,GAAG,UAAU;AAC5F,QAAQ,IAAI,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC;AAC5F,QAAQ,IAAI,SAAS,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC;AAC5D,YAAY,SAAS,GAAG,IAAI;AAC5B,QAAQ,IAAI,YAAY,GAAG,MAAM,IAAI,UAAU,IAAI,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC;AAC7H,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI,cAAc,GAAG,SAAS,KAAKA,IAAE,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;AAC/E,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,IAAI,uBAAuB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC;AAC3H,YAAY,IAAI,SAAS,EAAE;AAC3B;AACA;AACA;AACA;AACA,gBAAgB,IAAI,YAAY,GAAG,MAAM,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,IAAI,IAAI;AAC1G,gBAAgB,IAAI,IAAI,CAAC,SAAS;AAClC,oBAAoB,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,mBAAmB,CAAC,IAAI,CAAC;AAC1E,gBAAgB,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE;AAC3F,oBAAoB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC;AAC3D,oBAAoB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AAC1C,oBAAoB,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;AAC/F;AACA,gBAAgB,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW;AACrD,oBAAoB,cAAc,GAAG,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI,cAAc;AAC9B,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACxG,oBAAoB,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAE;AAC/C,gBAAgB,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC;AACpD;AACA,iBAAiB;AACjB,gBAAgB,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC;AACxD,gBAAgB,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;AAClD;AACA,YAAY,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AACpC;AACA,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;AACpC,QAAQ,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;AAC1G,YAAY,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;AACvD,QAAQ,IAAI,MAAM,IAAI,OAAO,EAAE;AAC/B,YAAY,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC;AAClC;AACA,aAAa,IAAI,MAAM,IAAI,cAAc,EAAE;AAC3C,YAAY,IAAI,CAAC,iBAAiB,EAAE;AACpC;AACA,aAAa,IAAI,YAAY,EAAE;AAC/B,YAAY,cAAc,CAAC,YAAY,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS;AACzD,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AACpE,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,YAAY,aAAa,EAAE;AAChE,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AAC5E,YAAY,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC;AACpC,gBAAgB,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,qBAAqB,EAAE,EAAE,QAAQ,CAAC;AAClF;AACA,aAAa;AACb,YAAY,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC;AAC9F;AACA;AACA,IAAI,kBAAkB,GAAG;AACzB,QAAQ,IAAI,IAAI;AAChB,QAAQ,OAAO,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;AAC5C,YAAY,IAAI,IAAI,CAAC,OAAO;AAC5B,gBAAgB,IAAI,CAAC,OAAO,EAAE;AAC9B;AACA,IAAI,iBAAiB,CAAC,SAAS,EAAE;AACjC,QAAQ,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,EAAE;AACnH,YAAY,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa;AACvD,YAAY,IAAI,CAAC,kBAAkB,EAAE;AACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChE,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI;AACpC,oBAAoB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjE;AACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChE,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI;AACpC,oBAAoB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjE;AACA;AACA,aAAa;AACb,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9D,gBAAgB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AACpD,gBAAgB,IAAI,UAAU,CAAC,MAAM;AACrC,oBAAoB,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC;AACtD;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,QAAQ,EAAE,IAAI,EAAE;AACtC,QAAQ,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC;AAC3C,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE;AACzD,YAAY,KAAK,GAAG,GAAG,CAAC,IAAI;AAC5B;AACA,aAAa;AACb,YAAY,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;AAC3F,YAAY,IAAI,KAAK,GAAG,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;AACvE,YAAY,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AACjC,gBAAgB,KAAK,GAAG,QAAQ;AAChC;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACxI;AACA,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE;AAC1B,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK;AAC9D,QAAQ,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACxD,YAAY,OAAO,KAAK;AACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5D,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC5D,YAAY,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC5D,gBAAgB,OAAO,KAAK;AAC5B;AACA,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO;AACxC,QAAQ,IAAI,OAAO;AACnB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,gBAAgB,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;AACrD,gBAAgB,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAChE,oBAAoB,OAAO,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf;AACA;AACA;AACA,QAAQ,IAAIA,IAAE,EAAE;AAChB;AACA;AACA,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa;AAC9C,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG;AAChC,gBAAgB,OAAO,IAAI;AAC3B,YAAY,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;AACjD,gBAAgB,OAAO,KAAK;AAC5B,YAAY,OAAO,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACxE,gBAAgB,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;AACnD,oBAAoB,OAAO,KAAK;AAChC,gBAAgB,IAAI,GAAG,IAAI,CAAC,aAAa;AACzC;AACA,YAAY,OAAO,IAAI;AACvB;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,GAAG;AAClD;AACA;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AAC/B,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzB,YAAY,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC;AACxC,QAAQ,cAAc,CAAC,IAAI,CAAC;AAC5B,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK;AAC/B,QAAQ,IAAI,MAAM,IAAI,IAAI;AAC1B,YAAY,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE;AACvF,gBAAgB,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,KAAK,MAAM,CAAC,QAAQ,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AACpF,oBAAoB,IAAI,CAAC,MAAM,CAAC,YAAY;AAC5C,wBAAwB,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,YAAY,EAAE;AAC9G,oBAAoB,OAAO,IAAI,CAAC,KAAK,GAAG,MAAM;AAC9C;AACA;AACA,QAAQ,OAAO,MAAM,IAAI,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,GAAG;AACjB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,OAAO,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,EAAE;AAC/B,QAAQ,OAAO,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;AAC3C,QAAQ,OAAO,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE;AACtC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;AAC7D,QAAQ,IAAI,GAAG,IAAI,IAAI;AACvB,YAAY,MAAM,IAAI,UAAU,CAAC,oCAAoC,CAAC;AACtE,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE;AAC/B,QAAQ,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;AAC3B,QAAQ,OAAO,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,IAAI,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;AACnF;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;AAC3B,QAAQ,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,IAAI,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;AACpF;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO;AACzB,YAAY;AACZ,QAAQ,YAAY,CAAC,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,kBAAkB,EAAE;AACjC,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;AAChF,YAAY,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE;AACrC;AACA,aAAa,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACtC,YAAY,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC;AACrD;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI;AAC3B,QAAQ,gBAAgB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI;AACnC;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,KAAK,EAAE;AACzB,QAAQ,OAAO4B,eAAa,CAAC,IAAI,EAAE,KAAK,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,EAAE,EAAE;AACjB,QAAQ,IAAI,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB;AACjE,QAAQ,IAAI,mBAAmB;AAC/B,YAAY,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;AAC9C;AACA,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAClD;AACA;AACA;AACA;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE;AACrC,QAAQ,IAAI,CAAC,GAAG;AAChB,YAAY,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,EAAE;AACzF,QAAQ,OAAOxB,QAAM,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE;AAClD,YAAY,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,0BAA0B,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG;AACjH;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACvC;AACA;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACnC,IAAI,KAAK,CAAC,KAAK,GAAG,aAAa;AAC/B,IAAI,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;AACjD,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,IAAI;AACzC,QAAQ,IAAI,OAAO,KAAK,IAAI,UAAU;AACtC,YAAY,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;AACrC,QAAQ,IAAI,KAAK;AACjB,YAAY,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AACpC,gBAAgB,IAAI,IAAI,IAAI,OAAO;AACnC,oBAAoB,KAAK,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;AACpD,qBAAqB,IAAI,IAAI,IAAI,OAAO;AACxC,oBAAoB,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC;AACtF,qBAAqB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,iBAAiB,IAAI,IAAI,IAAI,UAAU;AACxF,oBAAoB,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrD;AACA,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS;AACxB,QAAQ,KAAK,CAAC,SAAS,GAAG,IAAI;AAC9B,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACnE;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,QAAQ,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AAC/C,QAAQ,GAAG,CAAC,SAAS,GAAG,uBAAuB;AAC/C,QAAQ,GAAG,CAAC,YAAY,CAAC,kBAAkB,EAAE,MAAM,CAAC;AACpD,QAAQ,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC;AACnC,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;AACpI;AACA,SAAS;AACT,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI;AACjC;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3B,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AAC3E;AACA,SAAS,uBAAuB,CAAC,IAAI,EAAE,IAAI,EAAE;AAC7C,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClG,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;AACjE;AACA,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACpC,IAAI,SAAS,GAAG,CAAC,GAAG,EAAE;AACtB,QAAQ,KAAK,IAAI,IAAI,IAAI,GAAG;AAC5B,YAAY,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AACnE,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AACxC;AACA,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC;AACnC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC;AACnC,IAAI,OAAO,MAAM;AACjB;AACA,SAAS,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE;AAChC,IAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC;AACtB,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,EAAE;AACxB,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;AAC9B,YAAY,OAAO,IAAI;AACvB,QAAQ,EAAE,EAAE;AACZ;AACA,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;AACnB,QAAQ,EAAE,EAAE;AACZ,IAAI,OAAO,EAAE,IAAI,EAAE;AACnB;AACA,SAAS,mBAAmB,CAAC,MAAM,EAAE;AACrC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB;AAC3F,QAAQ,MAAM,IAAI,UAAU,CAAC,qEAAqE,CAAC;AACnG;;AC9nLa,MAAA,eAAA,GAAkB,YAAY,iBAAiB,CAAA;AAIrD,MAAM,kBAAqB,GAAA,WAAA;AAAA,EAChC,EAAC;AAAA,EACD;AACF,CAAA;AAGO,MAAM,oBAAuB,GAAA,WAAA;AAAA,EAClC,EAAC;AAAA,EACD;AACF,CAAA;AAKa,MAAA,OAAA,GAAU,WAAY,CAAA,IAAA,EAAkB,MAAM,CAAA;AAG9C,MAAA,UAAA,GAAa,WAAY,CAAA,IAAA,EAAgC,SAAS,CAAA;AAIxE,MAAM,YAAe,GAAA,WAAA;AAAA,EAC1B,EAAC;AAAA,EACD;AACF,CAAA;AAEA,SAAS,mBAAA,CAAoB,MAAY,GAAU,EAAA;AACjD,EAAM,MAAA,SAAA,GAAY,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA;AAC9C,EAAA,SAAA,CAAU,SAAY,GAAA,UAAA;AACtB,EAAA,IAAA,CAAK,YAAY,SAAS,CAAA;AAC1B,EAAI,GAAA,CAAA,GAAA,CAAI,YAAY,SAAS,CAAA;AAE7B,EAAM,MAAA,KAAA,GAAQ,GAAI,CAAA,GAAA,CAAI,YAAY,CAAA;AAClC,EAAO,MAAA,CAAA,OAAA,CAAQ,KAAK,CAAE,CAAA,OAAA;AAAA,IAAQ,CAAC,CAACgB,IAAK,EAAA,KAAK,MACxC,SAAU,CAAA,YAAA,CAAaA,MAAK,KAAK;AAAA,GACnC;AAEA,EAAO,OAAA,SAAA;AACT;AAEA,SAAS,eAAe,GAAc,EAAA;AACpC,EAAI,GAAA,CAAA,SAAA,CAAU,IAAI,QAAQ,CAAA;AAC1B,EAAI,GAAA,CAAA,YAAA,CAAa,QAAQ,SAAS,CAAA;AACpC;AAEA,MAAMA,KAAA,GAAM,IAAI,SAAA,CAAU,qBAAqB,CAAA;AAMlC,MAAA,UAAA,GAA6B,CAAC,GAAQ,KAAA;AACjD,EAAA,GAAA,CACG,MAAO,CAAA,OAAA,EAAS,QAAS,CAAA,IAAI,CAC7B,CAAA,MAAA,CAAO,aAAe,EAAA,EAAgB,CAAA,CACtC,MAAO,CAAA,oBAAA,EAAsB,EAAE,CAAA,CAC/B,MAAO,CAAA,UAAA,EAAY,IAA8B,CAAA,CACjD,MAAO,CAAA,YAAA,EAAc,EAAE,CAAA,CACvB,MAAO,CAAA,kBAAA,EAAoB,CAAC,gBAAgB,CAAC,CAAA,CAC7C,OAAO,eAAe,CAAA;AAEzB,EAAA,OAAO,YAAY;AACjB,IAAM,MAAA,GAAA,CAAI,KAAK,SAAS,CAAA;AAExB,IAAA,MAAM,IAAO,GAAA,GAAA,CAAI,GAAI,CAAA,OAAO,KAAK,QAAS,CAAA,IAAA;AAC1C,IAAA,MAAM,KAAK,OAAO,IAAA,KAAS,WAAW,QAAS,CAAA,aAAA,CAAc,IAAI,CAAI,GAAA,IAAA;AAErE,IAAI,GAAA,CAAA,MAAA,CAAO,eAAiB,EAAA,CAAC,EAAO,KAAA;AAAA,MAClC,IAAI,MAAO,CAAA;AAAA,aACTA,KAAA;AAAA,QACA,IAAA,EAAM,CAACW,WAAe,KAAA;AACpB,UAAA,MAAM,SAAY,GAAA,EAAA,GAAK,mBAAoB,CAAA,EAAA,EAAI,GAAG,CAAI,GAAA,KAAA,CAAA;AAEtD,UAAA,MAAM,YAAY,MAAM;AACtB,YAAA,IAAI,aAAa,EAAI,EAAA;AACnB,cAAA,MAAM,SAASA,WAAW,CAAA,GAAA;AAC1B,cAAG,EAAA,CAAA,YAAA,CAAa,WAAW,MAAM,CAAA;AACjC,cAAA,SAAA,CAAU,YAAY,MAAM,CAAA;AAAA;AAC9B,WACF;AACA,UAAU,SAAA,EAAA;AACV,UAAO,OAAA;AAAA,YACL,SAAS,MAAM;AACb,cAAA,IAAI,SAAW,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,SAAA,CAAA,UAAA;AACb,gBAAW,SAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,SAAA,CAAA,UAAA,CAAW,YAAaA,CAAAA,WAAAA,CAAW,GAAK,EAAA,SAAA,CAAA;AAErD,cAAW,SAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAA;AAAA;AACb,WACF;AAAA;AACF,OACD,CAAA;AAAA,MACD,GAAG;AAAA,KACJ,CAAA;AAED,IAAM,MAAA,GAAA,CAAI,WAAW,kBAAkB,CAAA;AAEvC,IAAM,MAAA,KAAA,GAAQ,GAAI,CAAA,GAAA,CAAI,cAAc,CAAA;AACpC,IAAM,MAAA,OAAA,GAAU,GAAI,CAAA,GAAA,CAAI,oBAAoB,CAAA;AAC5C,IAAA,MAAM,YAAY,MAAO,CAAA,WAAA,CAAY,GAAI,CAAA,GAAA,CAAI,WAAW,CAAC,CAAA;AACzD,IAAA,MAAM,YAAY,MAAO,CAAA,WAAA,CAAY,GAAI,CAAA,GAAA,CAAI,WAAW,CAAC,CAAA;AACzD,IAAM,MAAA,IAAA,GAAO,IAAI,UAAA,CAAW,EAAY,EAAA;AAAA,MACtC,KAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAA;AAAA,MACA,GAAG;AAAA,KACJ,CAAA;AACD,IAAA,cAAA,CAAe,KAAK,GAAG,CAAA;AACvB,IAAI,GAAA,CAAA,GAAA,CAAI,eAAe,IAAI,CAAA;AAC3B,IAAA,GAAA,CAAI,KAAK,eAAe,CAAA;AAExB,IAAA,OAAO,MAAM;AACX,MAAM,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAA,OAAA,EAAA;AACN,MAAA,GAAA,CACG,OAAO,OAAO,CAAA,CACd,OAAO,aAAa,CAAA,CACpB,OAAO,oBAAoB,CAAA,CAC3B,OAAO,UAAU,CAAA,CACjB,OAAO,YAAY,CAAA,CACnB,OAAO,kBAAkB,CAAA,CACzB,WAAW,eAAe,CAAA;AAAA,KAC/B;AAAA,GACF;AACF,CAAA;AAEA7C,UAAA,CAAS,UAAY,EAAA;AAAA,EACnB,WAAa,EAAA;AACf,CAAC,CAAA;;;;;;;;;ACxJD,IAAA,gBAAA,EAAA,OAAA,EAAA,cAAA,EAAA,eAAA,EAAA,UAAA,EAAA,MAAA,EAAA,eAAA,EAAA,eAAA,EAAAO,MAAA,EAAA,aAAA,EAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,kBAAA;AA0CO,MAAM,OAAA,GAAN,MAAM,OAAO,CAAA;AAAA,EAAb,WAAA,GAAA;AAOL;AAAA,IAAmB3C,cAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA;AAEnB;AAAA,IAAUA,cAAA,CAAA,IAAA,EAAA,OAAA,EAAA,MAAA,YAAA;AAEV;AAAA,IAAAA,cAAA,CAAA,IAAA,EAAA,cAAA,EAA2B,EAAC,CAAA;AAE5B;AAAA,IAAAA,cAAA,CAAA,IAAA,EAAA,eAAA,EAAkC,MAAM,KAAA,CAAA,CAAA;AAGxC;AAAA,IAASA,cAAA,CAAA,IAAA,EAAA,UAAA,EAAa,IAAI,SAAU,EAAA,CAAA;AAEpC;AAAA,IAASA,cAAA,CAAA,IAAA,EAAA,MAAA,EAAS,IAAI,KAAM,EAAA,CAAA;AAG5B;AAAA,IAASA,cAAA,CAAA,IAAA,EAAA,eAAA,sBAAyC,GAAI,EAAA,CAAA;AAGtD;AAAA,IAASA,cAAA,CAAA,IAAA,EAAA,eAAA,sBAAyC,GAAI,EAAA,CAAA;AAGtD;AAAA,IAAAA,cAAA,CAAA,IAAA,EAAS2C,QAAO,IAAI,GAAA,CAAI1C,cAAK,CAAA,IAAA,EAAA,UAAA,CAAA,EAAYA,qBAAK,MAAM,CAAA,CAAA,CAAA;AAGpD;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAS,eAAgB,MAAM;AAC7B,MAAM,MAAA,YAAA,GAAe,MAAO,CAAA,OAAO,GAAQ,KAAA;AACzC,QAAM,MAAA,OAAA,CAAQ,GAAI,CAAAC,cAAA,CAAA,IAAA,EAAK,cAAe,CAAA,CAAA,GAAA,CAAI,CAAC,EAAO,KAAA,EAAA,CAAG,GAAG,CAAC,CAAC,CAAA;AAAA,OAC3D,CAAA;AACD,MAAA,MAAM,eAAkB,GAAA;AAAA,QACtByC,QAAA;AAAA,QACA,MAAA;AAAA,QACA,UAAA;AAAA,QACAE,UAAA;AAAA,QACA,WAAA;AAAA,QACA,UAAA;AAAA,QACA,KAAK,IAAI,CAAA;AAAA,QACT;AAAA,OACF;AACA,MAAK3C,cAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAL,IAAc,CAAA,IAAA,EAAA,eAAA,EAAiBA,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AAAA,KACtC,CAAA;AAGA;AAAA,IAASD,cAAA,CAAA,IAAA,EAAA,QAAA,EAAW,CAAC,OAAA,EAA2B,KAA6B,KAAA;AAC3E,MAAQ,OAAA,CAAA,OAAA,CAAQ,CAAC,MAAW,KAAA;AAC1B,QAAM,MAAA,GAAA,GAAMC,qBAAK0C,MAAK,CAAA,CAAA,OAAA;AAAA,UACpB1C,cAAA,CAAA,IAAA,EAAK,gBAAmB,CAAA,GAAA,MAAA,CAAO,IAAO,GAAA,KAAA;AAAA,SACxC;AACA,QAAM,MAAA,OAAA,GAAU,OAAO,GAAG,CAAA;AAC1B,QAAA,KAAA,CAAM,IAAI,MAAQ,EAAA,EAAE,KAAK,OAAS,EAAA,OAAA,EAAS,QAAW,CAAA;AAAA,OACvD,CAAA;AAAA,KACH,CAAA;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAS,QAAW,EAAA,CAAC,OAA2B,EAAA,MAAA,GAAS,KAAU,KAAA;AACjE,MAAA,OAAO,OAAQ,CAAA,GAAA;AAAA,QACb,CAAC,OAAO,CAAA,CAAE,MAAO,CAAA,GAAA,CAAI,CAAC,MAAW,KAAA;AAC/B,UAAA,MAAM,MAAS,GAAAC,cAAA,CAAA,IAAA,EAAK,eAAgB,CAAA,CAAA,GAAA,CAAI,MAAM,CAAA;AAC9C,UAAA,MAAM,UAAU,MAAQ,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAA,OAAA;AACxB,UAAA,IAAI,MAAQ,EAAAA,cAAA,CAAA,IAAA,EAAK,eAAgB,CAAA,CAAA,MAAA,CAAO,MAAM,CAAA;AAAA;AAE5C,YAAKA,cAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAgB,IAAI,MAAQ,EAAA;AAAA,cAC/B,GAAK,EAAA,KAAA,CAAA;AAAA,cACL,OAAS,EAAA,KAAA,CAAA;AAAA,cACT,OAAS,EAAA,KAAA;AAAA,aACV,CAAA;AAEH,UAAA,IAAI,OAAO,OAAA,KAAY,UAAY,EAAA,OAAO,OAAQ,EAAA;AAElD,UAAO,OAAA,OAAA;AAAA,SACR;AAAA,OACH;AAAA,KACF,CAAA;AAGA;AAAA,IAAAD,cAAA,CAAA,IAAA,EAAS,kBAAmB,YAAY;AACtC,MAAA,MAAM,OAAQ,CAAA,GAAA;AAAA,QACZ,CAAC,GAAGC,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA,CAAgB,SAAS,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC,CAAA,EAAG,EAAE,OAAA,EAAS,CAAM,KAAA;AAC5D,UAAA,IAAI,OAAO,OAAA,KAAY,UAAY,EAAA,OAAO,OAAQ,EAAA;AAElD,UAAO,OAAA,OAAA;AAAA,SACR;AAAA,OACH;AACA,MAAAA,cAAA,CAAA,IAAA,EAAK,iBAAgB,KAAM,EAAA;AAAA,KAC7B,CAAA;AAGA;AAAA,IAASD,cAAA,CAAA,IAAA,EAAA,UAAA,EAAa,CAAC,MAAyB,KAAA;AAC9C,MAAAE,cAAA,CAAA,IAAA,EAAK,OAAU,EAAA,MAAA,CAAA;AACf,MAAAD,cAAA,CAAA,IAAA,EAAK,iBAAL,IAAqB,CAAA,IAAA,EAAA,MAAA,CAAA;AAAA,KACvB,CAAA;AAGA;AAAA,IAASD,cAAA,CAAA,IAAA,EAAA,kBAAA,EAAqB,CAAC,KAA6B,KAAA;AAC1D,MAAO,OAAA,CAAC,GAAG,KAAA,CAAM,OAAQ,EAAC,CAAE,CAAA,GAAA,CAAI,OAAO,CAAC,GAAK,EAAA,MAAM,CAAM,KAAA;AACvD,QAAM,MAAA,EAAE,GAAK,EAAA,OAAA,EAAY,GAAA,MAAA;AACzB,QAAA,IAAI,CAAC,OAAS,EAAA;AAEd,QAAM,MAAA,OAAA,GAAU,MAAM,OAAQ,EAAA;AAE9B,QAAA,KAAA,CAAM,IAAI,GAAK,EAAA,EAAE,GAAK,EAAA,OAAA,EAAS,SAAS,CAAA;AAAA,OACzC,CAAA;AAAA,KACH,CAAA;AAcA;AAAA;AAAA,IAAS,IAAA,CAAA,eAAA,GAAkB,CAAC,MAAA,GAAS,IAAS,KAAA;AAC5C,MAAAE,cAAA,CAAA,IAAA,EAAK,gBAAmB,EAAA,MAAA,CAAA;AAExB,MAAO,OAAA,IAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAS,IAAA,CAAA,cAAA,GAAiB,CAAC,QAA6B,KAAA;AACtD,MAAAA,cAAA,CAAA,IAAA,EAAK,eAAkB,EAAA,QAAA,CAAA;AACvB,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAS,IAAA,CAAA,MAAA,GAAS,CAAC,SAAsB,KAAA;AACvC,MAAKD,cAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAe,KAAK,SAAS,CAAA;AAClC,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAS,IAAA,CAAA,YAAA,GAAe,CAAC,SAAsB,KAAA;AAC7C,MAAAC,cAAA,CAAA,IAAA,EAAK,gBAAiBD,cAAK,CAAA,IAAA,EAAA,cAAA,CAAA,CAAe,OAAO,CAAC,CAAA,KAAM,MAAM,SAAS,CAAA,CAAA;AACvE,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAS,IAAA,CAAA,GAAA,GAAM,CAAC,OAA+C,KAAA;AAC7D,MAAA,MAAM,QAAW,GAAA,CAAC,OAAO,CAAA,CAAE,IAAK,EAAA;AAChC,MAAA,QAAA,CAAS,IAAK,EAAA,CAAE,OAAQ,CAAA,CAAC,MAAW,KAAA;AAClC,QAAKA,cAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAgB,IAAI,MAAQ,EAAA;AAAA,UAC/B,GAAK,EAAA,KAAA,CAAA;AAAA,UACL,OAAS,EAAA,KAAA,CAAA;AAAA,UACT,OAAS,EAAA,KAAA;AAAA,SACV,CAAA;AAAA,OACF,CAAA;AAED,MAAA,IAAIA,qBAAK,OAAY,CAAA,KAAA,SAAA;AACnB,QAAKA,cAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAL,IAAc,CAAA,IAAA,EAAA,QAAA,EAAUA,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AAE/B,MAAO,OAAA,IAAA;AAAA,KACT;AAGA;AAAA,IAAS,IAAA,CAAA,MAAA,GAAS,OAChB,OACoB,KAAA;AACpB,MAAI,IAAAA,cAAA,CAAA,IAAA,EAAK,aAAY,UAAuB,iBAAA;AAE1C,QAAQ,OAAA,CAAA,IAAA;AAAA,UACN;AAAA,SACF;AACA,QAAO,OAAA,IAAI,OAAQ,CAAA,CAAC,OAAY,KAAA;AAC9B,UAAA,UAAA,CAAW,MAAM;AACf,YAAQ,OAAA,CAAA,IAAA,CAAK,MAAO,CAAA,OAAO,CAAC,CAAA;AAAA,aAC3B,EAAE,CAAA;AAAA,SACN,CAAA;AAAA;AAGH,MAAA,MAAMA,qBAAK,QAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAc,CAAC,OAAO,CAAA,CAAE,MAAQ,EAAA,IAAA,CAAA;AACtC,MAAO,OAAA,IAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAA,IAAA,CAAS,SAAS,YAA6B;AAC7C,MAAI,IAAAA,cAAA,CAAA,IAAA,EAAK,OAAY,CAAA,KAAA,UAAA,iBAA8B,OAAA,IAAA;AAEnD,MAAA,IAAIA,cAAK,CAAA,IAAA,EAAA,OAAA,CAAA,KAAY,SAAsB,gBAAA,MAAM,KAAK,OAAQ,EAAA;AAE9D,MAAAA,cAAA,CAAA,IAAA,EAAK,YAAL,IAAgB,CAAA,IAAA,EAAA,UAAA,gBAAA;AAEhB,MAAAA,cAAA,CAAA,IAAA,EAAK,aAAL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,MAAKA,cAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAL,WAAc,CAAC,GAAGA,qBAAK,eAAgB,CAAA,CAAA,IAAA,EAAM,CAAA,EAAGA,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AAErD,MAAA,MAAM,OAAQ,CAAA,GAAA;AAAA,QACZ;AAAA,UACEA,cAAA,CAAA,IAAA,EAAK,kBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAwBA,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AAAA,UAC7BA,cAAA,CAAA,IAAA,EAAK,kBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,EAAwBA,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA;AAAA,UAC7B,IAAK;AAAA,OACT;AAEA,MAAAA,cAAA,CAAA,IAAA,EAAK,YAAL,IAAgB,CAAA,IAAA,EAAA,SAAA,eAAA;AAChB,MAAO,OAAA,IAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAS,IAAA,CAAA,OAAA,GAAU,OAAO,YAAA,GAAe,KAA2B,KAAA;AAClE,MAAA,IACEA,cAAK,CAAA,IAAA,EAAA,OAAA,CAAA,KAAY,WACjB,oBAAAA,cAAA,CAAA,IAAA,EAAK,OAAY,CAAA,KAAA,WAAA;AAEjB,QAAO,OAAA,IAAA;AAET,MAAI,IAAAA,cAAA,CAAA,IAAA,EAAK,aAAY,UAAuB,iBAAA;AAC1C,QAAO,OAAA,IAAI,OAAQ,CAAA,CAAC,OAAY,KAAA;AAC9B,UAAA,UAAA,CAAW,MAAM;AACf,YAAQ,OAAA,CAAA,IAAA,CAAK,OAAQ,CAAA,YAAY,CAAC,CAAA;AAAA,aACjC,EAAE,CAAA;AAAA,SACN,CAAA;AAAA;AAGH,MAAI,IAAA,YAAA,EAAmBC,cAAA,CAAA,IAAA,EAAA,cAAA,EAAiB,EAAC,CAAA;AAEzC,MAAAD,cAAA,CAAA,IAAA,EAAK,YAAL,IAAgB,CAAA,IAAA,EAAA,WAAA,iBAAA;AAChB,MAAM,MAAAA,cAAA,CAAA,IAAA,EAAK,UAAL,IAAc,CAAA,IAAA,EAAA,CAAC,GAAGA,cAAK,CAAA,IAAA,EAAA,eAAA,CAAA,CAAgB,IAAK,EAAC,CAAG,EAAA,YAAA,CAAA;AACtD,MAAA,MAAMA,qBAAK,gBAAL,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AAEN,MAAAA,cAAA,CAAA,IAAA,EAAK,YAAL,IAAgB,CAAA,IAAA,EAAA,WAAA,iBAAA;AAChB,MAAO,OAAA,IAAA;AAAA,KACT;AAIA;AAAA;AAAA,IAAA,IAAA,CAAS,MAAS,GAAA,CAAI,MAA4B,KAAA,MAAA,CAAOA,qBAAK0C,MAAI,CAAA,CAAA;AAIlE;AAAA;AAAA,IAAA,IAAA,CAAS,UAAU,MAAmB;AACpC,MAAI,IAAA,CAAC1C,qBAAK,gBAAkB,CAAA,EAAA;AAE1B,QAAQ,OAAA,CAAA,IAAA;AAAA,UACN;AAAA,SACF;AACA,QAAA,OAAO,EAAC;AAAA;AAEV,MAAA,OAAO,CAAC,GAAGA,cAAA,CAAA,IAAA,EAAK,eAAgB,CAAA,CAAA,MAAA,IAAU,GAAGA,cAAA,CAAA,IAAA,EAAK,eAAgB,CAAA,CAAA,MAAA,EAAQ,CACvE,CAAA,GAAA,CAAI,CAAC,EAAE,KAAO,KAAA;AAlSrB,QAAA,IAAA,EAAA;AAkSwB,QAAA,OAAA,CAAA,EAAA,GAAA,GAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAK,cAAL,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,EAAA;AAAA,OAAM,EACvC,MAAO,CAAA,CAAC,CAAsB,KAAA,OAAA,CAAQ,CAAC,CAAC,CAAA;AAAA,KAC7C;AAAA;AAAA;AAAA,EAxPA,OAAO,IAAO,GAAA;AACZ,IAAA,OAAO,IAAI,OAAO,EAAA;AAAA;AACpB;AAAA,EA0GA,IAAI,GAAM,GAAA;AACR,IAAA,OAAOA,cAAK,CAAA,IAAA,EAAA0C,MAAA,CAAA;AAAA;AACd;AAAA,EAGA,IAAI,MAAS,GAAA;AACX,IAAA,OAAO1C,cAAK,CAAA,IAAA,EAAA,OAAA,CAAA;AAAA;AAuIhB,CAAA;AApPE,gBAAA,GAAA,IAAA,OAAA,EAAA;AAEA,OAAA,GAAA,IAAA,OAAA,EAAA;AAEA,cAAA,GAAA,IAAA,OAAA,EAAA;AAEA,eAAA,GAAA,IAAA,OAAA,EAAA;AAGS,UAAA,GAAA,IAAA,OAAA,EAAA;AAEA,MAAA,GAAA,IAAA,OAAA,EAAA;AAGA,eAAA,GAAA,IAAA,OAAA,EAAA;AAGA,eAAA,GAAA,IAAA,OAAA,EAAA;AAGA0C,MAAA,GAAA,IAAA,OAAA,EAAA;AAGA,aAAA,GAAA,IAAA,OAAA,EAAA;AAkBA,QAAA,GAAA,IAAA,OAAA,EAAA;AAWA,QAAA,GAAA,IAAA,OAAA,EAAA;AAqBA,gBAAA,GAAA,IAAA,OAAA,EAAA;AAYA,UAAA,GAAA,IAAA,OAAA,EAAA;AAMA,kBAAA,GAAA,IAAA,OAAA,EAAA;AAlGJ,IAAM,MAAN,GAAA,OAAA;;AC/BeuC,qBAAe,CAAA,gBAAA,EAAkB,EAAE;;ACgCzC,SAAA,QAAA,CACd,KACA,GACa,EAAA;AACb,EAAM,MAAA,MAAA,GAAS,aAAgB,GAAG,CAAA;AAElC,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AACjD,IAAc,OAAQ,GAAM,GAAA,MAAA;AAC7B,IAAM,MAAA,GAAA,CAAI,KAAK,aAAa,CAAA;AAC5B,IAAM,MAAA,OAAA,GAAU,IAAI,GAAG,CAAA;AACvB,IAAA,GAAA,CAAI,GAAI,CAAA,WAAW,CAAE,CAAA,MAAA,CAAO,QAAQ,OAAO,CAAA;AAC1C,IAAc,MAAA,CAAQ,GAAM,GAAA,CAAC,OAC5B,KAAA,GAAA,CAAI,IAAI,WAAW,CAAA,CAAE,IAAK,CAAA,GAAA,EAAK,OAAO,CAAA;AAExC,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CAAI,GAAI,CAAA,WAAW,CAAE,CAAA,MAAA,CAAO,MAAM,CAAA;AAAA,KACpC;AAAA,GACF;AAEA,EAAoB,OAAA,MAAA;AACtB;;AC/CO,SAAS,WAAW,SAAgD,EAAA;AACzE,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AAC1B,IAAM,MAAA,EAAA,GAAK,UAAU,GAAG,CAAA;AACxB,IAAI,GAAA,CAAA,MAAA,CAAO,eAAe,CAAC,GAAA,KAAQ,CAAC,GAAG,GAAA,EAAK,EAAE,CAAC,CAAA;AAC9C,IAAa,OAAQ,SAAY,GAAA,EAAA;AAElC,IAAA,OAAO,MAAM;AACX,MAAI,GAAA,CAAA,MAAA,CAAO,aAAe,EAAA,CAAC,GAAQ,KAAA,GAAA,CAAI,OAAO,CAAC,CAAA,KAAM,CAAM,KAAA,EAAE,CAAC,CAAA;AAAA,KAChE;AAAA,GACF;AAEA,EAAmB,OAAA,MAAA;AACrB;;ACNgB,SAAA,KAAA,CAAM,IAAY,MAAyC,EAAA;AACzE,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,UAAA,GAAa,OAAO,GAAG,CAAA;AAC7B,IAAI,GAAA,CAAA,MAAA,CAAO,QAAU,EAAA,CAAC,EAAO,KAAA;AAAA,MAC3B,GAAG,GAAG,MAAO,CAAA,CAAC,MAAM,CAAE,CAAA,CAAC,MAAM,EAAE,CAAA;AAAA,MAC/B,CAAC,IAAI,UAAU;AAAA,KAChB,CAAA;AACA,IAAQ,OAAQ,EAAK,GAAA,EAAA;AACrB,IAAQ,OAAQ,MAAS,GAAA,UAAA;AAE1B,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CAAI,MAAO,CAAA,QAAA,EAAU,CAAC,EAAA,KAAO,EAAG,CAAA,MAAA,CAAO,CAAC,CAAC,CAAC,CAAA,KAAM,CAAM,KAAA,EAAE,CAAC,CAAA;AAAA,KAC3D;AAAA,GACF;AACC,EAAQ,MAAA,CAAQ,IAAO,GAAA,CAAC,GAAQ,KAAA;AAC/B,IAAA,MAAM,WAAW,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA,CAAE,MAAM,EAAE,CAAA;AAC5C,IAAA,IAAI,CAAC,QAAA,EAAgB,MAAA,mBAAA,CAAoB,EAAE,CAAA;AAC3C,IAAO,OAAA,QAAA;AAAA,GACT;AAEA,EAAc,OAAA,MAAA;AAChB;;ACrBgB,SAAA,KAAA,CAAM,IAAY,MAAyC,EAAA;AACzE,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,UAAA,GAAa,OAAO,GAAG,CAAA;AAC7B,IAAI,GAAA,CAAA,MAAA,CAAO,QAAU,EAAA,CAAC,EAAO,KAAA;AAAA,MAC3B,GAAG,GAAG,MAAO,CAAA,CAAC,MAAM,CAAE,CAAA,CAAC,MAAM,EAAE,CAAA;AAAA,MAC/B,CAAC,IAAI,UAAU;AAAA,KAChB,CAAA;AACA,IAAQ,OAAQ,EAAK,GAAA,EAAA;AACrB,IAAQ,OAAQ,MAAS,GAAA,UAAA;AAE1B,IAAA,OAAO,MAAM;AACX,MAAA,GAAA,CAAI,MAAO,CAAA,QAAA,EAAU,CAAC,EAAA,KAAO,EAAG,CAAA,MAAA,CAAO,CAAC,CAAC,CAAC,CAAA,KAAM,CAAM,KAAA,EAAE,CAAC,CAAA;AAAA,KAC3D;AAAA,GACF;AAEC,EAAQ,MAAA,CAAQ,IAAO,GAAA,CAAC,GAAQ,KAAA;AAC/B,IAAA,MAAM,WAAW,GAAI,CAAA,GAAA,CAAI,SAAS,CAAA,CAAE,MAAM,EAAE,CAAA;AAC5C,IAAA,IAAI,CAAC,QAAA,EAAgB,MAAA,mBAAA,CAAoB,EAAE,CAAA;AAE3C,IAAO,OAAA,QAAA;AAAA,GACT;AAEA,EAAc,OAAA,MAAA;AAChB;;ACxBO,SAAS,OAAO,KAAqC,EAAA;AAC1D,EAAI,IAAA,WAAA;AACJ,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AAC1B,IAAA,WAAA,GAAc,MAAM,GAAG,CAAA;AACvB,IAAI,GAAA,CAAA,MAAA,CAAO,iBAAiB,CAAC,EAAA,KAAO,CAAC,GAAG,EAAA,EAAI,WAAY,CAAC,CAAA;AAEzD,IAAA,OAAO,MAAM;AACX,MAAI,GAAA,CAAA,MAAA,CAAO,eAAiB,EAAA,CAAC,EAAO,KAAA,EAAA,CAAG,OAAO,CAAC,CAAA,KAAM,CAAM,KAAA,WAAW,CAAC,CAAA;AAAA,KACzE;AAAA,GACF;AACC,EAAS,MAAA,CAAQ,SAAS,MAAM,WAAA;AAChC,EAAS,MAAQ,CAAA,GAAA,GAAM,MAAM,WAAA,CAAa,IAAK,CAAA,GAAA;AAEhD,EAAe,OAAA,MAAA;AACjB;;ACbO,SAAS,UAAU,QAA2C,EAAA;AACnE,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AAC1B,IAAM,MAAA,CAAA,GAAI,SAAS,GAAG,CAAA;AACtB,IAAM,MAAA,YAAA,GAAerB,SAAO,CAAC,CAAA;AAC7B,IAAI,GAAA,CAAA,MAAA,CAAO,iBAAiB,CAAC,EAAA,KAAO,CAAC,GAAG,EAAA,EAAI,YAAY,CAAC,CAAA;AACxD,IAAY,OAAQ,MAAS,GAAA,CAAA;AAE9B,IAAA,OAAO,MAAM;AACX,MAAI,GAAA,CAAA,MAAA,CAAO,eAAiB,EAAA,CAAC,EAAO,KAAA,EAAA,CAAG,OAAO,CAAC,CAAA,KAAM,CAAM,KAAA,YAAY,CAAC,CAAA;AAAA,KAC1E;AAAA,GACF;AAEA,EAAkB,OAAA,MAAA;AACpB;;ACEgB,SAAA,KAAA,CAGd,MAAS,IAAoC,EAAA;AAC7C,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,GAAA,CAAI,KAAK,WAAW,CAAA;AAC1B,IAAM,MAAA,CAAA,GAAI,KAAK,GAAG,CAAA;AAClB,IAAI,IAAA,IAAA,CAAK,IAAK,CAAA,GAAG,CAAa,YAAArB,UAAA;AAC5B,MAAI,GAAA,CAAA,MAAA,CAAO,WAAa,EAAA,CAAC,EAAO,KAAA;AAAA,QAC9B,GAAG,EAAA;AAAA,QACH,CAAC,IAAK,CAAA,EAAA,EAAI,CAAC;AAAA,OACZ,CAAA;AAAA;AAED,MAAI,GAAA,CAAA,MAAA,CAAO,WAAa,EAAA,CAAC,EAAO,KAAA;AAAA,QAC9B,GAAG,EAAA;AAAA,QACH,CAAC,IAAK,CAAA,EAAA,EAAI,CAAC;AAAA,OACZ,CAAA;AACF,IAAc,OAAQ,IAAO,GAAA,CAAA;AAC7B,IAAc,OAAQ,IAAO,GAAA,IAAA;AAE9B,IAAA,OAAO,MAAM;AACX,MAAI,IAAA,IAAA,CAAK,IAAK,CAAA,GAAG,CAAa,YAAAA,UAAA;AAC5B,QAAA,GAAA,CAAI,MAAO,CAAA,WAAA,EAAa,CAAC,EAAA,KAAO,EAAG,CAAA,MAAA,CAAO,CAAC,CAAA,KAAM,CAAE,CAAA,CAAC,CAAM,KAAA,IAAA,CAAK,EAAE,CAAC,CAAA;AAAA,WAC3D,GAAA,CAAA,MAAA,CAAO,WAAa,EAAA,CAAC,OAAO,EAAG,CAAA,MAAA,CAAO,CAAC,CAAA,KAAM,CAAE,CAAA,CAAC,CAAM,KAAA,IAAA,CAAK,EAAE,CAAC,CAAA;AAAA,KACzE;AAAA,GACF;AAEA,EAAoB,OAAA,MAAA;AACtB;;ACrDgB,SAAA,IAAA,CAA0B,OAAU,IAAqB,EAAA;AACvE,EAAM,MAAA,KAAA,GAAQ,WAAY,CAAA,KAAA,EAAO,IAAI,CAAA;AACrC,EAAM,MAAA,MAAA,GAAqB,CAAC,GAAQ,KAAA;AAClC,IAAA,GAAA,CAAI,OAAO,KAAK,CAAA;AAChB,IAAA,OAAO,MAAM;AACX,MAAA,OAAO,MAAM;AACX,QAAA,GAAA,CAAI,OAAO,KAAK,CAAA;AAAA,OAClB;AAAA,KACF;AAAA,GACF;AAEA,EAAA,MAAA,CAAO,GAAM,GAAA,KAAA;AAEb,EAAO,OAAA,MAAA;AACT;;ACUgB,SAAA,WAAA,CACd,IACA,MACgB,EAAA;AAChB,EAAM,MAAA,SAAA,GAAY,IAAK,CAAA,MAAA,EAAQ,EAAE,CAAA;AAEjC,EAAA,MAAM,UAAa,GAAA,KAAA,CAAM,EAAI,EAAA,CAAC,GAAQ,KAAA;AACpC,IAAA,MAAM,UAAa,GAAA,GAAA,CAAI,GAAI,CAAA,SAAA,CAAU,GAAG,CAAA;AACxC,IAAA,OAAO,WAAW,GAAG,CAAA;AAAA,GACtB,CAAA;AAED,EAAM,MAAA,MAAA,GAAS,CAAC,SAAA,EAAW,UAAU,CAAA;AACrC,EAAA,MAAA,CAAO,KAAK,UAAW,CAAA,EAAA;AACvB,EAAA,MAAA,CAAO,IAAO,GAAA,UAAA;AAEd,EAAA,MAAA,CAAO,IAAO,GAAA,CAAC,GAAa,KAAA,UAAA,CAAW,KAAK,GAAG,CAAA;AAC/C,EAAA,MAAA,CAAO,SAAS,UAAW,CAAA,MAAA;AAC3B,EAAA,MAAA,CAAO,GAAM,GAAA,SAAA;AACb,EAAA,MAAA,CAAO,MAAM,SAAU,CAAA,GAAA;AACvB,EAAO,MAAA,CAAA,YAAA,GAAe,CAAC,OAA4B,KAAA;AACjD,IAAO,OAAA,CAAC,QAAQ,MAAM;AACpB,MAAA,MAAM,IAAO,GAAA,GAAA,CAAI,GAAI,CAAA,SAAA,CAAU,GAAG,CAAA;AAClC,MAAM,MAAA,IAAA,GAAO,QAAQ,IAAI,CAAA;AACzB,MAAM2C,MAAAA,WAAAA,GAAa,KAAK,GAAG,CAAA;AAC3B,MAAI,GAAA,CAAA,MAAA,CAAO,QAAU,EAAA,CAAC,EAAO,KAAA;AAAA,QAC3B,GAAG,GAAG,MAAO,CAAA,CAAC,MAAM,CAAE,CAAA,CAAC,MAAM,EAAE,CAAA;AAAA,QAC/B,CAAC,IAAIA,WAAU;AAAA,OAChB,CAAA;AACD,MAAA,MAAA,CAAO,MAASA,GAAAA,WAAAA;AAAA,KAClB;AAAA,GACF;AAEA,EAAO,OAAA,MAAA;AACT;;ACjCgB,SAAA,WAAA,CACd,IACA,MACgB,EAAA;AAChB,EAAM,MAAA,SAAA,GAAY,IAAK,CAAA,MAAA,EAAQ,EAAE,CAAA;AAEjC,EAAA,MAAM,UAAa,GAAA,KAAA,CAAM,EAAI,EAAA,CAAC,GAAQ,KAAA;AACpC,IAAA,MAAM,UAAa,GAAA,GAAA,CAAI,GAAI,CAAA,SAAA,CAAU,GAAG,CAAA;AACxC,IAAA,OAAO,WAAW,GAAG,CAAA;AAAA,GACtB,CAAA;AAED,EAAM,MAAA,MAAA,GAAS,CAAC,SAAA,EAAW,UAAU,CAAA;AACrC,EAAA,MAAA,CAAO,KAAK,UAAW,CAAA,EAAA;AACvB,EAAA,MAAA,CAAO,IAAO,GAAA,UAAA;AACd,EAAA,MAAA,CAAO,OAAO,UAAW,CAAA,IAAA;AACzB,EAAA,MAAA,CAAO,SAAS,UAAW,CAAA,MAAA;AAC3B,EAAA,MAAA,CAAO,GAAM,GAAA,SAAA;AACb,EAAA,MAAA,CAAO,MAAM,SAAU,CAAA,GAAA;AACvB,EAAO,MAAA,CAAA,YAAA,GAAe,CAAC,OAA4B,KAAA;AACjD,IAAO,OAAA,CAAC,QAAQ,MAAM;AACpB,MAAA,MAAM,IAAO,GAAA,GAAA,CAAI,GAAI,CAAA,SAAA,CAAU,GAAG,CAAA;AAClC,MAAM,MAAA,IAAA,GAAO,QAAQ,IAAI,CAAA;AACzB,MAAMC,MAAAA,WAAAA,GAAa,KAAK,GAAG,CAAA;AAC3B,MAAI,GAAA,CAAA,MAAA,CAAO,QAAU,EAAA,CAAC,EAAO,KAAA;AAAA,QAC3B,GAAG,GAAG,MAAO,CAAA,CAAC,MAAM,CAAE,CAAA,CAAC,MAAM,EAAE,CAAA;AAAA,QAC/B,CAAC,IAAIA,WAAU;AAAA,OAChB,CAAA;AACD,MAAA,MAAA,CAAO,MAASA,GAAAA,WAAAA;AAAA,KAClB;AAAA,GACF;AAEA,EAAO,OAAA,MAAA;AACT;;ACrCgB,SAAA,UAAA,CACd,MACA,UACA,EAAA;AACA,EAAA,MAAM,MAAM,MAAO,CAAA,WAAA;AAAA,IACjB,MAAO,CAAA,OAAA,CAAoB,UAAU,CAAA,CAAE,GAAI,CAAA,CAAC,CAACd,IAAAA,EAAK,EAAE,SAAA,EAAAe,UAAU,EAAC,CAAM,KAAA;AACnE,MAAO,OAAA,CAACf,MAAKe,UAAS,CAAA;AAAA,KACvB;AAAA,GACH;AAEA,EAAA,MAAM,SAAY,GAAA,IAAA,CAAsC,GAAK,EAAA,CAAA,EAAG,IAAI,CAAQ,MAAA,CAAA,CAAA;AAE5E,EAAM,MAAA,SAAA,GAAY,SAAU,CAAA,CAAC,GAAQ,KAAA;AACnC,IAAA,MAAM,IAAO,GAAA,GAAA,CAAI,GAAI,CAAA,SAAA,CAAU,GAAG,CAAA;AAElC,IAAA,MAAM,WAAc,GAAA,MAAA,CAAO,OAAoB,CAAA,UAAU,CAAE,CAAA,OAAA;AAAA,MACzD,CAAC,CAACf,IAAAA,EAAK,EAAE,OAAA,EAAS,CAAM,KAAA;AACtB,QAAA,MAAM,aAAuB,CAAC,IAAA,CAAKA,IAAU,CAAC,EAAE,IAAK,EAAA;AAErD,QAAO,OAAA,UAAA,CAAW,IAAI,CAAC,SAAA,KAAc,CAAC,SAAW,EAAA,OAAA,CAAQ,GAAG,CAAC,CAAU,CAAA;AAAA;AACzE,KACF;AAEA,IAAO,OAAA,MAAA,CAAO,YAAY,WAAW,CAAA;AAAA,GACtC,CAAA;AAED,EAAM,MAAA,MAAA,GAAS,CAAC,SAAA,EAAW,SAAS,CAAA;AACpC,EAAA,MAAA,CAAO,GAAM,GAAA,SAAA;AACb,EAAA,MAAA,CAAO,SAAY,GAAA,SAAA;AACnB,EAAA,MAAA,CAAO,MAAM,SAAU,CAAA,GAAA;AACvB,EAAA,MAAA,CAAO,SAAS,SAAU,CAAA,MAAA;AAE1B,EAAO,OAAA,MAAA;AACT;;ACxDa,MAAA,SAAA,GAAY,CACvB,IAAA,EACA,KAA6C,GAAA,OAAO,EAAC,CAAA,KACvC,IAAK,CAAA,KAAA,EAAO,CAAG,EAAA,IAAI,CAAM,IAAA,CAAA,CAAA;AAS5B,MAAA,SAAA,GAAY,CACvB,IAAA,EACA,KAA6C,GAAA,OAAO,EAAC,CAAA,KACvC,IAAK,CAAA,KAAA,EAAO,CAAG,EAAA,IAAI,CAAM,IAAA,CAAA,CAAA;;ACFzB,SAAA,OAAA,CACd,EACA,EAAA,MAAA,EACA,cACsB,EAAA;AACtB,EAAA,MAAM,OAAU,GAAA,IAAA,CAAqC,IAAgB,EAAE,CAAA;AACvE,EAAM,MAAA,MAAA,GAAyB,CAAC,GAAA,KAAQ,YAAY;AAClD,IAAM,MAAA,GAAA,CAAI,KAAK,SAAS,CAAA;AACxB,IAAM,MAAA,EAAA,GAAK,OAAO,GAAG,CAAA;AACrB,IAAA,MAAM,YAAsC,GAAA;AAAA,MAC1C,MAAQ,EAAA,EAAA;AAAA,MACR,OAAS,EAAA,GAAA,CAAI,GAAI,CAAA,OAAA,CAAQ,GAAG;AAAA,KAC9B;AACA,IAAI,GAAA,CAAA,MAAA,CAAO,kBAAkB,CAAC,EAAA,KAAO,CAAC,GAAG,EAAA,EAAI,YAA4B,CAAC,CAAA;AAE1E,IAAA,OAAO,MAAM;AACX,MAAI,GAAA,CAAA,MAAA,CAAO,gBAAkB,EAAA,CAAC,EAAO,KAAA,EAAA,CAAG,OAAO,CAAC,CAAA,KAAM,CAAM,KAAA,YAAY,CAAC,CAAA;AAAA,KAC3E;AAAA,GACF;AAEA,EAAM,MAAA,MAAA,GAAS,CAAC,OAAA,EAAS,MAAM,CAAA;AAC/B,EAAA,MAAA,CAAO,EAAK,GAAA,EAAA;AACZ,EAAA,MAAA,CAAO,MAAS,GAAA,MAAA;AAChB,EAAA,MAAA,CAAO,OAAU,GAAA,OAAA;AAEjB,EAAO,OAAA,MAAA;AACT;;AC9CO,SAAS,WAAc,GAAA;AAC5B,EAAA,OAAO,CAAC,GAAqB,KAAA;AAC3B,IAAM,MAAA,IAAA,GAAO,GAAI,CAAA,GAAA,CAAI,aAAa,CAAA;AAClC,IAAM,MAAA,UAAA,GAAa,GAAI,CAAA,GAAA,CAAI,aAAa,CAAA;AAExC,IAAO,OAAA,UAAA,CAAW,IAAK,CAAA,KAAA,CAAM,GAAG,CAAA;AAAA,GAClC;AACF;;ACPgB,SAAA,aAAA,CAAc,OAAwB,IAAY,EAAA;AAJlE,EAAA,IAAA,EAAA;AAKE,EAAM,MAAA,eAAA,GACJ,KAAK,UAAc,IAAA,CAAA,IAAA,CAAA,CAAK,UAAK,SAAL,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAgB,KAAK,IAAS,MAAA,WAAA;AACxD,EAAA,IAAI,CAAC,eAAiB,EAAA;AACpB,IAAM,KAAA,CAAA,IAAA,CAAK,KAAK,OAAO,CAAA;AACvB,IAAA;AAAA;AAGF,EAAA,MAAM,aAAqB,EAAC;AAC5B,EAAA,IAAA,CAAK,OAAQ,CAAA,OAAA,CAAQ,CAAC,CAAA,EAAG,GAAG,CAAM,KAAA;AAChC,IAAI,IAAA,CAAA,KAAM,IAAK,CAAA,UAAA,GAAa,CAAG,EAAA;AAE/B,IAAA,UAAA,CAAW,KAAK,CAAC,CAAA;AAAA,GAClB,CAAA;AACD,EAAA,KAAA,CAAM,IAAK,CAAA,QAAA,CAAS,SAAU,CAAA,UAAU,CAAC,CAAA;AAC3C;;ACjBgB,SAAAlC,UAAA,CACd,QACA,IACG,EAAA;AACH,EAAA,MAAA,CAAO,OAAO,MAAQ,EAAA;AAAA,IACpB,IAAM,EAAA;AAAA,MACJ,OAAS,EAAA,6BAAA;AAAA,MACT,GAAG;AAAA;AACL,GACD,CAAA;AAED,EAAO,OAAA,MAAA;AACT;;ACDa,MAAA,YAAA,GAAe,UAAU,UAAU,CAAA;AAEhDA,UAAA,CAAS,YAAc,EAAA;AAAA,EACrB,WAAa,EAAA,gBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,cAAiB,GAAA,WAAA,CAAY,UAAY,EAAA,CAAC,GAAS,MAAA;AAAA,EAC9D,KAAO,EAAA;AAAA,IACL,MAAQ,EAAA;AAAA,MACN,OAAS,EAAA,GAAA,CAAI,GAAI,CAAA,yBAAyB,EAAE,QAAY,IAAA;AAAA;AAC1D,GACF;AAAA,EACA,QAAU,EAAA;AAAA,IACR,EAAE,KAAK,GAAI,EAAA;AAAA,IACX,EAAE,KAAK,IAAK,EAAA;AAAA,IACZ,EAAE,KAAO,EAAA,YAAA,EAAc,UAAU,CAAC,KAAA,KAAW,UAAU,QAAmB;AAAA,GAC5E;AAAA,EACA,KAAA,EAAO,CAAC,IAAA,KAAS,CAAC,IAAA,EAAM,GAAI,CAAA,GAAA,CAAI,YAAa,CAAA,GAAG,CAAE,CAAA,IAAI,CAAC,CAAA;AAAA,EACvD,aAAe,EAAA;AAAA,IACb,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,IAAS,KAAA,UAAA;AAAA,IAC/B,MAAQ,EAAA,CAAC,KAAO,EAAA,IAAA,EAAM,QAAa,KAAA;AACjC,MAAA,KAAA,CAAM,SAAS,QAAU,EAAA,EAAE,MAAQ,EAAA,IAAA,CAAK,QAAQ,CAAA;AAChD,MAAM,KAAA,CAAA,IAAA,CAAK,KAAK,QAAQ,CAAA;AACxB,MAAA,KAAA,CAAM,UAAU,QAAQ,CAAA;AAAA;AAC1B,GACF;AAAA,EACA,UAAY,EAAA;AAAA,IACV,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,KAAK,IAAS,KAAA,UAAA;AAAA,IACpC,MAAA,EAAQ,CAAC,KAAA,EAAO,IAAS,KAAA;AACvB,MAAM,KAAA,CAAA,QAAA,CAAS,IAAM,EAAA,UAAA,EAAY,KAAW,CAAA,EAAA;AAAA,QAC1C,MAAA,EAAQ,KAAK,KAAM,CAAA;AAAA,OACpB,CAAA;AAAA;AACH;AAEJ,CAAE,CAAA,CAAA;AAEFA,UAAA,CAAS,eAAe,IAAM,EAAA;AAAA,EAC5B,WAAa,EAAA,sBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAEDA,UAAA,CAAS,eAAe,GAAK,EAAA;AAAA,EAC3B,WAAa,EAAA,yBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,qBAAwB,GAAA,QAAA,CAAS,gBAAkB,EAAA,CAAC,QAAQ,MAAM;AAC7E,EAAA,OAAO,UAAW,CAAA,cAAA,CAAe,IAAK,CAAA,GAAG,CAAC,CAAA;AAC5C,CAAC,CAAA;AAEDA,UAAA,CAAS,qBAAuB,EAAA;AAAA,EAC9B,WAAa,EAAA,gCAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGY,MAAA,qBAAA,GAAwB,UAAW,CAAA,CAAC,GAAQ,KAAA;AACvD,EAAA,OAAO,QAAS,CAAA,wBAAA,EAA0B,cAAe,CAAA,IAAA,CAAK,GAAG,CAAG,EAAA;AAAA,IAClE,SAAS,OAAO;AAAA,MACd,MAAQ,EAAA;AAAA,KACV,CAAA;AAAA,IACA,cAAA,EAAgB,CAAC,EAAE,SAAA,EAAW,OAC5B,KAAA,CAAC,UAAU,UAAW,CAAA,GAAG,IACrB,EAAE,SAAA,EAAW,UAAU,KAAM,CAAA,CAAC,GAAG,KAAO,EAAA,KAAA,GAAQ,CAAE,EAAA,GAClD;AAAC,GACR,CAAA;AACH,CAAC,CAAA;AAEDA,UAAA,CAAS,qBAAuB,EAAA;AAAA,EAC9B,WAAa,EAAA,0BAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGY,MAAA,2BAAA,GAA8B,UAAW,CAAA,CAAC,GAAQ,KAAA;AAC7D,EAAA,OAAO,QAAS,CAAA,sBAAA,EAAwB,cAAe,CAAA,IAAA,CAAK,GAAG,CAAG,EAAA;AAAA,IAChE,SAAS,OAAO;AAAA,MACd,MAAQ,EAAA;AAAA,KACV,CAAA;AAAA,IACA,cAAA,EAAgB,CAAC,EAAE,SAAA,EAAW,OAC5B,KAAA,CAAC,UAAU,UAAW,CAAA,GAAG,IACrB,EAAE,SAAA,EAAW,UAAU,KAAM,CAAA,CAAC,GAAG,KAAO,EAAA,KAAA,GAAQ,CAAE,EAAA,GAClD;AAAC,GACR,CAAA;AACH,CAAC,CAAA;AAEDA,UAAA,CAAS,2BAA6B,EAAA;AAAA,EACpC,WAAa,EAAA,gCAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAIY,MAAA,cAAA,GAAiB,WAAW,gBAAkB,EAAA;AAAA,EACzD,cAAgB,EAAA;AAAA,IACd,SAAW,EAAA,OAAA;AAAA,IACX,OAAA,EAAS,CAAC,GAAQ,KAAA;AAChB,MAAM,MAAA,QAAA,GAAW,GAAI,CAAA,GAAA,CAAI,WAAW,CAAA;AACpC,MAAA,OAAO,MAAM,QAAA,CAAS,IAAK,CAAA,qBAAA,CAAsB,GAAG,CAAA;AAAA;AACtD;AAEJ,CAAC,CAAA;AAEDA,UAAA,CAAS,eAAe,GAAK,EAAA;AAAA,EAC3B,WAAa,EAAA,qBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAEDA,UAAA,CAAS,eAAe,SAAW,EAAA;AAAA,EACjC,WAAa,EAAA,kBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;AClHY,MAAA,UAAA,GAAa,UAAU,QAAQ,CAAA;AAE5CA,UAAA,CAAS,UAAY,EAAA;AAAA,EACnB,WAAa,EAAA,cAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,YAAe,GAAA,WAAA,CAAY,QAAU,EAAA,CAAC,GAAS,MAAA;AAAA,EAC1D,KAAO,EAAA;AAAA,IACL,MAAQ,EAAA;AAAA,MACN,OAAS,EAAA,GAAA,CAAI,GAAI,CAAA,yBAAyB,EAAE,MAAU,IAAA;AAAA;AACxD,GACF;AAAA,EACA,QAAU,EAAA;AAAA,IACR,EAAE,KAAK,GAAI,EAAA;AAAA,IACX,EAAE,KAAK,QAAS,EAAA;AAAA,IAChB,EAAE,KAAO,EAAA,YAAA,EAAc,UAAU,CAAC,KAAA,KAAW,UAAU,MAAiB;AAAA,GAC1E;AAAA,EACA,KAAA,EAAO,CAAC,IAAA,KAAS,CAAC,QAAA,EAAU,GAAI,CAAA,GAAA,CAAI,UAAW,CAAA,GAAG,CAAE,CAAA,IAAI,CAAC,CAAA;AAAA,EACzD,aAAe,EAAA;AAAA,IACb,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,IAAS,KAAA,QAAA;AAAA,IAC/B,MAAQ,EAAA,CAAC,KAAO,EAAA,IAAA,EAAM,QAAa,KAAA;AACjC,MAAA,KAAA,CAAM,SAAS,QAAU,EAAA,EAAE,MAAQ,EAAA,IAAA,CAAK,QAAQ,CAAA;AAChD,MAAM,KAAA,CAAA,IAAA,CAAK,KAAK,QAAQ,CAAA;AACxB,MAAA,KAAA,CAAM,UAAU,QAAQ,CAAA;AAAA;AAC1B,GACF;AAAA,EACA,UAAY,EAAA;AAAA,IACV,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,KAAK,IAAS,KAAA,QAAA;AAAA,IACpC,MAAA,EAAQ,CAAC,KAAA,EAAO,IAAS,KAAA;AACvB,MAAM,KAAA,CAAA,QAAA,CAAS,IAAM,EAAA,QAAA,EAAU,KAAW,CAAA,EAAA;AAAA,QACxC,MAAA,EAAQ,KAAK,KAAM,CAAA;AAAA,OACpB,CAAA;AAAA;AACH;AAEJ,CAAE,CAAA,CAAA;AAEFA,UAAA,CAAS,aAAa,IAAM,EAAA;AAAA,EAC1B,WAAa,EAAA,oBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAEDA,UAAA,CAAS,aAAa,GAAK,EAAA;AAAA,EACzB,WAAa,EAAA,uBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,mBAAsB,GAAA,QAAA,CAAS,cAAgB,EAAA,CAAC,QAAQ,MAAM;AACzE,EAAA,OAAO,UAAW,CAAA,YAAA,CAAa,IAAK,CAAA,GAAG,CAAC,CAAA;AAC1C,CAAC,CAAA;AAEDA,UAAA,CAAS,mBAAqB,EAAA;AAAA,EAC5B,WAAa,EAAA,8BAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGY,MAAA,eAAA,GAAkB,UAAW,CAAA,CAAC,GAAQ,KAAA;AACjD,EAAA,OAAO,QAAS,CAAA,iCAAA,EAAmC,YAAa,CAAA,IAAA,CAAK,GAAG,CAAG,EAAA;AAAA,IACzE,OAAA,EAAS,CAAC,KAAU,KAAA;AAClB,MAAO,OAAA;AAAA,QACL,QAAQ,KAAM,CAAA,CAAC,EAAE,UAAW,CAAA,GAAG,IAAI,GAAM,GAAA;AAAA,OAC3C;AAAA;AACF,GACD,CAAA;AACH,CAAC,CAAA;AAEDA,UAAA,CAAS,eAAiB,EAAA;AAAA,EACxB,WAAa,EAAA,mBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAIY,MAAA,YAAA,GAAe,WAAW,cAAgB,EAAA;AAAA,EACrD,UAAY,EAAA;AAAA,IACV,SAAA,EAAW,CAAC,OAAO,CAAA;AAAA,IACnB,OAAA,EAAS,CAAC,GAAQ,KAAA;AAChB,MAAM,MAAA,QAAA,GAAW,GAAI,CAAA,GAAA,CAAI,WAAW,CAAA;AACpC,MAAA,OAAO,MAAM,QAAA,CAAS,IAAK,CAAA,mBAAA,CAAoB,GAAG,CAAA;AAAA;AACpD;AAEJ,CAAC,CAAA;AAEDA,UAAA,CAAS,aAAa,GAAK,EAAA;AAAA,EACzB,WAAa,EAAA,mBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAEDA,UAAA,CAAS,aAAa,SAAW,EAAA;AAAA,EAC/B,WAAa,EAAA,gBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;AC9FY,MAAA,cAAA,GAAiB,UAAU,YAAY,CAAA;AAEpDA,UAAA,CAAS,cAAgB,EAAA;AAAA,EACvB,WAAa,EAAA,kBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,gBAAmB,GAAA,WAAA,CAAY,YAAc,EAAA,CAAC,GAAS,MAAA;AAAA,EAClE,QAAU,EAAA,GAAA;AAAA,EACV,IAAM,EAAA,IAAA;AAAA,EACN,SAAW,EAAA,KAAA;AAAA,EACX,QAAU,EAAA,CAAC,EAAE,GAAA,EAAK,QAAQ,CAAA;AAAA,EAC1B,KAAA,EAAO,CAAC,IAAA,KAAS,CAAC,MAAA,EAAQ,GAAI,CAAA,GAAA,CAAI,cAAe,CAAA,GAAG,CAAE,CAAA,IAAI,CAAC,CAAA;AAAA,EAC3D,aAAe,EAAA;AAAA,IACb,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,IAAS,KAAA,YAAA;AAAA,IAC/B,MAAQ,EAAA,CAAC,KAAO,EAAA,IAAA,EAAM,QAAa,KAAA;AACjC,MAAA,KAAA,CAAM,SAAS,QAAQ,CAAA;AACvB,MAAM,KAAA,CAAA,OAAA,CAAQ,KAAK,KAAe,CAAA;AAClC,MAAA,KAAA,CAAM,UAAU,QAAQ,CAAA;AAAA;AAC1B,GACF;AAAA,EACA,UAAY,EAAA;AAAA,IACV,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,KAAK,IAAS,KAAA,YAAA;AAAA,IACpC,MAAQ,EAAA,CAAC,KAAO,EAAA,IAAA,EAAM,IAAS,KAAA;AAC7B,MAAA,KAAA,CAAM,QAAS,CAAA,IAAA,EAAM,YAAc,EAAA,IAAA,CAAK,QAAQ,EAAE,CAAA;AAAA;AACpD;AAEJ,CAAE,CAAA,CAAA;AAEFA,UAAA,CAAS,iBAAiB,IAAM,EAAA;AAAA,EAC9B,WAAa,EAAA,wBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAEDA,UAAA,CAAS,iBAAiB,GAAK,EAAA;AAAA,EAC7B,WAAa,EAAA,2BAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,uBAA0B,GAAA,QAAA;AAAA,EACrC,kBAAA;AAAA,EACA,CAAC,GAAA,KAAQ,MAAM,CAAC,OAAO,QAAa,KAAA;AAClC,IAAM,MAAA,EAAE,SAAW,EAAA,EAAA,EAAO,GAAA,KAAA;AAC1B,IAAI,IAAA,SAAA,CAAU,OAAc,OAAA,KAAA;AAC5B,IAAM,MAAA,EAAE,IAAM,EAAA,EAAA,EAAO,GAAA,SAAA;AAErB,IAAM,MAAA,GAAA,GAAM,MAAM,GAAI,CAAA,YAAA,CAAa,MAAM,EAAI,EAAA,gBAAA,CAAiB,IAAK,CAAA,GAAG,CAAC,CAAA;AAEvE,IAAA,IAAI,GAAK,EAAA;AACP,MAAA,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAW,GAAG,UAAW,CAAA,IAAA,EAAM,IAAI,gBAAiB,CAAA,IAAA,CAAK,GAAG,CAAC,CAAA,CAAA;AAC7D,MAAO,OAAA,IAAA;AAAA;AAGT,IAAA,MAAM,gBAAgB,MAAO,CAAA,IAAA,CAAK,KAAM,CAAA,MAAA,CAAO,KAAK,CAAE,CAAA,MAAA;AAAA,MACpD,CAAC,CAAA,KAAM,CAAM,KAAA,gBAAA,CAAiB,IAAK,CAAA;AAAA,KACrC;AAGA,IACG,aAAA,CAAA,GAAA,CAAI,CAAC,IAAA,KAAS,KAAM,CAAA,MAAA,CAAO,KAAM,CAAA,IAAI,CAAa,CAAA,CAClD,OAAQ,CAAA,CAAC,CAAM,KAAA;AACd,MAAG,EAAA,CAAA,UAAA,CAAW,IAAM,EAAA,EAAA,EAAI,CAAC,CAAA;AAAA,KAC1B,CAAA;AAGH,IAAW,QAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,QAAA,CAAA,EAAA,CAAG,QAAQ,IAAM,EAAA,EAAA,EAAI,iBAAiB,IAAK,CAAA,GAAG,CAAE,CAAA,MAAA,EAAQ,CAAA,CAAA;AACnE,IAAO,OAAA,IAAA;AAAA;AAEX,CAAA;AAEAA,UAAA,CAAS,uBAAyB,EAAA;AAAA,EAChC,WAAa,EAAA,kCAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGY,MAAA,mBAAA,GAAsB,UAAW,CAAA,CAAC,GAAQ,KAAA;AACrD,EAAA,OAAO,QAAS,CAAA,oBAAA,EAAsB,gBAAiB,CAAA,IAAA,CAAK,GAAG,CAAC,CAAA;AAClE,CAAC,CAAA;AAEDA,UAAA,CAAS,mBAAqB,EAAA;AAAA,EAC5B,WAAa,EAAA,gCAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAIY,MAAA,gBAAA,GAAmB,WAAW,kBAAoB,EAAA;AAAA,EAC7D,gBAAkB,EAAA;AAAA,IAChB,SAAW,EAAA,OAAA;AAAA,IACX,OAAA,EAAS,CAAC,GAAQ,KAAA;AAChB,MAAM,MAAA,QAAA,GAAW,GAAI,CAAA,GAAA,CAAI,WAAW,CAAA;AACpC,MAAA,OAAO,MAAM,QAAA,CAAS,IAAK,CAAA,uBAAA,CAAwB,GAAG,CAAA;AAAA;AACxD;AAEJ,CAAC,CAAA;AAEDA,UAAA,CAAS,iBAAiB,GAAK,EAAA;AAAA,EAC7B,WAAa,EAAA,uBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAEDA,UAAA,CAAS,iBAAiB,SAAW,EAAA;AAAA,EACnC,WAAa,EAAA,oBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;AChHY,MAAA,QAAA,GAAW,UAAU,MAAM,CAAA;AAExCA,UAAA,CAAS,QAAU,EAAA;AAAA,EACjB,WAAa,EAAA,YAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAGM,MAAM,UAAa,GAAA,WAAA,CAAY,MAAQ,EAAA,CAAC,GAAS,MAAA;AAAA,EACtD,KAAO,EAAA;AAAA,IACL,MAAM,EAAC;AAAA,IACP,KAAA,EAAO,EAAE,OAAA,EAAS,IAAK;AAAA,GACzB;AAAA,EACA,QAAU,EAAA;AAAA,IACR;AAAA,MACE,GAAK,EAAA,SAAA;AAAA,MACL,QAAA,EAAU,CAAC,GAAQ,KAAA;AACjB,QAAA,IAAI,EAAE,GAAA,YAAe,WAAc,CAAA,EAAA,MAAM,mBAAmB,GAAG,CAAA;AAE/D,QAAO,OAAA;AAAA,UACL,IAAA,EAAM,GAAI,CAAA,YAAA,CAAa,MAAM,CAAA;AAAA,UAC7B,KAAA,EAAO,GAAI,CAAA,YAAA,CAAa,OAAO;AAAA,SACjC;AAAA;AACF;AACF,GACF;AAAA,EACA,OAAO,CAAC,IAAA,KAAS,CAAC,GAAA,EAAK,EAAE,GAAG,GAAA,CAAI,GAAI,CAAA,QAAA,CAAS,GAAG,CAAE,CAAA,IAAI,GAAG,GAAG,IAAA,CAAK,OAAO,CAAA;AAAA,EACxE,aAAe,EAAA;AAAA,IACb,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,IAAS,KAAA,MAAA;AAAA,IAC/B,MAAQ,EAAA,CAAC,KAAO,EAAA,IAAA,EAAM,QAAa,KAAA;AACjC,MAAA,MAAM,MAAM,IAAK,CAAA,GAAA;AACjB,MAAA,MAAM,QAAQ,IAAK,CAAA,KAAA;AACnB,MAAA,KAAA,CAAM,SAAS,QAAU,EAAA,EAAE,IAAM,EAAA,GAAA,EAAK,OAAO,CAAA;AAC7C,MAAM,KAAA,CAAA,IAAA,CAAK,KAAK,QAAQ,CAAA;AACxB,MAAA,KAAA,CAAM,UAAU,QAAQ,CAAA;AAAA;AAC1B,GACF;AAAA,EACA,UAAY,EAAA;AAAA,IACV,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,KAAK,IAAS,KAAA,MAAA;AAAA,IACpC,MAAA,EAAQ,CAAC,KAAA,EAAO,IAAS,KAAA;AACvB,MAAM,KAAA,CAAA,QAAA,CAAS,IAAM,EAAA,MAAA,EAAQ,KAAW,CAAA,EAAA;AAAA,QACtC,KAAA,EAAO,KAAK,KAAM,CAAA,KAAA;AAAA,QAClB,GAAA,EAAK,KAAK,KAAM,CAAA;AAAA,OACjB,CAAA;AAAA;AACH;AAEJ,CAAE,CAAA,CAAA;AAEFA,UAAA,CAAS,WAAW,IAAM,EAAA;AAAA,EACxB,WAAa,EAAA,kBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AASM,MAAM,iBAAoB,GAAA,QAAA;AAAA,EAC/B,YAAA;AAAA,EACA,CAAC,GACC,KAAA,CAAC,OAAoC,GAAA,EACnC,KAAA,UAAA,CAAW,UAAW,CAAA,IAAA,CAAK,GAAG,CAAA,EAAG,OAAO;AAC9C,CAAA;AAEAA,UAAA,CAAS,iBAAmB,EAAA;AAAA,EAC1B,WAAa,EAAA,4BAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;AAIM,MAAM,iBAAoB,GAAA,QAAA;AAAA,EAC/B,YAAA;AAAA,EACA,CAAC,QACC,CAAC,OAAA,GAAoC,EACrC,KAAA,CAAC,OAAO,QAAa,KAAA;AACnB,IAAI,IAAA,CAAC,UAAiB,OAAA,KAAA;AAEtB,IAAI,IAAA,IAAA;AACJ,IAAA,IAAI,GAAM,GAAA,CAAA,CAAA;AACV,IAAM,MAAA,EAAE,WAAc,GAAA,KAAA;AACtB,IAAM,MAAA,EAAE,IAAM,EAAA,EAAA,EAAO,GAAA,SAAA;AACrB,IAAM,KAAA,CAAA,GAAA,CAAI,YAAa,CAAA,IAAA,EAAM,IAAS,KAAA,EAAA,GAAK,KAAK,CAAI,GAAA,EAAA,EAAI,CAAC,CAAA,EAAG,CAAM,KAAA;AAChE,MAAA,IAAI,WAAW,IAAK,CAAA,GAAG,EAAE,OAAQ,CAAA,CAAA,CAAE,KAAK,CAAG,EAAA;AACzC,QAAO,IAAA,GAAA,CAAA;AACP,QAAM,GAAA,GAAA,CAAA;AACN,QAAO,OAAA,KAAA;AAAA;AAGT,MAAO,OAAA,KAAA,CAAA;AAAA,KACR,CAAA;AAED,IAAI,IAAA,CAAC,MAAa,OAAA,KAAA;AAElB,IAAA,MAAM,IAAO,GAAA,IAAA,CAAK,KAAM,CAAA,IAAA,CAAK,CAAC,EAAE,IAAK,EAAA,KAAM,IAAS,KAAA,UAAA,CAAW,IAAK,CAAA,GAAG,CAAC,CAAA;AACxE,IAAI,IAAA,CAAC,MAAa,OAAA,KAAA;AAElB,IAAA,MAAM,KAAQ,GAAA,GAAA;AACd,IAAM,MAAA,GAAA,GAAM,MAAM,IAAK,CAAA,QAAA;AACvB,IAAM,MAAA,EAAE,IAAO,GAAA,KAAA;AACf,IAAA,MAAM,QAAW,GAAA,UAAA,CACd,IAAK,CAAA,GAAG,CACR,CAAA,MAAA,CAAO,EAAE,GAAG,IAAK,CAAA,KAAA,EAAO,GAAG,OAAA,EAAS,CAAA;AACvC,IAAI,IAAA,CAAC,UAAiB,OAAA,KAAA;AAEtB,IAAA,QAAA;AAAA,MACE,GACG,UAAW,CAAA,KAAA,EAAO,KAAK,IAAI,CAAA,CAC3B,QAAQ,KAAO,EAAA,GAAA,EAAK,QAAQ,CAC5B,CAAA,YAAA,CAAa,IAAI,aAAc,CAAA,EAAA,CAAG,UAAU,OAAO,CAAC,EACpD,cAAe;AAAA,KACpB;AAEA,IAAO,OAAA,IAAA;AAAA;AAEb,CAAA;AAEAA,UAAA,CAAS,iBAAmB,EAAA;AAAA,EAC1B,WAAa,EAAA,4BAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;AC/HY,MAAA,SAAA,GAAY,KAAM,CAAA,KAAA,EAAO,OAAO;AAAA,EAC3C,OAAS,EAAA,QAAA;AAAA,EACT,aAAe,EAAA;AAAA,IACb,KAAO,EAAA,CAAC,EAAE,IAAA,OAAW,IAAS,KAAA,MAAA;AAAA,IAC9B,MAAQ,EAAA,CAAC,KAAO,EAAA,IAAA,EAAM,IAAS,KAAA;AAC7B,MAAM,KAAA,CAAA,UAAA,CAAW,MAAM,IAAI,CAAA;AAAA;AAC7B,GACF;AAAA,EACA,UAAY,EAAA;AAAA,IACV,KAAO,EAAA,CAAC,IAAS,KAAA,IAAA,CAAK,KAAK,IAAS,KAAA,KAAA;AAAA,IACpC,MAAA,EAAQ,CAAC,KAAA,EAAO,IAAS,KAAA;AACvB,MAAA,KAAA,CAAM,SAAS,MAAM,CAAA;AACrB,MAAM,KAAA,CAAA,IAAA,CAAK,KAAK,OAAO,CAAA;AAAA;AACzB;AAEJ,CAAE,CAAA,CAAA;AAEFA,UAAA,CAAS,SAAW,EAAA;AAAA,EAClB,WAAa,EAAA,iBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;ACxBc,SAAS,kBAAkB,CAAC,MAAM,EAAE;AACnD,CAAC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACjC,EAAE,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC;AAC1C;;AAEA;AACA;AACA,CAAC,OAAO;AACR,GAAG,OAAO,CAAC,qBAAqB,EAAE,MAAM;AACxC,GAAG,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC;AACzB;;ACVA,MAAM,YAAY,GAAG;AACrB;AACA,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;;AAEZ;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;;AAEZ;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;;AAEZ;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACbb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;;AAEb;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC;;AAEV;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;;AAEbb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACbb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACbb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AACb,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;;AAEb;AACA,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;;AAEX;AACA,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;AACb,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC;AACZ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;AACX,CAAC,CAAC,GA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","x_google_ignoreList":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,139,140,142,149,150,151,160,185,186,187,188,189,199,209,210,224,225,228,229,230,231,278,304,305,310,322,332,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353]}