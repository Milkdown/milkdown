{"version":3,"file":"index.es.js","sources":["../src/useGetEditor.ts","../src/Editor.tsx","../src/useEditor.ts","../src/useInstance.ts"],"sourcesContent":["import { inject, onMounted, onUnmounted } from 'vue'\n\nimport type { EditorInfoCtx } from './types'\nimport { editorInfoCtxKey } from '.'\n\nexport function useGetEditor() {\n  const { dom, loading, editor: editorRef, editorFactory: getEditor } = inject(editorInfoCtxKey, {} as EditorInfoCtx)\n\n  onMounted(() => {\n    if (!dom.value)\n      return\n\n    const editor = getEditor.value!(dom.value)\n    if (!editor)\n      return\n\n    loading.value = true\n    editor\n      .create()\n      .then((editor) => {\n        editorRef.value = editor\n      })\n      .finally(() => {\n        loading.value = false\n      })\n      .catch(console.error)\n  })\n  onUnmounted(() => {\n    editorRef.value?.destroy()\n  })\n\n  return dom\n}\n","import type { Editor } from '@milkdown/core'\nimport type { InjectionKey, Ref } from 'vue'\nimport {\n  Fragment,\n  defineComponent,\n  h,\n  provide,\n  ref,\n} from 'vue'\n\nimport type { EditorInfoCtx, GetEditor } from './types'\nimport { useGetEditor } from './useGetEditor'\n\nh\nFragment\n\nexport const editorInfoCtxKey: InjectionKey<EditorInfoCtx> = Symbol('editorInfoCtxKey')\n\nexport const Milkdown = defineComponent({\n  name: 'Milkdown',\n  setup: () => {\n    const domRef = useGetEditor()\n\n    return () => <div data-milkdown-root ref={domRef} />\n  },\n})\n\nexport const MilkdownProvider = defineComponent({\n  name: 'MilkdownProvider',\n  setup: (_, { slots }) => {\n    const dom = ref<HTMLDivElement | null>(null)\n    const editorFactory = ref<GetEditor | undefined>(undefined)\n    const editor = ref<Editor | undefined>(undefined) as Ref<Editor | undefined>\n    const loading = ref(true)\n\n    provide(editorInfoCtxKey, {\n      loading,\n      dom,\n      editor,\n      editorFactory,\n    })\n\n    return () => <>{slots.default?.()}</>\n  },\n})\n","import { inject } from 'vue'\nimport { editorInfoCtxKey } from './Editor'\n\nimport type { GetEditor, UseEditorReturn } from './types'\n\nexport function useEditor(getEditor: GetEditor): UseEditorReturn {\n  const { editorFactory, loading, editor } = inject(editorInfoCtxKey)!\n\n  editorFactory.value = getEditor\n\n  return {\n    loading,\n    get: () => editor.value,\n  }\n}\n","import type { Editor } from '@milkdown/core'\nimport type { Ref } from 'vue'\nimport { inject } from 'vue'\nimport { editorInfoCtxKey } from './Editor'\n\nexport type Instance = [Ref<true>, () => undefined] | [Ref<false>, () => Editor]\n\nexport function useInstance(): Instance {\n  const editorInfo = inject(editorInfoCtxKey)!\n\n  return [editorInfo.loading, () => editorInfo.editor.value] as Instance\n}\n"],"names":["useGetEditor","dom","loading","editorRef","getEditor","inject","editorInfoCtxKey","onMounted","editor","onUnmounted","_a","Symbol","Milkdown","defineComponent","name","setup","domRef","_createVNode","MilkdownProvider","_","slots","ref","editorFactory","undefined","provide","_Fragment","default","useEditor","useInstance","editorInfo"],"mappings":";AAKO,SAASA,IAAe;AACvB,QAAA,EAAE,KAAAC,GAAK,SAAAC,GAAS,QAAQC,GAAW,eAAeC,MAAcC,EAAOC,GAAkB,CAAmB,CAAA;AAElH,SAAAC,EAAU,MAAM;AACd,QAAI,CAACN,EAAI;AACP;AAEF,UAAMO,IAASJ,EAAU,MAAOH,EAAI,KAAK;AACzC,IAAKO,MAGLN,EAAQ,QAAQ,IAChBM,EACG,OAAO,EACP,KAAK,CAACA,MAAW;AAChB,MAAAL,EAAU,QAAQK;AAAAA,IAAA,CACnB,EACA,QAAQ,MAAM;AACb,MAAAN,EAAQ,QAAQ;AAAA,IACjB,CAAA,EACA,MAAM,QAAQ,KAAK;AAAA,EAAA,CACvB,GACDO,EAAY,MAAM;;AAChB,KAAAC,IAAAP,EAAU,UAAV,QAAAO,EAAiB;AAAA,EAAQ,CAC1B,GAEMT;AACT;MChBaK,IAAgDK,OAAO,kBAAkB,GAEzEC,IAAWC,gBAAAA,EAAgB;AAAA,EACtCC,MAAM;AAAA,EACNC,OAAOA,MAAM;AACX,UAAMC,IAAShB;AAEf,WAAO,MAAAiB,EAAA,OAAA;AAAA,MAAA,sBAAA;AAAA,MAAA,KAAmCD;AAAAA,IAAU,GAAA,IAAA;AAAA,EACtD;AACF,CAAC,GAEYE,IAAmBL,gBAAAA,EAAgB;AAAA,EAC9CC,MAAM;AAAA,EACNC,OAAOA,CAACI,GAAG;AAAA,IAAEC,OAAAA;AAAAA,EAAM,MAAM;AACvB,UAAMnB,IAAMoB,EAA2B,IAAI,GACrCC,IAAgBD,EAA2BE,MAAS,GACpDf,IAASa,EAAwBE,MAAS,GAC1CrB,IAAUmB,EAAI,EAAI;AAExBG,WAAAA,EAAQlB,GAAkB;AAAA,MACxBJ,SAAAA;AAAAA,MACAD,KAAAA;AAAAA,MACAO,QAAAA;AAAAA,MACAc,eAAAA;AAAAA,IACF,CAAC,GAEM,MAAA;;AAAAL,aAAAA,EAAAQ,GAAA,MAAA,EAASL,IAAAA,EAAMM,YAANN,gBAAAA,EAAAA,KAAAA,EAAiB,CAAI;AAAA;AAAA,EACvC;AACF,CAAC;ACvCM,SAASO,EAAUvB,GAAuC;AAC/D,QAAM,EAAE,eAAAkB,GAAe,SAAApB,GAAS,QAAAM,EAAO,IAAIH,EAAOC,CAAgB;AAElE,SAAAgB,EAAc,QAAQlB,GAEf;AAAA,IACL,SAAAF;AAAA,IACA,KAAK,MAAMM,EAAO;AAAA,EAAA;AAEtB;ACPO,SAASoB,IAAwB;AAChC,QAAAC,IAAaxB,EAAOC,CAAgB;AAE1C,SAAO,CAACuB,EAAW,SAAS,MAAMA,EAAW,OAAO,KAAK;AAC3D;"}