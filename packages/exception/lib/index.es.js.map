{"version":3,"file":"index.es.js","sources":["../src/code.ts","../src/error.ts","../src/index.ts"],"sourcesContent":["export enum ErrorCode {\n  docTypeError = 'docTypeError',\n  contextNotFound = 'contextNotFound',\n  timerNotFound = 'timerNotFound',\n  ctxCallOutOfScope = 'ctxCallOutOfScope',\n  createNodeInParserFail = 'createNodeInParserFail',\n  stackOverFlow = 'stackOverFlow',\n  parserMatchError = 'parserMatchError',\n  serializerMatchError = 'serializerMatchError',\n  getAtomFromSchemaFail = 'getAtomFromSchemaFail',\n  expectDomTypeError = 'expectDomTypeError',\n  callCommandBeforeEditorView = 'callCommandBeforeEditorView',\n  missingRootElement = 'missingRootElement',\n  missingNodeInSchema = 'missingNodeInSchema',\n  missingMarkInSchema = 'missingMarkInSchema',\n\n  // collab plugin\n  ctxNotBind = 'ctxNotBind',\n  missingYjsDoc = 'missingYjsDoc',\n}\n","import type { ErrorCode } from './code'\n\nexport class MilkdownError extends Error {\n  public code: string\n  constructor(code: ErrorCode, message: string) {\n    super(message)\n    this.name = 'MilkdownError'\n    this.code = code\n  }\n}\n","import { ErrorCode } from './code'\nimport { MilkdownError } from './error'\n\nconst functionReplacer = (_: string, value: unknown) =>\n  typeof value === 'function' ? '[Function]' : value\n\nconst stringify = (x: unknown): string => JSON.stringify(x, functionReplacer)\n\nexport function docTypeError(type: unknown) {\n  return new MilkdownError(\n    ErrorCode.docTypeError,\n    `Doc type error, unsupported type: ${stringify(type)}`\n  )\n}\n\nexport function contextNotFound(name: string) {\n  return new MilkdownError(\n    ErrorCode.contextNotFound,\n    `Context \"${name}\" not found, do you forget to inject it?`\n  )\n}\n\nexport function timerNotFound(name: string) {\n  return new MilkdownError(\n    ErrorCode.timerNotFound,\n    `Timer \"${name}\" not found, do you forget to record it?`\n  )\n}\n\nexport function ctxCallOutOfScope() {\n  return new MilkdownError(\n    ErrorCode.ctxCallOutOfScope,\n    'Should not call a context out of the plugin.'\n  )\n}\n\nexport function createNodeInParserFail(...args: unknown[]) {\n  const message = args.reduce((msg, arg) => {\n    if (!arg) return msg\n\n    const serialize = (x: unknown): string => {\n      if (Array.isArray(x))\n        return (x as unknown[]).map((y) => serialize(y)).join(', ')\n\n      if ((x as { toJSON: () => Record<string, unknown> }).toJSON)\n        return stringify(\n          (x as { toJSON: () => Record<string, unknown> }).toJSON()\n        )\n\n      if ((x as { spec: string }).spec)\n        return stringify((x as { spec: string }).spec)\n\n      return (x as { toString: () => string }).toString()\n    }\n    return `${msg}, ${serialize(arg)}`\n  }, 'Create prosemirror node from remark failed in parser') as string\n\n  return new MilkdownError(ErrorCode.createNodeInParserFail, message)\n}\n\nexport function stackOverFlow() {\n  return new MilkdownError(\n    ErrorCode.stackOverFlow,\n    'Stack over flow, cannot pop on an empty stack.'\n  )\n}\n\nexport function parserMatchError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.parserMatchError,\n    `Cannot match target parser for node: ${stringify(node)}.`\n  )\n}\n\nexport function serializerMatchError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.serializerMatchError,\n    `Cannot match target serializer for node: ${stringify(node)}.`\n  )\n}\n\nexport function getAtomFromSchemaFail(type: 'mark' | 'node', name: string) {\n  return new MilkdownError(\n    ErrorCode.getAtomFromSchemaFail,\n    `Cannot get ${type}: ${name} from schema.`\n  )\n}\n\nexport function expectDomTypeError(node: unknown) {\n  return new MilkdownError(\n    ErrorCode.expectDomTypeError,\n    `Expect to be a dom, but get: ${stringify(node)}.`\n  )\n}\n\nexport function callCommandBeforeEditorView() {\n  return new MilkdownError(\n    ErrorCode.callCommandBeforeEditorView,\n    \"You're trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized\"\n  )\n}\n\nexport function missingRootElement() {\n  return new MilkdownError(\n    ErrorCode.missingRootElement,\n    'Missing root element, milkdown cannot find root element of the editor.'\n  )\n}\n\nexport function missingNodeInSchema(name: string) {\n  return new MilkdownError(\n    ErrorCode.missingNodeInSchema,\n    `Missing node in schema, milkdown cannot find \"${name}\" in schema.`\n  )\n}\n\nexport function missingMarkInSchema(name: string) {\n  return new MilkdownError(\n    ErrorCode.missingMarkInSchema,\n    `Missing mark in schema, milkdown cannot find \"${name}\" in schema.`\n  )\n}\n\nexport function ctxNotBind() {\n  return new MilkdownError(\n    ErrorCode.ctxNotBind,\n    'Context not bind, please make sure the plugin has been initialized.'\n  )\n}\n\nexport function missingYjsDoc() {\n  return new MilkdownError(\n    ErrorCode.missingYjsDoc,\n    'Missing yjs doc, please make sure you have bind one.'\n  )\n}\n"],"names":["ErrorCode","MilkdownError","code","message","functionReplacer","_","value","stringify","x","docTypeError","type","contextNotFound","name","timerNotFound","ctxCallOutOfScope","createNodeInParserFail","args","msg","arg","serialize","y","stackOverFlow","parserMatchError","node","serializerMatchError","getAtomFromSchemaFail","expectDomTypeError","callCommandBeforeEditorView","missingRootElement","missingNodeInSchema","missingMarkInSchema","ctxNotBind","missingYjsDoc"],"mappings":"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"}