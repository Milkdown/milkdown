{"version":3,"file":"index.js","sources":["../src/toolkit/browser.ts","../src/toolkit/input-rules/custom-input-rules.ts","../src/toolkit/input-rules/mark-rule.ts","../src/toolkit/input-rules/node-rule.ts","../src/toolkit/position/index.ts","../src/toolkit/prose/helper.ts","../src/toolkit/prose/node.ts","../src/toolkit/prose/schema.ts","../src/toolkit/prose/selection.ts"],"sourcesContent":["/**\n * Copy paste from:\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/browser.ts\n */\n\nconst nav = typeof navigator != 'undefined' ? navigator : null\nconst doc = typeof document != 'undefined' ? document : null\nconst agent = (nav && nav.userAgent) || ''\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(agent)\nconst ie_upto10 = /MSIE \\d/.exec(agent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(agent)\n\nexport const ie = !!(ie_upto10 || ie_11up || ie_edge)\nexport const ie_version = ie_upto10\n  ? (document as typeof document & { documentMode: unknown }).documentMode\n  : ie_11up\n    ? +ie_11up[1]!\n    : ie_edge\n      ? +ie_edge[1]!\n      : 0\nexport const gecko = !ie && /gecko\\/(\\d+)/i.test(agent)\nexport const gecko_version =\n  gecko && +(/Firefox\\/(\\d+)/.exec(agent) || [0, 0])[1]\n\nconst _chrome = !ie && /Chrome\\/(\\d+)/.exec(agent)\nexport const chrome = !!_chrome\nexport const chrome_version = _chrome ? +_chrome[1]! : 0\nexport const safari = !ie && !!nav && /Apple Computer/.test(nav.vendor)\n// Is true for both iOS and iPadOS for convenience\nexport const ios =\n  safari && (/Mobile\\/\\w+/.test(agent) || (!!nav && nav.maxTouchPoints > 2))\nexport const mac = ios || (nav ? /Mac/.test(nav.platform) : false)\nexport const android = /Android \\d/.test(agent)\nexport const webkit =\n  !!doc && 'webkitFontSmoothing' in doc.documentElement.style\nexport const webkit_version = webkit\n  ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  : 0\n","import type { InputRule } from '../../inputrules'\n// import type { EditorState, TextSelection, Transaction } from '../../state'\nimport type { TextSelection } from '../../state'\nimport { Plugin, PluginKey } from '../../state'\nimport type { EditorView } from '../../view'\n\nfunction run(\n  view: EditorView,\n  from: number,\n  to: number,\n  text: string,\n  rules: InputRule[],\n  plugin: Plugin\n) {\n  if (view.composing) return false\n  const state = view.state\n  const $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code) return false\n  const textBefore =\n    $from.parent.textBetween(\n      Math.max(0, $from.parentOffset - 500),\n      $from.parentOffset,\n      undefined,\n      '\\uFFFC'\n    ) + text\n  for (let i = 0; i < rules.length; i++) {\n    // NOTE: This is a workaround for the lack of type safety in the inputrules module.\n    // const match = (rules[i] as { match: RegExp }).match.exec(textBefore)\n    const match = (rules[i] as any).match.exec(textBefore)\n    const tr =\n      match &&\n      match[0] &&\n      // NOTE: This is a workaround for the lack of type safety in the inputrules module.\n      // rules[i] as { handler: (state: EditorState, match: string[], from: number, to: number) => Transaction }\n      (rules[i] as any).handler(\n        state,\n        match,\n        from - (match[0].length - text.length),\n        to\n      )\n    if (!tr) continue\n    // @ts-expect-error Internal property that should be in the class; only relevant if explicitly false.\n    if (rules[i]?.undoable !== false)\n      tr.setMeta(plugin, { transform: tr, from, to, text })\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nexport const customInputRulesKey = new PluginKey('MILKDOWN_CUSTOM_INPUTRULES')\nexport function customInputRules({ rules }: { rules: InputRule[] }): Plugin {\n  const plugin: Plugin = new Plugin({\n    key: customInputRulesKey,\n    isInputRules: true,\n\n    state: {\n      init() {\n        return null\n      },\n      apply(this: typeof plugin, tr, prev) {\n        const stored = tr.getMeta(this)\n        if (stored) return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      },\n    },\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            const { $cursor } = view.state.selection as TextSelection\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, '', rules, plugin)\n          })\n          return false\n        },\n      },\n      handleKeyDown(view, event) {\n        if (event.key !== 'Enter') return false\n        const { $cursor } = view.state.selection as TextSelection\n        if ($cursor)\n          return run(view, $cursor.pos, $cursor.pos, '\\n', rules, plugin)\n        return false\n      },\n    },\n  })\n  return plugin\n}\n","import { InputRule } from '../../inputrules'\nimport type { Mark, MarkType } from '../../model'\nimport type { Captured, Options } from './common'\n\n/// Create an input rule for a mark.\nexport function markRule(\n  regexp: RegExp,\n  markType: MarkType,\n  options: Options = {}\n): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const { tr } = state\n    const matchLength = match.length\n\n    let group = match[matchLength - 1]\n    let fullMatch = match[0]\n    let initialStoredMarks: readonly Mark[] = []\n\n    let markEnd = end\n\n    const captured: Captured = {\n      group,\n      fullMatch,\n      start,\n      end,\n    }\n\n    const result = options.updateCaptured?.(captured)\n    Object.assign(captured, result)\n    ;({ group, fullMatch, start, end } = captured)\n\n    if (fullMatch === null) return null\n\n    if (group?.trim() === '') return null\n\n    if (group) {\n      const startSpaces = fullMatch.search(/\\S/)\n      const textStart = start + fullMatch.indexOf(group)\n      const textEnd = textStart + group.length\n\n      initialStoredMarks = tr.storedMarks ?? []\n\n      if (textEnd < end) tr.delete(textEnd, end)\n\n      if (textStart > start) tr.delete(start + startSpaces, textStart)\n\n      markEnd = start + startSpaces + group.length\n\n      const attrs = options.getAttr?.(match)\n\n      tr.addMark(start, markEnd, markType.create(attrs))\n      tr.setStoredMarks(initialStoredMarks)\n\n      options.beforeDispatch?.({ match, start, end, tr })\n    }\n\n    return tr\n  })\n}\n","import { InputRule } from '../../inputrules'\nimport type { NodeType } from '../../model'\nimport type { Captured, Options } from './common'\n\n/// Create an input rule for a node.\nexport function nodeRule(\n  regexp: RegExp,\n  nodeType: NodeType,\n  options: Options = {}\n): InputRule {\n  return new InputRule(regexp, (state, match, start, end) => {\n    const { tr } = state\n    let group: string | undefined = match[1]\n    let fullMatch = match[0]\n\n    const captured: Captured = {\n      group,\n      fullMatch,\n      start,\n      end,\n    }\n\n    const result = options.updateCaptured?.(captured)\n    Object.assign(captured, result)\n    ;({ group, fullMatch, start, end } = captured)\n\n    if (fullMatch === null) return null\n\n    if (!group || group.trim() === '') return null\n\n    const attrs = options.getAttr?.(match)\n    const node = nodeType.createAndFill(attrs)\n\n    if (node) {\n      tr.replaceRangeWith(\n        nodeType.isBlock ? tr.doc.resolve(start).before() : start,\n        end,\n        node\n      )\n      options.beforeDispatch?.({\n        match: [fullMatch, group ?? ''],\n        start,\n        end,\n        tr,\n      })\n    }\n\n    return tr\n  })\n}\n","import { expectDomTypeError, missingRootElement } from '@milkdown/exception'\n\nimport type { EditorView } from '../../view'\n\ntype Point = [top: number, left: number]\n\nexport function calculateNodePosition(\n  view: EditorView,\n  target: HTMLElement,\n  handler: (\n    selectedRect: DOMRect,\n    targetRect: DOMRect,\n    parentRect: DOMRect\n  ) => Point\n) {\n  const state = view.state\n  const { from } = state.selection\n\n  const { node } = view.domAtPos(from)\n  const element = node instanceof Text ? node.parentElement : node\n  if (!(element instanceof HTMLElement)) throw expectDomTypeError(element)\n\n  const selectedNodeRect = element.getBoundingClientRect()\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent) throw expectDomTypeError(parent)\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\ninterface Rect {\n  left: number\n  right: number\n  top: number\n  bottom: number\n}\n\nexport function calculateTextPosition(\n  view: EditorView,\n  target: HTMLElement,\n  handler: (\n    start: Rect,\n    end: Rect,\n    targetRect: DOMRect,\n    parentRect: DOMRect\n  ) => Point\n) {\n  const state = view.state\n  const { from, to } = state.selection\n  const start = view.coordsAtPos(from)\n  const end = view.coordsAtPos(to)\n\n  const targetNodeRect = target.getBoundingClientRect()\n  const parent = target.parentElement\n  if (!parent) throw missingRootElement()\n\n  const parentNodeRect = parent.getBoundingClientRect()\n\n  const [top, left] = handler(start, end, targetNodeRect, parentNodeRect)\n\n  target.style.top = `${top}px`\n  target.style.left = `${left}px`\n}\n\nfunction minMax(value = 0, min = 0, max = 0): number {\n  return Math.min(Math.max(value, min), max)\n}\n\nexport function posToDOMRect(\n  view: EditorView,\n  from: number,\n  to: number\n): DOMRect {\n  const minPos = 0\n  const maxPos = view.state.doc.content.size\n  const resolvedFrom = minMax(from, minPos, maxPos)\n  const resolvedEnd = minMax(to, minPos, maxPos)\n  const start = view.coordsAtPos(resolvedFrom)\n  const end = view.coordsAtPos(resolvedEnd, -1)\n  const top = Math.min(start.top, end.top)\n  const bottom = Math.max(start.bottom, end.bottom)\n  const left = Math.min(start.left, end.left)\n  const right = Math.max(start.right, end.right)\n  const width = right - left\n  const height = bottom - top\n  const x = left\n  const y = top\n  const data = {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height,\n    x,\n    y,\n  }\n\n  return {\n    ...data,\n    toJSON: () => data,\n  }\n}\n","import type { NodeType, Node as ProseNode } from '../../model'\nimport type { Transaction } from '../../state'\n\nexport function cloneTr(tr: Transaction): Transaction {\n  return Object.assign(Object.create(tr), tr).setTime(Date.now())\n}\n\nexport function equalNodeType(\n  nodeType: NodeType | NodeType[],\n  node: ProseNode\n) {\n  return (\n    (Array.isArray(nodeType) && nodeType.includes(node.type)) ||\n    node.type === nodeType\n  )\n}\n","import type { MarkType, Node, NodeType, ResolvedPos } from '../../model'\nimport type { Predicate } from './types'\n\nexport interface NodeWithPos {\n  pos: number\n  node: Node\n}\nexport interface NodeWithFromTo {\n  from: number\n  to: number\n  node: Node\n}\n\nexport function flatten(node: Node, descend = true): NodeWithPos[] {\n  const result: NodeWithPos[] = []\n  node.descendants((child, pos) => {\n    result.push({ node: child, pos })\n    if (!descend) return false\n\n    return undefined\n  })\n  return result\n}\n\nexport function findChildren(predicate: Predicate) {\n  return (node: Node, descend?: boolean): NodeWithPos[] =>\n    flatten(node, descend).filter((child) => predicate(child.node))\n}\n\nexport function findChildrenByMark(\n  node: Node,\n  markType: MarkType,\n  descend?: boolean\n): NodeWithPos[] {\n  return findChildren((child) => Boolean(markType.isInSet(child.marks)))(\n    node,\n    descend\n  )\n}\n\nexport function findParent(predicate: Predicate) {\n  return ($pos: ResolvedPos): NodeWithFromTo | undefined => {\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n      const node = $pos.node(depth)\n\n      if (predicate(node)) {\n        const from = $pos.before(depth)\n        const to = $pos.after(depth)\n        return {\n          from,\n          to,\n          node,\n        }\n      }\n    }\n\n    return undefined\n  }\n}\n\nexport function findParentNodeType($pos: ResolvedPos, nodeType: NodeType) {\n  return findParent((node) => node.type === nodeType)($pos)\n}\n","import { getAtomFromSchemaFail } from '@milkdown/exception'\n\nimport type { MarkType, NodeType, Schema } from '../../model'\n\nexport function getNodeFromSchema(type: string, schema: Schema): NodeType {\n  const target = schema.nodes[type]\n\n  if (!target) throw getAtomFromSchemaFail('node', type)\n\n  return target\n}\n\nexport function getMarkFromSchema(type: string, schema: Schema): MarkType {\n  const target = schema.marks[type]\n\n  if (!target) throw getAtomFromSchemaFail('mark', type)\n\n  return target\n}\n","import type { NodeType, Node as ProseNode, ResolvedPos } from '../../model'\nimport type { Selection } from '../../state'\nimport { NodeSelection } from '../../state'\nimport { equalNodeType } from './helper'\nimport type { Predicate } from './types'\n\nexport interface ContentNodeWithPos {\n  pos: number\n  start: number\n  depth: number\n  node: ProseNode\n}\n\nexport function findParentNodeClosestToPos(predicate: Predicate) {\n  return ($pos: ResolvedPos): ContentNodeWithPos | undefined => {\n    for (let i = $pos.depth; i > 0; i--) {\n      const node = $pos.node(i)\n      if (predicate(node)) {\n        return {\n          pos: i > 0 ? $pos.before(i) : 0,\n          start: $pos.start(i),\n          depth: i,\n          node,\n        }\n      }\n    }\n\n    return undefined\n  }\n}\n\nexport function findParentNode(predicate: Predicate) {\n  return (selection: Selection): ContentNodeWithPos | undefined => {\n    return findParentNodeClosestToPos(predicate)(selection.$from)\n  }\n}\n\nexport function findSelectedNodeOfType(\n  selection: Selection,\n  nodeType: NodeType\n): ContentNodeWithPos | undefined {\n  if (!(selection instanceof NodeSelection)) return\n\n  const { node, $from } = selection\n  if (equalNodeType(nodeType, node))\n    return {\n      node,\n      pos: $from.pos,\n      start: $from.start($from.depth),\n      depth: $from.depth,\n    }\n\n  return undefined\n}\n"],"names":[],"mappings":"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"}