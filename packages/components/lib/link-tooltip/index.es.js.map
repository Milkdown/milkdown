{"version":3,"file":"index.es.js","sources":["../../src/__internal__/meta.ts","../../src/link-tooltip/slices.ts","../../src/link-tooltip/tooltips.ts","../../src/link-tooltip/utils.ts","../../src/__internal__/helper.ts","../../src/link-tooltip/preview/preview-component.ts","../../src/link-tooltip/preview/preview-view.ts","../../src/link-tooltip/preview/preview-configure.ts","../../src/link-tooltip/edit/edit-component.ts","../../src/link-tooltip/edit/edit-view.ts","../../src/link-tooltip/edit/edit-configure.ts","../../src/link-tooltip/configure.ts","../../src/link-tooltip/index.ts"],"sourcesContent":["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown-nota/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { $ctx } from '@milkdown/utils'\nimport type { Mark } from '@milkdown/prose/model'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport interface LinkToolTipState {\n  mode: 'preview' | 'edit'\n}\n\nconst defaultState: LinkToolTipState = {\n  mode: 'preview',\n}\n\nexport const linkTooltipState = $ctx({ ...defaultState }, 'linkTooltipStateCtx')\n\nwithMeta(linkTooltipState, {\n  displayName: 'State<link-tooltip>',\n  group: 'LinkTooltip',\n})\n\nexport interface LinkTooltipAPI {\n  addLink: (from: number, to: number) => void\n  editLink: (mark: Mark, from: number, to: number) => void\n  removeLink: (from: number, to: number) => void\n}\n\nconst defaultAPI: LinkTooltipAPI = {\n  addLink: () => {},\n  editLink: () => {},\n  removeLink: () => {},\n}\n\nexport const linkTooltipAPI = $ctx({ ...defaultAPI }, 'linkTooltipAPICtx')\n\nwithMeta(linkTooltipState, {\n  displayName: 'API<link-tooltip>',\n  group: 'LinkTooltip',\n})\n\nexport interface LinkTooltipConfig {\n  linkIcon: () => ReturnType<typeof html>\n  editButton: () => ReturnType<typeof html>\n  confirmButton: () => ReturnType<typeof html>\n  removeButton: () => ReturnType<typeof html>\n  onCopyLink: (link: string) => void\n  inputPlaceholder: string\n  shouldOpenOutside: (src: string) => boolean\n  getActualSrc: (src: string) => string\n}\n\nconst defaultConfig: LinkTooltipConfig = {\n  linkIcon: () => '🔗',\n  editButton: () => '✎',\n  removeButton: () => '⌫',\n  confirmButton: () => html`Confirm ⏎`,\n  onCopyLink: () => {},\n  inputPlaceholder: 'Paste link...',\n  shouldOpenOutside: () => true,\n  getActualSrc: (src: string) => src,\n}\n\nexport const linkTooltipConfig = $ctx(\n  {\n    ...defaultConfig,\n  },\n  'linkTooltipConfigCtx'\n)\n\nwithMeta(linkTooltipState, {\n  displayName: 'Config<link-tooltip>',\n  group: 'LinkTooltip',\n})\n","import { tooltipFactory } from '@milkdown/plugin-tooltip'\nimport { withMeta } from '../__internal__/meta'\n\nexport const linkPreviewTooltip = tooltipFactory('LINK_PREVIEW')\nwithMeta(linkPreviewTooltip[0], {\n  displayName: 'PreviewTooltipSpec<link-tooltip>',\n  group: 'LinkTooltip',\n})\nwithMeta(linkPreviewTooltip[1], {\n  displayName: 'PreviewTooltipPlugin<link-tooltip>',\n  group: 'LinkTooltip',\n})\nexport const linkEditTooltip = tooltipFactory('LINK_EDIT')\nwithMeta(linkEditTooltip[0], {\n  displayName: 'EditTooltipSpec<link-tooltip>',\n  group: 'LinkTooltip',\n})\nwithMeta(linkEditTooltip[1], {\n  displayName: 'EditTooltipPlugin<link-tooltip>',\n  group: 'LinkTooltip',\n})\n","import type { Mark, Node } from '@milkdown/prose/model'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { linkSchema } from '@milkdown/preset-commonmark'\nimport { linkPreviewTooltip } from './tooltips'\n\nexport function findMarkPosition(\n  mark: Mark,\n  node: Node,\n  doc: Node,\n  from: number,\n  to: number\n) {\n  let markPos = { start: -1, end: -1 }\n  doc.nodesBetween(from, to, (n, pos) => {\n    // stop recursive finding if result is found\n    if (markPos.start > -1) return false\n\n    if (markPos.start === -1 && mark.isInSet(n.marks) && node === n) {\n      markPos = {\n        start: pos,\n        end: pos + Math.max(n.textContent.length, 1),\n      }\n    }\n\n    return undefined\n  })\n\n  return markPos\n}\n\nexport function shouldShowPreviewWhenHover(\n  ctx: Ctx,\n  view: EditorView,\n  event: MouseEvent\n) {\n  const $pos = view.posAtCoords({ left: event.clientX, top: event.clientY })\n  if (!$pos) return\n\n  const { pos } = $pos\n  const node = view.state.doc.nodeAt(pos)\n\n  if (!node) return\n\n  const mark = node.marks.find(\n    (mark) => mark.type === linkSchema.mark.type(ctx)\n  )\n  if (!mark) return\n\n  const key = linkPreviewTooltip.pluginKey()\n  if (!key) return\n\n  return { show: true, pos, node, mark }\n}\n","export function defIfNotExists(\n  tagName: string,\n  element: CustomElementConstructor\n) {\n  const current = customElements.get(tagName)\n  if (current == null) {\n    customElements.define(tagName, element)\n    return\n  }\n\n  if (current === element) return\n\n  // eslint-disable-next-line no-console\n  console.warn(`Custom element ${tagName} has been defined before.`)\n}\n","import type { Component } from 'atomico'\nimport { c, html } from 'atomico'\nimport type { LinkTooltipConfig } from '../slices'\n\nexport interface LinkPreviewProps {\n  config: LinkTooltipConfig\n  src: string\n  onEdit: () => void\n  onRemove: () => void\n}\n\nexport const linkPreviewComponent: Component<LinkPreviewProps> = ({\n  config,\n  src,\n  onEdit,\n  onRemove,\n}) => {\n  const onClickEditButton = (e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    onEdit?.()\n  }\n\n  const onClickRemoveButton = (e: MouseEvent) => {\n    e.stopPropagation()\n    e.preventDefault()\n    onRemove?.()\n  }\n\n  const onClickPreview = (e: MouseEvent) => {\n    e.preventDefault()\n    if (navigator.clipboard && src) {\n      navigator.clipboard\n        .writeText(src)\n        .then(() => {\n          config?.onCopyLink(src)\n        })\n        .catch((e) => {\n          throw e\n        })\n    }\n  }\n\n  return html`\n    <host>\n      <div class=\"link-preview\" onmousedown=${onClickPreview}>\n        <span class=\"link-icon\"> ${config?.linkIcon()} </span>\n        <a\n          href=${config?.getActualSrc(src ?? '')}\n          target=${config?.shouldOpenOutside(src ?? '') ? '_blank' : '_self'}\n          class=\"link-display\"\n          >${src}</a\n        >\n        <span class=\"button link-edit-button\" onmousedown=${onClickEditButton}>\n          ${config?.editButton()}\n        </span>\n        <span\n          class=\"button link-remove-button\"\n          onmousedown=${onClickRemoveButton}\n        >\n          ${config?.removeButton()}\n        </span>\n      </div>\n    </host>\n  `\n}\n\nlinkPreviewComponent.props = {\n  config: Object,\n  src: String,\n  onEdit: Function,\n  onRemove: Function,\n}\n\nexport const LinkPreviewElement = c(linkPreviewComponent)\n","import type { PluginView } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport type { Mark } from '@milkdown/prose/model'\nimport { TooltipProvider } from '@milkdown/plugin-tooltip'\nimport type { Ctx, Slice } from '@milkdown/ctx'\nimport type { LinkToolTipState } from '../slices'\nimport { linkTooltipAPI, linkTooltipConfig, linkTooltipState } from '../slices'\nimport { LinkPreviewElement } from './preview-component'\n\nexport class LinkPreviewTooltip implements PluginView {\n  #content = new LinkPreviewElement()\n  #provider: TooltipProvider\n  #slice: Slice<LinkToolTipState>\n  // #slice: Slice<LinkToolTipState> = this.ctx.use(linkTooltipState.key)\n\n  #hovering = false\n\n  // get #instance() {\n  //   return this.#provider.getInstance()\n  // }\n\n  constructor(\n    readonly ctx: Ctx,\n    view: EditorView\n  ) {\n    this.#provider = new TooltipProvider({\n      debounce: 0,\n      content: this.#content,\n      shouldShow: () => false,\n    })\n    this.#provider.update(view)\n    this.#slice = ctx.use(linkTooltipState.key)\n    this.#slice.on(this.#onStateChange)\n  }\n\n  // setRect = (rect: DOMRect) => {\n  //   // this.#provider.getInstance()?.setProps({\n  //   //   getReferenceClientRect: () => rect,\n  //   // })\n  //   this.#provider.virtualElement = {\n  //     getBoundingClientRect: () => rect,\n  //   }\n  // }\n\n  #onStateChange = ({ mode }: LinkToolTipState) => {\n    if (mode === 'edit') this.#hide()\n  }\n\n  #onMouseEnter = () => {\n    this.#hovering = true\n  }\n\n  #onMouseLeave = () => {\n    this.#hovering = false\n  }\n\n  #hide = () => {\n    this.#provider.hide()\n    this.#provider.element.removeEventListener('mouseenter', this.#onMouseEnter)\n    this.#provider.element.removeEventListener('mouseleave', this.#onMouseLeave)\n  }\n\n  show = (mark: Mark, from: number, to: number, rect: DOMRect) => {\n    this.#content.config = this.ctx.get(linkTooltipConfig.key)\n    this.#content.src = mark.attrs.href\n    this.#content.onEdit = () => {\n      this.ctx.get(linkTooltipAPI.key).editLink(mark, from, to)\n    }\n    this.#content.onRemove = () => {\n      this.ctx.get(linkTooltipAPI.key).removeLink(from, to)\n      this.#hide()\n    }\n\n    this.#provider.show({\n      getBoundingClientRect: () => rect,\n    })\n    this.#provider.element.addEventListener('mouseenter', this.#onMouseEnter)\n    this.#provider.element.addEventListener('mouseleave', this.#onMouseLeave)\n  }\n\n  hide = () => {\n    if (this.#hovering) return\n\n    this.#hide()\n  }\n\n  update = () => {}\n\n  destroy = () => {\n    this.#slice.off(this.#onStateChange)\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport debounce from 'lodash.debounce'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { posToDOMRect } from '@milkdown/prose'\nimport { linkTooltipState } from '../slices'\nimport { findMarkPosition, shouldShowPreviewWhenHover } from '../utils'\nimport { linkPreviewTooltip } from '../tooltips'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { LinkPreviewTooltip } from './preview-view'\nimport { LinkPreviewElement } from './preview-component'\n\ndefIfNotExists('milkdown-link-preview', LinkPreviewElement)\nexport function configureLinkPreviewTooltip(ctx: Ctx) {\n  let linkPreviewTooltipView: LinkPreviewTooltip | null\n\n  const DELAY = 200\n  const onMouseMove = debounce((view: EditorView, event: MouseEvent) => {\n    if (!linkPreviewTooltipView) return\n    if (!view.hasFocus()) return\n\n    const state = ctx.get(linkTooltipState.key)\n    if (state.mode === 'edit') return\n\n    const result = shouldShowPreviewWhenHover(ctx, view, event)\n    if (result) {\n      const position = view.state.doc.resolve(result.pos)\n      const markPosition = findMarkPosition(\n        result.mark,\n        result.node,\n        view.state.doc,\n        position.before(),\n        position.after()\n      )\n      const from = markPosition.start\n      const to = markPosition.end\n      linkPreviewTooltipView.show(\n        result.mark,\n        from,\n        to,\n        posToDOMRect(view, from, to)\n      )\n      return\n    }\n\n    linkPreviewTooltipView.hide()\n  }, DELAY)\n\n  const onMouseLeave = () => {\n    setTimeout(() => {\n      linkPreviewTooltipView?.hide()\n    }, DELAY)\n  }\n\n  ctx.set(linkPreviewTooltip.key, {\n    props: {\n      handleDOMEvents: {\n        mousemove: onMouseMove,\n        mouseleave: onMouseLeave,\n      },\n    },\n    view: (view) => {\n      linkPreviewTooltipView = new LinkPreviewTooltip(ctx, view)\n      return linkPreviewTooltipView\n    },\n  })\n}\n","import type { Component } from 'atomico'\nimport { c, html, useEffect, useRef, useState } from 'atomico'\nimport clsx from 'clsx'\nimport type { LinkTooltipConfig } from '../slices'\n\nexport interface LinkEditProps {\n  config: LinkTooltipConfig\n  src: string\n  onConfirm: (href: string) => void\n  onCancel: () => void\n}\n\nexport const linkEditComponent: Component<LinkEditProps> = ({\n  src,\n  onConfirm,\n  onCancel,\n  config,\n}) => {\n  const linkInput = useRef<HTMLInputElement>()\n  const [link, setLink] = useState(src)\n\n  useEffect(() => {\n    setLink(src ?? '')\n  }, [src])\n\n  const onConfirmEdit = () => {\n    onConfirm?.(linkInput.current?.value ?? '')\n  }\n\n  const onKeydown = (e: KeyboardEvent) => {\n    e.stopPropagation()\n    if (e.key === 'Enter') {\n      onConfirm?.(linkInput.current?.value ?? '')\n      e.preventDefault()\n    }\n    if (e.key === 'Escape') {\n      onCancel?.()\n      e.preventDefault()\n    }\n  }\n\n  return html`\n    <host>\n      <div class=\"link-edit\">\n        <input\n          class=\"input-area\"\n          placeholder=${config?.inputPlaceholder}\n          ref=${linkInput}\n          onkeydown=${onKeydown}\n          oninput=${(e: InputEvent) =>\n            setLink((e.target as HTMLInputElement).value)}\n          value=${link}\n        />\n        <span\n          class=${clsx('button confirm', !link && 'hidden')}\n          onclick=${onConfirmEdit}\n        >\n          ${config?.confirmButton()}\n        </span>\n      </div>\n    </host>\n  `\n}\n\nlinkEditComponent.props = {\n  config: Object,\n  src: String,\n  onConfirm: Function,\n  onCancel: Function,\n}\n\nexport const LinkEditElement = c(linkEditComponent)\n","import type { Ctx } from '@milkdown/ctx'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { PluginView } from '@milkdown/prose/state'\nimport type { Mark } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { TooltipProvider } from '@milkdown/plugin-tooltip'\nimport { editorViewCtx } from '@milkdown/core'\nimport { linkSchema } from '@milkdown/preset-commonmark'\nimport { posToDOMRect } from '@milkdown/prose'\nimport { linkTooltipConfig, linkTooltipState } from '../slices'\nimport { LinkEditElement } from './edit-component'\n\ninterface Data {\n  from: number\n  to: number\n  mark: Mark | null\n}\n\nconst defaultData: Data = {\n  from: -1,\n  to: -1,\n  mark: null,\n}\n\nexport class LinkEditTooltip implements PluginView {\n  #content = new LinkEditElement()\n  #provider: TooltipProvider\n  #data: Data = { ...defaultData }\n\n  constructor(\n    readonly ctx: Ctx,\n    view: EditorView\n  ) {\n    this.#provider = new TooltipProvider({\n      content: this.#content,\n      debounce: 0,\n      shouldShow: () => false,\n    })\n    this.#provider.onHide = () => {\n      this.#content.update().catch((e) => {\n        throw e\n      })\n      view.dom.focus({ preventScroll: true })\n    }\n    this.#provider.update(view)\n    this.#content.onConfirm = this.#confirmEdit\n    this.#content.onCancel = this.#reset\n  }\n\n  #reset = () => {\n    this.#provider.hide()\n    this.ctx.update(linkTooltipState.key, (state) => ({\n      ...state,\n      mode: 'preview' as const,\n    }))\n    this.#data = { ...defaultData }\n  }\n\n  #confirmEdit = (href: string) => {\n    const view = this.ctx.get(editorViewCtx)\n    const { from, to, mark } = this.#data\n    const type = linkSchema.type(this.ctx)\n    if (mark && mark.attrs.href === href) {\n      this.#reset()\n      return\n    }\n\n    const tr = view.state.tr\n    if (mark) tr.removeMark(from, to, mark)\n\n    tr.addMark(from, to, type.create({ href }))\n    view.dispatch(tr)\n\n    this.#reset()\n  }\n\n  #enterEditMode = (value: string, from: number, to: number) => {\n    const config = this.ctx.get(linkTooltipConfig.key)\n    this.#content.config = config\n    this.#content.src = value\n    this.ctx.update(linkTooltipState.key, (state) => ({\n      ...state,\n      mode: 'edit' as const,\n    }))\n    const view = this.ctx.get(editorViewCtx)\n    // this.#setRect(posToDOMRect(view, from, to))\n    view.dispatch(\n      view.state.tr.setSelection(TextSelection.create(view.state.doc, from, to))\n    )\n    this.#provider.show({\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    })\n    requestAnimationFrame(() => {\n      this.#content.querySelector('input')?.focus()\n    })\n  }\n\n  update = (view: EditorView) => {\n    const { state } = view\n    const { selection } = state\n    if (!(selection instanceof TextSelection)) return\n    const { from, to } = selection\n    if (from === this.#data.from && to === this.#data.to) return\n\n    this.#reset()\n  }\n\n  destroy = () => {\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n\n  addLink = (from: number, to: number) => {\n    this.#data = {\n      from,\n      to,\n      mark: null,\n    }\n    this.#enterEditMode('', from, to)\n  }\n\n  editLink = (mark: Mark, from: number, to: number) => {\n    this.#data = {\n      from,\n      to,\n      mark,\n    }\n    this.#enterEditMode(mark.attrs.href, from, to)\n  }\n\n  removeLink = (from: number, to: number) => {\n    const view = this.ctx.get(editorViewCtx)\n\n    const tr = view.state.tr\n    tr.removeMark(from, to, linkSchema.type(this.ctx))\n    view.dispatch(tr)\n\n    this.#reset()\n  }\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport { linkTooltipAPI } from '../slices'\nimport { linkEditTooltip } from '../tooltips'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { LinkEditElement } from './edit-component'\nimport { LinkEditTooltip } from './edit-view'\n\ndefIfNotExists('milkdown-link-edit', LinkEditElement)\nexport function configureLinkEditTooltip(ctx: Ctx) {\n  let linkEditTooltipView: LinkEditTooltip | null\n\n  ctx.update(linkTooltipAPI.key, (api) => ({\n    ...api,\n    addLink: (from, to) => {\n      linkEditTooltipView?.addLink(from, to)\n    },\n    editLink: (mark, from, to) => {\n      linkEditTooltipView?.editLink(mark, from, to)\n    },\n    removeLink: (from, to) => {\n      linkEditTooltipView?.removeLink(from, to)\n    },\n  }))\n\n  ctx.set(linkEditTooltip.key, {\n    view: (view) => {\n      linkEditTooltipView = new LinkEditTooltip(ctx, view)\n      return linkEditTooltipView\n    },\n  })\n}\n","import type { Ctx } from '@milkdown/ctx'\nimport { configureLinkPreviewTooltip } from './preview/preview-configure'\nimport { configureLinkEditTooltip } from './edit/edit-configure'\n\nexport function configureLinkTooltip(ctx: Ctx) {\n  configureLinkPreviewTooltip(ctx)\n  configureLinkEditTooltip(ctx)\n}\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { linkTooltipAPI, linkTooltipConfig, linkTooltipState } from './slices'\nimport { linkEditTooltip, linkPreviewTooltip } from './tooltips'\n\nexport * from './slices'\nexport * from './configure'\nexport * from './tooltips'\n\nexport const linkTooltipPlugin: MilkdownPlugin[] = [\n  linkTooltipState,\n  linkTooltipAPI,\n  linkTooltipConfig,\n  linkPreviewTooltip,\n  linkEditTooltip,\n].flat()\n"],"names":["__spreadValues","mark","e","_content","_provider","__privateAdd","__privateGet","__privateSet","__spreadProps"],"mappings":"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"}