{"version":3,"file":"index.es.js","sources":["../../src/__internal__/helper.ts","../../src/__internal__/meta.ts","../../src/table-block/config.ts","../../src/table-block/view/utils.ts","../../src/table-block/view/drag.ts","../../src/table-block/view/pointer.ts","../../src/table-block/view/operation.ts","../../src/table-block/view/component.ts","../../src/table-block/view/view.ts","../../src/table-block/index.ts"],"sourcesContent":["export function defIfNotExists(tagName: string, element: CustomElementConstructor) {\n  const current = customElements.get(tagName)\n  if (current == null) {\n    customElements.define(tagName, element)\n    return\n  }\n\n  if (current === element)\n    return\n\n  // eslint-disable-next-line no-console\n  console.warn(`Custom element ${tagName} has been defined before.`)\n}\n","import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(plugin: T, meta: Partial<Meta> & Pick<Meta, 'displayName'>): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","import { $ctx } from '@milkdown/utils'\nimport type { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport type RenderType =\n  | 'add_row'\n  | 'add_col'\n  | 'delete_row'\n  | 'delete_col'\n  | 'align_col_left'\n  | 'align_col_center'\n  | 'align_col_right'\n  | 'col_drag_handle'\n  | 'row_drag_handle'\n\nexport interface TableBlockConfig {\n  renderButton: (renderType: RenderType) => HTMLElement | ReturnType<typeof html> | string\n}\n\nconst defaultTableBlockConfig: TableBlockConfig = {\n  renderButton: (renderType) => {\n    switch (renderType) {\n      case 'add_row':\n        return '+'\n      case 'add_col':\n        return '+'\n      case 'delete_row':\n        return '-'\n      case 'delete_col':\n        return '-'\n      case 'align_col_left':\n        return 'left'\n      case 'align_col_center':\n        return 'center'\n      case 'align_col_right':\n        return 'right'\n      case 'col_drag_handle':\n        return '='\n      case 'row_drag_handle':\n        return '='\n    }\n  },\n}\n\nexport const tableBlockConfig = $ctx({ ...defaultTableBlockConfig }, 'tableBlockConfigCtx')\n\nwithMeta(tableBlockConfig, {\n  displayName: 'Config<table-block>',\n  group: 'TableBlock',\n})\n","import type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { findParent } from '@milkdown/prose'\nimport type { Ref } from 'atomico'\nimport { editorViewCtx } from '@milkdown/core'\nimport { CellSelection } from '@milkdown/prose/tables'\nimport { findTable } from '@milkdown/preset-gfm'\nimport { computePosition } from '@floating-ui/dom'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { CellIndex, Refs } from './types'\n\nexport function findNodeIndex(parent: Node, child: Node) {\n  for (let i = 0; i < parent.childCount; i++) {\n    if (parent.child(i) === child)\n      return i\n  }\n  return -1\n}\n\nexport function findPointerIndex(event: PointerEvent, view?: EditorView): CellIndex | undefined {\n  if (!view)\n    return\n\n  try {\n    const posAtCoords = view.posAtCoords({ left: event.clientX, top: event.clientY })\n    if (!posAtCoords)\n      return\n    const pos = posAtCoords?.inside\n    if (pos == null || pos < 0)\n      return\n\n    const $pos = view.state.doc.resolve(pos)\n    const node = view.state.doc.nodeAt(pos)\n    if (!node)\n      return\n\n    const cellType = ['table_cell', 'table_header']\n    const rowType = ['table_row', 'table_header_row']\n\n    const cell = cellType.includes(node.type.name) ? node : findParent(node => cellType.includes(node.type.name))($pos)?.node\n    const row = findParent(node => rowType.includes(node.type.name))($pos)?.node\n    const table = findParent(node => node.type.name === 'table')($pos)?.node\n    if (!cell || !row || !table)\n      return\n\n    const columnIndex = findNodeIndex(row, cell)\n    const rowIndex = findNodeIndex(table, row)\n\n    return [rowIndex, columnIndex]\n  }\n  catch {\n    return undefined\n  }\n}\n\nexport function getRelatedDOM(contentWrapperRef: Ref<HTMLDivElement>, [rowIndex, columnIndex]: CellIndex) {\n  const content = contentWrapperRef.current\n  if (!content)\n    return\n  const rows = content.querySelectorAll('tr')\n  const row = rows[rowIndex]\n  if (!row)\n    return\n\n  const firstRow = rows[0]\n  if (!firstRow)\n    return\n\n  const headerCol = firstRow.children[columnIndex]\n  if (!headerCol)\n    return\n\n  const col = row.children[columnIndex]\n  if (!col)\n    return\n\n  return {\n    row,\n    col,\n    headerCol,\n  }\n}\n\nexport function recoveryStateBetweenUpdate(\n  refs: Refs,\n  ctx?: Ctx,\n  node?: Node,\n) {\n  if (!ctx)\n    return\n  if (!node)\n    return\n  const { selection } = ctx.get(editorViewCtx).state\n  if (!(selection instanceof CellSelection))\n    return\n\n  const { $from } = selection\n  const table = findTable($from)\n  if (!table || table.node !== node)\n    return\n\n  if (selection.isColSelection()) {\n    const { $head } = selection\n    const colIndex = $head.index($head.depth - 1)\n    computeColHandlePositionByIndex({\n      refs,\n      index: [0, colIndex],\n      before: (handleDOM) => {\n        handleDOM.querySelector('.button-group')?.setAttribute('data-show', 'true')\n      },\n    })\n    return\n  }\n  if (selection.isRowSelection()) {\n    const { $head } = selection\n    const rowNode = findParent(node => node.type.name === 'table_row' || node.type.name === 'table_header_row')($head)\n    if (!rowNode)\n      return\n    const rowIndex = findNodeIndex(table.node, rowNode.node)\n    computeRowHandlePositionByIndex({\n      refs,\n      index: [rowIndex, 0],\n      before: (handleDOM) => {\n        if (rowIndex > 0)\n          handleDOM.querySelector('.button-group')?.setAttribute('data-show', 'true')\n      },\n    })\n  }\n}\n\ninterface ComputeHandlePositionByIndexProps {\n  refs: Refs\n  index: CellIndex\n  before?: (handleDOM: HTMLDivElement) => void\n  after?: (handleDOM: HTMLDivElement) => void\n}\n\nexport function computeColHandlePositionByIndex({\n  refs,\n  index,\n  before,\n  after,\n}: ComputeHandlePositionByIndexProps) {\n  const {\n    contentWrapperRef,\n    colHandleRef,\n    hoverIndex,\n  } = refs\n  const colHandle = colHandleRef.current\n  if (!colHandle)\n    return\n\n  hoverIndex.current = index\n  const dom = getRelatedDOM(contentWrapperRef, index)\n  if (!dom)\n    return\n  const { headerCol: col } = dom\n  colHandle.dataset.show = 'true'\n  if (before)\n    before(colHandle)\n  computePosition(col, colHandle, { placement: 'top' })\n    .then(({ x, y }) => {\n      Object.assign(colHandle.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n      if (after)\n        after(colHandle)\n    })\n}\n\nexport function computeRowHandlePositionByIndex({\n  refs,\n  index,\n  before,\n  after,\n}: ComputeHandlePositionByIndexProps) {\n  const {\n    contentWrapperRef,\n    rowHandleRef,\n    hoverIndex,\n  } = refs\n  const rowHandle = rowHandleRef.current\n  if (!rowHandle)\n    return\n\n  hoverIndex.current = index\n  const dom = getRelatedDOM(contentWrapperRef, index)\n  if (!dom)\n    return\n  const { row } = dom\n  rowHandle.dataset.show = 'true'\n  if (before)\n    before(rowHandle)\n  computePosition(row, rowHandle, { placement: 'left' })\n    .then(({ x, y }) => {\n      Object.assign(rowHandle.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n      if (after)\n        after(rowHandle)\n    })\n}\n","import throttle from 'lodash.throttle'\nimport { computePosition, offset } from '@floating-ui/dom'\nimport { useEffect, useHost, useMemo } from 'atomico'\nimport { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport { moveColCommand, moveRowCommand, selectColCommand, selectRowCommand } from '@milkdown/preset-gfm'\nimport type { Ctx } from '@milkdown/ctx'\nimport { computeColHandlePositionByIndex, computeRowHandlePositionByIndex, getRelatedDOM } from './utils'\nimport type { CellIndex, DragContext, Refs } from './types'\n\nfunction prepareDndContext(refs: Refs): DragContext | undefined {\n  const {\n    dragPreviewRef,\n    tableWrapperRef,\n    contentWrapperRef,\n    yLineHandleRef,\n    xLineHandleRef,\n    colHandleRef,\n    rowHandleRef,\n  } = refs\n\n  const preview = dragPreviewRef.current\n  if (!preview)\n    return\n  const wrapper = tableWrapperRef.current\n  if (!wrapper)\n    return\n  const content = contentWrapperRef.current\n  if (!content)\n    return\n  const contentRoot = content.querySelector('tbody')\n  if (!contentRoot)\n    return\n  const previewRoot = preview.querySelector('tbody')\n  if (!previewRoot)\n    return\n  const yHandle = yLineHandleRef.current\n  if (!yHandle)\n    return\n  const xHandle = xLineHandleRef.current\n  if (!xHandle)\n    return\n  const colHandle = colHandleRef.current\n  if (!colHandle)\n    return\n  const rowHandle = rowHandleRef.current\n  if (!rowHandle)\n    return\n\n  const context = {\n    preview,\n    wrapper,\n    content,\n    contentRoot,\n    previewRoot,\n    yHandle,\n    xHandle,\n    colHandle,\n    rowHandle,\n  }\n\n  return context\n}\n\nfunction handleDrag(refs: Refs, event: DragEvent, ctx: Ctx | undefined, fn: (context: DragContext) => void) {\n  const view = ctx?.get(editorViewCtx)\n  if (!view?.editable)\n    return\n\n  event.stopPropagation()\n  if (event.dataTransfer)\n    event.dataTransfer.effectAllowed = 'move'\n\n  const context = prepareDndContext(refs)\n\n  if (!context)\n    return\n\n  // This is to avoid a chrome bug:\n  // https://stackoverflow.com/questions/14203734/dragend-dragenter-and-dragleave-firing-off-immediately-when-i-drag\n  requestAnimationFrame(() => {\n    fn(context)\n  })\n}\n\nexport function createDragRowHandler(refs: Refs, ctx?: Ctx) {\n  return (event: DragEvent) => {\n    handleDrag(refs, event, ctx, ({\n      preview,\n      content,\n      previewRoot,\n      yHandle,\n      xHandle,\n      colHandle,\n      rowHandle,\n    }) => {\n      const { hoverIndex, dragInfo } = refs\n      xHandle.dataset.displayType = 'indicator'\n      yHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      rowHandle.querySelector('.button-group')?.setAttribute('data-show', 'false')\n\n      const [rowIndex] = hoverIndex.current!\n\n      dragInfo.current = {\n        startCoords: [event.clientX, event.clientY],\n        startIndex: rowIndex,\n        endIndex: rowIndex,\n        type: 'row',\n      }\n      preview.dataset.direction = 'vertical'\n\n      const rows = content.querySelectorAll('tr')\n      while (previewRoot.firstChild)\n        previewRoot.removeChild(previewRoot.firstChild)\n\n      const row = rows[rowIndex]\n      if (!row)\n        return\n\n      previewRoot.appendChild(row.cloneNode(true))\n      const height = row.getBoundingClientRect().height\n\n      const { width } = content.querySelector('tbody')!.getBoundingClientRect()\n      Object.assign(preview.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n      })\n\n      preview.dataset.show = 'true'\n    })\n  }\n}\n\nexport function createDragColHandler(refs: Refs, ctx?: Ctx) {\n  return (event: DragEvent) => {\n    handleDrag(refs, event, ctx, ({\n      preview,\n      content,\n      previewRoot,\n      yHandle,\n      xHandle,\n      colHandle,\n      rowHandle,\n    }) => {\n      const { hoverIndex, dragInfo } = refs\n      xHandle.dataset.show = 'false'\n      yHandle.dataset.displayType = 'indicator'\n      rowHandle.dataset.show = 'false'\n      colHandle.querySelector('.button-group')?.setAttribute('data-show', 'false')\n\n      const [_, colIndex] = hoverIndex.current!\n\n      dragInfo.current = {\n        startCoords: [event.clientX, event.clientY],\n        startIndex: colIndex,\n        endIndex: colIndex,\n        type: 'col',\n      }\n      preview.dataset.direction = 'horizontal'\n\n      const rows = content.querySelectorAll('tr')\n      while (previewRoot.firstChild)\n        previewRoot.removeChild(previewRoot.firstChild)\n\n      let width: number | undefined\n\n      Array.from(rows).forEach((row) => {\n        const col = row.children[colIndex]\n        if (!col)\n          return\n\n        if (width === undefined)\n          width = col.getBoundingClientRect().width\n\n        const tr = col.parentElement!.cloneNode(false)\n        const clone = col.cloneNode(true)\n        tr.appendChild(clone)\n        previewRoot.appendChild(tr)\n      })\n\n      const { height } = content.querySelector('tbody')!.getBoundingClientRect()\n      Object.assign(preview.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n      })\n\n      preview.dataset.show = 'true'\n    })\n  }\n}\n\nexport function createDragOverHandler(refs: Refs): (e: DragEvent) => void {\n  return throttle((e: DragEvent) => {\n    const context = prepareDndContext(refs)\n    if (!context)\n      return\n    const {\n      preview,\n      content,\n      contentRoot,\n      xHandle,\n      yHandle,\n    } = context\n    const {\n      dragInfo,\n      hoverIndex,\n    } = refs\n\n    if (preview.dataset.show === 'false')\n      return\n    const dom = getRelatedDOM(refs.contentWrapperRef, hoverIndex.current!)\n    if (!dom)\n      return\n    const firstRow = contentRoot.querySelector('tr')\n    if (!firstRow)\n      return\n    const info = dragInfo.current\n    if (!info)\n      return\n\n    const wrapperOffsetTop = (contentRoot.offsetParent as HTMLElement).offsetTop\n    const wrapperOffsetLeft = (contentRoot.offsetParent as HTMLElement).offsetLeft\n\n    if (info.type === 'col') {\n      const width = dom.col.getBoundingClientRect().width\n      const { left, width: fullWidth } = contentRoot.getBoundingClientRect()\n      const leftGap = wrapperOffsetLeft - left\n      const previewLeft = e.clientX + leftGap - width / 2\n      const previewRight = e.clientX + leftGap + width / 2\n\n      const [startX] = info.startCoords\n      const direction = startX < e.clientX ? 'right' : 'left'\n\n      preview.style.top = `${wrapperOffsetTop}px`\n      const previewLeftOffset = previewLeft < left + leftGap - 20\n        ? left + leftGap - 20\n        : previewLeft > left + fullWidth + leftGap - width + 20\n          ? left + fullWidth + leftGap - width + 20\n          : previewLeft\n\n      preview.style.left = `${previewLeftOffset}px`\n\n      const children = Array.from(firstRow.children)\n      const col = children.find((col, index) => {\n        const boundary = col.getBoundingClientRect()\n        let boundaryLeft = boundary.left + wrapperOffsetLeft - left\n        let boundaryRight = boundary.right + wrapperOffsetLeft - left\n        if (direction === 'right') {\n          boundaryLeft = boundaryLeft + boundary.width / 2\n          boundaryRight = boundaryRight + boundary.width / 2\n          if (boundaryLeft <= previewRight && boundaryRight >= previewRight)\n            return true\n          if (index === firstRow.children.length - 1 && previewRight > boundaryRight)\n            return true\n        }\n        else {\n          boundaryLeft = boundaryLeft - boundary.width / 2\n          boundaryRight = boundaryRight - boundary.width / 2\n          if (boundaryLeft <= previewLeft && boundaryRight >= previewLeft)\n            return true\n          if (index === 0 && previewLeft < boundaryLeft)\n            return true\n        }\n\n        return false\n      })\n      if (col) {\n        const yHandleWidth = yHandle.getBoundingClientRect().width\n        const contentBoundary = content.getBoundingClientRect()\n        const index = children.indexOf(col)\n        info.endIndex = index\n\n        computePosition(col, yHandle, {\n          placement: direction === 'left' ? 'left' : 'right',\n          middleware: [offset(direction === 'left' ? -1 * yHandleWidth : 0)],\n        })\n          .then(({ x }) => {\n            yHandle.dataset.show = 'true'\n            Object.assign(yHandle.style, {\n              height: `${contentBoundary.height}px`,\n              left: `${x}px`,\n              top: `${wrapperOffsetTop}px`,\n            })\n          })\n      }\n    }\n    else if (info.type === 'row') {\n      const height = dom.row.getBoundingClientRect().height\n      const { top, height: fullHeight } = contentRoot.getBoundingClientRect()\n\n      const topGap = wrapperOffsetTop - top\n      const previewTop = e.clientY + topGap - height / 2\n      const previewBottom = e.clientY + topGap + height / 2\n\n      const [_, startY] = info.startCoords\n      const direction = startY < e.clientY ? 'down' : 'up'\n\n      const previewTopOffset = previewTop < top + topGap - 20\n        ? top + topGap - 20\n        : previewTop > top + fullHeight + topGap - height + 20\n          ? top + fullHeight + topGap - height + 20\n          : previewTop\n\n      preview.style.top = `${previewTopOffset}px`\n      preview.style.left = `${wrapperOffsetLeft}px`\n\n      const rows = Array.from(contentRoot.querySelectorAll('tr'))\n      const row = rows.find((row, index) => {\n        const boundary = row.getBoundingClientRect()\n        let boundaryTop = boundary.top + wrapperOffsetTop - top\n        let boundaryBottom = boundary.bottom + wrapperOffsetTop - top\n        if (direction === 'down') {\n          boundaryTop = boundaryTop + boundary.height / 2\n          boundaryBottom = boundaryBottom + boundary.height / 2\n          if (boundaryTop <= previewBottom && boundaryBottom >= previewBottom)\n            return true\n          if (index === rows.length - 1 && previewBottom > boundaryBottom)\n            return true\n        }\n        else {\n          boundaryTop = boundaryTop - boundary.height / 2\n          boundaryBottom = boundaryBottom - boundary.height / 2\n          if (boundaryTop <= previewTop && boundaryBottom >= previewTop)\n            return true\n          if (index === 0 && previewTop < boundaryTop)\n            return true\n        }\n        return false\n      })\n      if (row) {\n        const xHandleHeight = xHandle.getBoundingClientRect().height\n        const contentBoundary = content.getBoundingClientRect()\n        const index = rows.indexOf(row)\n        info.endIndex = index\n\n        computePosition(row, xHandle, {\n          placement: direction === 'up' ? 'top' : 'bottom',\n          middleware: [offset(direction === 'up' ? -1 * xHandleHeight : 0)],\n        })\n          .then(({ y }) => {\n            xHandle.dataset.show = 'true'\n            Object.assign(xHandle.style, {\n              width: `${contentBoundary.width}px`,\n              top: `${y}px`,\n            })\n          })\n      }\n    }\n  }, 20)\n}\n\nexport function useDragHandlers(\n  refs: Refs,\n  ctx?: Ctx,\n  getPos?: () => number | undefined,\n) {\n  const {\n    dragPreviewRef,\n    yLineHandleRef,\n    xLineHandleRef,\n    dragInfo,\n  } = refs\n  const host = useHost()\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  const dragRow = useMemo(() => createDragRowHandler(refs, ctx), [refs])\n  const dragCol = useMemo(() => createDragColHandler(refs, ctx), [refs])\n\n  useEffect(() => {\n    const onDragEnd = () => {\n      const preview = dragPreviewRef.current\n      if (!preview)\n        return\n\n      if (preview.dataset.show === 'false')\n        return\n\n      const previewRoot = preview?.querySelector('tbody')\n\n      while (previewRoot?.firstChild)\n        previewRoot?.removeChild(previewRoot.firstChild)\n\n      if (preview)\n        preview.dataset.show = 'false'\n    }\n\n    const onDrop = () => {\n      const preview = dragPreviewRef.current\n      if (!preview)\n        return\n      const yHandle = yLineHandleRef.current\n      if (!yHandle)\n        return\n      const xHandle = xLineHandleRef.current\n      if (!xHandle)\n        return\n      const info = dragInfo.current\n      if (!info)\n        return\n      if (!ctx)\n        return\n      if (preview.dataset.show === 'false')\n        return\n      const colHandle = refs.colHandleRef.current\n      if (!colHandle)\n        return\n      const rowHandle = refs.rowHandleRef.current\n      if (!rowHandle)\n        return\n\n      yHandle.dataset.show = 'false'\n      xHandle.dataset.show = 'false'\n\n      if (info.startIndex === info.endIndex)\n        return\n\n      const commands = ctx.get(commandsCtx)\n      const payload = {\n        from: info.startIndex,\n        to: info.endIndex,\n        pos: (getPos?.() ?? 0) + 1,\n      }\n      if (info.type === 'col') {\n        commands.call(selectColCommand.key, {\n          pos: payload.pos,\n          index: info.startIndex,\n        })\n        commands.call(moveColCommand.key, payload)\n        const index: CellIndex = [0, info.endIndex]\n        computeColHandlePositionByIndex({\n          refs,\n          index,\n        })\n      }\n      else {\n        commands.call(selectRowCommand.key, {\n          pos: payload.pos,\n          index: info.startIndex,\n        })\n        commands.call(moveRowCommand.key, payload)\n        const index: CellIndex = [info.endIndex, 0]\n        computeRowHandlePositionByIndex({\n          refs,\n          index,\n        })\n      }\n\n      requestAnimationFrame(() => {\n        ctx.get(editorViewCtx).focus()\n      })\n    }\n    const onDragOver = createDragOverHandler(refs)\n\n    root.addEventListener('dragover', onDragOver)\n    root.addEventListener('dragend', onDragEnd)\n    root.addEventListener('drop', onDrop)\n    return () => {\n      root.removeEventListener('dragover', onDragOver)\n      root.removeEventListener('dragend', onDragEnd)\n      root.removeEventListener('drop', onDrop)\n    }\n  }, [])\n\n  return {\n    dragRow,\n    dragCol,\n  }\n}\n","import { computePosition, offset } from '@floating-ui/dom'\nimport type { EditorView } from '@milkdown/prose/view'\nimport throttle from 'lodash.throttle'\nimport { useMemo } from 'atomico'\nimport type { Refs } from './types'\nimport {\n  computeColHandlePositionByIndex,\n  computeRowHandlePositionByIndex,\n  findPointerIndex,\n  getRelatedDOM,\n} from './utils'\n\nexport function createPointerMoveHandler(refs: Refs, view?: EditorView): (e: PointerEvent) => void {\n  return throttle((e: PointerEvent) => {\n    if (!view?.editable)\n      return\n    const {\n      contentWrapperRef,\n      yLineHandleRef,\n      xLineHandleRef,\n      colHandleRef,\n      rowHandleRef,\n      hoverIndex,\n      lineHoverIndex,\n    } = refs\n    const yHandle = yLineHandleRef.current\n    if (!yHandle)\n      return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle)\n      return\n    const content = contentWrapperRef.current\n    if (!content)\n      return\n    const rowHandle = rowHandleRef.current\n    if (!rowHandle)\n      return\n    const colHandle = colHandleRef.current\n    if (!colHandle)\n      return\n\n    const index = findPointerIndex(e, view)\n    if (!index)\n      return\n\n    const dom = getRelatedDOM(contentWrapperRef, index)\n    if (!dom)\n      return\n\n    const [rowIndex, colIndex] = index\n    const boundary = dom.col.getBoundingClientRect()\n    const closeToBoundaryLeft = Math.abs(e.clientX - boundary.left) < 8\n    const closeToBoundaryRight = Math.abs(boundary.right - e.clientX) < 8\n    const closeToBoundaryTop = Math.abs(e.clientY - boundary.top) < 8\n    const closeToBoundaryBottom = Math.abs(boundary.bottom - e.clientY) < 8\n\n    const closeToBoundary = closeToBoundaryLeft || closeToBoundaryRight || closeToBoundaryTop || closeToBoundaryBottom\n\n    const rowButtonGroup = rowHandle.querySelector<HTMLElement>('.button-group')\n    const colButtonGroup = colHandle.querySelector<HTMLElement>('.button-group')\n    if (rowButtonGroup)\n      rowButtonGroup.dataset.show = 'false'\n    if (colButtonGroup)\n      colButtonGroup.dataset.show = 'false'\n\n    if (closeToBoundary) {\n      const contentBoundary = content.getBoundingClientRect()\n      rowHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      xHandle.dataset.displayType = 'tool'\n      yHandle.dataset.displayType = 'tool'\n\n      const yHandleWidth = yHandle.getBoundingClientRect().width\n      const xHandleHeight = xHandle.getBoundingClientRect().height\n\n      // display vertical line handle\n      if (closeToBoundaryLeft || closeToBoundaryRight) {\n        lineHoverIndex.current![1] = closeToBoundaryLeft ? colIndex : colIndex + 1\n        computePosition(dom.col, yHandle, {\n          placement: closeToBoundaryLeft ? 'left' : 'right',\n          middleware: [offset(closeToBoundaryLeft ? -1 * yHandleWidth : 0)],\n        })\n          .then(({ x }) => {\n            yHandle.dataset.show = 'true'\n            Object.assign(yHandle.style, {\n              height: `${contentBoundary.height}px`,\n              left: `${x}px`,\n            })\n          })\n      }\n      else {\n        yHandle.dataset.show = 'false'\n      }\n\n      // display horizontal line handle\n      // won't display if the row is the header row\n      if (index[0] !== 0 && (closeToBoundaryTop || closeToBoundaryBottom)) {\n        lineHoverIndex.current![0] = closeToBoundaryTop ? rowIndex : rowIndex + 1\n        computePosition(dom.row, xHandle, {\n          placement: closeToBoundaryTop ? 'top' : 'bottom',\n          middleware: [offset(closeToBoundaryTop ? -1 * xHandleHeight : 0)],\n        })\n          .then(({ y }) => {\n            xHandle.dataset.show = 'true'\n            Object.assign(xHandle.style, {\n              width: `${contentBoundary.width}px`,\n              top: `${y}px`,\n            })\n          })\n      }\n      else {\n        xHandle.dataset.show = 'false'\n      }\n\n      return\n    }\n\n    lineHoverIndex.current = [-1, -1]\n\n    yHandle.dataset.show = 'false'\n    xHandle.dataset.show = 'false'\n    rowHandle.dataset.show = 'true'\n    colHandle.dataset.show = 'true'\n\n    computeRowHandlePositionByIndex({\n      refs,\n      index,\n    })\n    computeColHandlePositionByIndex({\n      refs,\n      index,\n    })\n    hoverIndex.current = index\n  }, 20)\n}\n\nexport function createPointerLeaveHandler(refs: Refs): () => void {\n  return () => {\n    const {\n      rowHandleRef,\n      colHandleRef,\n      yLineHandleRef,\n      xLineHandleRef,\n    } = refs\n    setTimeout(() => {\n      const rowHandle = rowHandleRef.current\n      if (!rowHandle)\n        return\n      const colHandle = colHandleRef.current\n      if (!colHandle)\n        return\n      const yHandle = yLineHandleRef.current\n      if (!yHandle)\n        return\n      const xHandle = xLineHandleRef.current\n      if (!xHandle)\n        return\n\n      rowHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      yHandle.dataset.show = 'false'\n      xHandle.dataset.show = 'false'\n    }, 200)\n  }\n}\n\nexport function usePointerHandlers(refs: Refs, view?: EditorView) {\n  const pointerMove = useMemo(() => createPointerMoveHandler(refs, view), [])\n  const pointerLeave = useMemo(() => createPointerLeaveHandler(refs), [])\n\n  return {\n    pointerMove,\n    pointerLeave,\n  }\n}\n","import { useCallback } from 'atomico'\nimport { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport {\n  addColAfterCommand,\n  addColBeforeCommand,\n  addRowAfterCommand,\n  addRowBeforeCommand,\n  deleteSelectedCellsCommand,\n  selectColCommand,\n  selectRowCommand,\n  setAlignCommand,\n} from '@milkdown/preset-gfm'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { Refs } from './types'\n\nexport function useOperation(refs: Refs, ctx?: Ctx, getPos?: () => number | undefined) {\n  const {\n    xLineHandleRef,\n    contentWrapperRef,\n    colHandleRef,\n    rowHandleRef,\n    hoverIndex,\n    lineHoverIndex,\n  } = refs\n\n  const onAddRow = useCallback(() => {\n    if (!ctx)\n      return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle)\n      return\n\n    const [rowIndex] = lineHoverIndex.current!\n    if (rowIndex < 0)\n      return\n\n    if (!ctx.get(editorViewCtx).editable)\n      return\n\n    const rows = Array.from(contentWrapperRef.current?.querySelectorAll('tr') ?? [])\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    if (rows.length === rowIndex) {\n      commands.call(selectRowCommand.key, { pos, index: rowIndex - 1 })\n      commands.call(addRowAfterCommand.key)\n    }\n    else {\n      commands.call(selectRowCommand.key, { pos, index: rowIndex })\n      commands.call(addRowBeforeCommand.key)\n    }\n\n    commands.call(selectRowCommand.key, { pos, index: rowIndex })\n    xHandle.dataset.show = 'false'\n  }, [])\n\n  const onAddCol = useCallback(() => {\n    if (!ctx)\n      return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle)\n      return\n\n    const [_, colIndex] = lineHoverIndex.current!\n    if (colIndex < 0)\n      return\n\n    if (!ctx.get(editorViewCtx).editable)\n      return\n\n    const cols = Array.from(contentWrapperRef.current?.querySelector('tr')?.children ?? [])\n    const commands = ctx.get(commandsCtx)\n\n    const pos = (getPos?.() ?? 0) + 1\n    if (cols.length === colIndex) {\n      commands.call(selectColCommand.key, { pos, index: colIndex - 1 })\n      commands.call(addColAfterCommand.key)\n    }\n    else {\n      commands.call(selectColCommand.key, { pos, index: colIndex })\n      commands.call(addColBeforeCommand.key)\n    }\n\n    commands.call(selectColCommand.key, { pos, index: colIndex })\n  }, [])\n\n  const selectCol = useCallback(() => {\n    if (!ctx)\n      return\n    const [_, colIndex] = hoverIndex.current!\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    commands.call(selectColCommand.key, { pos, index: colIndex })\n    const buttonGroup = colHandleRef.current?.querySelector<HTMLElement>('.button-group')\n    if (buttonGroup)\n      buttonGroup.dataset.show = buttonGroup.dataset.show === 'true' ? 'false' : 'true'\n  }, [])\n\n  const selectRow = useCallback(() => {\n    if (!ctx)\n      return\n    const [rowIndex, _] = hoverIndex.current!\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    commands.call(selectRowCommand.key, { pos, index: rowIndex })\n    const buttonGroup = rowHandleRef.current?.querySelector<HTMLElement>('.button-group')\n    if (buttonGroup && rowIndex > 0)\n      buttonGroup.dataset.show = buttonGroup.dataset.show === 'true' ? 'false' : 'true'\n  }, [])\n\n  const deleteSelected = useCallback((e: PointerEvent) => {\n    if (!ctx)\n      return\n\n    if (!ctx.get(editorViewCtx).editable)\n      return\n\n    e.preventDefault()\n    e.stopPropagation()\n    const commands = ctx.get(commandsCtx)\n    commands.call(deleteSelectedCellsCommand.key)\n    requestAnimationFrame(() => {\n      ctx.get(editorViewCtx).focus()\n    })\n  }, [])\n\n  const onAlign = useCallback((direction: 'left' | 'center' | 'right') =>\n    (e: PointerEvent) => {\n      if (!ctx)\n        return\n\n      if (!ctx.get(editorViewCtx).editable)\n        return\n\n      e.preventDefault()\n      e.stopPropagation()\n      const commands = ctx.get(commandsCtx)\n      commands.call(setAlignCommand.key, direction)\n      requestAnimationFrame(() => {\n        ctx.get(editorViewCtx).focus()\n      })\n    }, [])\n\n  return {\n    onAddRow,\n    onAddCol,\n    selectCol,\n    selectRow,\n    deleteSelected,\n    onAlign,\n  }\n}\n","import type { Component } from 'atomico'\nimport { c, html, useHost, useLayoutEffect, useMemo, useRef } from 'atomico'\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport type { Ctx } from '@milkdown/ctx'\n\nimport clsx from 'clsx'\nimport type { TableBlockConfig } from '../config'\nimport { useDragHandlers } from './drag'\nimport type { CellIndex, DragInfo, Refs } from './types'\nimport { recoveryStateBetweenUpdate } from './utils'\nimport { usePointerHandlers } from './pointer'\nimport { useOperation } from './operation'\n\nexport interface TableComponentProps {\n  view: EditorView\n  ctx: Ctx\n  getPos: () => number | undefined\n  node: Node\n  config: TableBlockConfig\n}\n\nexport const tableComponent: Component<TableComponentProps> = ({\n  view,\n  ctx,\n  getPos,\n  node,\n  config,\n}) => {\n  const host = useHost()\n  const contentWrapperRef = useRef<HTMLDivElement>()\n  const colHandleRef = useRef<HTMLDivElement>()\n  const rowHandleRef = useRef<HTMLDivElement>()\n  const xLineHandleRef = useRef<HTMLDivElement>()\n  const yLineHandleRef = useRef<HTMLDivElement>()\n  const tableWrapperRef = useRef<HTMLDivElement>()\n  const dragPreviewRef = useRef<HTMLDivElement>()\n  const hoverIndex = useRef<CellIndex>([0, 0])\n  const lineHoverIndex = useRef<CellIndex>([-1, -1])\n  const dragInfo = useRef<DragInfo>()\n  const refs: Refs = useMemo(() => {\n    return {\n      dragPreviewRef,\n      tableWrapperRef,\n      contentWrapperRef,\n      yLineHandleRef,\n      xLineHandleRef,\n      colHandleRef,\n      rowHandleRef,\n      hoverIndex,\n      lineHoverIndex,\n      dragInfo,\n    }\n  }, [])\n\n  useLayoutEffect(() => {\n    const current = contentWrapperRef.current\n    if (!current)\n      return\n\n    const contentDOM = host.current.querySelector('[data-content-dom]')\n\n    if (contentDOM)\n      current.appendChild(contentDOM)\n\n    if (view?.editable)\n      recoveryStateBetweenUpdate(refs, ctx, node)\n  }, [])\n\n  const { pointerLeave, pointerMove } = usePointerHandlers(refs, view)\n  const { dragRow, dragCol } = useDragHandlers(refs, ctx, getPos)\n  const {\n    onAddRow,\n    onAddCol,\n    selectCol,\n    selectRow,\n    deleteSelected,\n    onAlign,\n  } = useOperation(refs, ctx, getPos)\n\n  return html`\n    <host\n      class=${clsx(!view?.editable && 'readonly')}\n      ondragstart=${(e: DragEvent) => e.preventDefault()}\n      ondragover=${(e: DragEvent) => e.preventDefault()}\n      ondragleave=${(e: DragEvent) => e.preventDefault()}\n      onpointermove=${pointerMove}\n      onpointerleave=${pointerLeave}\n    >\n      <button\n        type=\"button\"\n        data-show=\"false\"\n        contenteditable=\"false\"\n        draggable=\"true\"\n        data-role=\"col-drag-handle\"\n        class=\"handle cell-handle\"\n        ondragstart=${dragCol}\n        onclick=${selectCol}\n        onpointerdown=${(e: PointerEvent) => e.stopPropagation()}\n        onpointermove=${(e: PointerEvent) => e.stopPropagation()}\n        ref=${colHandleRef}\n      >\n        ${config?.renderButton('col_drag_handle')}\n        <div\n          data-show=\"false\"\n          class=\"button-group\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n        >\n          <button\n            type=\"button\"\n            onpointerdown=${onAlign('left')}>\n            ${config?.renderButton('align_col_left')}\n          </button>\n          <button\n            type=\"button\"\n            onpointerdown=${onAlign('center')}>\n            ${config?.renderButton('align_col_center')}\n          </button>\n          <button\n            type=\"button\"\n            onpointerdown=${onAlign('right')}>\n            ${config?.renderButton('align_col_right')}\n          </button>\n          <button\n            type=\"button\"\n            onpointerdown=${deleteSelected}>\n            ${config?.renderButton('delete_col')}\n          </button>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        data-show=\"false\"\n        contenteditable=\"false\"\n        draggable=\"true\"\n        data-role=\"row-drag-handle\"\n        class=\"handle cell-handle\"\n        ondragstart=${dragRow}\n        onclick=${selectRow}\n        onpointerdown=${(e: PointerEvent) => e.stopPropagation()}\n        onpointermove=${(e: PointerEvent) => e.stopPropagation()}\n        ref=${rowHandleRef}\n      >\n        ${config?.renderButton('row_drag_handle')}\n        <div\n          data-show=\"false\"\n          class=\"button-group\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n        >\n          <button\n            type=\"button\"\n            onpointerdown=${deleteSelected}>\n            ${config?.renderButton('delete_row')}\n          </button>\n        </div>\n      </button>\n      <div class=\"table-wrapper\" ref=${tableWrapperRef}>\n        <div\n          data-show=\"false\"\n          class=\"drag-preview\"\n          data-direction=\"vertical\"\n          ref=${dragPreviewRef}\n        >\n          <table>\n            <tbody>\n            </tbody>\n          </table>\n        </div>\n        <div\n          data-show=\"false\"\n          contenteditable=\"false\"\n          data-display-type=\"tool\"\n          data-role=\"x-line-drag-handle\"\n          class=\"handle line-handle\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n          ref=${xLineHandleRef}\n        >\n          <button\n            type=\"button\"\n            onclick=${onAddRow}\n            class=\"add-button\">\n            ${config?.renderButton('add_row')}\n          </button>\n        </div>\n        <div\n          data-show=\"false\"\n          contenteditable=\"false\"\n          data-display-type=\"tool\"\n          data-role=\"y-line-drag-handle\"\n          class=\"handle line-handle\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n          ref=${yLineHandleRef}\n        >\n          <button\n            type=\"button\"\n            onclick=${onAddCol}\n            class=\"add-button\">\n            ${config?.renderButton('add_col')}\n          </button>\n        </div>\n        <table ref=${contentWrapperRef} class=\"children\"></table>\n      </div>\n    </host>\n  `\n}\n\ntableComponent.props = {\n  getPos: Function,\n  view: Object,\n  ctx: Object,\n  node: Object,\n  config: Object,\n}\n\nexport const TableElement = c(tableComponent)\n","import { $view } from '@milkdown/utils'\nimport { tableSchema } from '@milkdown/preset-gfm'\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorView, NodeView, NodeViewConstructor } from '@milkdown/prose/view'\nimport type { Ctx } from '@milkdown/ctx'\nimport { NodeSelection } from '@milkdown/prose/state'\nimport { findParent } from '@milkdown/prose'\nimport { CellSelection } from '@milkdown/prose/tables'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { tableBlockConfig } from '../config'\nimport { withMeta } from '../../__internal__/meta'\nimport type { TableComponentProps } from './component'\nimport { TableElement } from './component'\n\nexport class TableNodeView implements NodeView {\n  dom: HTMLElement & TableComponentProps\n  contentDOM: HTMLElement\n  constructor(\n    public ctx: Ctx,\n    public node: Node,\n    public view: EditorView,\n    public getPos: () => number | undefined,\n  ) {\n    const dom = document.createElement('milkdown-table-block') as HTMLElement & TableComponentProps\n    this.dom = dom\n    dom.view = view\n    dom.ctx = ctx\n    dom.getPos = getPos\n    dom.node = node\n    dom.config = ctx.get(tableBlockConfig.key)\n\n    const contentDOM = document.createElement('tbody')\n    this.contentDOM = contentDOM\n    contentDOM.setAttribute('data-content-dom', 'true')\n    contentDOM.classList.add('content-dom')\n\n    dom.appendChild(contentDOM)\n  }\n\n  update(node: Node) {\n    if (node.type !== this.node.type)\n      return false\n\n    if (node.sameMarkup(this.node) && node.content.eq(this.node.content))\n      return false\n\n    this.node = node\n    this.dom.node = node\n\n    return true\n  }\n\n  #handleClick(event: PointerEvent) {\n    const view = this.view\n    if (!view.editable)\n      return false\n\n    const { state, dispatch } = view\n    const pos = view.posAtCoords({ left: event.clientX, top: event.clientY })\n\n    if (!pos)\n      return false\n\n    const $pos = state.doc.resolve(pos.inside)\n    const node = findParent(node => node.type.name === 'table_cell' || node.type.name === 'table_header')($pos)\n    if (!node)\n      return false\n\n    const { from } = node\n\n    const selection = NodeSelection.create(state.doc, from + 1)\n    if (state.selection.eq(selection))\n      return false\n\n    if (state.selection instanceof CellSelection) {\n      setTimeout(() => {\n        dispatch(state.tr.setSelection(selection).scrollIntoView())\n      }, 20)\n    }\n    else {\n      requestAnimationFrame(() => {\n        dispatch(state.tr.setSelection(selection).scrollIntoView())\n      })\n    }\n    return true\n  }\n\n  stopEvent(e: Event) {\n    if (e.type === 'drop' || e.type.startsWith('drag'))\n      return true\n\n    if (e.type === 'mousedown') {\n      if (e.target instanceof HTMLButtonElement)\n        return true\n\n      const target = e.target\n      if (target instanceof HTMLElement && (target.closest('th') || target.closest('td'))) {\n        const event = e as PointerEvent\n        return this.#handleClick(event)\n      }\n    }\n\n    return false\n  }\n\n  ignoreMutation(mutation: MutationRecord) {\n    if (!this.dom || !this.contentDOM)\n      return true\n\n    if ((mutation.type as unknown) === 'selection')\n      return false\n\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes')\n      return true\n\n    if (this.contentDOM.contains(mutation.target))\n      return false\n\n    return true\n  }\n}\n\ndefIfNotExists('milkdown-table-block', TableElement)\nexport const tableBlockView = $view(tableSchema.node, (ctx): NodeViewConstructor => {\n  return (initialNode, view, getPos) => {\n    return new TableNodeView(ctx, initialNode, view, getPos)\n  }\n})\n\nwithMeta(tableBlockView, {\n  displayName: 'NodeView<table-block>',\n  group: 'TableBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { tableBlockView } from './view'\nimport { tableBlockConfig } from './config'\n\nexport * from './view'\nexport * from './config'\n\nexport const tableBlock: MilkdownPlugin[] = [\n  tableBlockConfig,\n  tableBlockView,\n]\n"],"names":["__spreadValues","node","col","row"],"mappings":"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"}