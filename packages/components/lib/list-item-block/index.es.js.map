{"version":3,"file":"index.es.js","sources":["../../src/__internal__/meta.ts","../../src/__internal__/helper.ts","../../src/list-item-block/component.ts","../../src/list-item-block/config.ts","../../src/list-item-block/view.ts","../../src/list-item-block/index.ts"],"sourcesContent":["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n","export function defIfNotExists(\n  tagName: string,\n  element: CustomElementConstructor\n) {\n  const current = customElements.get(tagName)\n  if (current == null) {\n    customElements.define(tagName, element)\n    return\n  }\n\n  if (current === element) return\n\n  // eslint-disable-next-line no-console\n  console.warn(`Custom element ${tagName} has been defined before.`)\n}\n","import type { Component } from 'atomico'\nimport { c, html, useHost, useLayoutEffect, useRef } from 'atomico'\nimport type { ListItemBlockConfig } from './config'\n\ninterface Attrs {\n  label: string\n  checked: boolean\n  listType: string\n}\n\nexport type ListItemComponentProps = Attrs & {\n  config: ListItemBlockConfig\n  readonly: boolean\n  selected: boolean\n  setAttr: <T extends keyof Attrs>(attr: T, value: Attrs[T]) => void\n  onMount: () => void\n}\n\nexport const listItemComponent: Component<ListItemComponentProps> = ({\n  selected,\n  label = '',\n  listType = '',\n  checked,\n  onMount,\n  setAttr,\n  config,\n  readonly,\n}) => {\n  const host = useHost()\n  const contentWrapperRef = useRef<HTMLDivElement>()\n\n  useLayoutEffect(() => {\n    const current = contentWrapperRef.current\n    if (!current) return\n\n    const contentDOM = host.current.querySelector('[data-content-dom]')\n\n    if (contentDOM) {\n      current.appendChild(contentDOM)\n      onMount?.()\n    }\n  }, [])\n\n  const onClickLabel = () => {\n    if (checked == null) return\n\n    setAttr?.('checked', !checked)\n  }\n\n  const labelProps = {\n    label,\n    listType,\n    checked,\n    readonly,\n  }\n\n  return html`<host class=${selected && 'ProseMirror-selectednode'}>\n    <li class=\"list-item\">\n      <div\n        class=\"label-wrapper\"\n        onclick=${onClickLabel}\n        contenteditable=\"false\"\n      >\n        ${config?.renderLabel(labelProps)}\n      </div>\n      <div class=\"children\" ref=${contentWrapperRef}></div>\n    </li>\n  </host>`\n}\n\nlistItemComponent.props = {\n  label: String,\n  checked: Boolean,\n  readonly: Boolean,\n  listType: String,\n  config: Object,\n  selected: Boolean,\n  setAttr: Function,\n  onMount: Function,\n}\n\nexport const ListItemElement = c(listItemComponent)\n","import { $ctx } from '@milkdown/utils'\nimport { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\ninterface RenderLabelProps {\n  label: string\n  listType: string\n  readonly?: boolean\n  checked?: boolean\n}\n\nexport interface ListItemBlockConfig {\n  renderLabel: (props: RenderLabelProps) => void\n}\n\nexport const defaultListItemBlockConfig: ListItemBlockConfig = {\n  renderLabel: ({ label, listType, checked, readonly }: RenderLabelProps) => {\n    if (checked == null)\n      return html`<span class=\"label\"\n        >${listType === 'bullet' ? 'â¦¿' : label}</span\n      >`\n\n    return html`<input\n      disabled=${readonly}\n      class=\"label\"\n      type=\"checkbox\"\n      checked=${checked}\n    />`\n  },\n}\n\nexport const listItemBlockConfig = $ctx(\n  defaultListItemBlockConfig,\n  'listItemBlockConfigCtx'\n)\n\nwithMeta(listItemBlockConfig, {\n  displayName: 'Config<list-item-block>',\n  group: 'ListItemBlock',\n})\n","import { $view } from '@milkdown/utils'\nimport type { NodeViewConstructor } from '@milkdown/prose/view'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { Node } from '@milkdown/prose/model'\nimport { listItemSchema } from '@milkdown/preset-commonmark'\nimport { withMeta } from '../__internal__/meta'\nimport { defIfNotExists } from '../__internal__/helper'\nimport type { ListItemComponentProps } from './component'\nimport { ListItemElement } from './component'\nimport { listItemBlockConfig } from './config'\n\ndefIfNotExists('milkdown-list-item-block', ListItemElement)\nexport const listItemBlockView = $view(\n  listItemSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      const dom = document.createElement(\n        'milkdown-list-item-block'\n      ) as HTMLElement & ListItemComponentProps\n      const contentDOM = document.createElement('div')\n      contentDOM.setAttribute('data-content-dom', 'true')\n      contentDOM.classList.add('content-dom')\n      const config = ctx.get(listItemBlockConfig.key)\n      const bindAttrs = (node: Node) => {\n        dom.listType = node.attrs.listType\n        dom.label = node.attrs.label\n        dom.checked = node.attrs.checked\n\n        dom.readonly = !view.editable\n      }\n\n      bindAttrs(initialNode)\n      dom.appendChild(contentDOM)\n      dom.selected = false\n      dom.setAttr = (attr, value) => {\n        const pos = getPos()\n        if (pos == null) return\n\n        view.dispatch(view.state.tr.setNodeAttribute(pos, attr, value))\n      }\n      dom.onMount = () => {\n        const { anchor, head } = view.state.selection\n        if (view.hasFocus()) {\n          Promise.resolve().then(() => {\n            const anchorPos = view.state.doc.resolve(anchor)\n            const headPos = view.state.doc.resolve(head)\n            view.dispatch(\n              view.state.tr.setSelection(new TextSelection(anchorPos, headPos))\n            )\n          })\n        }\n      }\n      let node = initialNode\n      dom.config = config\n      return {\n        dom,\n        contentDOM,\n        update: (updatedNode) => {\n          if (updatedNode.type !== initialNode.type) return false\n\n          if (\n            updatedNode.sameMarkup(node) &&\n            updatedNode.content.eq(node.content)\n          )\n            return true\n\n          node = updatedNode\n          bindAttrs(updatedNode)\n          return true\n        },\n        ignoreMutation: (mutation) => {\n          if (!dom || !contentDOM) return true\n\n          if ((mutation.type as unknown) === 'selection') return false\n\n          if (contentDOM === mutation.target && mutation.type === 'attributes')\n            return true\n\n          if (contentDOM.contains(mutation.target)) return false\n\n          return true\n        },\n        selectNode: () => {\n          dom.selected = true\n        },\n        deselectNode: () => {\n          dom.selected = false\n        },\n        destroy: () => {\n          dom.remove()\n          contentDOM.remove()\n        },\n      }\n    }\n  }\n)\n\nwithMeta(listItemBlockView, {\n  displayName: 'NodeView<list-item-block>',\n  group: 'ListItemBlock',\n})\n","import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { listItemBlockView } from './view'\nimport { listItemBlockConfig } from './config'\n\nexport * from './component'\nexport * from './config'\nexport * from './view'\n\nexport const listItemBlockComponent: MilkdownPlugin[] = [\n  listItemBlockConfig,\n  listItemBlockView,\n]\n"],"names":["node"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEgB,SAAA,QAAA,CACd,QACA,IACG,EAAA;AACH,EAAA,MAAA,CAAO,OAAO,MAAQ,EAAA;AAAA,IACpB,IAAM,EAAA,cAAA,CAAA;AAAA,MACJ,OAAS,EAAA;AAAA,KACN,EAAA,IAAA;AAAA,GAEN,CAAA;AAED,EAAO,OAAA,MAAA;AACT;;ACdgB,SAAA,cAAA,CACd,SACA,OACA,EAAA;AACA,EAAM,MAAA,OAAA,GAAU,cAAe,CAAA,GAAA,CAAI,OAAO,CAAA;AAC1C,EAAA,IAAI,WAAW,IAAM,EAAA;AACnB,IAAe,cAAA,CAAA,MAAA,CAAO,SAAS,OAAO,CAAA;AACtC,IAAA;AAAA;AAGF,EAAA,IAAI,YAAY,OAAS,EAAA;AAGzB,EAAQ,OAAA,CAAA,IAAA,CAAK,CAAkB,eAAA,EAAA,OAAO,CAA2B,yBAAA,CAAA,CAAA;AACnE;;ACIO,MAAM,oBAAuD,CAAC;AAAA,EACnE,QAAA;AAAA,EACA,KAAQ,GAAA,EAAA;AAAA,EACR,QAAW,GAAA,EAAA;AAAA,EACX,OAAA;AAAA,EACA,OAAA;AAAA,EACA,OAAA;AAAA,EACA,MAAA;AAAA,EACA;AACF,CAAM,KAAA;AACJ,EAAA,MAAM,OAAO,OAAQ,EAAA;AACrB,EAAA,MAAM,oBAAoB,MAAuB,EAAA;AAEjD,EAAA,eAAA,CAAgB,MAAM;AACpB,IAAA,MAAM,UAAU,iBAAkB,CAAA,OAAA;AAClC,IAAA,IAAI,CAAC,OAAS,EAAA;AAEd,IAAA,MAAM,UAAa,GAAA,IAAA,CAAK,OAAQ,CAAA,aAAA,CAAc,oBAAoB,CAAA;AAElE,IAAA,IAAI,UAAY,EAAA;AACd,MAAA,OAAA,CAAQ,YAAY,UAAU,CAAA;AAC9B,MAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,EAAA;AAAA;AACF,GACF,EAAG,EAAE,CAAA;AAEL,EAAA,MAAM,eAAe,MAAM;AACzB,IAAA,IAAI,WAAW,IAAM,EAAA;AAErB,IAAA,OAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,OAAA,CAAU,WAAW,CAAC,OAAA,CAAA;AAAA,GACxB;AAEA,EAAA,MAAM,UAAa,GAAA;AAAA,IACjB,KAAA;AAAA,IACA,QAAA;AAAA,IACA,OAAA;AAAA,IACA;AAAA,GACF;AAEA,EAAO,OAAA,IAAA,CAAA,YAAA,EAAmB,YAAY,0BAA0B,CAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,EAIhD,YAAY;AAAA;AAAA;AAAA,QAGpB,EAAA,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAQ,YAAY,UAAW,CAAA;AAAA;AAAA,gCAAA,EAEP,iBAAiB,CAAA;AAAA;AAAA,SAAA,CAAA;AAGnD;AAEA,iBAAA,CAAkB,KAAQ,GAAA;AAAA,EACxB,KAAO,EAAA,MAAA;AAAA,EACP,OAAS,EAAA,OAAA;AAAA,EACT,QAAU,EAAA,OAAA;AAAA,EACV,QAAU,EAAA,MAAA;AAAA,EACV,MAAQ,EAAA,MAAA;AAAA,EACR,QAAU,EAAA,OAAA;AAAA,EACV,OAAS,EAAA,QAAA;AAAA,EACT,OAAS,EAAA;AACX,CAAA;AAEa,MAAA,eAAA,GAAkB,EAAE,iBAAiB;;AClE3C,MAAM,0BAAkD,GAAA;AAAA,EAC7D,aAAa,CAAC,EAAE,OAAO,QAAU,EAAA,OAAA,EAAS,UAAiC,KAAA;AACzE,IAAA,IAAI,OAAW,IAAA,IAAA;AACb,MAAO,OAAA,IAAA,CAAA;AAAA,SACF,EAAA,QAAA,KAAa,QAAW,GAAA,QAAA,GAAM,KAAK,CAAA;AAAA,OAAA,CAAA;AAG1C,IAAO,OAAA,IAAA,CAAA;AAAA,eAAA,EACM,QAAQ;AAAA;AAAA;AAAA,cAAA,EAGT,OAAO;AAAA,MAAA,CAAA;AAAA;AAGvB;AAEO,MAAM,mBAAsB,GAAA,IAAA;AAAA,EACjC,0BAAA;AAAA,EACA;AACF;AAEA,QAAA,CAAS,mBAAqB,EAAA;AAAA,EAC5B,WAAa,EAAA,yBAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;AC5BD,cAAA,CAAe,4BAA4B,eAAe,CAAA;AACnD,MAAM,iBAAoB,GAAA,KAAA;AAAA,EAC/B,cAAe,CAAA,IAAA;AAAA,EACf,CAAC,GAA6B,KAAA;AAC5B,IAAO,OAAA,CAAC,WAAa,EAAA,IAAA,EAAM,MAAW,KAAA;AACpC,MAAA,MAAM,MAAM,QAAS,CAAA,aAAA;AAAA,QACnB;AAAA,OACF;AACA,MAAM,MAAA,UAAA,GAAa,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA;AAC/C,MAAW,UAAA,CAAA,YAAA,CAAa,oBAAoB,MAAM,CAAA;AAClD,MAAW,UAAA,CAAA,SAAA,CAAU,IAAI,aAAa,CAAA;AACtC,MAAA,MAAM,MAAS,GAAA,GAAA,CAAI,GAAI,CAAA,mBAAA,CAAoB,GAAG,CAAA;AAC9C,MAAM,MAAA,SAAA,GAAY,CAACA,KAAe,KAAA;AAChC,QAAI,GAAA,CAAA,QAAA,GAAWA,MAAK,KAAM,CAAA,QAAA;AAC1B,QAAI,GAAA,CAAA,KAAA,GAAQA,MAAK,KAAM,CAAA,KAAA;AACvB,QAAI,GAAA,CAAA,OAAA,GAAUA,MAAK,KAAM,CAAA,OAAA;AAEzB,QAAI,GAAA,CAAA,QAAA,GAAW,CAAC,IAAK,CAAA,QAAA;AAAA,OACvB;AAEA,MAAA,SAAA,CAAU,WAAW,CAAA;AACrB,MAAA,GAAA,CAAI,YAAY,UAAU,CAAA;AAC1B,MAAA,GAAA,CAAI,QAAW,GAAA,KAAA;AACf,MAAI,GAAA,CAAA,OAAA,GAAU,CAAC,IAAA,EAAM,KAAU,KAAA;AAC7B,QAAA,MAAM,MAAM,MAAO,EAAA;AACnB,QAAA,IAAI,OAAO,IAAM,EAAA;AAEjB,QAAK,IAAA,CAAA,QAAA,CAAS,KAAK,KAAM,CAAA,EAAA,CAAG,iBAAiB,GAAK,EAAA,IAAA,EAAM,KAAK,CAAC,CAAA;AAAA,OAChE;AACA,MAAA,GAAA,CAAI,UAAU,MAAM;AAClB,QAAA,MAAM,EAAE,MAAA,EAAQ,IAAK,EAAA,GAAI,KAAK,KAAM,CAAA,SAAA;AACpC,QAAI,IAAA,IAAA,CAAK,UAAY,EAAA;AACnB,UAAQ,OAAA,CAAA,OAAA,EAAU,CAAA,IAAA,CAAK,MAAM;AAC3B,YAAA,MAAM,SAAY,GAAA,IAAA,CAAK,KAAM,CAAA,GAAA,CAAI,QAAQ,MAAM,CAAA;AAC/C,YAAA,MAAM,OAAU,GAAA,IAAA,CAAK,KAAM,CAAA,GAAA,CAAI,QAAQ,IAAI,CAAA;AAC3C,YAAK,IAAA,CAAA,QAAA;AAAA,cACH,IAAA,CAAK,MAAM,EAAG,CAAA,YAAA,CAAa,IAAI,aAAc,CAAA,SAAA,EAAW,OAAO,CAAC;AAAA,aAClE;AAAA,WACD,CAAA;AAAA;AACH,OACF;AACA,MAAA,IAAI,IAAO,GAAA,WAAA;AACX,MAAA,GAAA,CAAI,MAAS,GAAA,MAAA;AACb,MAAO,OAAA;AAAA,QACL,GAAA;AAAA,QACA,UAAA;AAAA,QACA,MAAA,EAAQ,CAAC,WAAgB,KAAA;AACvB,UAAA,IAAI,WAAY,CAAA,IAAA,KAAS,WAAY,CAAA,IAAA,EAAa,OAAA,KAAA;AAElD,UACE,IAAA,WAAA,CAAY,WAAW,IAAI,CAAA,IAC3B,YAAY,OAAQ,CAAA,EAAA,CAAG,KAAK,OAAO,CAAA;AAEnC,YAAO,OAAA,IAAA;AAET,UAAO,IAAA,GAAA,WAAA;AACP,UAAA,SAAA,CAAU,WAAW,CAAA;AACrB,UAAO,OAAA,IAAA;AAAA,SACT;AAAA,QACA,cAAA,EAAgB,CAAC,QAAa,KAAA;AAC5B,UAAA,IAAI,CAAC,GAAA,IAAO,CAAC,UAAA,EAAmB,OAAA,IAAA;AAEhC,UAAK,IAAA,QAAA,CAAS,IAAqB,KAAA,WAAA,EAAoB,OAAA,KAAA;AAEvD,UAAA,IAAI,UAAe,KAAA,QAAA,CAAS,MAAU,IAAA,QAAA,CAAS,IAAS,KAAA,YAAA;AACtD,YAAO,OAAA,IAAA;AAET,UAAA,IAAI,UAAW,CAAA,QAAA,CAAS,QAAS,CAAA,MAAM,GAAU,OAAA,KAAA;AAEjD,UAAO,OAAA,IAAA;AAAA,SACT;AAAA,QACA,YAAY,MAAM;AAChB,UAAA,GAAA,CAAI,QAAW,GAAA,IAAA;AAAA,SACjB;AAAA,QACA,cAAc,MAAM;AAClB,UAAA,GAAA,CAAI,QAAW,GAAA,KAAA;AAAA,SACjB;AAAA,QACA,SAAS,MAAM;AACb,UAAA,GAAA,CAAI,MAAO,EAAA;AACX,UAAA,UAAA,CAAW,MAAO,EAAA;AAAA;AACpB,OACF;AAAA,KACF;AAAA;AAEJ;AAEA,QAAA,CAAS,iBAAmB,EAAA;AAAA,EAC1B,WAAa,EAAA,2BAAA;AAAA,EACb,KAAO,EAAA;AACT,CAAC,CAAA;;AC5FM,MAAM,sBAA2C,GAAA;AAAA,EACtD,mBAAA;AAAA,EACA;AACF;;;;"}